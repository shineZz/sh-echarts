import d_ from "@tarojs/taro";
function vX(x, D) {
  const A = /* @__PURE__ */ Object.create(null), B = x.split(",");
  for (let V = 0; V < B.length; V++)
    A[B[V]] = !0;
  return D ? (V) => !!A[V.toLowerCase()] : (V) => !!A[V];
}
function T_(x) {
  if (pe(x)) {
    const D = {};
    for (let A = 0; A < x.length; A++) {
      const B = x[A], V = gn(B) ? yX(B) : T_(B);
      if (V)
        for (const z in V)
          D[z] = V[z];
    }
    return D;
  } else {
    if (gn(x))
      return x;
    if (vr(x))
      return x;
  }
}
const dX = /;(?![^(]*\))/g, pX = /:([^]+)/, gX = /\/\*.*?\*\//gs;
function yX(x) {
  const D = {};
  return x.replace(gX, "").split(dX).forEach((A) => {
    if (A) {
      const B = A.split(pX);
      B.length > 1 && (D[B[0].trim()] = B[1].trim());
    }
  }), D;
}
function Ev(x) {
  let D = "";
  if (gn(x))
    D = x;
  else if (pe(x))
    for (let A = 0; A < x.length; A++) {
      const B = Ev(x[A]);
      B && (D += B + " ");
    }
  else if (vr(x))
    for (const A in x)
      x[A] && (D += A + " ");
  return D.trim();
}
const Gn = process.env.NODE_ENV !== "production" ? Object.freeze({}) : {}, mX = process.env.NODE_ENV !== "production" ? Object.freeze([]) : [], IP = () => {
}, _X = /^on[^a-z]/, SX = (x) => _X.test(x), pn = Object.assign, xX = (x, D) => {
  const A = x.indexOf(D);
  A > -1 && x.splice(A, 1);
}, wX = Object.prototype.hasOwnProperty, xe = (x, D) => wX.call(x, D), pe = Array.isArray, Bs = (x) => Rv(x) === "[object Map]", bX = (x) => Rv(x) === "[object Set]", ir = (x) => typeof x == "function", gn = (x) => typeof x == "string", C_ = (x) => typeof x == "symbol", vr = (x) => x !== null && typeof x == "object", TX = (x) => vr(x) && ir(x.then) && ir(x.catch), CX = Object.prototype.toString, Rv = (x) => CX.call(x), LP = (x) => Rv(x).slice(8, -1), AX = (x) => Rv(x) === "[object Object]", A_ = (x) => gn(x) && x !== "NaN" && x[0] !== "-" && "" + parseInt(x, 10) === x, PP = (x) => {
  const D = /* @__PURE__ */ Object.create(null);
  return (A) => D[A] || (D[A] = x(A));
}, EP = PP((x) => x.charAt(0).toUpperCase() + x.slice(1)), DX = PP((x) => x ? `on${EP(x)}` : ""), tf = (x, D) => !Object.is(x, D), MX = (x, D, A) => {
  Object.defineProperty(x, D, {
    configurable: !0,
    enumerable: !1,
    value: A
  });
};
let gP;
const IX = () => gP || (gP = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {});
function yP(x, ...D) {
  console.warn(`[Vue warn] ${x}`, ...D);
}
let RP;
function LX(x, D = RP) {
  D && D.active && D.effects.push(x);
}
function PX() {
  return RP;
}
const ef = (x) => {
  const D = new Set(x);
  return D.w = 0, D.n = 0, D;
}, kP = (x) => (x.w & ri) > 0, OP = (x) => (x.n & ri) > 0, EX = ({ deps: x }) => {
  if (x.length)
    for (let D = 0; D < x.length; D++)
      x[D].w |= ri;
}, RX = (x) => {
  const { deps: D } = x;
  if (D.length) {
    let A = 0;
    for (let B = 0; B < D.length; B++) {
      const V = D[B];
      kP(V) && !OP(V) ? V.delete(x) : D[A++] = V, V.w &= ~ri, V.n &= ~ri;
    }
    D.length = A;
  }
}, p_ = /* @__PURE__ */ new WeakMap();
let ju = 0, ri = 1;
const g_ = 30;
let nr;
const yo = Symbol(process.env.NODE_ENV !== "production" ? "iterate" : ""), y_ = Symbol(process.env.NODE_ENV !== "production" ? "Map key iterate" : "");
class kX {
  constructor(D, A = null, B) {
    this.fn = D, this.scheduler = A, this.active = !0, this.deps = [], this.parent = void 0, LX(this, B);
  }
  run() {
    if (!this.active)
      return this.fn();
    let D = nr, A = ei;
    for (; D; ) {
      if (D === this)
        return;
      D = D.parent;
    }
    try {
      return this.parent = nr, nr = this, ei = !0, ri = 1 << ++ju, ju <= g_ ? EX(this) : mP(this), this.fn();
    } finally {
      ju <= g_ && RX(this), ri = 1 << --ju, nr = this.parent, ei = A, this.parent = void 0, this.deferStop && this.stop();
    }
  }
  stop() {
    nr === this ? this.deferStop = !0 : this.active && (mP(this), this.onStop && this.onStop(), this.active = !1);
  }
}
function mP(x) {
  const { deps: D } = x;
  if (D.length) {
    for (let A = 0; A < D.length; A++)
      D[A].delete(x);
    D.length = 0;
  }
}
let ei = !0;
const NP = [];
function D_() {
  NP.push(ei), ei = !1;
}
function M_() {
  const x = NP.pop();
  ei = x === void 0 ? !0 : x;
}
function br(x, D, A) {
  if (ei && nr) {
    let B = p_.get(x);
    B || p_.set(x, B = /* @__PURE__ */ new Map());
    let V = B.get(A);
    V || B.set(A, V = ef());
    const z = process.env.NODE_ENV !== "production" ? { effect: nr, target: x, type: D, key: A } : void 0;
    m_(V, z);
  }
}
function m_(x, D) {
  let A = !1;
  ju <= g_ ? OP(x) || (x.n |= ri, A = !kP(x)) : A = !x.has(nr), A && (x.add(nr), nr.deps.push(x), process.env.NODE_ENV !== "production" && nr.onTrack && nr.onTrack(Object.assign({ effect: nr }, D)));
}
function ni(x, D, A, B, V, z) {
  const $ = p_.get(x);
  if (!$)
    return;
  let tt = [];
  if (D === "clear")
    tt = [...$.values()];
  else if (A === "length" && pe(x)) {
    const Et = Number(B);
    $.forEach((vt, q) => {
      (q === "length" || q >= Et) && tt.push(vt);
    });
  } else
    switch (A !== void 0 && tt.push($.get(A)), D) {
      case "add":
        pe(x) ? A_(A) && tt.push($.get("length")) : (tt.push($.get(yo)), Bs(x) && tt.push($.get(y_)));
        break;
      case "delete":
        pe(x) || (tt.push($.get(yo)), Bs(x) && tt.push($.get(y_)));
        break;
      case "set":
        Bs(x) && tt.push($.get(yo));
        break;
    }
  const ut = process.env.NODE_ENV !== "production" ? { target: x, type: D, key: A, newValue: B, oldValue: V, oldTarget: z } : void 0;
  if (tt.length === 1)
    tt[0] && (process.env.NODE_ENV !== "production" ? Ns(tt[0], ut) : Ns(tt[0]));
  else {
    const Et = [];
    for (const vt of tt)
      vt && Et.push(...vt);
    process.env.NODE_ENV !== "production" ? Ns(ef(Et), ut) : Ns(ef(Et));
  }
}
function Ns(x, D) {
  const A = pe(x) ? x : [...x];
  for (const B of A)
    B.computed && _P(B, D);
  for (const B of A)
    B.computed || _P(B, D);
}
function _P(x, D) {
  (x !== nr || x.allowRecurse) && (process.env.NODE_ENV !== "production" && x.onTrigger && x.onTrigger(pn({ effect: x }, D)), x.scheduler ? x.scheduler() : x.run());
}
const OX = /* @__PURE__ */ vX("__proto__,__v_isRef,__isVue"), VP = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((x) => x !== "arguments" && x !== "caller").map((x) => Symbol[x]).filter(C_)
), NX = /* @__PURE__ */ I_(), VX = /* @__PURE__ */ I_(!0), BX = /* @__PURE__ */ I_(!0, !0), SP = /* @__PURE__ */ zX();
function zX() {
  const x = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((D) => {
    x[D] = function(...A) {
      const B = Ut(this);
      for (let z = 0, $ = this.length; z < $; z++)
        br(B, "get", z + "");
      const V = B[D](...A);
      return V === -1 || V === !1 ? B[D](...A.map(Ut)) : V;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((D) => {
    x[D] = function(...A) {
      D_();
      const B = Ut(this)[D].apply(this, A);
      return M_(), B;
    };
  }), x;
}
function GX(x) {
  const D = Ut(this);
  return br(D, "has", x), D.hasOwnProperty(x);
}
function I_(x = !1, D = !1) {
  return function(B, V, z) {
    if (V === "__v_isReactive")
      return !x;
    if (V === "__v_isReadonly")
      return x;
    if (V === "__v_isShallow")
      return D;
    if (V === "__v_raw" && z === (x ? D ? HP : FP : D ? rZ : GP).get(B))
      return B;
    const $ = pe(B);
    if (!x) {
      if ($ && xe(SP, V))
        return Reflect.get(SP, V, z);
      if (V === "hasOwnProperty")
        return GX;
    }
    const tt = Reflect.get(B, V, z);
    return (C_(V) ? VP.has(V) : OX(V)) || (x || br(B, "get", V), D) ? tt : ar(tt) ? $ && A_(V) ? tt : tt.value : vr(tt) ? x ? UP(tt) : WP(tt) : tt;
  };
}
const FX = /* @__PURE__ */ HX();
function HX(x = !1) {
  return function(A, B, V, z) {
    let $ = A[B];
    if (ai($) && ar($) && !ar(V))
      return !1;
    if (!x && (!Av(V) && !ai(V) && ($ = Ut($), V = Ut(V)), !pe(A) && ar($) && !ar(V)))
      return $.value = V, !0;
    const tt = pe(A) && A_(B) ? Number(B) < A.length : xe(A, B), ut = Reflect.set(A, B, V, z);
    return A === Ut(z) && (tt ? tf(V, $) && ni(A, "set", B, V, $) : ni(A, "add", B, V)), ut;
  };
}
function WX(x, D) {
  const A = xe(x, D), B = x[D], V = Reflect.deleteProperty(x, D);
  return V && A && ni(x, "delete", D, void 0, B), V;
}
function UX(x, D) {
  const A = Reflect.has(x, D);
  return (!C_(D) || !VP.has(D)) && br(x, "has", D), A;
}
function YX(x) {
  return br(x, "iterate", pe(x) ? "length" : yo), Reflect.ownKeys(x);
}
const $X = {
  get: NX,
  set: FX,
  deleteProperty: WX,
  has: UX,
  ownKeys: YX
}, BP = {
  get: VX,
  set(x, D) {
    return process.env.NODE_ENV !== "production" && yP(`Set operation on key "${String(D)}" failed: target is readonly.`, x), !0;
  },
  deleteProperty(x, D) {
    return process.env.NODE_ENV !== "production" && yP(`Delete operation on key "${String(D)}" failed: target is readonly.`, x), !0;
  }
}, XX = /* @__PURE__ */ pn({}, BP, {
  get: BX
}), L_ = (x) => x, kv = (x) => Reflect.getPrototypeOf(x);
function gv(x, D, A = !1, B = !1) {
  x = x.__v_raw;
  const V = Ut(x), z = Ut(D);
  A || (D !== z && br(V, "get", D), br(V, "get", z));
  const { has: $ } = kv(V), tt = B ? L_ : A ? R_ : rf;
  if ($.call(V, D))
    return tt(x.get(D));
  if ($.call(V, z))
    return tt(x.get(z));
  x !== V && x.get(D);
}
function yv(x, D = !1) {
  const A = this.__v_raw, B = Ut(A), V = Ut(x);
  return D || (x !== V && br(B, "has", x), br(B, "has", V)), x === V ? A.has(x) : A.has(x) || A.has(V);
}
function mv(x, D = !1) {
  return x = x.__v_raw, !D && br(Ut(x), "iterate", yo), Reflect.get(x, "size", x);
}
function xP(x) {
  x = Ut(x);
  const D = Ut(this);
  return kv(D).has.call(D, x) || (D.add(x), ni(D, "add", x, x)), this;
}
function wP(x, D) {
  D = Ut(D);
  const A = Ut(this), { has: B, get: V } = kv(A);
  let z = B.call(A, x);
  z ? process.env.NODE_ENV !== "production" && zP(A, B, x) : (x = Ut(x), z = B.call(A, x));
  const $ = V.call(A, x);
  return A.set(x, D), z ? tf(D, $) && ni(A, "set", x, D, $) : ni(A, "add", x, D), this;
}
function bP(x) {
  const D = Ut(this), { has: A, get: B } = kv(D);
  let V = A.call(D, x);
  V ? process.env.NODE_ENV !== "production" && zP(D, A, x) : (x = Ut(x), V = A.call(D, x));
  const z = B ? B.call(D, x) : void 0, $ = D.delete(x);
  return V && ni(D, "delete", x, void 0, z), $;
}
function TP() {
  const x = Ut(this), D = x.size !== 0, A = process.env.NODE_ENV !== "production" ? Bs(x) ? new Map(x) : new Set(x) : void 0, B = x.clear();
  return D && ni(x, "clear", void 0, void 0, A), B;
}
function _v(x, D) {
  return function(B, V) {
    const z = this, $ = z.__v_raw, tt = Ut($), ut = D ? L_ : x ? R_ : rf;
    return !x && br(tt, "iterate", yo), $.forEach((Et, vt) => B.call(V, ut(Et), ut(vt), z));
  };
}
function Sv(x, D, A) {
  return function(...B) {
    const V = this.__v_raw, z = Ut(V), $ = Bs(z), tt = x === "entries" || x === Symbol.iterator && $, ut = x === "keys" && $, Et = V[x](...B), vt = A ? L_ : D ? R_ : rf;
    return !D && br(z, "iterate", ut ? y_ : yo), {
      // iterator protocol
      next() {
        const { value: q, done: pt } = Et.next();
        return pt ? { value: q, done: pt } : {
          value: tt ? [vt(q[0]), vt(q[1])] : vt(q),
          done: pt
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function ja(x) {
  return function(...D) {
    if (process.env.NODE_ENV !== "production") {
      const A = D[0] ? `on key "${D[0]}" ` : "";
      console.warn(`${EP(x)} operation ${A}failed: target is readonly.`, Ut(this));
    }
    return x === "delete" ? !1 : this;
  };
}
function ZX() {
  const x = {
    get(z) {
      return gv(this, z);
    },
    get size() {
      return mv(this);
    },
    has: yv,
    add: xP,
    set: wP,
    delete: bP,
    clear: TP,
    forEach: _v(!1, !1)
  }, D = {
    get(z) {
      return gv(this, z, !1, !0);
    },
    get size() {
      return mv(this);
    },
    has: yv,
    add: xP,
    set: wP,
    delete: bP,
    clear: TP,
    forEach: _v(!1, !0)
  }, A = {
    get(z) {
      return gv(this, z, !0);
    },
    get size() {
      return mv(this, !0);
    },
    has(z) {
      return yv.call(this, z, !0);
    },
    add: ja(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: ja(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: ja(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: ja(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: _v(!0, !1)
  }, B = {
    get(z) {
      return gv(this, z, !0, !0);
    },
    get size() {
      return mv(this, !0);
    },
    has(z) {
      return yv.call(this, z, !0);
    },
    add: ja(
      "add"
      /* TriggerOpTypes.ADD */
    ),
    set: ja(
      "set"
      /* TriggerOpTypes.SET */
    ),
    delete: ja(
      "delete"
      /* TriggerOpTypes.DELETE */
    ),
    clear: ja(
      "clear"
      /* TriggerOpTypes.CLEAR */
    ),
    forEach: _v(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((z) => {
    x[z] = Sv(z, !1, !1), A[z] = Sv(z, !0, !1), D[z] = Sv(z, !1, !0), B[z] = Sv(z, !0, !0);
  }), [
    x,
    A,
    D,
    B
  ];
}
const [qX, KX, jX, JX] = /* @__PURE__ */ ZX();
function P_(x, D) {
  const A = D ? x ? JX : jX : x ? KX : qX;
  return (B, V, z) => V === "__v_isReactive" ? !x : V === "__v_isReadonly" ? x : V === "__v_raw" ? B : Reflect.get(xe(A, V) && V in B ? A : B, V, z);
}
const QX = {
  get: /* @__PURE__ */ P_(!1, !1)
}, tZ = {
  get: /* @__PURE__ */ P_(!0, !1)
}, eZ = {
  get: /* @__PURE__ */ P_(!0, !0)
};
function zP(x, D, A) {
  const B = Ut(A);
  if (B !== A && D.call(x, B)) {
    const V = LP(x);
    console.warn(`Reactive ${V} contains both the raw and reactive versions of the same object${V === "Map" ? " as keys" : ""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`);
  }
}
const GP = /* @__PURE__ */ new WeakMap(), rZ = /* @__PURE__ */ new WeakMap(), FP = /* @__PURE__ */ new WeakMap(), HP = /* @__PURE__ */ new WeakMap();
function nZ(x) {
  switch (x) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function aZ(x) {
  return x.__v_skip || !Object.isExtensible(x) ? 0 : nZ(LP(x));
}
function WP(x) {
  return ai(x) ? x : E_(x, !1, $X, QX, GP);
}
function UP(x) {
  return E_(x, !0, BP, tZ, FP);
}
function xv(x) {
  return E_(x, !0, XX, eZ, HP);
}
function E_(x, D, A, B, V) {
  if (!vr(x))
    return process.env.NODE_ENV !== "production" && console.warn(`value cannot be made reactive: ${String(x)}`), x;
  if (x.__v_raw && !(D && x.__v_isReactive))
    return x;
  const z = V.get(x);
  if (z)
    return z;
  const $ = aZ(x);
  if ($ === 0)
    return x;
  const tt = new Proxy(x, $ === 2 ? B : A);
  return V.set(x, tt), tt;
}
function mo(x) {
  return ai(x) ? mo(x.__v_raw) : !!(x && x.__v_isReactive);
}
function ai(x) {
  return !!(x && x.__v_isReadonly);
}
function Av(x) {
  return !!(x && x.__v_isShallow);
}
function __(x) {
  return mo(x) || ai(x);
}
function Ut(x) {
  const D = x && x.__v_raw;
  return D ? Ut(D) : x;
}
function iZ(x) {
  return MX(x, "__v_skip", !0), x;
}
const rf = (x) => vr(x) ? WP(x) : x, R_ = (x) => vr(x) ? UP(x) : x;
function oZ(x) {
  ei && nr && (x = Ut(x), process.env.NODE_ENV !== "production" ? m_(x.dep || (x.dep = ef()), {
    target: x,
    type: "get",
    key: "value"
  }) : m_(x.dep || (x.dep = ef())));
}
function sZ(x, D) {
  x = Ut(x);
  const A = x.dep;
  A && (process.env.NODE_ENV !== "production" ? Ns(A, {
    target: x,
    type: "set",
    key: "value",
    newValue: D
  }) : Ns(A));
}
function ar(x) {
  return !!(x && x.__v_isRef === !0);
}
function f_(x) {
  return lZ(x, !1);
}
function lZ(x, D) {
  return ar(x) ? x : new uZ(x, D);
}
class uZ {
  constructor(D, A) {
    this.__v_isShallow = A, this.dep = void 0, this.__v_isRef = !0, this._rawValue = A ? D : Ut(D), this._value = A ? D : rf(D);
  }
  get value() {
    return oZ(this), this._value;
  }
  set value(D) {
    const A = this.__v_isShallow || Av(D) || ai(D);
    D = A ? D : Ut(D), tf(D, this._rawValue) && (this._rawValue = D, this._value = A ? D : rf(D), sZ(this, D));
  }
}
function bv(x) {
  return ar(x) ? x.value : x;
}
const fZ = {
  get: (x, D, A) => bv(Reflect.get(x, D, A)),
  set: (x, D, A, B) => {
    const V = x[D];
    return ar(V) && !ar(A) ? (V.value = A, !0) : Reflect.set(x, D, A, B);
  }
};
function hZ(x) {
  return mo(x) ? x : new Proxy(x, fZ);
}
const _o = [];
function cZ(x) {
  _o.push(x);
}
function vZ() {
  _o.pop();
}
function $e(x, ...D) {
  if (process.env.NODE_ENV === "production")
    return;
  D_();
  const A = _o.length ? _o[_o.length - 1].component : null, B = A && A.appContext.config.warnHandler, V = dZ();
  if (B)
    So(B, A, 11, [
      x + D.join(""),
      A && A.proxy,
      V.map(({ vnode: z }) => `at <${uE(A, z.type)}>`).join(`
`),
      V
    ]);
  else {
    const z = [`[Vue warn]: ${x}`, ...D];
    V.length && z.push(`
`, ...pZ(V)), console.warn(...z);
  }
  M_();
}
function dZ() {
  let x = _o[_o.length - 1];
  if (!x)
    return [];
  const D = [];
  for (; x; ) {
    const A = D[0];
    A && A.vnode === x ? A.recurseCount++ : D.push({
      vnode: x,
      recurseCount: 0
    });
    const B = x.component && x.component.parent;
    x = B && B.vnode;
  }
  return D;
}
function pZ(x) {
  const D = [];
  return x.forEach((A, B) => {
    D.push(...B === 0 ? [] : [`
`], ...gZ(A));
  }), D;
}
function gZ({ vnode: x, recurseCount: D }) {
  const A = D > 0 ? `... (${D} recursive calls)` : "", B = x.component ? x.component.parent == null : !1, V = ` at <${uE(x.component, x.type, B)}`, z = ">" + A;
  return x.props ? [V, ...yZ(x.props), z] : [V + z];
}
function yZ(x) {
  const D = [], A = Object.keys(x);
  return A.slice(0, 3).forEach((B) => {
    D.push(...YP(B, x[B]));
  }), A.length > 3 && D.push(" ..."), D;
}
function YP(x, D, A) {
  return gn(D) ? (D = JSON.stringify(D), A ? D : [`${x}=${D}`]) : typeof D == "number" || typeof D == "boolean" || D == null ? A ? D : [`${x}=${D}`] : ar(D) ? (D = YP(x, Ut(D.value), !0), A ? D : [`${x}=Ref<`, D, ">"]) : ir(D) ? [`${x}=fn${D.name ? `<${D.name}>` : ""}`] : (D = Ut(D), A ? D : [`${x}=`, D]);
}
const k_ = {
  sp: "serverPrefetch hook",
  bc: "beforeCreate hook",
  c: "created hook",
  bm: "beforeMount hook",
  m: "mounted hook",
  bu: "beforeUpdate hook",
  u: "updated",
  bum: "beforeUnmount hook",
  um: "unmounted hook",
  a: "activated hook",
  da: "deactivated hook",
  ec: "errorCaptured hook",
  rtc: "renderTracked hook",
  rtg: "renderTriggered hook",
  [
    0
    /* ErrorCodes.SETUP_FUNCTION */
  ]: "setup function",
  [
    1
    /* ErrorCodes.RENDER_FUNCTION */
  ]: "render function",
  [
    2
    /* ErrorCodes.WATCH_GETTER */
  ]: "watcher getter",
  [
    3
    /* ErrorCodes.WATCH_CALLBACK */
  ]: "watcher callback",
  [
    4
    /* ErrorCodes.WATCH_CLEANUP */
  ]: "watcher cleanup function",
  [
    5
    /* ErrorCodes.NATIVE_EVENT_HANDLER */
  ]: "native event handler",
  [
    6
    /* ErrorCodes.COMPONENT_EVENT_HANDLER */
  ]: "component event handler",
  [
    7
    /* ErrorCodes.VNODE_HOOK */
  ]: "vnode hook",
  [
    8
    /* ErrorCodes.DIRECTIVE_HOOK */
  ]: "directive hook",
  [
    9
    /* ErrorCodes.TRANSITION_HOOK */
  ]: "transition hook",
  [
    10
    /* ErrorCodes.APP_ERROR_HANDLER */
  ]: "app errorHandler",
  [
    11
    /* ErrorCodes.APP_WARN_HANDLER */
  ]: "app warnHandler",
  [
    12
    /* ErrorCodes.FUNCTION_REF */
  ]: "ref function",
  [
    13
    /* ErrorCodes.ASYNC_COMPONENT_LOADER */
  ]: "async component loader",
  [
    14
    /* ErrorCodes.SCHEDULER */
  ]: "scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"
};
function So(x, D, A, B) {
  let V;
  try {
    V = B ? x(...B) : x();
  } catch (z) {
    $P(z, D, A);
  }
  return V;
}
function Dv(x, D, A, B) {
  if (ir(x)) {
    const z = So(x, D, A, B);
    return z && TX(z) && z.catch(($) => {
      $P($, D, A);
    }), z;
  }
  const V = [];
  for (let z = 0; z < x.length; z++)
    V.push(Dv(x[z], D, A, B));
  return V;
}
function $P(x, D, A, B = !0) {
  const V = D ? D.vnode : null;
  if (D) {
    let z = D.parent;
    const $ = D.proxy, tt = process.env.NODE_ENV !== "production" ? k_[A] : A;
    for (; z; ) {
      const Et = z.ec;
      if (Et) {
        for (let vt = 0; vt < Et.length; vt++)
          if (Et[vt](x, $, tt) === !1)
            return;
      }
      z = z.parent;
    }
    const ut = D.appContext.config.errorHandler;
    if (ut) {
      So(ut, null, 10, [x, $, tt]);
      return;
    }
  }
  mZ(x, A, V, B);
}
function mZ(x, D, A, B = !0) {
  if (process.env.NODE_ENV !== "production") {
    const V = k_[D];
    if (A && cZ(A), $e(`Unhandled error${V ? ` during execution of ${V}` : ""}`), A && vZ(), B)
      throw x;
    console.error(x);
  } else
    console.error(x);
}
let Mv = !1, S_ = !1;
const cn = [];
let Qa = 0;
const zs = [];
let zn = null, Ja = 0;
const XP = /* @__PURE__ */ Promise.resolve();
let O_ = null;
const _Z = 100;
function SZ(x) {
  const D = O_ || XP;
  return x ? D.then(this ? x.bind(this) : x) : D;
}
function xZ(x) {
  let D = Qa + 1, A = cn.length;
  for (; D < A; ) {
    const B = D + A >>> 1;
    nf(cn[B]) < x ? D = B + 1 : A = B;
  }
  return D;
}
function N_(x) {
  (!cn.length || !cn.includes(x, Mv && x.allowRecurse ? Qa + 1 : Qa)) && (x.id == null ? cn.push(x) : cn.splice(xZ(x.id), 0, x), ZP());
}
function ZP() {
  !Mv && !S_ && (S_ = !0, O_ = XP.then(KP));
}
function qP(x) {
  pe(x) ? zs.push(...x) : (!zn || !zn.includes(x, x.allowRecurse ? Ja + 1 : Ja)) && zs.push(x), ZP();
}
function wZ(x) {
  if (zs.length) {
    const D = [...new Set(zs)];
    if (zs.length = 0, zn) {
      zn.push(...D);
      return;
    }
    for (zn = D, process.env.NODE_ENV !== "production" && (x = x || /* @__PURE__ */ new Map()), zn.sort((A, B) => nf(A) - nf(B)), Ja = 0; Ja < zn.length; Ja++)
      process.env.NODE_ENV !== "production" && jP(x, zn[Ja]) || zn[Ja]();
    zn = null, Ja = 0;
  }
}
const nf = (x) => x.id == null ? 1 / 0 : x.id, bZ = (x, D) => {
  const A = nf(x) - nf(D);
  if (A === 0) {
    if (x.pre && !D.pre)
      return -1;
    if (D.pre && !x.pre)
      return 1;
  }
  return A;
};
function KP(x) {
  S_ = !1, Mv = !0, process.env.NODE_ENV !== "production" && (x = x || /* @__PURE__ */ new Map()), cn.sort(bZ);
  const D = process.env.NODE_ENV !== "production" ? (A) => jP(x, A) : IP;
  try {
    for (Qa = 0; Qa < cn.length; Qa++) {
      const A = cn[Qa];
      if (A && A.active !== !1) {
        if (process.env.NODE_ENV !== "production" && D(A))
          continue;
        So(
          A,
          null,
          14
          /* ErrorCodes.SCHEDULER */
        );
      }
    }
  } finally {
    Qa = 0, cn.length = 0, wZ(x), Mv = !1, O_ = null, (cn.length || zs.length) && KP(x);
  }
}
function jP(x, D) {
  if (!x.has(D))
    x.set(D, 1);
  else {
    const A = x.get(D);
    if (A > _Z) {
      const B = D.ownerInstance, V = B && lE(B.type);
      return $e(`Maximum recursive updates exceeded${V ? ` in component <${V}>` : ""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`), !0;
    } else
      x.set(D, A + 1);
  }
}
const Ku = /* @__PURE__ */ new Set();
process.env.NODE_ENV !== "production" && (IX().__VUE_HMR_RUNTIME__ = {
  createRecord: h_(TZ),
  rerender: h_(CZ),
  reload: h_(AZ)
});
const Iv = /* @__PURE__ */ new Map();
function TZ(x, D) {
  return Iv.has(x) ? !1 : (Iv.set(x, {
    initialDef: Ju(D),
    instances: /* @__PURE__ */ new Set()
  }), !0);
}
function Ju(x) {
  return fE(x) ? x.__vccOpts : x;
}
function CZ(x, D) {
  const A = Iv.get(x);
  A && (A.initialDef.render = D, [...A.instances].forEach((B) => {
    D && (B.render = D, Ju(B.type).render = D), B.renderCache = [], B.update();
  }));
}
function AZ(x, D) {
  const A = Iv.get(x);
  if (!A)
    return;
  D = Ju(D), CP(A.initialDef, D);
  const B = [...A.instances];
  for (const V of B) {
    const z = Ju(V.type);
    Ku.has(z) || (z !== A.initialDef && CP(z, D), Ku.add(z)), V.appContext.optionsCache.delete(V.type), V.ceReload ? (Ku.add(z), V.ceReload(D.styles), Ku.delete(z)) : V.parent ? N_(V.parent.update) : V.appContext.reload ? V.appContext.reload() : typeof window < "u" ? window.location.reload() : console.warn("[HMR] Root or manually mounted instance modified. Full reload required.");
  }
  qP(() => {
    for (const V of B)
      Ku.delete(Ju(V.type));
  });
}
function CP(x, D) {
  pn(x, D);
  for (const A in x)
    A !== "__file" && !(A in D) && delete x[A];
}
function h_(x) {
  return (D, A) => {
    try {
      return x(D, A);
    } catch (B) {
      console.error(B), console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.");
    }
  };
}
let ti = null, DZ = null;
const MZ = (x) => x.__isSuspense;
function IZ(x, D) {
  D && D.pendingBranch ? pe(x) ? D.effects.push(...x) : D.effects.push(x) : qP(x);
}
const wv = {};
function LZ(x, D, { immediate: A, deep: B, flush: V, onTrack: z, onTrigger: $ } = Gn) {
  process.env.NODE_ENV !== "production" && !D && (A !== void 0 && $e('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'), B !== void 0 && $e('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));
  const tt = (Yt) => {
    $e("Invalid watch source: ", Yt, "A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.");
  }, ut = PX() === (dn == null ? void 0 : dn.scope) ? dn : null;
  let Et, vt = !1, q = !1;
  if (ar(x) ? (Et = () => x.value, vt = Av(x)) : mo(x) ? (Et = () => x, B = !0) : pe(x) ? (q = !0, vt = x.some((Yt) => mo(Yt) || Av(Yt)), Et = () => x.map((Yt) => {
    if (ar(Yt))
      return Yt.value;
    if (mo(Yt))
      return Vs(Yt);
    if (ir(Yt))
      return So(
        Yt,
        ut,
        2
        /* ErrorCodes.WATCH_GETTER */
      );
    process.env.NODE_ENV !== "production" && tt(Yt);
  })) : ir(x) ? D ? Et = () => So(
    x,
    ut,
    2
    /* ErrorCodes.WATCH_GETTER */
  ) : Et = () => {
    if (!(ut && ut.isUnmounted))
      return pt && pt(), Dv(x, ut, 3, [ee]);
  } : (Et = IP, process.env.NODE_ENV !== "production" && tt(x)), D && B) {
    const Yt = Et;
    Et = () => Vs(Yt());
  }
  let pt, ee = (Yt) => {
    pt = we.onStop = () => {
      So(
        Yt,
        ut,
        4
        /* ErrorCodes.WATCH_CLEANUP */
      );
    };
  }, ne = q ? new Array(x.length).fill(wv) : wv;
  const qt = () => {
    if (we.active)
      if (D) {
        const Yt = we.run();
        (B || vt || (q ? Yt.some((Fn, xo) => tf(Fn, ne[xo])) : tf(Yt, ne))) && (pt && pt(), Dv(D, ut, 3, [
          Yt,
          // pass undefined as the old value when it's changed for the first time
          ne === wv ? void 0 : q && ne[0] === wv ? [] : ne,
          ee
        ]), ne = Yt);
      } else
        we.run();
  };
  qt.allowRecurse = !!D;
  let Tr;
  V === "sync" ? Tr = qt : V === "post" ? Tr = () => MP(qt, ut && ut.suspense) : (qt.pre = !0, ut && (qt.id = ut.uid), Tr = () => N_(qt));
  const we = new kX(Et, Tr);
  return process.env.NODE_ENV !== "production" && (we.onTrack = z, we.onTrigger = $), D ? A ? qt() : ne = we.run() : V === "post" ? MP(we.run.bind(we), ut && ut.suspense) : we.run(), () => {
    we.stop(), ut && ut.scope && xX(ut.scope.effects, we);
  };
}
function PZ(x, D, A) {
  const B = this.proxy, V = gn(x) ? x.includes(".") ? EZ(B, x) : () => B[x] : x.bind(B, B);
  let z;
  ir(D) ? z = D : (z = D.handler, A = D);
  const $ = dn;
  b_(this);
  const tt = LZ(V, z.bind(B), A);
  return $ ? b_($) : sE(), tt;
}
function EZ(x, D) {
  const A = D.split(".");
  return () => {
    let B = x;
    for (let V = 0; V < A.length && B; V++)
      B = B[A[V]];
    return B;
  };
}
function Vs(x, D) {
  if (!vr(x) || x.__v_skip || (D = D || /* @__PURE__ */ new Set(), D.has(x)))
    return x;
  if (D.add(x), ar(x))
    Vs(x.value, D);
  else if (pe(x))
    for (let A = 0; A < x.length; A++)
      Vs(x[A], D);
  else if (bX(x) || Bs(x))
    x.forEach((A) => {
      Vs(A, D);
    });
  else if (AX(x))
    for (const A in x)
      Vs(x[A], D);
  return x;
}
function RZ(x, D, A = dn, B = !1) {
  if (A) {
    const V = A[x] || (A[x] = []), z = D.__weh || (D.__weh = (...$) => {
      if (A.isUnmounted)
        return;
      D_(), b_(A);
      const tt = Dv(D, A, x, $);
      return sE(), M_(), tt;
    });
    return B ? V.unshift(z) : V.push(z), z;
  } else if (process.env.NODE_ENV !== "production") {
    const V = DX(k_[x].replace(/ hook$/, ""));
    $e(`${V} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`);
  }
}
const kZ = (x) => (D, A = dn) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  RZ(x, (...B) => D(...B), A)
), OZ = kZ(
  "m"
  /* LifecycleHooks.MOUNTED */
), NZ = Symbol(), x_ = (x) => x ? QZ(x) ? tq(x) || x.proxy : x_(x.parent) : null, Qu = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ pn(/* @__PURE__ */ Object.create(null), {
    $: (x) => x,
    $el: (x) => x.vnode.el,
    $data: (x) => x.data,
    $props: (x) => process.env.NODE_ENV !== "production" ? xv(x.props) : x.props,
    $attrs: (x) => process.env.NODE_ENV !== "production" ? xv(x.attrs) : x.attrs,
    $slots: (x) => process.env.NODE_ENV !== "production" ? xv(x.slots) : x.slots,
    $refs: (x) => process.env.NODE_ENV !== "production" ? xv(x.refs) : x.refs,
    $parent: (x) => x_(x.parent),
    $root: (x) => x_(x.root),
    $emit: (x) => x.emit,
    $options: (x) => zZ(x),
    $forceUpdate: (x) => x.f || (x.f = () => N_(x.update)),
    $nextTick: (x) => x.n || (x.n = SZ.bind(x.proxy)),
    $watch: (x) => PZ.bind(x)
  })
), VZ = (x) => x === "_" || x === "$", c_ = (x, D) => x !== Gn && !x.__isScriptSetup && xe(x, D), BZ = {
  get({ _: x }, D) {
    const { ctx: A, setupState: B, data: V, props: z, accessCache: $, type: tt, appContext: ut } = x;
    if (process.env.NODE_ENV !== "production" && D === "__isVue")
      return !0;
    let Et;
    if (D[0] !== "$") {
      const ee = $[D];
      if (ee !== void 0)
        switch (ee) {
          case 1:
            return B[D];
          case 2:
            return V[D];
          case 4:
            return A[D];
          case 3:
            return z[D];
        }
      else {
        if (c_(B, D))
          return $[D] = 1, B[D];
        if (V !== Gn && xe(V, D))
          return $[D] = 2, V[D];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (Et = x.propsOptions[0]) && xe(Et, D)
        )
          return $[D] = 3, z[D];
        if (A !== Gn && xe(A, D))
          return $[D] = 4, A[D];
        $[D] = 0;
      }
    }
    const vt = Qu[D];
    let q, pt;
    if (vt)
      return D === "$attrs" && (br(x, "get", D), process.env.NODE_ENV !== "production" && void 0), vt(x);
    if (
      // css module (injected by vue-loader)
      (q = tt.__cssModules) && (q = q[D])
    )
      return q;
    if (A !== Gn && xe(A, D))
      return $[D] = 4, A[D];
    if (
      // global properties
      pt = ut.config.globalProperties, xe(pt, D)
    )
      return pt[D];
    process.env.NODE_ENV !== "production" && ti && (!gn(D) || // #1091 avoid internal isRef/isVNode checks on component instance leading
    // to infinite warning loop
    D.indexOf("__v") !== 0) && (V !== Gn && VZ(D[0]) && xe(V, D) ? $e(`Property ${JSON.stringify(D)} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`) : x === ti && $e(`Property ${JSON.stringify(D)} was accessed during render but is not defined on instance.`));
  },
  set({ _: x }, D, A) {
    const { data: B, setupState: V, ctx: z } = x;
    return c_(V, D) ? (V[D] = A, !0) : process.env.NODE_ENV !== "production" && V.__isScriptSetup && xe(V, D) ? ($e(`Cannot mutate <script setup> binding "${D}" from Options API.`), !1) : B !== Gn && xe(B, D) ? (B[D] = A, !0) : xe(x.props, D) ? (process.env.NODE_ENV !== "production" && $e(`Attempting to mutate prop "${D}". Props are readonly.`), !1) : D[0] === "$" && D.slice(1) in x ? (process.env.NODE_ENV !== "production" && $e(`Attempting to mutate public property "${D}". Properties starting with $ are reserved and readonly.`), !1) : (process.env.NODE_ENV !== "production" && D in x.appContext.config.globalProperties ? Object.defineProperty(z, D, {
      enumerable: !0,
      configurable: !0,
      value: A
    }) : z[D] = A, !0);
  },
  has({ _: { data: x, setupState: D, accessCache: A, ctx: B, appContext: V, propsOptions: z } }, $) {
    let tt;
    return !!A[$] || x !== Gn && xe(x, $) || c_(D, $) || (tt = z[0]) && xe(tt, $) || xe(B, $) || xe(Qu, $) || xe(V.config.globalProperties, $);
  },
  defineProperty(x, D, A) {
    return A.get != null ? x._.accessCache[D] = 0 : xe(A, "value") && this.set(x, D, A.value, null), Reflect.defineProperty(x, D, A);
  }
};
process.env.NODE_ENV !== "production" && (BZ.ownKeys = (x) => ($e("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."), Reflect.ownKeys(x)));
function zZ(x) {
  const D = x.type, { mixins: A, extends: B } = D, { mixins: V, optionsCache: z, config: { optionMergeStrategies: $ } } = x.appContext, tt = z.get(D);
  let ut;
  return tt ? ut = tt : !V.length && !A && !B ? ut = D : (ut = {}, V.length && V.forEach((Et) => Lv(ut, Et, $, !0)), Lv(ut, D, $)), vr(D) && z.set(D, ut), ut;
}
function Lv(x, D, A, B = !1) {
  const { mixins: V, extends: z } = D;
  z && Lv(x, z, A, !0), V && V.forEach(($) => Lv(x, $, A, !0));
  for (const $ in D)
    if (B && $ === "expose")
      process.env.NODE_ENV !== "production" && $e('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');
    else {
      const tt = GZ[$] || A && A[$];
      x[$] = tt ? tt(x[$], D[$]) : D[$];
    }
  return x;
}
const GZ = {
  data: AP,
  props: go,
  emits: go,
  // objects
  methods: go,
  computed: go,
  // lifecycle
  beforeCreate: rr,
  created: rr,
  beforeMount: rr,
  mounted: rr,
  beforeUpdate: rr,
  updated: rr,
  beforeDestroy: rr,
  beforeUnmount: rr,
  destroyed: rr,
  unmounted: rr,
  activated: rr,
  deactivated: rr,
  errorCaptured: rr,
  serverPrefetch: rr,
  // assets
  components: go,
  directives: go,
  // watch
  watch: HZ,
  // provide / inject
  provide: AP,
  inject: FZ
};
function AP(x, D) {
  return D ? x ? function() {
    return pn(ir(x) ? x.call(this, this) : x, ir(D) ? D.call(this, this) : D);
  } : D : x;
}
function FZ(x, D) {
  return go(DP(x), DP(D));
}
function DP(x) {
  if (pe(x)) {
    const D = {};
    for (let A = 0; A < x.length; A++)
      D[x[A]] = x[A];
    return D;
  }
  return x;
}
function rr(x, D) {
  return x ? [...new Set([].concat(x, D))] : D;
}
function go(x, D) {
  return x ? pn(pn(/* @__PURE__ */ Object.create(null), x), D) : D;
}
function HZ(x, D) {
  if (!x)
    return D;
  if (!D)
    return x;
  const A = pn(/* @__PURE__ */ Object.create(null), x);
  for (const B in D)
    A[B] = rr(x[B], D[B]);
  return A;
}
const MP = IZ, WZ = (x) => x.__isTeleport, JP = Symbol(process.env.NODE_ENV !== "production" ? "Fragment" : void 0), UZ = Symbol(process.env.NODE_ENV !== "production" ? "Text" : void 0), YZ = Symbol(process.env.NODE_ENV !== "production" ? "Comment" : void 0);
Symbol(process.env.NODE_ENV !== "production" ? "Static" : void 0);
const Tv = [];
let vn = null;
function w_(x = !1) {
  Tv.push(vn = x ? null : []);
}
function $Z() {
  Tv.pop(), vn = Tv[Tv.length - 1] || null;
}
function QP(x) {
  return x.dynamicChildren = vn || mX, $Z(), vn && vn.push(x), x;
}
function tE(x, D, A, B, V, z) {
  return QP(nE(
    x,
    D,
    A,
    B,
    V,
    z,
    !0
    /* isBlock */
  ));
}
function XZ(x, D, A, B, V) {
  return QP(aE(
    x,
    D,
    A,
    B,
    V,
    !0
    /* isBlock: prevent a block from tracking itself */
  ));
}
function ZZ(x) {
  return x ? x.__v_isVNode === !0 : !1;
}
const qZ = (...x) => iE(...x), eE = "__vInternal", rE = ({ key: x }) => x ?? null, Cv = ({ ref: x, ref_key: D, ref_for: A }) => x != null ? gn(x) || ar(x) || ir(x) ? { i: ti, r: x, k: D, f: !!A } : x : null;
function nE(x, D = null, A = null, B = 0, V = null, z = x === JP ? 0 : 1, $ = !1, tt = !1) {
  const ut = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: x,
    props: D,
    key: D && rE(D),
    ref: D && Cv(D),
    scopeId: DZ,
    slotScopeIds: null,
    children: A,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: z,
    patchFlag: B,
    dynamicProps: V,
    dynamicChildren: null,
    appContext: null,
    ctx: ti
  };
  return tt ? (V_(ut, A), z & 128 && x.normalize(ut)) : A && (ut.shapeFlag |= gn(A) ? 8 : 16), process.env.NODE_ENV !== "production" && ut.key !== ut.key && $e("VNode created with invalid key (NaN). VNode type:", ut.type), // avoid a block node from tracking itself
  !$ && // has current parent block
  vn && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (ut.patchFlag > 0 || z & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  ut.patchFlag !== 32 && vn.push(ut), ut;
}
const aE = process.env.NODE_ENV !== "production" ? qZ : iE;
function iE(x, D = null, A = null, B = 0, V = null, z = !1) {
  if ((!x || x === NZ) && (process.env.NODE_ENV !== "production" && !x && $e(`Invalid vnode type when creating vnode: ${x}.`), x = YZ), ZZ(x)) {
    const tt = Pv(
      x,
      D,
      !0
      /* mergeRef: true */
    );
    return A && V_(tt, A), !z && vn && (tt.shapeFlag & 6 ? vn[vn.indexOf(x)] = tt : vn.push(tt)), tt.patchFlag |= -2, tt;
  }
  if (fE(x) && (x = x.__vccOpts), D) {
    D = KZ(D);
    let { class: tt, style: ut } = D;
    tt && !gn(tt) && (D.class = Ev(tt)), vr(ut) && (__(ut) && !pe(ut) && (ut = pn({}, ut)), D.style = T_(ut));
  }
  const $ = gn(x) ? 1 : MZ(x) ? 128 : WZ(x) ? 64 : vr(x) ? 4 : ir(x) ? 2 : 0;
  return process.env.NODE_ENV !== "production" && $ & 4 && __(x) && (x = Ut(x), $e("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.", `
Component that was made reactive: `, x)), nE(x, D, A, B, V, $, z, !0);
}
function KZ(x) {
  return x ? __(x) || eE in x ? pn({}, x) : x : null;
}
function Pv(x, D, A = !1) {
  const { props: B, ref: V, patchFlag: z, children: $ } = x, tt = D ? JZ(B || {}, D) : B;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: x.type,
    props: tt,
    key: tt && rE(tt),
    ref: D && D.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      A && V ? pe(V) ? V.concat(Cv(D)) : [V, Cv(D)] : Cv(D)
    ) : V,
    scopeId: x.scopeId,
    slotScopeIds: x.slotScopeIds,
    children: process.env.NODE_ENV !== "production" && z === -1 && pe($) ? $.map(oE) : $,
    target: x.target,
    targetAnchor: x.targetAnchor,
    staticCount: x.staticCount,
    shapeFlag: x.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: D && x.type !== JP ? z === -1 ? 16 : z | 16 : z,
    dynamicProps: x.dynamicProps,
    dynamicChildren: x.dynamicChildren,
    appContext: x.appContext,
    dirs: x.dirs,
    transition: x.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: x.component,
    suspense: x.suspense,
    ssContent: x.ssContent && Pv(x.ssContent),
    ssFallback: x.ssFallback && Pv(x.ssFallback),
    el: x.el,
    anchor: x.anchor,
    ctx: x.ctx,
    ce: x.ce
  };
}
function oE(x) {
  const D = Pv(x);
  return pe(x.children) && (D.children = x.children.map(oE)), D;
}
function jZ(x = " ", D = 0) {
  return aE(UZ, null, x, D);
}
function V_(x, D) {
  let A = 0;
  const { shapeFlag: B } = x;
  if (D == null)
    D = null;
  else if (pe(D))
    A = 16;
  else if (typeof D == "object")
    if (B & 65) {
      const V = D.default;
      V && (V._c && (V._d = !1), V_(x, V()), V._c && (V._d = !0));
      return;
    } else {
      A = 32;
      const V = D._;
      !V && !(eE in D) ? D._ctx = ti : V === 3 && ti && (ti.slots._ === 1 ? D._ = 1 : (D._ = 2, x.patchFlag |= 1024));
    }
  else
    ir(D) ? (D = { default: D, _ctx: ti }, A = 32) : (D = String(D), B & 64 ? (A = 16, D = [jZ(D)]) : A = 8);
  x.children = D, x.shapeFlag |= A;
}
function JZ(...x) {
  const D = {};
  for (let A = 0; A < x.length; A++) {
    const B = x[A];
    for (const V in B)
      if (V === "class")
        D.class !== B.class && (D.class = Ev([D.class, B.class]));
      else if (V === "style")
        D.style = T_([D.style, B.style]);
      else if (SX(V)) {
        const z = D[V], $ = B[V];
        $ && z !== $ && !(pe(z) && z.includes($)) && (D[V] = z ? [].concat(z, $) : $);
      } else
        V !== "" && (D[V] = B[V]);
  }
  return D;
}
let dn = null;
const b_ = (x) => {
  dn = x, x.scope.on();
}, sE = () => {
  dn && dn.scope.off(), dn = null;
};
function QZ(x) {
  return x.vnode.shapeFlag & 4;
}
function tq(x) {
  if (x.exposed)
    return x.exposeProxy || (x.exposeProxy = new Proxy(hZ(iZ(x.exposed)), {
      get(D, A) {
        if (A in D)
          return D[A];
        if (A in Qu)
          return Qu[A](x);
      },
      has(D, A) {
        return A in D || A in Qu;
      }
    }));
}
const eq = /(?:^|[-_])(\w)/g, rq = (x) => x.replace(eq, (D) => D.toUpperCase()).replace(/[-_]/g, "");
function lE(x, D = !0) {
  return ir(x) ? x.displayName || x.name : x.name || D && x.__name;
}
function uE(x, D, A = !1) {
  let B = lE(D);
  if (!B && D.__file) {
    const V = D.__file.match(/([^/\\]+)\.\w+$/);
    V && (B = V[1]);
  }
  if (!B && x && x.parent) {
    const V = (z) => {
      for (const $ in z)
        if (z[$] === D)
          return $;
    };
    B = V(x.components || x.parent.type.components) || V(x.appContext.components);
  }
  return B ? rq(B) : A ? "App" : "Anonymous";
}
function fE(x) {
  return ir(x) && "__vccOpts" in x;
}
Symbol(process.env.NODE_ENV !== "production" ? "ssrContext" : "");
function v_(x) {
  return !!(x && x.__v_isShallow);
}
function nq() {
  if (process.env.NODE_ENV === "production" || typeof window > "u")
    return;
  const x = { style: "color:#3ba776" }, D = { style: "color:#0b1bc9" }, A = { style: "color:#b62e24" }, B = { style: "color:#9d288c" }, V = {
    header(q) {
      return vr(q) ? q.__isVue ? ["div", x, "VueInstance"] : ar(q) ? [
        "div",
        {},
        ["span", x, vt(q)],
        "<",
        tt(q.value),
        ">"
      ] : mo(q) ? [
        "div",
        {},
        ["span", x, v_(q) ? "ShallowReactive" : "Reactive"],
        "<",
        tt(q),
        `>${ai(q) ? " (readonly)" : ""}`
      ] : ai(q) ? [
        "div",
        {},
        ["span", x, v_(q) ? "ShallowReadonly" : "Readonly"],
        "<",
        tt(q),
        ">"
      ] : null : null;
    },
    hasBody(q) {
      return q && q.__isVue;
    },
    body(q) {
      if (q && q.__isVue)
        return [
          "div",
          {},
          ...z(q.$)
        ];
    }
  };
  function z(q) {
    const pt = [];
    q.type.props && q.props && pt.push($("props", Ut(q.props))), q.setupState !== Gn && pt.push($("setup", q.setupState)), q.data !== Gn && pt.push($("data", Ut(q.data)));
    const ee = ut(q, "computed");
    ee && pt.push($("computed", ee));
    const ne = ut(q, "inject");
    return ne && pt.push($("injected", ne)), pt.push([
      "div",
      {},
      [
        "span",
        {
          style: B.style + ";opacity:0.66"
        },
        "$ (internal): "
      ],
      ["object", { object: q }]
    ]), pt;
  }
  function $(q, pt) {
    return pt = pn({}, pt), Object.keys(pt).length ? [
      "div",
      { style: "line-height:1.25em;margin-bottom:0.6em" },
      [
        "div",
        {
          style: "color:#476582"
        },
        q
      ],
      [
        "div",
        {
          style: "padding-left:1.25em"
        },
        ...Object.keys(pt).map((ee) => [
          "div",
          {},
          ["span", B, ee + ": "],
          tt(pt[ee], !1)
        ])
      ]
    ] : ["span", {}];
  }
  function tt(q, pt = !0) {
    return typeof q == "number" ? ["span", D, q] : typeof q == "string" ? ["span", A, JSON.stringify(q)] : typeof q == "boolean" ? ["span", B, q] : vr(q) ? ["object", { object: pt ? Ut(q) : q }] : ["span", A, String(q)];
  }
  function ut(q, pt) {
    const ee = q.type;
    if (ir(ee))
      return;
    const ne = {};
    for (const qt in q.ctx)
      Et(ee, qt, pt) && (ne[qt] = q.ctx[qt]);
    return ne;
  }
  function Et(q, pt, ee) {
    const ne = q[ee];
    if (pe(ne) && ne.includes(pt) || vr(ne) && pt in ne || q.extends && Et(q.extends, pt, ee) || q.mixins && q.mixins.some((qt) => Et(qt, pt, ee)))
      return !0;
  }
  function vt(q) {
    return v_(q) ? "ShallowRef" : q.effect ? "ComputedRef" : "Ref";
  }
  window.devtoolsFormatters ? window.devtoolsFormatters.push(V) : window.devtoolsFormatters = [V];
}
function aq() {
  nq();
}
process.env.NODE_ENV !== "production" && aq();
process.env.TARO_ENV === "alipay" && Object.defineProperty(Object.prototype, "wx", {
  enumerable: !1,
  value: my
});
(function(x, D) {
  typeof exports == "object" && typeof module < "u" ? D(exports) : typeof define == "function" && define.amd ? define(["exports"], D) : (x = typeof globalThis < "u" ? globalThis : x || self, D(x.echarts = {}));
})(globalThis, function(x) {
  /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
  
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
  
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
  var D = function(r, e) {
    return D = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t, n) {
      t.__proto__ = n;
    } || function(t, n) {
      for (var a in n)
        Object.prototype.hasOwnProperty.call(n, a) && (t[a] = n[a]);
    }, D(r, e);
  };
  function A(r, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
    D(r, e);
    function t() {
      this.constructor = r;
    }
    r.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
  }
  var B = function() {
    function r() {
      this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1;
    }
    return r;
  }(), V = function() {
    function r() {
      this.browser = new B(), this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = typeof window < "u";
    }
    return r;
  }(), z = new V();
  typeof wx == "object" && typeof wx.getSystemInfoSync == "function" ? (z.wxa = !0, z.touchEventsSupported = !0) : typeof document > "u" && typeof self < "u" ? z.worker = !0 : typeof navigator > "u" ? (z.node = !0, z.svgSupported = !0) : $(navigator.userAgent, z);
  function $(r, e) {
    var t = e.browser, n = r.match(/Firefox\/([\d.]+)/), a = r.match(/MSIE\s([\d.]+)/) || r.match(/Trident\/.+?rv:(([\d.]+))/), i = r.match(/Edge?\/([\d.]+)/), o = /micromessenger/i.test(r);
    n && (t.firefox = !0, t.version = n[1]), a && (t.ie = !0, t.version = a[1]), i && (t.edge = !0, t.version = i[1], t.newEdge = +i[1].split(".")[0] > 18), o && (t.weChat = !0), e.svgSupported = typeof SVGRect < "u", e.touchEventsSupported = "ontouchstart" in window && !t.ie && !t.edge, e.pointerEventsSupported = "onpointerdown" in window && (t.edge || t.ie && +t.version >= 11), e.domSupported = typeof document < "u";
    var s = document.documentElement.style;
    e.transform3dSupported = (t.ie && "transition" in s || t.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in s) && !("OTransition" in s), e.transformSupported = e.transform3dSupported || t.ie && +t.version >= 9;
  }
  var tt = 12, ut = "sans-serif", Et = tt + "px " + ut, vt = 20, q = 100, pt = "007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N";
  function ee(r) {
    var e = {};
    if (typeof JSON > "u")
      return e;
    for (var t = 0; t < r.length; t++) {
      var n = String.fromCharCode(t + 32), a = (r.charCodeAt(t) - vt) / q;
      e[n] = a;
    }
    return e;
  }
  var ne = ee(pt), qt = {
    createCanvas: function() {
      return typeof document < "u" && document.createElement("canvas");
    },
    measureText: function() {
      var r, e;
      return function(t, n) {
        if (!r) {
          var a = qt.createCanvas();
          r = a && a.getContext("2d");
        }
        if (r)
          return e !== n && (e = r.font = n || Et), r.measureText(t);
        t = t || "", n = n || Et;
        var i = /(\d+)px/.exec(n), o = i && +i[1] || tt, s = 0;
        if (n.indexOf("mono") >= 0)
          s = o * t.length;
        else
          for (var l = 0; l < t.length; l++) {
            var u = ne[t[l]];
            s += u == null ? o : u * o;
          }
        return { width: s };
      };
    }(),
    loadImage: function(r, e, t) {
      var n = new Image();
      return n.onload = e, n.onerror = t, n.src = r, n;
    }
  };
  function Tr(r) {
    for (var e in qt)
      r[e] && (qt[e] = r[e]);
  }
  var we = Ar([
    "Function",
    "RegExp",
    "Date",
    "Error",
    "CanvasGradient",
    "CanvasPattern",
    "Image",
    "Canvas"
  ], function(r, e) {
    return r["[object " + e + "]"] = !0, r;
  }, {}), ha = Ar([
    "Int8",
    "Uint8",
    "Uint8Clamped",
    "Int16",
    "Uint16",
    "Int32",
    "Uint32",
    "Float32",
    "Float64"
  ], function(r, e) {
    return r["[object " + e + "Array]"] = !0, r;
  }, {}), Yt = Object.prototype.toString, Fn = Array.prototype, xo = Fn.forEach, af = Fn.filter, Ov = Fn.slice, hE = Fn.map, B_ = function() {
  }.constructor, of = B_ ? B_.prototype : null, Nv = "__proto__", cE = 2311;
  function Vv() {
    return cE++;
  }
  function Cr() {
    for (var r = [], e = 0; e < arguments.length; e++)
      r[e] = arguments[e];
    typeof console < "u" && console.error.apply(console, r);
  }
  function ht(r) {
    if (r == null || typeof r != "object")
      return r;
    var e = r, t = Yt.call(r);
    if (t === "[object Array]") {
      if (!wo(r)) {
        e = [];
        for (var n = 0, a = r.length; n < a; n++)
          e[n] = ht(r[n]);
      }
    } else if (ha[t]) {
      if (!wo(r)) {
        var i = r.constructor;
        if (i.from)
          e = i.from(r);
        else {
          e = new i(r.length);
          for (var n = 0, a = r.length; n < a; n++)
            e[n] = r[n];
        }
      }
    } else if (!we[t] && !wo(r) && !ii(r)) {
      e = {};
      for (var o in r)
        r.hasOwnProperty(o) && o !== Nv && (e[o] = ht(r[o]));
    }
    return e;
  }
  function mt(r, e, t) {
    if (!it(e) || !it(r))
      return t ? ht(e) : r;
    for (var n in e)
      if (e.hasOwnProperty(n) && n !== Nv) {
        var a = r[n], i = e[n];
        it(i) && it(a) && !U(i) && !U(a) && !ii(i) && !ii(a) && !zv(i) && !zv(a) && !wo(i) && !wo(a) ? mt(a, i, t) : (t || !(n in r)) && (r[n] = ht(e[n]));
      }
    return r;
  }
  function sf(r, e) {
    for (var t = r[0], n = 1, a = r.length; n < a; n++)
      t = mt(t, r[n], e);
    return t;
  }
  function H(r, e) {
    if (Object.assign)
      Object.assign(r, e);
    else
      for (var t in e)
        e.hasOwnProperty(t) && t !== Nv && (r[t] = e[t]);
    return r;
  }
  function ot(r, e, t) {
    for (var n = Pt(e), a = 0; a < n.length; a++) {
      var i = n[a];
      (t ? e[i] != null : r[i] == null) && (r[i] = e[i]);
    }
    return r;
  }
  var vE = qt.createCanvas;
  function bt(r, e) {
    if (r) {
      if (r.indexOf)
        return r.indexOf(e);
      for (var t = 0, n = r.length; t < n; t++)
        if (r[t] === e)
          return t;
    }
    return -1;
  }
  function Bv(r, e) {
    var t = r.prototype;
    function n() {
    }
    n.prototype = e.prototype, r.prototype = new n();
    for (var a in t)
      t.hasOwnProperty(a) && (r.prototype[a] = t[a]);
    r.prototype.constructor = r, r.superClass = e;
  }
  function le(r, e, t) {
    if (r = "prototype" in r ? r.prototype : r, e = "prototype" in e ? e.prototype : e, Object.getOwnPropertyNames)
      for (var n = Object.getOwnPropertyNames(e), a = 0; a < n.length; a++) {
        var i = n[a];
        i !== "constructor" && (t ? e[i] != null : r[i] == null) && (r[i] = e[i]);
      }
    else
      ot(r, e, t);
  }
  function Pe(r) {
    return !r || typeof r == "string" ? !1 : typeof r.length == "number";
  }
  function M(r, e, t) {
    if (r && e)
      if (r.forEach && r.forEach === xo)
        r.forEach(e, t);
      else if (r.length === +r.length)
        for (var n = 0, a = r.length; n < a; n++)
          e.call(t, r[n], n, r);
      else
        for (var i in r)
          r.hasOwnProperty(i) && e.call(t, r[i], i, r);
  }
  function Y(r, e, t) {
    if (!r)
      return [];
    if (!e)
      return lf(r);
    if (r.map && r.map === hE)
      return r.map(e, t);
    for (var n = [], a = 0, i = r.length; a < i; a++)
      n.push(e.call(t, r[a], a, r));
    return n;
  }
  function Ar(r, e, t, n) {
    if (r && e) {
      for (var a = 0, i = r.length; a < i; a++)
        t = e.call(n, t, r[a], a, r);
      return t;
    }
  }
  function Ht(r, e, t) {
    if (!r)
      return [];
    if (!e)
      return lf(r);
    if (r.filter && r.filter === af)
      return r.filter(e, t);
    for (var n = [], a = 0, i = r.length; a < i; a++)
      e.call(t, r[a], a, r) && n.push(r[a]);
    return n;
  }
  function z_(r, e, t) {
    if (r && e) {
      for (var n = 0, a = r.length; n < a; n++)
        if (e.call(t, r[n], n, r))
          return r[n];
    }
  }
  function Pt(r) {
    if (!r)
      return [];
    if (Object.keys)
      return Object.keys(r);
    var e = [];
    for (var t in r)
      r.hasOwnProperty(t) && e.push(t);
    return e;
  }
  function dE(r, e) {
    for (var t = [], n = 2; n < arguments.length; n++)
      t[n - 2] = arguments[n];
    return function() {
      return r.apply(e, t.concat(Ov.call(arguments)));
    };
  }
  var J = of && rt(of.bind) ? of.call.bind(of.bind) : dE;
  function yt(r) {
    for (var e = [], t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
    return function() {
      return r.apply(this, e.concat(Ov.call(arguments)));
    };
  }
  function U(r) {
    return Array.isArray ? Array.isArray(r) : Yt.call(r) === "[object Array]";
  }
  function rt(r) {
    return typeof r == "function";
  }
  function j(r) {
    return typeof r == "string";
  }
  function Gs(r) {
    return Yt.call(r) === "[object String]";
  }
  function Ot(r) {
    return typeof r == "number";
  }
  function it(r) {
    var e = typeof r;
    return e === "function" || !!r && e === "object";
  }
  function zv(r) {
    return !!we[Yt.call(r)];
  }
  function Xe(r) {
    return !!ha[Yt.call(r)];
  }
  function ii(r) {
    return typeof r == "object" && typeof r.nodeType == "number" && typeof r.ownerDocument == "object";
  }
  function Fs(r) {
    return r.colorStops != null;
  }
  function G_(r) {
    return r.image != null;
  }
  function Gv(r) {
    return Yt.call(r) === "[object RegExp]";
  }
  function ca(r) {
    return r !== r;
  }
  function he() {
    for (var r = [], e = 0; e < arguments.length; e++)
      r[e] = arguments[e];
    for (var t = 0, n = r.length; t < n; t++)
      if (r[t] != null)
        return r[t];
  }
  function _t(r, e) {
    return r ?? e;
  }
  function Dr(r, e, t) {
    return r ?? e ?? t;
  }
  function lf(r) {
    for (var e = [], t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
    return Ov.apply(r, e);
  }
  function uf(r) {
    if (typeof r == "number")
      return [r, r, r, r];
    var e = r.length;
    return e === 2 ? [r[0], r[1], r[0], r[1]] : e === 3 ? [r[0], r[1], r[2], r[1]] : r;
  }
  function st(r, e) {
    if (!r)
      throw new Error(e);
  }
  function Mr(r) {
    return r == null ? null : typeof r.trim == "function" ? r.trim() : r.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  }
  var F_ = "__ec_primitive__";
  function Hs(r) {
    r[F_] = !0;
  }
  function wo(r) {
    return r[F_];
  }
  var pE = function() {
    function r() {
      this.data = {};
    }
    return r.prototype.delete = function(e) {
      var t = this.has(e);
      return t && delete this.data[e], t;
    }, r.prototype.has = function(e) {
      return this.data.hasOwnProperty(e);
    }, r.prototype.get = function(e) {
      return this.data[e];
    }, r.prototype.set = function(e, t) {
      return this.data[e] = t, this;
    }, r.prototype.keys = function() {
      return Pt(this.data);
    }, r.prototype.forEach = function(e) {
      var t = this.data;
      for (var n in t)
        t.hasOwnProperty(n) && e(t[n], n);
    }, r;
  }(), H_ = typeof Map == "function";
  function gE() {
    return H_ ? /* @__PURE__ */ new Map() : new pE();
  }
  var W_ = function() {
    function r(e) {
      var t = U(e);
      this.data = gE();
      var n = this;
      e instanceof r ? e.each(a) : e && M(e, a);
      function a(i, o) {
        t ? n.set(i, o) : n.set(o, i);
      }
    }
    return r.prototype.hasKey = function(e) {
      return this.data.has(e);
    }, r.prototype.get = function(e) {
      return this.data.get(e);
    }, r.prototype.set = function(e, t) {
      return this.data.set(e, t), t;
    }, r.prototype.each = function(e, t) {
      this.data.forEach(function(n, a) {
        e.call(t, n, a);
      });
    }, r.prototype.keys = function() {
      var e = this.data.keys();
      return H_ ? Array.from(e) : e;
    }, r.prototype.removeKey = function(e) {
      this.data.delete(e);
    }, r;
  }();
  function nt(r) {
    return new W_(r);
  }
  function Ws(r, e) {
    for (var t = new r.constructor(r.length + e.length), n = 0; n < r.length; n++)
      t[n] = r[n];
    for (var a = r.length, n = 0; n < e.length; n++)
      t[n + a] = e[n];
    return t;
  }
  function Us(r, e) {
    var t;
    if (Object.create)
      t = Object.create(r);
    else {
      var n = function() {
      };
      n.prototype = r, t = new n();
    }
    return e && H(t, e), t;
  }
  function Fv(r) {
    var e = r.style;
    e.webkitUserSelect = "none", e.userSelect = "none", e.webkitTapHighlightColor = "rgba(0,0,0,0)", e["-webkit-touch-callout"] = "none";
  }
  function Q(r, e) {
    return r.hasOwnProperty(e);
  }
  function ue() {
  }
  var Ys = 180 / Math.PI, yE = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    guid: Vv,
    logError: Cr,
    clone: ht,
    merge: mt,
    mergeAll: sf,
    extend: H,
    defaults: ot,
    createCanvas: vE,
    indexOf: bt,
    inherits: Bv,
    mixin: le,
    isArrayLike: Pe,
    each: M,
    map: Y,
    reduce: Ar,
    filter: Ht,
    find: z_,
    keys: Pt,
    bind: J,
    curry: yt,
    isArray: U,
    isFunction: rt,
    isString: j,
    isStringSafe: Gs,
    isNumber: Ot,
    isObject: it,
    isBuiltInObject: zv,
    isTypedArray: Xe,
    isDom: ii,
    isGradientObject: Fs,
    isImagePatternObject: G_,
    isRegExp: Gv,
    eqNaN: ca,
    retrieve: he,
    retrieve2: _t,
    retrieve3: Dr,
    slice: lf,
    normalizeCssArray: uf,
    assert: st,
    trim: Mr,
    setAsPrimitive: Hs,
    isPrimitive: wo,
    HashMap: W_,
    createHashMap: nt,
    concatArray: Ws,
    createObject: Us,
    disableUserSelect: Fv,
    hasOwn: Q,
    noop: ue,
    RADIAN_TO_DEGREE: Ys
  });
  function va(r, e) {
    return r == null && (r = 0), e == null && (e = 0), [r, e];
  }
  function Ne(r, e) {
    return r[0] = e[0], r[1] = e[1], r;
  }
  function yn(r) {
    return [r[0], r[1]];
  }
  function U_(r, e, t) {
    return r[0] = e, r[1] = t, r;
  }
  function Hv(r, e, t) {
    return r[0] = e[0] + t[0], r[1] = e[1] + t[1], r;
  }
  function ff(r, e, t, n) {
    return r[0] = e[0] + t[0] * n, r[1] = e[1] + t[1] * n, r;
  }
  function da(r, e, t) {
    return r[0] = e[0] - t[0], r[1] = e[1] - t[1], r;
  }
  function $s(r) {
    return Math.sqrt(Wv(r));
  }
  var mE = $s;
  function Wv(r) {
    return r[0] * r[0] + r[1] * r[1];
  }
  var _E = Wv;
  function SE(r, e, t) {
    return r[0] = e[0] * t[0], r[1] = e[1] * t[1], r;
  }
  function xE(r, e, t) {
    return r[0] = e[0] / t[0], r[1] = e[1] / t[1], r;
  }
  function wE(r, e) {
    return r[0] * e[0] + r[1] * e[1];
  }
  function Xs(r, e, t) {
    return r[0] = e[0] * t, r[1] = e[1] * t, r;
  }
  function oi(r, e) {
    var t = $s(e);
    return t === 0 ? (r[0] = 0, r[1] = 0) : (r[0] = e[0] / t, r[1] = e[1] / t), r;
  }
  function hf(r, e) {
    return Math.sqrt((r[0] - e[0]) * (r[0] - e[0]) + (r[1] - e[1]) * (r[1] - e[1]));
  }
  var Hn = hf;
  function Y_(r, e) {
    return (r[0] - e[0]) * (r[0] - e[0]) + (r[1] - e[1]) * (r[1] - e[1]);
  }
  var pa = Y_;
  function bE(r, e) {
    return r[0] = -e[0], r[1] = -e[1], r;
  }
  function Zs(r, e, t, n) {
    return r[0] = e[0] + n * (t[0] - e[0]), r[1] = e[1] + n * (t[1] - e[1]), r;
  }
  function Ie(r, e, t) {
    var n = e[0], a = e[1];
    return r[0] = t[0] * n + t[2] * a + t[4], r[1] = t[1] * n + t[3] * a + t[5], r;
  }
  function Wn(r, e, t) {
    return r[0] = Math.min(e[0], t[0]), r[1] = Math.min(e[1], t[1]), r;
  }
  function Un(r, e, t) {
    return r[0] = Math.max(e[0], t[0]), r[1] = Math.max(e[1], t[1]), r;
  }
  var TE = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    create: va,
    copy: Ne,
    clone: yn,
    set: U_,
    add: Hv,
    scaleAndAdd: ff,
    sub: da,
    len: $s,
    length: mE,
    lenSquare: Wv,
    lengthSquare: _E,
    mul: SE,
    div: xE,
    dot: wE,
    scale: Xs,
    normalize: oi,
    distance: hf,
    dist: Hn,
    distanceSquare: Y_,
    distSquare: pa,
    negate: bE,
    lerp: Zs,
    applyTransform: Ie,
    min: Wn,
    max: Un
  }), bo = function() {
    function r(e, t) {
      this.target = e, this.topTarget = t && t.topTarget;
    }
    return r;
  }(), CE = function() {
    function r(e) {
      this.handler = e, e.on("mousedown", this._dragStart, this), e.on("mousemove", this._drag, this), e.on("mouseup", this._dragEnd, this);
    }
    return r.prototype._dragStart = function(e) {
      for (var t = e.target; t && !t.draggable; )
        t = t.parent || t.__hostTarget;
      t && (this._draggingTarget = t, t.dragging = !0, this._x = e.offsetX, this._y = e.offsetY, this.handler.dispatchToElement(new bo(t, e), "dragstart", e.event));
    }, r.prototype._drag = function(e) {
      var t = this._draggingTarget;
      if (t) {
        var n = e.offsetX, a = e.offsetY, i = n - this._x, o = a - this._y;
        this._x = n, this._y = a, t.drift(i, o, e), this.handler.dispatchToElement(new bo(t, e), "drag", e.event);
        var s = this.handler.findHover(n, a, t).target, l = this._dropTarget;
        this._dropTarget = s, t !== s && (l && s !== l && this.handler.dispatchToElement(new bo(l, e), "dragleave", e.event), s && s !== l && this.handler.dispatchToElement(new bo(s, e), "dragenter", e.event));
      }
    }, r.prototype._dragEnd = function(e) {
      var t = this._draggingTarget;
      t && (t.dragging = !1), this.handler.dispatchToElement(new bo(t, e), "dragend", e.event), this._dropTarget && this.handler.dispatchToElement(new bo(this._dropTarget, e), "drop", e.event), this._draggingTarget = null, this._dropTarget = null;
    }, r;
  }(), Ir = function() {
    function r(e) {
      e && (this._$eventProcessor = e);
    }
    return r.prototype.on = function(e, t, n, a) {
      this._$handlers || (this._$handlers = {});
      var i = this._$handlers;
      if (typeof t == "function" && (a = n, n = t, t = null), !n || !e)
        return this;
      var o = this._$eventProcessor;
      t != null && o && o.normalizeQuery && (t = o.normalizeQuery(t)), i[e] || (i[e] = []);
      for (var s = 0; s < i[e].length; s++)
        if (i[e][s].h === n)
          return this;
      var l = {
        h: n,
        query: t,
        ctx: a || this,
        callAtLast: n.zrEventfulCallAtLast
      }, u = i[e].length - 1, f = i[e][u];
      return f && f.callAtLast ? i[e].splice(u, 0, l) : i[e].push(l), this;
    }, r.prototype.isSilent = function(e) {
      var t = this._$handlers;
      return !t || !t[e] || !t[e].length;
    }, r.prototype.off = function(e, t) {
      var n = this._$handlers;
      if (!n)
        return this;
      if (!e)
        return this._$handlers = {}, this;
      if (t) {
        if (n[e]) {
          for (var a = [], i = 0, o = n[e].length; i < o; i++)
            n[e][i].h !== t && a.push(n[e][i]);
          n[e] = a;
        }
        n[e] && n[e].length === 0 && delete n[e];
      } else
        delete n[e];
      return this;
    }, r.prototype.trigger = function(e) {
      for (var t = [], n = 1; n < arguments.length; n++)
        t[n - 1] = arguments[n];
      if (!this._$handlers)
        return this;
      var a = this._$handlers[e], i = this._$eventProcessor;
      if (a)
        for (var o = t.length, s = a.length, l = 0; l < s; l++) {
          var u = a[l];
          if (!(i && i.filter && u.query != null && !i.filter(e, u.query)))
            switch (o) {
              case 0:
                u.h.call(u.ctx);
                break;
              case 1:
                u.h.call(u.ctx, t[0]);
                break;
              case 2:
                u.h.call(u.ctx, t[0], t[1]);
                break;
              default:
                u.h.apply(u.ctx, t);
                break;
            }
        }
      return i && i.afterTrigger && i.afterTrigger(e), this;
    }, r.prototype.triggerWithContext = function(e) {
      for (var t = [], n = 1; n < arguments.length; n++)
        t[n - 1] = arguments[n];
      if (!this._$handlers)
        return this;
      var a = this._$handlers[e], i = this._$eventProcessor;
      if (a)
        for (var o = t.length, s = t[o - 1], l = a.length, u = 0; u < l; u++) {
          var f = a[u];
          if (!(i && i.filter && f.query != null && !i.filter(e, f.query)))
            switch (o) {
              case 0:
                f.h.call(s);
                break;
              case 1:
                f.h.call(s, t[0]);
                break;
              case 2:
                f.h.call(s, t[0], t[1]);
                break;
              default:
                f.h.apply(s, t.slice(1, o - 1));
                break;
            }
        }
      return i && i.afterTrigger && i.afterTrigger(e), this;
    }, r;
  }(), AE = Math.log(2);
  function Uv(r, e, t, n, a, i) {
    var o = n + "-" + a, s = r.length;
    if (i.hasOwnProperty(o))
      return i[o];
    if (e === 1) {
      var l = Math.round(Math.log((1 << s) - 1 & ~a) / AE);
      return r[t][l];
    }
    for (var u = n | 1 << t, f = t + 1; n & 1 << f; )
      f++;
    for (var h = 0, c = 0, v = 0; c < s; c++) {
      var d = 1 << c;
      d & a || (h += (v % 2 ? -1 : 1) * r[t][c] * Uv(r, e - 1, f, u, a | d, i), v++);
    }
    return i[o] = h, h;
  }
  function $_(r, e) {
    var t = [
      [r[0], r[1], 1, 0, 0, 0, -e[0] * r[0], -e[0] * r[1]],
      [0, 0, 0, r[0], r[1], 1, -e[1] * r[0], -e[1] * r[1]],
      [r[2], r[3], 1, 0, 0, 0, -e[2] * r[2], -e[2] * r[3]],
      [0, 0, 0, r[2], r[3], 1, -e[3] * r[2], -e[3] * r[3]],
      [r[4], r[5], 1, 0, 0, 0, -e[4] * r[4], -e[4] * r[5]],
      [0, 0, 0, r[4], r[5], 1, -e[5] * r[4], -e[5] * r[5]],
      [r[6], r[7], 1, 0, 0, 0, -e[6] * r[6], -e[6] * r[7]],
      [0, 0, 0, r[6], r[7], 1, -e[7] * r[6], -e[7] * r[7]]
    ], n = {}, a = Uv(t, 8, 0, 0, 0, n);
    if (a !== 0) {
      for (var i = [], o = 0; o < 8; o++)
        for (var s = 0; s < 8; s++)
          i[s] == null && (i[s] = 0), i[s] += ((o + s) % 2 ? -1 : 1) * Uv(t, 7, o === 0 ? 1 : 0, 1 << o, 1 << s, n) / a * e[o];
      return function(l, u, f) {
        var h = u * i[6] + f * i[7] + 1;
        l[0] = (u * i[0] + f * i[1] + i[2]) / h, l[1] = (u * i[3] + f * i[4] + i[5]) / h;
      };
    }
  }
  var X_ = "___zrEVENTSAVED", Yv = [];
  function DE(r, e, t, n, a) {
    return $v(Yv, e, n, a, !0) && $v(r, t, Yv[0], Yv[1]);
  }
  function $v(r, e, t, n, a) {
    if (e.getBoundingClientRect && z.domSupported && !Z_(e)) {
      var i = e[X_] || (e[X_] = {}), o = ME(e, i), s = IE(o, i, a);
      if (s)
        return s(r, t, n), !0;
    }
    return !1;
  }
  function ME(r, e) {
    var t = e.markers;
    if (t)
      return t;
    t = e.markers = [];
    for (var n = ["left", "right"], a = ["top", "bottom"], i = 0; i < 4; i++) {
      var o = document.createElement("div"), s = o.style, l = i % 2, u = (i >> 1) % 2;
      s.cssText = [
        "position: absolute",
        "visibility: hidden",
        "padding: 0",
        "margin: 0",
        "border-width: 0",
        "user-select: none",
        "width:0",
        "height:0",
        n[l] + ":0",
        a[u] + ":0",
        n[1 - l] + ":auto",
        a[1 - u] + ":auto",
        ""
      ].join("!important;"), r.appendChild(o), t.push(o);
    }
    return t;
  }
  function IE(r, e, t) {
    for (var n = t ? "invTrans" : "trans", a = e[n], i = e.srcCoords, o = [], s = [], l = !0, u = 0; u < 4; u++) {
      var f = r[u].getBoundingClientRect(), h = 2 * u, c = f.left, v = f.top;
      o.push(c, v), l = l && i && c === i[h] && v === i[h + 1], s.push(r[u].offsetLeft, r[u].offsetTop);
    }
    return l && a ? a : (e.srcCoords = o, e[n] = t ? $_(s, o) : $_(o, s));
  }
  function Z_(r) {
    return r.nodeName.toUpperCase() === "CANVAS";
  }
  var LE = /([&<>"'])/g, PE = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;"
  };
  function Ze(r) {
    return r == null ? "" : (r + "").replace(LE, function(e, t) {
      return PE[t];
    });
  }
  var EE = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Xv = [], RE = z.browser.firefox && +z.browser.version.split(".")[0] < 39;
  function Zv(r, e, t, n) {
    return t = t || {}, n ? q_(r, e, t) : RE && e.layerX != null && e.layerX !== e.offsetX ? (t.zrX = e.layerX, t.zrY = e.layerY) : e.offsetX != null ? (t.zrX = e.offsetX, t.zrY = e.offsetY) : q_(r, e, t), t;
  }
  function q_(r, e, t) {
    if (z.domSupported && r.getBoundingClientRect) {
      var n = e.clientX, a = e.clientY;
      if (Z_(r)) {
        var i = r.getBoundingClientRect();
        t.zrX = n - i.left, t.zrY = a - i.top;
        return;
      } else if ($v(Xv, r, n, a)) {
        t.zrX = Xv[0], t.zrY = Xv[1];
        return;
      }
    }
    t.zrX = t.zrY = 0;
  }
  function qv(r) {
    return r || window.event;
  }
  function Lr(r, e, t) {
    if (e = qv(e), e.zrX != null)
      return e;
    var n = e.type, a = n && n.indexOf("touch") >= 0;
    if (a) {
      var o = n !== "touchend" ? e.targetTouches[0] : e.changedTouches[0];
      o && Zv(r, o, e, t);
    } else {
      Zv(r, e, e, t);
      var i = kE(e);
      e.zrDelta = i ? i / 120 : -(e.detail || 0) / 3;
    }
    var s = e.button;
    return e.which == null && s !== void 0 && EE.test(e.type) && (e.which = s & 1 ? 1 : s & 2 ? 3 : s & 4 ? 2 : 0), e;
  }
  function kE(r) {
    var e = r.wheelDelta;
    if (e)
      return e;
    var t = r.deltaX, n = r.deltaY;
    if (t == null || n == null)
      return e;
    var a = Math.abs(n !== 0 ? n : t), i = n > 0 ? -1 : n < 0 ? 1 : t > 0 ? -1 : 1;
    return 3 * a * i;
  }
  function Kv(r, e, t, n) {
    r.addEventListener(e, t, n);
  }
  function OE(r, e, t, n) {
    r.removeEventListener(e, t, n);
  }
  var Yn = function(r) {
    r.preventDefault(), r.stopPropagation(), r.cancelBubble = !0;
  };
  function K_(r) {
    return r.which === 2 || r.which === 3;
  }
  var NE = function() {
    function r() {
      this._track = [];
    }
    return r.prototype.recognize = function(e, t, n) {
      return this._doTrack(e, t, n), this._recognize(e);
    }, r.prototype.clear = function() {
      return this._track.length = 0, this;
    }, r.prototype._doTrack = function(e, t, n) {
      var a = e.touches;
      if (a) {
        for (var i = {
          points: [],
          touches: [],
          target: t,
          event: e
        }, o = 0, s = a.length; o < s; o++) {
          var l = a[o], u = Zv(n, l, {});
          i.points.push([u.zrX, u.zrY]), i.touches.push(l);
        }
        this._track.push(i);
      }
    }, r.prototype._recognize = function(e) {
      for (var t in jv)
        if (jv.hasOwnProperty(t)) {
          var n = jv[t](this._track, e);
          if (n)
            return n;
        }
    }, r;
  }();
  function j_(r) {
    var e = r[1][0] - r[0][0], t = r[1][1] - r[0][1];
    return Math.sqrt(e * e + t * t);
  }
  function VE(r) {
    return [
      (r[0][0] + r[1][0]) / 2,
      (r[0][1] + r[1][1]) / 2
    ];
  }
  var jv = {
    pinch: function(r, e) {
      var t = r.length;
      if (t) {
        var n = (r[t - 1] || {}).points, a = (r[t - 2] || {}).points || n;
        if (a && a.length > 1 && n && n.length > 1) {
          var i = j_(n) / j_(a);
          !isFinite(i) && (i = 1), e.pinchScale = i;
          var o = VE(n);
          return e.pinchX = o[0], e.pinchY = o[1], {
            type: "pinch",
            target: r[0].target,
            event: e
          };
        }
      }
    }
  };
  function dr() {
    return [1, 0, 0, 1, 0, 0];
  }
  function qs(r) {
    return r[0] = 1, r[1] = 0, r[2] = 0, r[3] = 1, r[4] = 0, r[5] = 0, r;
  }
  function cf(r, e) {
    return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r[4] = e[4], r[5] = e[5], r;
  }
  function mn(r, e, t) {
    var n = e[0] * t[0] + e[2] * t[1], a = e[1] * t[0] + e[3] * t[1], i = e[0] * t[2] + e[2] * t[3], o = e[1] * t[2] + e[3] * t[3], s = e[0] * t[4] + e[2] * t[5] + e[4], l = e[1] * t[4] + e[3] * t[5] + e[5];
    return r[0] = n, r[1] = a, r[2] = i, r[3] = o, r[4] = s, r[5] = l, r;
  }
  function jr(r, e, t) {
    return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r[4] = e[4] + t[0], r[5] = e[5] + t[1], r;
  }
  function ga(r, e, t) {
    var n = e[0], a = e[2], i = e[4], o = e[1], s = e[3], l = e[5], u = Math.sin(t), f = Math.cos(t);
    return r[0] = n * f + o * u, r[1] = -n * u + o * f, r[2] = a * f + s * u, r[3] = -a * u + f * s, r[4] = f * i + u * l, r[5] = f * l - u * i, r;
  }
  function vf(r, e, t) {
    var n = t[0], a = t[1];
    return r[0] = e[0] * n, r[1] = e[1] * a, r[2] = e[2] * n, r[3] = e[3] * a, r[4] = e[4] * n, r[5] = e[5] * a, r;
  }
  function si(r, e) {
    var t = e[0], n = e[2], a = e[4], i = e[1], o = e[3], s = e[5], l = t * o - i * n;
    return l ? (l = 1 / l, r[0] = o * l, r[1] = -i * l, r[2] = -n * l, r[3] = t * l, r[4] = (n * s - o * a) * l, r[5] = (i * a - t * s) * l, r) : null;
  }
  function J_(r) {
    var e = dr();
    return cf(e, r), e;
  }
  var BE = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    create: dr,
    identity: qs,
    copy: cf,
    mul: mn,
    translate: jr,
    rotate: ga,
    scale: vf,
    invert: si,
    clone: J_
  }), St = function() {
    function r(e, t) {
      this.x = e || 0, this.y = t || 0;
    }
    return r.prototype.copy = function(e) {
      return this.x = e.x, this.y = e.y, this;
    }, r.prototype.clone = function() {
      return new r(this.x, this.y);
    }, r.prototype.set = function(e, t) {
      return this.x = e, this.y = t, this;
    }, r.prototype.equal = function(e) {
      return e.x === this.x && e.y === this.y;
    }, r.prototype.add = function(e) {
      return this.x += e.x, this.y += e.y, this;
    }, r.prototype.scale = function(e) {
      this.x *= e, this.y *= e;
    }, r.prototype.scaleAndAdd = function(e, t) {
      this.x += e.x * t, this.y += e.y * t;
    }, r.prototype.sub = function(e) {
      return this.x -= e.x, this.y -= e.y, this;
    }, r.prototype.dot = function(e) {
      return this.x * e.x + this.y * e.y;
    }, r.prototype.len = function() {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    }, r.prototype.lenSquare = function() {
      return this.x * this.x + this.y * this.y;
    }, r.prototype.normalize = function() {
      var e = this.len();
      return this.x /= e, this.y /= e, this;
    }, r.prototype.distance = function(e) {
      var t = this.x - e.x, n = this.y - e.y;
      return Math.sqrt(t * t + n * n);
    }, r.prototype.distanceSquare = function(e) {
      var t = this.x - e.x, n = this.y - e.y;
      return t * t + n * n;
    }, r.prototype.negate = function() {
      return this.x = -this.x, this.y = -this.y, this;
    }, r.prototype.transform = function(e) {
      if (e) {
        var t = this.x, n = this.y;
        return this.x = e[0] * t + e[2] * n + e[4], this.y = e[1] * t + e[3] * n + e[5], this;
      }
    }, r.prototype.toArray = function(e) {
      return e[0] = this.x, e[1] = this.y, e;
    }, r.prototype.fromArray = function(e) {
      this.x = e[0], this.y = e[1];
    }, r.set = function(e, t, n) {
      e.x = t, e.y = n;
    }, r.copy = function(e, t) {
      e.x = t.x, e.y = t.y;
    }, r.len = function(e) {
      return Math.sqrt(e.x * e.x + e.y * e.y);
    }, r.lenSquare = function(e) {
      return e.x * e.x + e.y * e.y;
    }, r.dot = function(e, t) {
      return e.x * t.x + e.y * t.y;
    }, r.add = function(e, t, n) {
      e.x = t.x + n.x, e.y = t.y + n.y;
    }, r.sub = function(e, t, n) {
      e.x = t.x - n.x, e.y = t.y - n.y;
    }, r.scale = function(e, t, n) {
      e.x = t.x * n, e.y = t.y * n;
    }, r.scaleAndAdd = function(e, t, n, a) {
      e.x = t.x + n.x * a, e.y = t.y + n.y * a;
    }, r.lerp = function(e, t, n, a) {
      var i = 1 - a;
      e.x = i * t.x + a * n.x, e.y = i * t.y + a * n.y;
    }, r;
  }(), df = Math.min, pf = Math.max, li = new St(), ui = new St(), fi = new St(), hi = new St(), Ks = new St(), js = new St(), xt = function() {
    function r(e, t, n, a) {
      n < 0 && (e = e + n, n = -n), a < 0 && (t = t + a, a = -a), this.x = e, this.y = t, this.width = n, this.height = a;
    }
    return r.prototype.union = function(e) {
      var t = df(e.x, this.x), n = df(e.y, this.y);
      isFinite(this.x) && isFinite(this.width) ? this.width = pf(e.x + e.width, this.x + this.width) - t : this.width = e.width, isFinite(this.y) && isFinite(this.height) ? this.height = pf(e.y + e.height, this.y + this.height) - n : this.height = e.height, this.x = t, this.y = n;
    }, r.prototype.applyTransform = function(e) {
      r.applyTransform(this, this, e);
    }, r.prototype.calculateTransform = function(e) {
      var t = this, n = e.width / t.width, a = e.height / t.height, i = dr();
      return jr(i, i, [-t.x, -t.y]), vf(i, i, [n, a]), jr(i, i, [e.x, e.y]), i;
    }, r.prototype.intersect = function(e, t) {
      if (!e)
        return !1;
      e instanceof r || (e = r.create(e));
      var n = this, a = n.x, i = n.x + n.width, o = n.y, s = n.y + n.height, l = e.x, u = e.x + e.width, f = e.y, h = e.y + e.height, c = !(i < l || u < a || s < f || h < o);
      if (t) {
        var v = 1 / 0, d = 0, p = Math.abs(i - l), g = Math.abs(u - a), y = Math.abs(s - f), m = Math.abs(h - o), _ = Math.min(p, g), S = Math.min(y, m);
        i < l || u < a ? _ > d && (d = _, p < g ? St.set(js, -p, 0) : St.set(js, g, 0)) : _ < v && (v = _, p < g ? St.set(Ks, p, 0) : St.set(Ks, -g, 0)), s < f || h < o ? S > d && (d = S, y < m ? St.set(js, 0, -y) : St.set(js, 0, m)) : _ < v && (v = _, y < m ? St.set(Ks, 0, y) : St.set(Ks, 0, -m));
      }
      return t && St.copy(t, c ? Ks : js), c;
    }, r.prototype.contain = function(e, t) {
      var n = this;
      return e >= n.x && e <= n.x + n.width && t >= n.y && t <= n.y + n.height;
    }, r.prototype.clone = function() {
      return new r(this.x, this.y, this.width, this.height);
    }, r.prototype.copy = function(e) {
      r.copy(this, e);
    }, r.prototype.plain = function() {
      return {
        x: this.x,
        y: this.y,
        width: this.width,
        height: this.height
      };
    }, r.prototype.isFinite = function() {
      return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
    }, r.prototype.isZero = function() {
      return this.width === 0 || this.height === 0;
    }, r.create = function(e) {
      return new r(e.x, e.y, e.width, e.height);
    }, r.copy = function(e, t) {
      e.x = t.x, e.y = t.y, e.width = t.width, e.height = t.height;
    }, r.applyTransform = function(e, t, n) {
      if (!n) {
        e !== t && r.copy(e, t);
        return;
      }
      if (n[1] < 1e-5 && n[1] > -1e-5 && n[2] < 1e-5 && n[2] > -1e-5) {
        var a = n[0], i = n[3], o = n[4], s = n[5];
        e.x = t.x * a + o, e.y = t.y * i + s, e.width = t.width * a, e.height = t.height * i, e.width < 0 && (e.x += e.width, e.width = -e.width), e.height < 0 && (e.y += e.height, e.height = -e.height);
        return;
      }
      li.x = fi.x = t.x, li.y = hi.y = t.y, ui.x = hi.x = t.x + t.width, ui.y = fi.y = t.y + t.height, li.transform(n), hi.transform(n), ui.transform(n), fi.transform(n), e.x = df(li.x, ui.x, fi.x, hi.x), e.y = df(li.y, ui.y, fi.y, hi.y);
      var l = pf(li.x, ui.x, fi.x, hi.x), u = pf(li.y, ui.y, fi.y, hi.y);
      e.width = l - e.x, e.height = u - e.y;
    }, r;
  }(), Q_ = "silent";
  function zE(r, e, t) {
    return {
      type: r,
      event: t,
      target: e.target,
      topTarget: e.topTarget,
      cancelBubble: !1,
      offsetX: t.zrX,
      offsetY: t.zrY,
      gestureEvent: t.gestureEvent,
      pinchX: t.pinchX,
      pinchY: t.pinchY,
      pinchScale: t.pinchScale,
      wheelDelta: t.zrDelta,
      zrByTouch: t.zrByTouch,
      which: t.which,
      stop: GE
    };
  }
  function GE() {
    Yn(this.event);
  }
  var FE = function(r) {
    A(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.handler = null, t;
    }
    return e.prototype.dispose = function() {
    }, e.prototype.setCursor = function() {
    }, e;
  }(Ir), Js = function() {
    function r(e, t) {
      this.x = e, this.y = t;
    }
    return r;
  }(), HE = [
    "click",
    "dblclick",
    "mousewheel",
    "mouseout",
    "mouseup",
    "mousedown",
    "mousemove",
    "contextmenu"
  ], Jv = new xt(0, 0, 0, 0), t1 = function(r) {
    A(e, r);
    function e(t, n, a, i, o) {
      var s = r.call(this) || this;
      return s._hovered = new Js(0, 0), s.storage = t, s.painter = n, s.painterRoot = i, s._pointerSize = o, a = a || new FE(), s.proxy = null, s.setHandlerProxy(a), s._draggingMgr = new CE(s), s;
    }
    return e.prototype.setHandlerProxy = function(t) {
      this.proxy && this.proxy.dispose(), t && (M(HE, function(n) {
        t.on && t.on(n, this[n], this);
      }, this), t.handler = this), this.proxy = t;
    }, e.prototype.mousemove = function(t) {
      var n = t.zrX, a = t.zrY, i = r1(this, n, a), o = this._hovered, s = o.target;
      s && !s.__zr && (o = this.findHover(o.x, o.y), s = o.target);
      var l = this._hovered = i ? new Js(n, a) : this.findHover(n, a), u = l.target, f = this.proxy;
      f.setCursor && f.setCursor(u ? u.cursor : "default"), s && u !== s && this.dispatchToElement(o, "mouseout", t), this.dispatchToElement(l, "mousemove", t), u && u !== s && this.dispatchToElement(l, "mouseover", t);
    }, e.prototype.mouseout = function(t) {
      var n = t.zrEventControl;
      n !== "only_globalout" && this.dispatchToElement(this._hovered, "mouseout", t), n !== "no_globalout" && this.trigger("globalout", { type: "globalout", event: t });
    }, e.prototype.resize = function() {
      this._hovered = new Js(0, 0);
    }, e.prototype.dispatch = function(t, n) {
      var a = this[t];
      a && a.call(this, n);
    }, e.prototype.dispose = function() {
      this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
    }, e.prototype.setCursorStyle = function(t) {
      var n = this.proxy;
      n.setCursor && n.setCursor(t);
    }, e.prototype.dispatchToElement = function(t, n, a) {
      t = t || {};
      var i = t.target;
      if (!(i && i.silent)) {
        for (var o = "on" + n, s = zE(n, t, a); i && (i[o] && (s.cancelBubble = !!i[o].call(i, s)), i.trigger(n, s), i = i.__hostTarget ? i.__hostTarget : i.parent, !s.cancelBubble); )
          ;
        s.cancelBubble || (this.trigger(n, s), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function(l) {
          typeof l[o] == "function" && l[o].call(l, s), l.trigger && l.trigger(n, s);
        }));
      }
    }, e.prototype.findHover = function(t, n, a) {
      var i = this.storage.getDisplayList(), o = new Js(t, n);
      if (e1(i, o, t, n, a), this._pointerSize && !o.target) {
        for (var s = [], l = this._pointerSize, u = l / 2, f = new xt(t - u, n - u, l, l), h = i.length - 1; h >= 0; h--) {
          var c = i[h];
          c !== a && !c.ignore && !c.ignoreCoarsePointer && (!c.parent || !c.parent.ignoreCoarsePointer) && (Jv.copy(c.getBoundingRect()), c.transform && Jv.applyTransform(c.transform), Jv.intersect(f) && s.push(c));
        }
        if (s.length)
          for (var v = 4, d = Math.PI / 12, p = Math.PI * 2, g = 0; g < u; g += v)
            for (var y = 0; y < p; y += d) {
              var m = t + g * Math.cos(y), _ = n + g * Math.sin(y);
              if (e1(s, o, m, _, a), o.target)
                return o;
            }
      }
      return o;
    }, e.prototype.processGesture = function(t, n) {
      this._gestureMgr || (this._gestureMgr = new NE());
      var a = this._gestureMgr;
      n === "start" && a.clear();
      var i = a.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom);
      if (n === "end" && a.clear(), i) {
        var o = i.type;
        t.gestureEvent = o;
        var s = new Js();
        s.target = i.target, this.dispatchToElement(s, o, i.event);
      }
    }, e;
  }(Ir);
  M(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(r) {
    t1.prototype[r] = function(e) {
      var t = e.zrX, n = e.zrY, a = r1(this, t, n), i, o;
      if ((r !== "mouseup" || !a) && (i = this.findHover(t, n), o = i.target), r === "mousedown")
        this._downEl = o, this._downPoint = [e.zrX, e.zrY], this._upEl = o;
      else if (r === "mouseup")
        this._upEl = o;
      else if (r === "click") {
        if (this._downEl !== this._upEl || !this._downPoint || Hn(this._downPoint, [e.zrX, e.zrY]) > 4)
          return;
        this._downPoint = null;
      }
      this.dispatchToElement(i, r, e);
    };
  });
  function WE(r, e, t) {
    if (r[r.rectHover ? "rectContain" : "contain"](e, t)) {
      for (var n = r, a = void 0, i = !1; n; ) {
        if (n.ignoreClip && (i = !0), !i) {
          var o = n.getClipPath();
          if (o && !o.contain(e, t))
            return !1;
          n.silent && (a = !0);
        }
        var s = n.__hostTarget;
        n = s || n.parent;
      }
      return a ? Q_ : !0;
    }
    return !1;
  }
  function e1(r, e, t, n, a) {
    for (var i = r.length - 1; i >= 0; i--) {
      var o = r[i], s = void 0;
      if (o !== a && !o.ignore && (s = WE(o, t, n)) && (!e.topTarget && (e.topTarget = o), s !== Q_)) {
        e.target = o;
        break;
      }
    }
  }
  function r1(r, e, t) {
    var n = r.painter;
    return e < 0 || e > n.getWidth() || t < 0 || t > n.getHeight();
  }
  var n1 = 32, Qs = 7;
  function UE(r) {
    for (var e = 0; r >= n1; )
      e |= r & 1, r >>= 1;
    return r + e;
  }
  function a1(r, e, t, n) {
    var a = e + 1;
    if (a === t)
      return 1;
    if (n(r[a++], r[e]) < 0) {
      for (; a < t && n(r[a], r[a - 1]) < 0; )
        a++;
      YE(r, e, a);
    } else
      for (; a < t && n(r[a], r[a - 1]) >= 0; )
        a++;
    return a - e;
  }
  function YE(r, e, t) {
    for (t--; e < t; ) {
      var n = r[e];
      r[e++] = r[t], r[t--] = n;
    }
  }
  function i1(r, e, t, n, a) {
    for (n === e && n++; n < t; n++) {
      for (var i = r[n], o = e, s = n, l; o < s; )
        l = o + s >>> 1, a(i, r[l]) < 0 ? s = l : o = l + 1;
      var u = n - o;
      switch (u) {
        case 3:
          r[o + 3] = r[o + 2];
        case 2:
          r[o + 2] = r[o + 1];
        case 1:
          r[o + 1] = r[o];
          break;
        default:
          for (; u > 0; )
            r[o + u] = r[o + u - 1], u--;
      }
      r[o] = i;
    }
  }
  function Qv(r, e, t, n, a, i) {
    var o = 0, s = 0, l = 1;
    if (i(r, e[t + a]) > 0) {
      for (s = n - a; l < s && i(r, e[t + a + l]) > 0; )
        o = l, l = (l << 1) + 1, l <= 0 && (l = s);
      l > s && (l = s), o += a, l += a;
    } else {
      for (s = a + 1; l < s && i(r, e[t + a - l]) <= 0; )
        o = l, l = (l << 1) + 1, l <= 0 && (l = s);
      l > s && (l = s);
      var u = o;
      o = a - l, l = a - u;
    }
    for (o++; o < l; ) {
      var f = o + (l - o >>> 1);
      i(r, e[t + f]) > 0 ? o = f + 1 : l = f;
    }
    return l;
  }
  function td(r, e, t, n, a, i) {
    var o = 0, s = 0, l = 1;
    if (i(r, e[t + a]) < 0) {
      for (s = a + 1; l < s && i(r, e[t + a - l]) < 0; )
        o = l, l = (l << 1) + 1, l <= 0 && (l = s);
      l > s && (l = s);
      var u = o;
      o = a - l, l = a - u;
    } else {
      for (s = n - a; l < s && i(r, e[t + a + l]) >= 0; )
        o = l, l = (l << 1) + 1, l <= 0 && (l = s);
      l > s && (l = s), o += a, l += a;
    }
    for (o++; o < l; ) {
      var f = o + (l - o >>> 1);
      i(r, e[t + f]) < 0 ? l = f : o = f + 1;
    }
    return l;
  }
  function $E(r, e) {
    var t = Qs, n, a, i = 0;
    r.length;
    var o = [];
    n = [], a = [];
    function s(v, d) {
      n[i] = v, a[i] = d, i += 1;
    }
    function l() {
      for (; i > 1; ) {
        var v = i - 2;
        if (v >= 1 && a[v - 1] <= a[v] + a[v + 1] || v >= 2 && a[v - 2] <= a[v] + a[v - 1])
          a[v - 1] < a[v + 1] && v--;
        else if (a[v] > a[v + 1])
          break;
        f(v);
      }
    }
    function u() {
      for (; i > 1; ) {
        var v = i - 2;
        v > 0 && a[v - 1] < a[v + 1] && v--, f(v);
      }
    }
    function f(v) {
      var d = n[v], p = a[v], g = n[v + 1], y = a[v + 1];
      a[v] = p + y, v === i - 3 && (n[v + 1] = n[v + 2], a[v + 1] = a[v + 2]), i--;
      var m = td(r[g], r, d, p, 0, e);
      d += m, p -= m, p !== 0 && (y = Qv(r[d + p - 1], r, g, y, y - 1, e), y !== 0 && (p <= y ? h(d, p, g, y) : c(d, p, g, y)));
    }
    function h(v, d, p, g) {
      var y = 0;
      for (y = 0; y < d; y++)
        o[y] = r[v + y];
      var m = 0, _ = p, S = v;
      if (r[S++] = r[_++], --g === 0) {
        for (y = 0; y < d; y++)
          r[S + y] = o[m + y];
        return;
      }
      if (d === 1) {
        for (y = 0; y < g; y++)
          r[S + y] = r[_ + y];
        r[S + g] = o[m];
        return;
      }
      for (var b = t, w, T, C; ; ) {
        w = 0, T = 0, C = !1;
        do
          if (e(r[_], o[m]) < 0) {
            if (r[S++] = r[_++], T++, w = 0, --g === 0) {
              C = !0;
              break;
            }
          } else if (r[S++] = o[m++], w++, T = 0, --d === 1) {
            C = !0;
            break;
          }
        while ((w | T) < b);
        if (C)
          break;
        do {
          if (w = td(r[_], o, m, d, 0, e), w !== 0) {
            for (y = 0; y < w; y++)
              r[S + y] = o[m + y];
            if (S += w, m += w, d -= w, d <= 1) {
              C = !0;
              break;
            }
          }
          if (r[S++] = r[_++], --g === 0) {
            C = !0;
            break;
          }
          if (T = Qv(o[m], r, _, g, 0, e), T !== 0) {
            for (y = 0; y < T; y++)
              r[S + y] = r[_ + y];
            if (S += T, _ += T, g -= T, g === 0) {
              C = !0;
              break;
            }
          }
          if (r[S++] = o[m++], --d === 1) {
            C = !0;
            break;
          }
          b--;
        } while (w >= Qs || T >= Qs);
        if (C)
          break;
        b < 0 && (b = 0), b += 2;
      }
      if (t = b, t < 1 && (t = 1), d === 1) {
        for (y = 0; y < g; y++)
          r[S + y] = r[_ + y];
        r[S + g] = o[m];
      } else {
        if (d === 0)
          throw new Error();
        for (y = 0; y < d; y++)
          r[S + y] = o[m + y];
      }
    }
    function c(v, d, p, g) {
      var y = 0;
      for (y = 0; y < g; y++)
        o[y] = r[p + y];
      var m = v + d - 1, _ = g - 1, S = p + g - 1, b = 0, w = 0;
      if (r[S--] = r[m--], --d === 0) {
        for (b = S - (g - 1), y = 0; y < g; y++)
          r[b + y] = o[y];
        return;
      }
      if (g === 1) {
        for (S -= d, m -= d, w = S + 1, b = m + 1, y = d - 1; y >= 0; y--)
          r[w + y] = r[b + y];
        r[S] = o[_];
        return;
      }
      for (var T = t; ; ) {
        var C = 0, I = 0, L = !1;
        do
          if (e(o[_], r[m]) < 0) {
            if (r[S--] = r[m--], C++, I = 0, --d === 0) {
              L = !0;
              break;
            }
          } else if (r[S--] = o[_--], I++, C = 0, --g === 1) {
            L = !0;
            break;
          }
        while ((C | I) < T);
        if (L)
          break;
        do {
          if (C = d - td(o[_], r, v, d, d - 1, e), C !== 0) {
            for (S -= C, m -= C, d -= C, w = S + 1, b = m + 1, y = C - 1; y >= 0; y--)
              r[w + y] = r[b + y];
            if (d === 0) {
              L = !0;
              break;
            }
          }
          if (r[S--] = o[_--], --g === 1) {
            L = !0;
            break;
          }
          if (I = g - Qv(r[m], o, 0, g, g - 1, e), I !== 0) {
            for (S -= I, _ -= I, g -= I, w = S + 1, b = _ + 1, y = 0; y < I; y++)
              r[w + y] = o[b + y];
            if (g <= 1) {
              L = !0;
              break;
            }
          }
          if (r[S--] = r[m--], --d === 0) {
            L = !0;
            break;
          }
          T--;
        } while (C >= Qs || I >= Qs);
        if (L)
          break;
        T < 0 && (T = 0), T += 2;
      }
      if (t = T, t < 1 && (t = 1), g === 1) {
        for (S -= d, m -= d, w = S + 1, b = m + 1, y = d - 1; y >= 0; y--)
          r[w + y] = r[b + y];
        r[S] = o[_];
      } else {
        if (g === 0)
          throw new Error();
        for (b = S - (g - 1), y = 0; y < g; y++)
          r[b + y] = o[y];
      }
    }
    return {
      mergeRuns: l,
      forceMergeRuns: u,
      pushRun: s
    };
  }
  function gf(r, e, t, n) {
    t || (t = 0), n || (n = r.length);
    var a = n - t;
    if (!(a < 2)) {
      var i = 0;
      if (a < n1) {
        i = a1(r, t, n, e), i1(r, t, n, t + i, e);
        return;
      }
      var o = $E(r, e), s = UE(a);
      do {
        if (i = a1(r, t, n, e), i < s) {
          var l = a;
          l > s && (l = s), i1(r, t, t + l, t + i, e), i = l;
        }
        o.pushRun(t, i), o.mergeRuns(), a -= i, t += i;
      } while (a !== 0);
      o.forceMergeRuns();
    }
  }
  var pr = 1, tl = 2, To = 4, o1 = !1;
  function ed() {
    o1 || (o1 = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
  }
  function s1(r, e) {
    return r.zlevel === e.zlevel ? r.z === e.z ? r.z2 - e.z2 : r.z - e.z : r.zlevel - e.zlevel;
  }
  var XE = function() {
    function r() {
      this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = s1;
    }
    return r.prototype.traverse = function(e, t) {
      for (var n = 0; n < this._roots.length; n++)
        this._roots[n].traverse(e, t);
    }, r.prototype.getDisplayList = function(e, t) {
      t = t || !1;
      var n = this._displayList;
      return (e || !n.length) && this.updateDisplayList(t), n;
    }, r.prototype.updateDisplayList = function(e) {
      this._displayListLen = 0;
      for (var t = this._roots, n = this._displayList, a = 0, i = t.length; a < i; a++)
        this._updateAndAddDisplayable(t[a], null, e);
      n.length = this._displayListLen, gf(n, s1);
    }, r.prototype._updateAndAddDisplayable = function(e, t, n) {
      if (!(e.ignore && !n)) {
        e.beforeUpdate(), e.update(), e.afterUpdate();
        var a = e.getClipPath();
        if (e.ignoreClip)
          t = null;
        else if (a) {
          t ? t = t.slice() : t = [];
          for (var i = a, o = e; i; )
            i.parent = o, i.updateTransform(), t.push(i), o = i, i = i.getClipPath();
        }
        if (e.childrenRef) {
          for (var s = e.childrenRef(), l = 0; l < s.length; l++) {
            var u = s[l];
            e.__dirty && (u.__dirty |= pr), this._updateAndAddDisplayable(u, t, n);
          }
          e.__dirty = 0;
        } else {
          var f = e;
          t && t.length ? f.__clipPaths = t : f.__clipPaths && f.__clipPaths.length > 0 && (f.__clipPaths = []), isNaN(f.z) && (ed(), f.z = 0), isNaN(f.z2) && (ed(), f.z2 = 0), isNaN(f.zlevel) && (ed(), f.zlevel = 0), this._displayList[this._displayListLen++] = f;
        }
        var h = e.getDecalElement && e.getDecalElement();
        h && this._updateAndAddDisplayable(h, t, n);
        var c = e.getTextGuideLine();
        c && this._updateAndAddDisplayable(c, t, n);
        var v = e.getTextContent();
        v && this._updateAndAddDisplayable(v, t, n);
      }
    }, r.prototype.addRoot = function(e) {
      e.__zr && e.__zr.storage === this || this._roots.push(e);
    }, r.prototype.delRoot = function(e) {
      if (e instanceof Array) {
        for (var t = 0, n = e.length; t < n; t++)
          this.delRoot(e[t]);
        return;
      }
      var a = bt(this._roots, e);
      a >= 0 && this._roots.splice(a, 1);
    }, r.prototype.delAllRoots = function() {
      this._roots = [], this._displayList = [], this._displayListLen = 0;
    }, r.prototype.getRoots = function() {
      return this._roots;
    }, r.prototype.dispose = function() {
      this._displayList = null, this._roots = null;
    }, r;
  }(), l1;
  l1 = z.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(r) {
    return setTimeout(r, 16);
  };
  var rd = l1, el = {
    linear: function(r) {
      return r;
    },
    quadraticIn: function(r) {
      return r * r;
    },
    quadraticOut: function(r) {
      return r * (2 - r);
    },
    quadraticInOut: function(r) {
      return (r *= 2) < 1 ? 0.5 * r * r : -0.5 * (--r * (r - 2) - 1);
    },
    cubicIn: function(r) {
      return r * r * r;
    },
    cubicOut: function(r) {
      return --r * r * r + 1;
    },
    cubicInOut: function(r) {
      return (r *= 2) < 1 ? 0.5 * r * r * r : 0.5 * ((r -= 2) * r * r + 2);
    },
    quarticIn: function(r) {
      return r * r * r * r;
    },
    quarticOut: function(r) {
      return 1 - --r * r * r * r;
    },
    quarticInOut: function(r) {
      return (r *= 2) < 1 ? 0.5 * r * r * r * r : -0.5 * ((r -= 2) * r * r * r - 2);
    },
    quinticIn: function(r) {
      return r * r * r * r * r;
    },
    quinticOut: function(r) {
      return --r * r * r * r * r + 1;
    },
    quinticInOut: function(r) {
      return (r *= 2) < 1 ? 0.5 * r * r * r * r * r : 0.5 * ((r -= 2) * r * r * r * r + 2);
    },
    sinusoidalIn: function(r) {
      return 1 - Math.cos(r * Math.PI / 2);
    },
    sinusoidalOut: function(r) {
      return Math.sin(r * Math.PI / 2);
    },
    sinusoidalInOut: function(r) {
      return 0.5 * (1 - Math.cos(Math.PI * r));
    },
    exponentialIn: function(r) {
      return r === 0 ? 0 : Math.pow(1024, r - 1);
    },
    exponentialOut: function(r) {
      return r === 1 ? 1 : 1 - Math.pow(2, -10 * r);
    },
    exponentialInOut: function(r) {
      return r === 0 ? 0 : r === 1 ? 1 : (r *= 2) < 1 ? 0.5 * Math.pow(1024, r - 1) : 0.5 * (-Math.pow(2, -10 * (r - 1)) + 2);
    },
    circularIn: function(r) {
      return 1 - Math.sqrt(1 - r * r);
    },
    circularOut: function(r) {
      return Math.sqrt(1 - --r * r);
    },
    circularInOut: function(r) {
      return (r *= 2) < 1 ? -0.5 * (Math.sqrt(1 - r * r) - 1) : 0.5 * (Math.sqrt(1 - (r -= 2) * r) + 1);
    },
    elasticIn: function(r) {
      var e, t = 0.1, n = 0.4;
      return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = n / 4) : e = n * Math.asin(1 / t) / (2 * Math.PI), -(t * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / n)));
    },
    elasticOut: function(r) {
      var e, t = 0.1, n = 0.4;
      return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = n / 4) : e = n * Math.asin(1 / t) / (2 * Math.PI), t * Math.pow(2, -10 * r) * Math.sin((r - e) * (2 * Math.PI) / n) + 1);
    },
    elasticInOut: function(r) {
      var e, t = 0.1, n = 0.4;
      return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = n / 4) : e = n * Math.asin(1 / t) / (2 * Math.PI), (r *= 2) < 1 ? -0.5 * (t * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / n)) : t * Math.pow(2, -10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / n) * 0.5 + 1);
    },
    backIn: function(r) {
      var e = 1.70158;
      return r * r * ((e + 1) * r - e);
    },
    backOut: function(r) {
      var e = 1.70158;
      return --r * r * ((e + 1) * r + e) + 1;
    },
    backInOut: function(r) {
      var e = 2.5949095;
      return (r *= 2) < 1 ? 0.5 * (r * r * ((e + 1) * r - e)) : 0.5 * ((r -= 2) * r * ((e + 1) * r + e) + 2);
    },
    bounceIn: function(r) {
      return 1 - el.bounceOut(1 - r);
    },
    bounceOut: function(r) {
      return r < 1 / 2.75 ? 7.5625 * r * r : r < 2 / 2.75 ? 7.5625 * (r -= 1.5 / 2.75) * r + 0.75 : r < 2.5 / 2.75 ? 7.5625 * (r -= 2.25 / 2.75) * r + 0.9375 : 7.5625 * (r -= 2.625 / 2.75) * r + 0.984375;
    },
    bounceInOut: function(r) {
      return r < 0.5 ? el.bounceIn(r * 2) * 0.5 : el.bounceOut(r * 2 - 1) * 0.5 + 0.5;
    }
  }, yf = Math.pow, ya = Math.sqrt, mf = 1e-8, u1 = 1e-4, f1 = ya(3), _f = 1 / 3, _n = va(), Pr = va(), Co = va();
  function ma(r) {
    return r > -mf && r < mf;
  }
  function h1(r) {
    return r > mf || r < -mf;
  }
  function be(r, e, t, n, a) {
    var i = 1 - a;
    return i * i * (i * r + 3 * a * e) + a * a * (a * n + 3 * i * t);
  }
  function c1(r, e, t, n, a) {
    var i = 1 - a;
    return 3 * (((e - r) * i + 2 * (t - e) * a) * i + (n - t) * a * a);
  }
  function Sf(r, e, t, n, a, i) {
    var o = n + 3 * (e - t) - r, s = 3 * (t - e * 2 + r), l = 3 * (e - r), u = r - a, f = s * s - 3 * o * l, h = s * l - 9 * o * u, c = l * l - 3 * s * u, v = 0;
    if (ma(f) && ma(h))
      if (ma(s))
        i[0] = 0;
      else {
        var d = -l / s;
        d >= 0 && d <= 1 && (i[v++] = d);
      }
    else {
      var p = h * h - 4 * f * c;
      if (ma(p)) {
        var g = h / f, d = -s / o + g, y = -g / 2;
        d >= 0 && d <= 1 && (i[v++] = d), y >= 0 && y <= 1 && (i[v++] = y);
      } else if (p > 0) {
        var m = ya(p), _ = f * s + 1.5 * o * (-h + m), S = f * s + 1.5 * o * (-h - m);
        _ < 0 ? _ = -yf(-_, _f) : _ = yf(_, _f), S < 0 ? S = -yf(-S, _f) : S = yf(S, _f);
        var d = (-s - (_ + S)) / (3 * o);
        d >= 0 && d <= 1 && (i[v++] = d);
      } else {
        var b = (2 * f * s - 3 * o * h) / (2 * ya(f * f * f)), w = Math.acos(b) / 3, T = ya(f), C = Math.cos(w), d = (-s - 2 * T * C) / (3 * o), y = (-s + T * (C + f1 * Math.sin(w))) / (3 * o), I = (-s + T * (C - f1 * Math.sin(w))) / (3 * o);
        d >= 0 && d <= 1 && (i[v++] = d), y >= 0 && y <= 1 && (i[v++] = y), I >= 0 && I <= 1 && (i[v++] = I);
      }
    }
    return v;
  }
  function v1(r, e, t, n, a) {
    var i = 6 * t - 12 * e + 6 * r, o = 9 * e + 3 * n - 3 * r - 9 * t, s = 3 * e - 3 * r, l = 0;
    if (ma(o)) {
      if (h1(i)) {
        var u = -s / i;
        u >= 0 && u <= 1 && (a[l++] = u);
      }
    } else {
      var f = i * i - 4 * o * s;
      if (ma(f))
        a[0] = -i / (2 * o);
      else if (f > 0) {
        var h = ya(f), u = (-i + h) / (2 * o), c = (-i - h) / (2 * o);
        u >= 0 && u <= 1 && (a[l++] = u), c >= 0 && c <= 1 && (a[l++] = c);
      }
    }
    return l;
  }
  function _a(r, e, t, n, a, i) {
    var o = (e - r) * a + r, s = (t - e) * a + e, l = (n - t) * a + t, u = (s - o) * a + o, f = (l - s) * a + s, h = (f - u) * a + u;
    i[0] = r, i[1] = o, i[2] = u, i[3] = h, i[4] = h, i[5] = f, i[6] = l, i[7] = n;
  }
  function d1(r, e, t, n, a, i, o, s, l, u, f) {
    var h, c = 5e-3, v = 1 / 0, d, p, g, y;
    _n[0] = l, _n[1] = u;
    for (var m = 0; m < 1; m += 0.05)
      Pr[0] = be(r, t, a, o, m), Pr[1] = be(e, n, i, s, m), g = pa(_n, Pr), g < v && (h = m, v = g);
    v = 1 / 0;
    for (var _ = 0; _ < 32 && !(c < u1); _++)
      d = h - c, p = h + c, Pr[0] = be(r, t, a, o, d), Pr[1] = be(e, n, i, s, d), g = pa(Pr, _n), d >= 0 && g < v ? (h = d, v = g) : (Co[0] = be(r, t, a, o, p), Co[1] = be(e, n, i, s, p), y = pa(Co, _n), p <= 1 && y < v ? (h = p, v = y) : c *= 0.5);
    return f && (f[0] = be(r, t, a, o, h), f[1] = be(e, n, i, s, h)), ya(v);
  }
  function ZE(r, e, t, n, a, i, o, s, l) {
    for (var u = r, f = e, h = 0, c = 1 / l, v = 1; v <= l; v++) {
      var d = v * c, p = be(r, t, a, o, d), g = be(e, n, i, s, d), y = p - u, m = g - f;
      h += Math.sqrt(y * y + m * m), u = p, f = g;
    }
    return h;
  }
  function Le(r, e, t, n) {
    var a = 1 - n;
    return a * (a * r + 2 * n * e) + n * n * t;
  }
  function nd(r, e, t, n) {
    return 2 * ((1 - n) * (e - r) + n * (t - e));
  }
  function qE(r, e, t, n, a) {
    var i = r - 2 * e + t, o = 2 * (e - r), s = r - n, l = 0;
    if (ma(i)) {
      if (h1(o)) {
        var u = -s / o;
        u >= 0 && u <= 1 && (a[l++] = u);
      }
    } else {
      var f = o * o - 4 * i * s;
      if (ma(f)) {
        var u = -o / (2 * i);
        u >= 0 && u <= 1 && (a[l++] = u);
      } else if (f > 0) {
        var h = ya(f), u = (-o + h) / (2 * i), c = (-o - h) / (2 * i);
        u >= 0 && u <= 1 && (a[l++] = u), c >= 0 && c <= 1 && (a[l++] = c);
      }
    }
    return l;
  }
  function p1(r, e, t) {
    var n = r + t - 2 * e;
    return n === 0 ? 0.5 : (r - e) / n;
  }
  function rl(r, e, t, n, a) {
    var i = (e - r) * n + r, o = (t - e) * n + e, s = (o - i) * n + i;
    a[0] = r, a[1] = i, a[2] = s, a[3] = s, a[4] = o, a[5] = t;
  }
  function g1(r, e, t, n, a, i, o, s, l) {
    var u, f = 5e-3, h = 1 / 0;
    _n[0] = o, _n[1] = s;
    for (var c = 0; c < 1; c += 0.05) {
      Pr[0] = Le(r, t, a, c), Pr[1] = Le(e, n, i, c);
      var v = pa(_n, Pr);
      v < h && (u = c, h = v);
    }
    h = 1 / 0;
    for (var d = 0; d < 32 && !(f < u1); d++) {
      var p = u - f, g = u + f;
      Pr[0] = Le(r, t, a, p), Pr[1] = Le(e, n, i, p);
      var v = pa(Pr, _n);
      if (p >= 0 && v < h)
        u = p, h = v;
      else {
        Co[0] = Le(r, t, a, g), Co[1] = Le(e, n, i, g);
        var y = pa(Co, _n);
        g <= 1 && y < h ? (u = g, h = y) : f *= 0.5;
      }
    }
    return l && (l[0] = Le(r, t, a, u), l[1] = Le(e, n, i, u)), ya(h);
  }
  function KE(r, e, t, n, a, i, o) {
    for (var s = r, l = e, u = 0, f = 1 / o, h = 1; h <= o; h++) {
      var c = h * f, v = Le(r, t, a, c), d = Le(e, n, i, c), p = v - s, g = d - l;
      u += Math.sqrt(p * p + g * g), s = v, l = d;
    }
    return u;
  }
  var jE = /cubic-bezier\(([0-9,\.e ]+)\)/;
  function ad(r) {
    var e = r && jE.exec(r);
    if (e) {
      var t = e[1].split(","), n = +Mr(t[0]), a = +Mr(t[1]), i = +Mr(t[2]), o = +Mr(t[3]);
      if (isNaN(n + a + i + o))
        return;
      var s = [];
      return function(l) {
        return l <= 0 ? 0 : l >= 1 ? 1 : Sf(0, n, i, 1, l, s) && be(0, a, o, 1, s[0]);
      };
    }
  }
  var JE = function() {
    function r(e) {
      this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = e.life || 1e3, this._delay = e.delay || 0, this.loop = e.loop || !1, this.onframe = e.onframe || ue, this.ondestroy = e.ondestroy || ue, this.onrestart = e.onrestart || ue, e.easing && this.setEasing(e.easing);
    }
    return r.prototype.step = function(e, t) {
      if (this._inited || (this._startTime = e + this._delay, this._inited = !0), this._paused) {
        this._pausedTime += t;
        return;
      }
      var n = this._life, a = e - this._startTime - this._pausedTime, i = a / n;
      i < 0 && (i = 0), i = Math.min(i, 1);
      var o = this.easingFunc, s = o ? o(i) : i;
      if (this.onframe(s), i === 1)
        if (this.loop) {
          var l = a % n;
          this._startTime = e - l, this._pausedTime = 0, this.onrestart();
        } else
          return !0;
      return !1;
    }, r.prototype.pause = function() {
      this._paused = !0;
    }, r.prototype.resume = function() {
      this._paused = !1;
    }, r.prototype.setEasing = function(e) {
      this.easing = e, this.easingFunc = rt(e) ? e : el[e] || ad(e);
    }, r;
  }(), y1 = function() {
    function r(e) {
      this.value = e;
    }
    return r;
  }(), QE = function() {
    function r() {
      this._len = 0;
    }
    return r.prototype.insert = function(e) {
      var t = new y1(e);
      return this.insertEntry(t), t;
    }, r.prototype.insertEntry = function(e) {
      this.head ? (this.tail.next = e, e.prev = this.tail, e.next = null, this.tail = e) : this.head = this.tail = e, this._len++;
    }, r.prototype.remove = function(e) {
      var t = e.prev, n = e.next;
      t ? t.next = n : this.head = n, n ? n.prev = t : this.tail = t, e.next = e.prev = null, this._len--;
    }, r.prototype.len = function() {
      return this._len;
    }, r.prototype.clear = function() {
      this.head = this.tail = null, this._len = 0;
    }, r;
  }(), nl = function() {
    function r(e) {
      this._list = new QE(), this._maxSize = 10, this._map = {}, this._maxSize = e;
    }
    return r.prototype.put = function(e, t) {
      var n = this._list, a = this._map, i = null;
      if (a[e] == null) {
        var o = n.len(), s = this._lastRemovedEntry;
        if (o >= this._maxSize && o > 0) {
          var l = n.head;
          n.remove(l), delete a[l.key], i = l.value, this._lastRemovedEntry = l;
        }
        s ? s.value = t : s = new y1(t), s.key = e, n.insertEntry(s), a[e] = s;
      }
      return i;
    }, r.prototype.get = function(e) {
      var t = this._map[e], n = this._list;
      if (t != null)
        return t !== n.tail && (n.remove(t), n.insertEntry(t)), t.value;
    }, r.prototype.clear = function() {
      this._list.clear(), this._map = {};
    }, r.prototype.len = function() {
      return this._list.len();
    }, r;
  }(), m1 = {
    transparent: [0, 0, 0, 0],
    aliceblue: [240, 248, 255, 1],
    antiquewhite: [250, 235, 215, 1],
    aqua: [0, 255, 255, 1],
    aquamarine: [127, 255, 212, 1],
    azure: [240, 255, 255, 1],
    beige: [245, 245, 220, 1],
    bisque: [255, 228, 196, 1],
    black: [0, 0, 0, 1],
    blanchedalmond: [255, 235, 205, 1],
    blue: [0, 0, 255, 1],
    blueviolet: [138, 43, 226, 1],
    brown: [165, 42, 42, 1],
    burlywood: [222, 184, 135, 1],
    cadetblue: [95, 158, 160, 1],
    chartreuse: [127, 255, 0, 1],
    chocolate: [210, 105, 30, 1],
    coral: [255, 127, 80, 1],
    cornflowerblue: [100, 149, 237, 1],
    cornsilk: [255, 248, 220, 1],
    crimson: [220, 20, 60, 1],
    cyan: [0, 255, 255, 1],
    darkblue: [0, 0, 139, 1],
    darkcyan: [0, 139, 139, 1],
    darkgoldenrod: [184, 134, 11, 1],
    darkgray: [169, 169, 169, 1],
    darkgreen: [0, 100, 0, 1],
    darkgrey: [169, 169, 169, 1],
    darkkhaki: [189, 183, 107, 1],
    darkmagenta: [139, 0, 139, 1],
    darkolivegreen: [85, 107, 47, 1],
    darkorange: [255, 140, 0, 1],
    darkorchid: [153, 50, 204, 1],
    darkred: [139, 0, 0, 1],
    darksalmon: [233, 150, 122, 1],
    darkseagreen: [143, 188, 143, 1],
    darkslateblue: [72, 61, 139, 1],
    darkslategray: [47, 79, 79, 1],
    darkslategrey: [47, 79, 79, 1],
    darkturquoise: [0, 206, 209, 1],
    darkviolet: [148, 0, 211, 1],
    deeppink: [255, 20, 147, 1],
    deepskyblue: [0, 191, 255, 1],
    dimgray: [105, 105, 105, 1],
    dimgrey: [105, 105, 105, 1],
    dodgerblue: [30, 144, 255, 1],
    firebrick: [178, 34, 34, 1],
    floralwhite: [255, 250, 240, 1],
    forestgreen: [34, 139, 34, 1],
    fuchsia: [255, 0, 255, 1],
    gainsboro: [220, 220, 220, 1],
    ghostwhite: [248, 248, 255, 1],
    gold: [255, 215, 0, 1],
    goldenrod: [218, 165, 32, 1],
    gray: [128, 128, 128, 1],
    green: [0, 128, 0, 1],
    greenyellow: [173, 255, 47, 1],
    grey: [128, 128, 128, 1],
    honeydew: [240, 255, 240, 1],
    hotpink: [255, 105, 180, 1],
    indianred: [205, 92, 92, 1],
    indigo: [75, 0, 130, 1],
    ivory: [255, 255, 240, 1],
    khaki: [240, 230, 140, 1],
    lavender: [230, 230, 250, 1],
    lavenderblush: [255, 240, 245, 1],
    lawngreen: [124, 252, 0, 1],
    lemonchiffon: [255, 250, 205, 1],
    lightblue: [173, 216, 230, 1],
    lightcoral: [240, 128, 128, 1],
    lightcyan: [224, 255, 255, 1],
    lightgoldenrodyellow: [250, 250, 210, 1],
    lightgray: [211, 211, 211, 1],
    lightgreen: [144, 238, 144, 1],
    lightgrey: [211, 211, 211, 1],
    lightpink: [255, 182, 193, 1],
    lightsalmon: [255, 160, 122, 1],
    lightseagreen: [32, 178, 170, 1],
    lightskyblue: [135, 206, 250, 1],
    lightslategray: [119, 136, 153, 1],
    lightslategrey: [119, 136, 153, 1],
    lightsteelblue: [176, 196, 222, 1],
    lightyellow: [255, 255, 224, 1],
    lime: [0, 255, 0, 1],
    limegreen: [50, 205, 50, 1],
    linen: [250, 240, 230, 1],
    magenta: [255, 0, 255, 1],
    maroon: [128, 0, 0, 1],
    mediumaquamarine: [102, 205, 170, 1],
    mediumblue: [0, 0, 205, 1],
    mediumorchid: [186, 85, 211, 1],
    mediumpurple: [147, 112, 219, 1],
    mediumseagreen: [60, 179, 113, 1],
    mediumslateblue: [123, 104, 238, 1],
    mediumspringgreen: [0, 250, 154, 1],
    mediumturquoise: [72, 209, 204, 1],
    mediumvioletred: [199, 21, 133, 1],
    midnightblue: [25, 25, 112, 1],
    mintcream: [245, 255, 250, 1],
    mistyrose: [255, 228, 225, 1],
    moccasin: [255, 228, 181, 1],
    navajowhite: [255, 222, 173, 1],
    navy: [0, 0, 128, 1],
    oldlace: [253, 245, 230, 1],
    olive: [128, 128, 0, 1],
    olivedrab: [107, 142, 35, 1],
    orange: [255, 165, 0, 1],
    orangered: [255, 69, 0, 1],
    orchid: [218, 112, 214, 1],
    palegoldenrod: [238, 232, 170, 1],
    palegreen: [152, 251, 152, 1],
    paleturquoise: [175, 238, 238, 1],
    palevioletred: [219, 112, 147, 1],
    papayawhip: [255, 239, 213, 1],
    peachpuff: [255, 218, 185, 1],
    peru: [205, 133, 63, 1],
    pink: [255, 192, 203, 1],
    plum: [221, 160, 221, 1],
    powderblue: [176, 224, 230, 1],
    purple: [128, 0, 128, 1],
    red: [255, 0, 0, 1],
    rosybrown: [188, 143, 143, 1],
    royalblue: [65, 105, 225, 1],
    saddlebrown: [139, 69, 19, 1],
    salmon: [250, 128, 114, 1],
    sandybrown: [244, 164, 96, 1],
    seagreen: [46, 139, 87, 1],
    seashell: [255, 245, 238, 1],
    sienna: [160, 82, 45, 1],
    silver: [192, 192, 192, 1],
    skyblue: [135, 206, 235, 1],
    slateblue: [106, 90, 205, 1],
    slategray: [112, 128, 144, 1],
    slategrey: [112, 128, 144, 1],
    snow: [255, 250, 250, 1],
    springgreen: [0, 255, 127, 1],
    steelblue: [70, 130, 180, 1],
    tan: [210, 180, 140, 1],
    teal: [0, 128, 128, 1],
    thistle: [216, 191, 216, 1],
    tomato: [255, 99, 71, 1],
    turquoise: [64, 224, 208, 1],
    violet: [238, 130, 238, 1],
    wheat: [245, 222, 179, 1],
    white: [255, 255, 255, 1],
    whitesmoke: [245, 245, 245, 1],
    yellow: [255, 255, 0, 1],
    yellowgreen: [154, 205, 50, 1]
  };
  function Jr(r) {
    return r = Math.round(r), r < 0 ? 0 : r > 255 ? 255 : r;
  }
  function tR(r) {
    return r = Math.round(r), r < 0 ? 0 : r > 360 ? 360 : r;
  }
  function al(r) {
    return r < 0 ? 0 : r > 1 ? 1 : r;
  }
  function id(r) {
    var e = r;
    return e.length && e.charAt(e.length - 1) === "%" ? Jr(parseFloat(e) / 100 * 255) : Jr(parseInt(e, 10));
  }
  function ci(r) {
    var e = r;
    return e.length && e.charAt(e.length - 1) === "%" ? al(parseFloat(e) / 100) : al(parseFloat(e));
  }
  function od(r, e, t) {
    return t < 0 ? t += 1 : t > 1 && (t -= 1), t * 6 < 1 ? r + (e - r) * t * 6 : t * 2 < 1 ? e : t * 3 < 2 ? r + (e - r) * (2 / 3 - t) * 6 : r;
  }
  function Sa(r, e, t) {
    return r + (e - r) * t;
  }
  function Er(r, e, t, n, a) {
    return r[0] = e, r[1] = t, r[2] = n, r[3] = a, r;
  }
  function sd(r, e) {
    return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r;
  }
  var _1 = new nl(20), xf = null;
  function Ao(r, e) {
    xf && sd(xf, e), xf = _1.put(r, xf || e.slice());
  }
  function qe(r, e) {
    if (r) {
      e = e || [];
      var t = _1.get(r);
      if (t)
        return sd(e, t);
      r = r + "";
      var n = r.replace(/ /g, "").toLowerCase();
      if (n in m1)
        return sd(e, m1[n]), Ao(r, e), e;
      var a = n.length;
      if (n.charAt(0) === "#") {
        if (a === 4 || a === 5) {
          var i = parseInt(n.slice(1, 4), 16);
          if (!(i >= 0 && i <= 4095)) {
            Er(e, 0, 0, 0, 1);
            return;
          }
          return Er(e, (i & 3840) >> 4 | (i & 3840) >> 8, i & 240 | (i & 240) >> 4, i & 15 | (i & 15) << 4, a === 5 ? parseInt(n.slice(4), 16) / 15 : 1), Ao(r, e), e;
        } else if (a === 7 || a === 9) {
          var i = parseInt(n.slice(1, 7), 16);
          if (!(i >= 0 && i <= 16777215)) {
            Er(e, 0, 0, 0, 1);
            return;
          }
          return Er(e, (i & 16711680) >> 16, (i & 65280) >> 8, i & 255, a === 9 ? parseInt(n.slice(7), 16) / 255 : 1), Ao(r, e), e;
        }
        return;
      }
      var o = n.indexOf("("), s = n.indexOf(")");
      if (o !== -1 && s + 1 === a) {
        var l = n.substr(0, o), u = n.substr(o + 1, s - (o + 1)).split(","), f = 1;
        switch (l) {
          case "rgba":
            if (u.length !== 4)
              return u.length === 3 ? Er(e, +u[0], +u[1], +u[2], 1) : Er(e, 0, 0, 0, 1);
            f = ci(u.pop());
          case "rgb":
            if (u.length >= 3)
              return Er(e, id(u[0]), id(u[1]), id(u[2]), u.length === 3 ? f : ci(u[3])), Ao(r, e), e;
            Er(e, 0, 0, 0, 1);
            return;
          case "hsla":
            if (u.length !== 4) {
              Er(e, 0, 0, 0, 1);
              return;
            }
            return u[3] = ci(u[3]), ld(u, e), Ao(r, e), e;
          case "hsl":
            if (u.length !== 3) {
              Er(e, 0, 0, 0, 1);
              return;
            }
            return ld(u, e), Ao(r, e), e;
          default:
            return;
        }
      }
      Er(e, 0, 0, 0, 1);
    }
  }
  function ld(r, e) {
    var t = (parseFloat(r[0]) % 360 + 360) % 360 / 360, n = ci(r[1]), a = ci(r[2]), i = a <= 0.5 ? a * (n + 1) : a + n - a * n, o = a * 2 - i;
    return e = e || [], Er(e, Jr(od(o, i, t + 1 / 3) * 255), Jr(od(o, i, t) * 255), Jr(od(o, i, t - 1 / 3) * 255), 1), r.length === 4 && (e[3] = r[3]), e;
  }
  function eR(r) {
    if (r) {
      var e = r[0] / 255, t = r[1] / 255, n = r[2] / 255, a = Math.min(e, t, n), i = Math.max(e, t, n), o = i - a, s = (i + a) / 2, l, u;
      if (o === 0)
        l = 0, u = 0;
      else {
        s < 0.5 ? u = o / (i + a) : u = o / (2 - i - a);
        var f = ((i - e) / 6 + o / 2) / o, h = ((i - t) / 6 + o / 2) / o, c = ((i - n) / 6 + o / 2) / o;
        e === i ? l = c - h : t === i ? l = 1 / 3 + f - c : n === i && (l = 2 / 3 + h - f), l < 0 && (l += 1), l > 1 && (l -= 1);
      }
      var v = [l * 360, u, s];
      return r[3] != null && v.push(r[3]), v;
    }
  }
  function wf(r, e) {
    var t = qe(r);
    if (t) {
      for (var n = 0; n < 3; n++)
        e < 0 ? t[n] = t[n] * (1 - e) | 0 : t[n] = (255 - t[n]) * e + t[n] | 0, t[n] > 255 ? t[n] = 255 : t[n] < 0 && (t[n] = 0);
      return Qr(t, t.length === 4 ? "rgba" : "rgb");
    }
  }
  function rR(r) {
    var e = qe(r);
    if (e)
      return ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2]).toString(16).slice(1);
  }
  function il(r, e, t) {
    if (!(!(e && e.length) || !(r >= 0 && r <= 1))) {
      t = t || [];
      var n = r * (e.length - 1), a = Math.floor(n), i = Math.ceil(n), o = e[a], s = e[i], l = n - a;
      return t[0] = Jr(Sa(o[0], s[0], l)), t[1] = Jr(Sa(o[1], s[1], l)), t[2] = Jr(Sa(o[2], s[2], l)), t[3] = al(Sa(o[3], s[3], l)), t;
    }
  }
  var nR = il;
  function ud(r, e, t) {
    if (!(!(e && e.length) || !(r >= 0 && r <= 1))) {
      var n = r * (e.length - 1), a = Math.floor(n), i = Math.ceil(n), o = qe(e[a]), s = qe(e[i]), l = n - a, u = Qr([
        Jr(Sa(o[0], s[0], l)),
        Jr(Sa(o[1], s[1], l)),
        Jr(Sa(o[2], s[2], l)),
        al(Sa(o[3], s[3], l))
      ], "rgba");
      return t ? {
        color: u,
        leftIndex: a,
        rightIndex: i,
        value: n
      } : u;
    }
  }
  var aR = ud;
  function Do(r, e, t, n) {
    var a = qe(r);
    if (r)
      return a = eR(a), e != null && (a[0] = tR(e)), t != null && (a[1] = ci(t)), n != null && (a[2] = ci(n)), Qr(ld(a), "rgba");
  }
  function ol(r, e) {
    var t = qe(r);
    if (t && e != null)
      return t[3] = al(e), Qr(t, "rgba");
  }
  function Qr(r, e) {
    if (!(!r || !r.length)) {
      var t = r[0] + "," + r[1] + "," + r[2];
      return (e === "rgba" || e === "hsva" || e === "hsla") && (t += "," + r[3]), e + "(" + t + ")";
    }
  }
  function sl(r, e) {
    var t = qe(r);
    return t ? (0.299 * t[0] + 0.587 * t[1] + 0.114 * t[2]) * t[3] / 255 + (1 - t[3]) * e : 0;
  }
  function iR() {
    return Qr([
      Math.round(Math.random() * 255),
      Math.round(Math.random() * 255),
      Math.round(Math.random() * 255)
    ], "rgb");
  }
  var oR = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    parse: qe,
    lift: wf,
    toHex: rR,
    fastLerp: il,
    fastMapToColor: nR,
    lerp: ud,
    mapToColor: aR,
    modifyHSL: Do,
    modifyAlpha: ol,
    stringify: Qr,
    lum: sl,
    random: iR
  }), bf = Math.round;
  function ll(r) {
    var e;
    if (!r || r === "transparent")
      r = "none";
    else if (typeof r == "string" && r.indexOf("rgba") > -1) {
      var t = qe(r);
      t && (r = "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")", e = t[3]);
    }
    return {
      color: r,
      opacity: e ?? 1
    };
  }
  var S1 = 1e-4;
  function xa(r) {
    return r < S1 && r > -S1;
  }
  function Tf(r) {
    return bf(r * 1e3) / 1e3;
  }
  function fd(r) {
    return bf(r * 1e4) / 1e4;
  }
  function sR(r) {
    return "matrix(" + Tf(r[0]) + "," + Tf(r[1]) + "," + Tf(r[2]) + "," + Tf(r[3]) + "," + fd(r[4]) + "," + fd(r[5]) + ")";
  }
  var lR = {
    left: "start",
    right: "end",
    center: "middle",
    middle: "middle"
  };
  function uR(r, e, t) {
    return t === "top" ? r += e / 2 : t === "bottom" && (r -= e / 2), r;
  }
  function fR(r) {
    return r && (r.shadowBlur || r.shadowOffsetX || r.shadowOffsetY);
  }
  function hR(r) {
    var e = r.style, t = r.getGlobalScale();
    return [
      e.shadowColor,
      (e.shadowBlur || 0).toFixed(2),
      (e.shadowOffsetX || 0).toFixed(2),
      (e.shadowOffsetY || 0).toFixed(2),
      t[0],
      t[1]
    ].join(",");
  }
  function x1(r) {
    return r && !!r.image;
  }
  function cR(r) {
    return r && !!r.svgElement;
  }
  function hd(r) {
    return x1(r) || cR(r);
  }
  function w1(r) {
    return r.type === "linear";
  }
  function b1(r) {
    return r.type === "radial";
  }
  function T1(r) {
    return r && (r.type === "linear" || r.type === "radial");
  }
  function Cf(r) {
    return "url(#" + r + ")";
  }
  function C1(r) {
    var e = r.getGlobalScale(), t = Math.max(e[0], e[1]);
    return Math.max(Math.ceil(Math.log(t) / Math.log(10)), 1);
  }
  function A1(r) {
    var e = r.x || 0, t = r.y || 0, n = (r.rotation || 0) * Ys, a = _t(r.scaleX, 1), i = _t(r.scaleY, 1), o = r.skewX || 0, s = r.skewY || 0, l = [];
    return (e || t) && l.push("translate(" + e + "px," + t + "px)"), n && l.push("rotate(" + n + ")"), (a !== 1 || i !== 1) && l.push("scale(" + a + "," + i + ")"), (o || s) && l.push("skew(" + bf(o * Ys) + "deg, " + bf(s * Ys) + "deg)"), l.join(" ");
  }
  var vR = function() {
    return z.hasGlobalWindow && rt(window.btoa) ? function(r) {
      return window.btoa(unescape(encodeURIComponent(r)));
    } : typeof Buffer < "u" ? function(r) {
      return Buffer.from(r).toString("base64");
    } : function(r) {
      return Cr("Base64 isn't natively supported in the current environment."), null;
    };
  }(), cd = Array.prototype.slice;
  function $n(r, e, t) {
    return (e - r) * t + r;
  }
  function vd(r, e, t, n) {
    for (var a = e.length, i = 0; i < a; i++)
      r[i] = $n(e[i], t[i], n);
    return r;
  }
  function dR(r, e, t, n) {
    for (var a = e.length, i = a && e[0].length, o = 0; o < a; o++) {
      r[o] || (r[o] = []);
      for (var s = 0; s < i; s++)
        r[o][s] = $n(e[o][s], t[o][s], n);
    }
    return r;
  }
  function Af(r, e, t, n) {
    for (var a = e.length, i = 0; i < a; i++)
      r[i] = e[i] + t[i] * n;
    return r;
  }
  function D1(r, e, t, n) {
    for (var a = e.length, i = a && e[0].length, o = 0; o < a; o++) {
      r[o] || (r[o] = []);
      for (var s = 0; s < i; s++)
        r[o][s] = e[o][s] + t[o][s] * n;
    }
    return r;
  }
  function pR(r, e) {
    for (var t = r.length, n = e.length, a = t > n ? e : r, i = Math.min(t, n), o = a[i - 1] || { color: [0, 0, 0, 0], offset: 0 }, s = i; s < Math.max(t, n); s++)
      a.push({
        offset: o.offset,
        color: o.color.slice()
      });
  }
  function gR(r, e, t) {
    var n = r, a = e;
    if (!(!n.push || !a.push)) {
      var i = n.length, o = a.length;
      if (i !== o) {
        var s = i > o;
        if (s)
          n.length = o;
        else
          for (var l = i; l < o; l++)
            n.push(t === 1 ? a[l] : cd.call(a[l]));
      }
      for (var u = n[0] && n[0].length, l = 0; l < n.length; l++)
        if (t === 1)
          isNaN(n[l]) && (n[l] = a[l]);
        else
          for (var f = 0; f < u; f++)
            isNaN(n[l][f]) && (n[l][f] = a[l][f]);
    }
  }
  function ul(r) {
    if (Pe(r)) {
      var e = r.length;
      if (Pe(r[0])) {
        for (var t = [], n = 0; n < e; n++)
          t.push(cd.call(r[n]));
        return t;
      }
      return cd.call(r);
    }
    return r;
  }
  function Df(r) {
    return r[0] = Math.floor(r[0]) || 0, r[1] = Math.floor(r[1]) || 0, r[2] = Math.floor(r[2]) || 0, r[3] = r[3] == null ? 1 : r[3], "rgba(" + r.join(",") + ")";
  }
  function yR(r) {
    return Pe(r && r[0]) ? 2 : 1;
  }
  var Mf = 0, If = 1, M1 = 2, fl = 3, dd = 4, pd = 5, I1 = 6;
  function L1(r) {
    return r === dd || r === pd;
  }
  function Lf(r) {
    return r === If || r === M1;
  }
  var hl = [0, 0, 0, 0], mR = function() {
    function r(e) {
      this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = e;
    }
    return r.prototype.isFinished = function() {
      return this._finished;
    }, r.prototype.setFinished = function() {
      this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished();
    }, r.prototype.needsAnimate = function() {
      return this.keyframes.length >= 1;
    }, r.prototype.getAdditiveTrack = function() {
      return this._additiveTrack;
    }, r.prototype.addKeyframe = function(e, t, n) {
      this._needsSort = !0;
      var a = this.keyframes, i = a.length, o = !1, s = I1, l = t;
      if (Pe(t)) {
        var u = yR(t);
        s = u, (u === 1 && !Ot(t[0]) || u === 2 && !Ot(t[0][0])) && (o = !0);
      } else if (Ot(t) && !ca(t))
        s = Mf;
      else if (j(t))
        if (!isNaN(+t))
          s = Mf;
        else {
          var f = qe(t);
          f && (l = f, s = fl);
        }
      else if (Fs(t)) {
        var h = H({}, l);
        h.colorStops = Y(t.colorStops, function(v) {
          return {
            offset: v.offset,
            color: qe(v.color)
          };
        }), w1(t) ? s = dd : b1(t) && (s = pd), l = h;
      }
      i === 0 ? this.valType = s : (s !== this.valType || s === I1) && (o = !0), this.discrete = this.discrete || o;
      var c = {
        time: e,
        value: l,
        rawValue: t,
        percent: 0
      };
      return n && (c.easing = n, c.easingFunc = rt(n) ? n : el[n] || ad(n)), a.push(c), c;
    }, r.prototype.prepare = function(e, t) {
      var n = this.keyframes;
      this._needsSort && n.sort(function(p, g) {
        return p.time - g.time;
      });
      for (var a = this.valType, i = n.length, o = n[i - 1], s = this.discrete, l = Lf(a), u = L1(a), f = 0; f < i; f++) {
        var h = n[f], c = h.value, v = o.value;
        h.percent = h.time / e, s || (l && f !== i - 1 ? gR(c, v, a) : u && pR(c.colorStops, v.colorStops));
      }
      if (!s && a !== pd && t && this.needsAnimate() && t.needsAnimate() && a === t.valType && !t._finished) {
        this._additiveTrack = t;
        for (var d = n[0].value, f = 0; f < i; f++)
          a === Mf ? n[f].additiveValue = n[f].value - d : a === fl ? n[f].additiveValue = Af([], n[f].value, d, -1) : Lf(a) && (n[f].additiveValue = a === If ? Af([], n[f].value, d, -1) : D1([], n[f].value, d, -1));
      }
    }, r.prototype.step = function(e, t) {
      if (!this._finished) {
        this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
        var n = this._additiveTrack != null, a = n ? "additiveValue" : "value", i = this.valType, o = this.keyframes, s = o.length, l = this.propName, u = i === fl, f, h = this._lastFr, c = Math.min, v, d;
        if (s === 1)
          v = d = o[0];
        else {
          if (t < 0)
            f = 0;
          else if (t < this._lastFrP) {
            var p = c(h + 1, s - 1);
            for (f = p; f >= 0 && !(o[f].percent <= t); f--)
              ;
            f = c(f, s - 2);
          } else {
            for (f = h; f < s && !(o[f].percent > t); f++)
              ;
            f = c(f - 1, s - 2);
          }
          d = o[f + 1], v = o[f];
        }
        if (v && d) {
          this._lastFr = f, this._lastFrP = t;
          var g = d.percent - v.percent, y = g === 0 ? 1 : c((t - v.percent) / g, 1);
          d.easingFunc && (y = d.easingFunc(y));
          var m = n ? this._additiveValue : u ? hl : e[l];
          if ((Lf(i) || u) && !m && (m = this._additiveValue = []), this.discrete)
            e[l] = y < 1 ? v.rawValue : d.rawValue;
          else if (Lf(i))
            i === If ? vd(m, v[a], d[a], y) : dR(m, v[a], d[a], y);
          else if (L1(i)) {
            var _ = v[a], S = d[a], b = i === dd;
            e[l] = {
              type: b ? "linear" : "radial",
              x: $n(_.x, S.x, y),
              y: $n(_.y, S.y, y),
              colorStops: Y(_.colorStops, function(T, C) {
                var I = S.colorStops[C];
                return {
                  offset: $n(T.offset, I.offset, y),
                  color: Df(vd([], T.color, I.color, y))
                };
              }),
              global: S.global
            }, b ? (e[l].x2 = $n(_.x2, S.x2, y), e[l].y2 = $n(_.y2, S.y2, y)) : e[l].r = $n(_.r, S.r, y);
          } else if (u)
            vd(m, v[a], d[a], y), n || (e[l] = Df(m));
          else {
            var w = $n(v[a], d[a], y);
            n ? this._additiveValue = w : e[l] = w;
          }
          n && this._addToTarget(e);
        }
      }
    }, r.prototype._addToTarget = function(e) {
      var t = this.valType, n = this.propName, a = this._additiveValue;
      t === Mf ? e[n] = e[n] + a : t === fl ? (qe(e[n], hl), Af(hl, hl, a, 1), e[n] = Df(hl)) : t === If ? Af(e[n], e[n], a, 1) : t === M1 && D1(e[n], e[n], a, 1);
    }, r;
  }(), gd = function() {
    function r(e, t, n, a) {
      if (this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = e, this._loop = t, t && a) {
        Cr("Can' use additive animation on looped animation.");
        return;
      }
      this._additiveAnimators = a, this._allowDiscrete = n;
    }
    return r.prototype.getMaxTime = function() {
      return this._maxTime;
    }, r.prototype.getDelay = function() {
      return this._delay;
    }, r.prototype.getLoop = function() {
      return this._loop;
    }, r.prototype.getTarget = function() {
      return this._target;
    }, r.prototype.changeTarget = function(e) {
      this._target = e;
    }, r.prototype.when = function(e, t, n) {
      return this.whenWithKeys(e, t, Pt(t), n);
    }, r.prototype.whenWithKeys = function(e, t, n, a) {
      for (var i = this._tracks, o = 0; o < n.length; o++) {
        var s = n[o], l = i[s];
        if (!l) {
          l = i[s] = new mR(s);
          var u = void 0, f = this._getAdditiveTrack(s);
          if (f) {
            var h = f.keyframes, c = h[h.length - 1];
            u = c && c.value, f.valType === fl && u && (u = Df(u));
          } else
            u = this._target[s];
          if (u == null)
            continue;
          e > 0 && l.addKeyframe(0, ul(u), a), this._trackKeys.push(s);
        }
        l.addKeyframe(e, ul(t[s]), a);
      }
      return this._maxTime = Math.max(this._maxTime, e), this;
    }, r.prototype.pause = function() {
      this._clip.pause(), this._paused = !0;
    }, r.prototype.resume = function() {
      this._clip.resume(), this._paused = !1;
    }, r.prototype.isPaused = function() {
      return !!this._paused;
    }, r.prototype.duration = function(e) {
      return this._maxTime = e, this._force = !0, this;
    }, r.prototype._doneCallback = function() {
      this._setTracksFinished(), this._clip = null;
      var e = this._doneCbs;
      if (e)
        for (var t = e.length, n = 0; n < t; n++)
          e[n].call(this);
    }, r.prototype._abortedCallback = function() {
      this._setTracksFinished();
      var e = this.animation, t = this._abortedCbs;
      if (e && e.removeClip(this._clip), this._clip = null, t)
        for (var n = 0; n < t.length; n++)
          t[n].call(this);
    }, r.prototype._setTracksFinished = function() {
      for (var e = this._tracks, t = this._trackKeys, n = 0; n < t.length; n++)
        e[t[n]].setFinished();
    }, r.prototype._getAdditiveTrack = function(e) {
      var t, n = this._additiveAnimators;
      if (n)
        for (var a = 0; a < n.length; a++) {
          var i = n[a].getTrack(e);
          i && (t = i);
        }
      return t;
    }, r.prototype.start = function(e) {
      if (!(this._started > 0)) {
        this._started = 1;
        for (var t = this, n = [], a = this._maxTime || 0, i = 0; i < this._trackKeys.length; i++) {
          var o = this._trackKeys[i], s = this._tracks[o], l = this._getAdditiveTrack(o), u = s.keyframes, f = u.length;
          if (s.prepare(a, l), s.needsAnimate())
            if (!this._allowDiscrete && s.discrete) {
              var h = u[f - 1];
              h && (t._target[s.propName] = h.rawValue), s.setFinished();
            } else
              n.push(s);
        }
        if (n.length || this._force) {
          var c = new JE({
            life: a,
            loop: this._loop,
            delay: this._delay || 0,
            onframe: function(v) {
              t._started = 2;
              var d = t._additiveAnimators;
              if (d) {
                for (var p = !1, g = 0; g < d.length; g++)
                  if (d[g]._clip) {
                    p = !0;
                    break;
                  }
                p || (t._additiveAnimators = null);
              }
              for (var g = 0; g < n.length; g++)
                n[g].step(t._target, v);
              var y = t._onframeCbs;
              if (y)
                for (var g = 0; g < y.length; g++)
                  y[g](t._target, v);
            },
            ondestroy: function() {
              t._doneCallback();
            }
          });
          this._clip = c, this.animation && this.animation.addClip(c), e && c.setEasing(e);
        } else
          this._doneCallback();
        return this;
      }
    }, r.prototype.stop = function(e) {
      if (this._clip) {
        var t = this._clip;
        e && t.onframe(1), this._abortedCallback();
      }
    }, r.prototype.delay = function(e) {
      return this._delay = e, this;
    }, r.prototype.during = function(e) {
      return e && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(e)), this;
    }, r.prototype.done = function(e) {
      return e && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(e)), this;
    }, r.prototype.aborted = function(e) {
      return e && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(e)), this;
    }, r.prototype.getClip = function() {
      return this._clip;
    }, r.prototype.getTrack = function(e) {
      return this._tracks[e];
    }, r.prototype.getTracks = function() {
      var e = this;
      return Y(this._trackKeys, function(t) {
        return e._tracks[t];
      });
    }, r.prototype.stopTracks = function(e, t) {
      if (!e.length || !this._clip)
        return !0;
      for (var n = this._tracks, a = this._trackKeys, i = 0; i < e.length; i++) {
        var o = n[e[i]];
        o && !o.isFinished() && (t ? o.step(this._target, 1) : this._started === 1 && o.step(this._target, 0), o.setFinished());
      }
      for (var s = !0, i = 0; i < a.length; i++)
        if (!n[a[i]].isFinished()) {
          s = !1;
          break;
        }
      return s && this._abortedCallback(), s;
    }, r.prototype.saveTo = function(e, t, n) {
      if (e) {
        t = t || this._trackKeys;
        for (var a = 0; a < t.length; a++) {
          var i = t[a], o = this._tracks[i];
          if (!(!o || o.isFinished())) {
            var s = o.keyframes, l = s[n ? 0 : s.length - 1];
            l && (e[i] = ul(l.rawValue));
          }
        }
      }
    }, r.prototype.__changeFinalValue = function(e, t) {
      t = t || Pt(e);
      for (var n = 0; n < t.length; n++) {
        var a = t[n], i = this._tracks[a];
        if (i) {
          var o = i.keyframes;
          if (o.length > 1) {
            var s = o.pop();
            i.addKeyframe(s.time, e[a]), i.prepare(this._maxTime, i.getAdditiveTrack());
          }
        }
      }
    }, r;
  }();
  function Mo() {
    return (/* @__PURE__ */ new Date()).getTime();
  }
  var _R = function(r) {
    A(e, r);
    function e(t) {
      var n = r.call(this) || this;
      return n._running = !1, n._time = 0, n._pausedTime = 0, n._pauseStart = 0, n._paused = !1, t = t || {}, n.stage = t.stage || {}, n;
    }
    return e.prototype.addClip = function(t) {
      t.animation && this.removeClip(t), this._head ? (this._tail.next = t, t.prev = this._tail, t.next = null, this._tail = t) : this._head = this._tail = t, t.animation = this;
    }, e.prototype.addAnimator = function(t) {
      t.animation = this;
      var n = t.getClip();
      n && this.addClip(n);
    }, e.prototype.removeClip = function(t) {
      if (t.animation) {
        var n = t.prev, a = t.next;
        n ? n.next = a : this._head = a, a ? a.prev = n : this._tail = n, t.next = t.prev = t.animation = null;
      }
    }, e.prototype.removeAnimator = function(t) {
      var n = t.getClip();
      n && this.removeClip(n), t.animation = null;
    }, e.prototype.update = function(t) {
      for (var n = Mo() - this._pausedTime, a = n - this._time, i = this._head; i; ) {
        var o = i.next, s = i.step(n, a);
        s && (i.ondestroy(), this.removeClip(i)), i = o;
      }
      this._time = n, t || (this.trigger("frame", a), this.stage.update && this.stage.update());
    }, e.prototype._startLoop = function() {
      var t = this;
      this._running = !0;
      function n() {
        t._running && (rd(n), !t._paused && t.update());
      }
      rd(n);
    }, e.prototype.start = function() {
      this._running || (this._time = Mo(), this._pausedTime = 0, this._startLoop());
    }, e.prototype.stop = function() {
      this._running = !1;
    }, e.prototype.pause = function() {
      this._paused || (this._pauseStart = Mo(), this._paused = !0);
    }, e.prototype.resume = function() {
      this._paused && (this._pausedTime += Mo() - this._pauseStart, this._paused = !1);
    }, e.prototype.clear = function() {
      for (var t = this._head; t; ) {
        var n = t.next;
        t.prev = t.next = t.animation = null, t = n;
      }
      this._head = this._tail = null;
    }, e.prototype.isFinished = function() {
      return this._head == null;
    }, e.prototype.animate = function(t, n) {
      n = n || {}, this.start();
      var a = new gd(t, n.loop);
      return this.addAnimator(a), a;
    }, e;
  }(Ir), SR = 300, yd = z.domSupported, md = function() {
    var r = [
      "click",
      "dblclick",
      "mousewheel",
      "wheel",
      "mouseout",
      "mouseup",
      "mousedown",
      "mousemove",
      "contextmenu"
    ], e = [
      "touchstart",
      "touchend",
      "touchmove"
    ], t = {
      pointerdown: 1,
      pointerup: 1,
      pointermove: 1,
      pointerout: 1
    }, n = Y(r, function(a) {
      var i = a.replace("mouse", "pointer");
      return t.hasOwnProperty(i) ? i : a;
    });
    return {
      mouse: r,
      touch: e,
      pointer: n
    };
  }(), P1 = {
    mouse: ["mousemove", "mouseup"],
    pointer: ["pointermove", "pointerup"]
  }, E1 = !1;
  function _d(r) {
    var e = r.pointerType;
    return e === "pen" || e === "touch";
  }
  function xR(r) {
    r.touching = !0, r.touchTimer != null && (clearTimeout(r.touchTimer), r.touchTimer = null), r.touchTimer = setTimeout(function() {
      r.touching = !1, r.touchTimer = null;
    }, 700);
  }
  function Sd(r) {
    r && (r.zrByTouch = !0);
  }
  function wR(r, e) {
    return Lr(r.dom, new bR(r, e), !0);
  }
  function R1(r, e) {
    for (var t = e, n = !1; t && t.nodeType !== 9 && !(n = t.domBelongToZr || t !== e && t === r.painterRoot); )
      t = t.parentNode;
    return n;
  }
  var bR = function() {
    function r(e, t) {
      this.stopPropagation = ue, this.stopImmediatePropagation = ue, this.preventDefault = ue, this.type = t.type, this.target = this.currentTarget = e.dom, this.pointerType = t.pointerType, this.clientX = t.clientX, this.clientY = t.clientY;
    }
    return r;
  }(), tn = {
    mousedown: function(r) {
      r = Lr(this.dom, r), this.__mayPointerCapture = [r.zrX, r.zrY], this.trigger("mousedown", r);
    },
    mousemove: function(r) {
      r = Lr(this.dom, r);
      var e = this.__mayPointerCapture;
      e && (r.zrX !== e[0] || r.zrY !== e[1]) && this.__togglePointerCapture(!0), this.trigger("mousemove", r);
    },
    mouseup: function(r) {
      r = Lr(this.dom, r), this.__togglePointerCapture(!1), this.trigger("mouseup", r);
    },
    mouseout: function(r) {
      r = Lr(this.dom, r);
      var e = r.toElement || r.relatedTarget;
      R1(this, e) || (this.__pointerCapturing && (r.zrEventControl = "no_globalout"), this.trigger("mouseout", r));
    },
    wheel: function(r) {
      E1 = !0, r = Lr(this.dom, r), this.trigger("mousewheel", r);
    },
    mousewheel: function(r) {
      E1 || (r = Lr(this.dom, r), this.trigger("mousewheel", r));
    },
    touchstart: function(r) {
      r = Lr(this.dom, r), Sd(r), this.__lastTouchMoment = /* @__PURE__ */ new Date(), this.handler.processGesture(r, "start"), tn.mousemove.call(this, r), tn.mousedown.call(this, r);
    },
    touchmove: function(r) {
      r = Lr(this.dom, r), Sd(r), this.handler.processGesture(r, "change"), tn.mousemove.call(this, r);
    },
    touchend: function(r) {
      r = Lr(this.dom, r), Sd(r), this.handler.processGesture(r, "end"), tn.mouseup.call(this, r), +/* @__PURE__ */ new Date() - +this.__lastTouchMoment < SR && tn.click.call(this, r);
    },
    pointerdown: function(r) {
      tn.mousedown.call(this, r);
    },
    pointermove: function(r) {
      _d(r) || tn.mousemove.call(this, r);
    },
    pointerup: function(r) {
      tn.mouseup.call(this, r);
    },
    pointerout: function(r) {
      _d(r) || tn.mouseout.call(this, r);
    }
  };
  M(["click", "dblclick", "contextmenu"], function(r) {
    tn[r] = function(e) {
      e = Lr(this.dom, e), this.trigger(r, e);
    };
  });
  var xd = {
    pointermove: function(r) {
      _d(r) || xd.mousemove.call(this, r);
    },
    pointerup: function(r) {
      xd.mouseup.call(this, r);
    },
    mousemove: function(r) {
      this.trigger("mousemove", r);
    },
    mouseup: function(r) {
      var e = this.__pointerCapturing;
      this.__togglePointerCapture(!1), this.trigger("mouseup", r), e && (r.zrEventControl = "only_globalout", this.trigger("mouseout", r));
    }
  };
  function TR(r, e) {
    var t = e.domHandlers;
    z.pointerEventsSupported ? M(md.pointer, function(n) {
      Pf(e, n, function(a) {
        t[n].call(r, a);
      });
    }) : (z.touchEventsSupported && M(md.touch, function(n) {
      Pf(e, n, function(a) {
        t[n].call(r, a), xR(e);
      });
    }), M(md.mouse, function(n) {
      Pf(e, n, function(a) {
        a = qv(a), e.touching || t[n].call(r, a);
      });
    }));
  }
  function CR(r, e) {
    z.pointerEventsSupported ? M(P1.pointer, t) : z.touchEventsSupported || M(P1.mouse, t);
    function t(n) {
      function a(i) {
        i = qv(i), R1(r, i.target) || (i = wR(r, i), e.domHandlers[n].call(r, i));
      }
      Pf(e, n, a, { capture: !0 });
    }
  }
  function Pf(r, e, t, n) {
    r.mounted[e] = t, r.listenerOpts[e] = n, Kv(r.domTarget, e, t, n);
  }
  function wd(r) {
    var e = r.mounted;
    for (var t in e)
      e.hasOwnProperty(t) && OE(r.domTarget, t, e[t], r.listenerOpts[t]);
    r.mounted = {};
  }
  var k1 = function() {
    function r(e, t) {
      this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = e, this.domHandlers = t;
    }
    return r;
  }(), AR = function(r) {
    A(e, r);
    function e(t, n) {
      var a = r.call(this) || this;
      return a.__pointerCapturing = !1, a.dom = t, a.painterRoot = n, a._localHandlerScope = new k1(t, tn), yd && (a._globalHandlerScope = new k1(document, xd)), TR(a, a._localHandlerScope), a;
    }
    return e.prototype.dispose = function() {
      wd(this._localHandlerScope), yd && wd(this._globalHandlerScope);
    }, e.prototype.setCursor = function(t) {
      this.dom.style && (this.dom.style.cursor = t || "default");
    }, e.prototype.__togglePointerCapture = function(t) {
      if (this.__mayPointerCapture = null, yd && +this.__pointerCapturing ^ +t) {
        this.__pointerCapturing = t;
        var n = this._globalHandlerScope;
        t ? CR(this, n) : wd(n);
      }
    }, e;
  }(Ir), O1 = 1;
  z.hasGlobalWindow && (O1 = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
  var Ef = O1, bd = 0.4, Td = "#333", Cd = "#ccc", DR = "#eee", N1 = qs, V1 = 5e-5;
  function vi(r) {
    return r > V1 || r < -V1;
  }
  var di = [], Io = [], Ad = dr(), Dd = Math.abs, Xn = function() {
    function r() {
    }
    return r.prototype.getLocalTransform = function(e) {
      return r.getLocalTransform(this, e);
    }, r.prototype.setPosition = function(e) {
      this.x = e[0], this.y = e[1];
    }, r.prototype.setScale = function(e) {
      this.scaleX = e[0], this.scaleY = e[1];
    }, r.prototype.setSkew = function(e) {
      this.skewX = e[0], this.skewY = e[1];
    }, r.prototype.setOrigin = function(e) {
      this.originX = e[0], this.originY = e[1];
    }, r.prototype.needLocalTransform = function() {
      return vi(this.rotation) || vi(this.x) || vi(this.y) || vi(this.scaleX - 1) || vi(this.scaleY - 1) || vi(this.skewX) || vi(this.skewY);
    }, r.prototype.updateTransform = function() {
      var e = this.parent && this.parent.transform, t = this.needLocalTransform(), n = this.transform;
      if (!(t || e)) {
        n && N1(n);
        return;
      }
      n = n || dr(), t ? this.getLocalTransform(n) : N1(n), e && (t ? mn(n, e, n) : cf(n, e)), this.transform = n, this._resolveGlobalScaleRatio(n);
    }, r.prototype._resolveGlobalScaleRatio = function(e) {
      var t = this.globalScaleRatio;
      if (t != null && t !== 1) {
        this.getGlobalScale(di);
        var n = di[0] < 0 ? -1 : 1, a = di[1] < 0 ? -1 : 1, i = ((di[0] - n) * t + n) / di[0] || 0, o = ((di[1] - a) * t + a) / di[1] || 0;
        e[0] *= i, e[1] *= i, e[2] *= o, e[3] *= o;
      }
      this.invTransform = this.invTransform || dr(), si(this.invTransform, e);
    }, r.prototype.getComputedTransform = function() {
      for (var e = this, t = []; e; )
        t.push(e), e = e.parent;
      for (; e = t.pop(); )
        e.updateTransform();
      return this.transform;
    }, r.prototype.setLocalTransform = function(e) {
      if (e) {
        var t = e[0] * e[0] + e[1] * e[1], n = e[2] * e[2] + e[3] * e[3], a = Math.atan2(e[1], e[0]), i = Math.PI / 2 + a - Math.atan2(e[3], e[2]);
        n = Math.sqrt(n) * Math.cos(i), t = Math.sqrt(t), this.skewX = i, this.skewY = 0, this.rotation = -a, this.x = +e[4], this.y = +e[5], this.scaleX = t, this.scaleY = n, this.originX = 0, this.originY = 0;
      }
    }, r.prototype.decomposeTransform = function() {
      if (this.transform) {
        var e = this.parent, t = this.transform;
        e && e.transform && (mn(Io, e.invTransform, t), t = Io);
        var n = this.originX, a = this.originY;
        (n || a) && (Ad[4] = n, Ad[5] = a, mn(Io, t, Ad), Io[4] -= n, Io[5] -= a, t = Io), this.setLocalTransform(t);
      }
    }, r.prototype.getGlobalScale = function(e) {
      var t = this.transform;
      return e = e || [], t ? (e[0] = Math.sqrt(t[0] * t[0] + t[1] * t[1]), e[1] = Math.sqrt(t[2] * t[2] + t[3] * t[3]), t[0] < 0 && (e[0] = -e[0]), t[3] < 0 && (e[1] = -e[1]), e) : (e[0] = 1, e[1] = 1, e);
    }, r.prototype.transformCoordToLocal = function(e, t) {
      var n = [e, t], a = this.invTransform;
      return a && Ie(n, n, a), n;
    }, r.prototype.transformCoordToGlobal = function(e, t) {
      var n = [e, t], a = this.transform;
      return a && Ie(n, n, a), n;
    }, r.prototype.getLineScale = function() {
      var e = this.transform;
      return e && Dd(e[0] - 1) > 1e-10 && Dd(e[3] - 1) > 1e-10 ? Math.sqrt(Dd(e[0] * e[3] - e[2] * e[1])) : 1;
    }, r.prototype.copyTransform = function(e) {
      B1(this, e);
    }, r.getLocalTransform = function(e, t) {
      t = t || [];
      var n = e.originX || 0, a = e.originY || 0, i = e.scaleX, o = e.scaleY, s = e.anchorX, l = e.anchorY, u = e.rotation || 0, f = e.x, h = e.y, c = e.skewX ? Math.tan(e.skewX) : 0, v = e.skewY ? Math.tan(-e.skewY) : 0;
      if (n || a || s || l) {
        var d = n + s, p = a + l;
        t[4] = -d * i - c * p * o, t[5] = -p * o - v * d * i;
      } else
        t[4] = t[5] = 0;
      return t[0] = i, t[3] = o, t[1] = v * i, t[2] = c * o, u && ga(t, t, u), t[4] += n + f, t[5] += a + h, t;
    }, r.initDefaultProps = function() {
      var e = r.prototype;
      e.scaleX = e.scaleY = e.globalScaleRatio = 1, e.x = e.y = e.originX = e.originY = e.skewX = e.skewY = e.rotation = e.anchorX = e.anchorY = 0;
    }(), r;
  }(), Sn = [
    "x",
    "y",
    "originX",
    "originY",
    "anchorX",
    "anchorY",
    "rotation",
    "scaleX",
    "scaleY",
    "skewX",
    "skewY"
  ];
  function B1(r, e) {
    for (var t = 0; t < Sn.length; t++) {
      var n = Sn[t];
      r[n] = e[n];
    }
  }
  var z1 = {};
  function gr(r, e) {
    e = e || Et;
    var t = z1[e];
    t || (t = z1[e] = new nl(500));
    var n = t.get(r);
    return n == null && (n = qt.measureText(r, e).width, t.put(r, n)), n;
  }
  function G1(r, e, t, n) {
    var a = gr(r, e), i = Rf(e), o = vl(0, a, t), s = Lo(0, i, n), l = new xt(o, s, a, i);
    return l;
  }
  function cl(r, e, t, n) {
    var a = ((r || "") + "").split(`
`), i = a.length;
    if (i === 1)
      return G1(a[0], e, t, n);
    for (var o = new xt(0, 0, 0, 0), s = 0; s < a.length; s++) {
      var l = G1(a[s], e, t, n);
      s === 0 ? o.copy(l) : o.union(l);
    }
    return o;
  }
  function vl(r, e, t) {
    return t === "right" ? r -= e : t === "center" && (r -= e / 2), r;
  }
  function Lo(r, e, t) {
    return t === "middle" ? r -= e / 2 : t === "bottom" && (r -= e), r;
  }
  function Rf(r) {
    return gr("国", r);
  }
  function en(r, e) {
    return typeof r == "string" ? r.lastIndexOf("%") >= 0 ? parseFloat(r) / 100 * e : parseFloat(r) : r;
  }
  function kf(r, e, t) {
    var n = e.position || "inside", a = e.distance != null ? e.distance : 5, i = t.height, o = t.width, s = i / 2, l = t.x, u = t.y, f = "left", h = "top";
    if (n instanceof Array)
      l += en(n[0], t.width), u += en(n[1], t.height), f = null, h = null;
    else
      switch (n) {
        case "left":
          l -= a, u += s, f = "right", h = "middle";
          break;
        case "right":
          l += a + o, u += s, h = "middle";
          break;
        case "top":
          l += o / 2, u -= a, f = "center", h = "bottom";
          break;
        case "bottom":
          l += o / 2, u += i + a, f = "center";
          break;
        case "inside":
          l += o / 2, u += s, f = "center", h = "middle";
          break;
        case "insideLeft":
          l += a, u += s, h = "middle";
          break;
        case "insideRight":
          l += o - a, u += s, f = "right", h = "middle";
          break;
        case "insideTop":
          l += o / 2, u += a, f = "center";
          break;
        case "insideBottom":
          l += o / 2, u += i - a, f = "center", h = "bottom";
          break;
        case "insideTopLeft":
          l += a, u += a;
          break;
        case "insideTopRight":
          l += o - a, u += a, f = "right";
          break;
        case "insideBottomLeft":
          l += a, u += i - a, h = "bottom";
          break;
        case "insideBottomRight":
          l += o - a, u += i - a, f = "right", h = "bottom";
          break;
      }
    return r = r || {}, r.x = l, r.y = u, r.align = f, r.verticalAlign = h, r;
  }
  var Md = "__zr_normal__", Id = Sn.concat(["ignore"]), MR = Ar(Sn, function(r, e) {
    return r[e] = !0, r;
  }, { ignore: !1 }), Po = {}, IR = new xt(0, 0, 0, 0), Of = function() {
    function r(e) {
      this.id = Vv(), this.animators = [], this.currentStates = [], this.states = {}, this._init(e);
    }
    return r.prototype._init = function(e) {
      this.attr(e);
    }, r.prototype.drift = function(e, t, n) {
      switch (this.draggable) {
        case "horizontal":
          t = 0;
          break;
        case "vertical":
          e = 0;
          break;
      }
      var a = this.transform;
      a || (a = this.transform = [1, 0, 0, 1, 0, 0]), a[4] += e, a[5] += t, this.decomposeTransform(), this.markRedraw();
    }, r.prototype.beforeUpdate = function() {
    }, r.prototype.afterUpdate = function() {
    }, r.prototype.update = function() {
      this.updateTransform(), this.__dirty && this.updateInnerText();
    }, r.prototype.updateInnerText = function(e) {
      var t = this._textContent;
      if (t && (!t.ignore || e)) {
        this.textConfig || (this.textConfig = {});
        var n = this.textConfig, a = n.local, i = t.innerTransformable, o = void 0, s = void 0, l = !1;
        i.parent = a ? this : null;
        var u = !1;
        if (i.copyTransform(t), n.position != null) {
          var f = IR;
          n.layoutRect ? f.copy(n.layoutRect) : f.copy(this.getBoundingRect()), a || f.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Po, n, f) : kf(Po, n, f), i.x = Po.x, i.y = Po.y, o = Po.align, s = Po.verticalAlign;
          var h = n.origin;
          if (h && n.rotation != null) {
            var c = void 0, v = void 0;
            h === "center" ? (c = f.width * 0.5, v = f.height * 0.5) : (c = en(h[0], f.width), v = en(h[1], f.height)), u = !0, i.originX = -i.x + c + (a ? 0 : f.x), i.originY = -i.y + v + (a ? 0 : f.y);
          }
        }
        n.rotation != null && (i.rotation = n.rotation);
        var d = n.offset;
        d && (i.x += d[0], i.y += d[1], u || (i.originX = -d[0], i.originY = -d[1]));
        var p = n.inside == null ? typeof n.position == "string" && n.position.indexOf("inside") >= 0 : n.inside, g = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), y = void 0, m = void 0, _ = void 0;
        p && this.canBeInsideText() ? (y = n.insideFill, m = n.insideStroke, (y == null || y === "auto") && (y = this.getInsideTextFill()), (m == null || m === "auto") && (m = this.getInsideTextStroke(y), _ = !0)) : (y = n.outsideFill, m = n.outsideStroke, (y == null || y === "auto") && (y = this.getOutsideFill()), (m == null || m === "auto") && (m = this.getOutsideStroke(y), _ = !0)), y = y || "#000", (y !== g.fill || m !== g.stroke || _ !== g.autoStroke || o !== g.align || s !== g.verticalAlign) && (l = !0, g.fill = y, g.stroke = m, g.autoStroke = _, g.align = o, g.verticalAlign = s, t.setDefaultTextStyle(g)), t.__dirty |= pr, l && t.dirtyStyle(!0);
      }
    }, r.prototype.canBeInsideText = function() {
      return !0;
    }, r.prototype.getInsideTextFill = function() {
      return "#fff";
    }, r.prototype.getInsideTextStroke = function(e) {
      return "#000";
    }, r.prototype.getOutsideFill = function() {
      return this.__zr && this.__zr.isDarkMode() ? Cd : Td;
    }, r.prototype.getOutsideStroke = function(e) {
      var t = this.__zr && this.__zr.getBackgroundColor(), n = typeof t == "string" && qe(t);
      n || (n = [255, 255, 255, 1]);
      for (var a = n[3], i = this.__zr.isDarkMode(), o = 0; o < 3; o++)
        n[o] = n[o] * a + (i ? 0 : 255) * (1 - a);
      return n[3] = 1, Qr(n, "rgba");
    }, r.prototype.traverse = function(e, t) {
    }, r.prototype.attrKV = function(e, t) {
      e === "textConfig" ? this.setTextConfig(t) : e === "textContent" ? this.setTextContent(t) : e === "clipPath" ? this.setClipPath(t) : e === "extra" ? (this.extra = this.extra || {}, H(this.extra, t)) : this[e] = t;
    }, r.prototype.hide = function() {
      this.ignore = !0, this.markRedraw();
    }, r.prototype.show = function() {
      this.ignore = !1, this.markRedraw();
    }, r.prototype.attr = function(e, t) {
      if (typeof e == "string")
        this.attrKV(e, t);
      else if (it(e))
        for (var n = e, a = Pt(n), i = 0; i < a.length; i++) {
          var o = a[i];
          this.attrKV(o, e[o]);
        }
      return this.markRedraw(), this;
    }, r.prototype.saveCurrentToNormalState = function(e) {
      this._innerSaveToNormal(e);
      for (var t = this._normalState, n = 0; n < this.animators.length; n++) {
        var a = this.animators[n], i = a.__fromStateTransition;
        if (!(a.getLoop() || i && i !== Md)) {
          var o = a.targetName, s = o ? t[o] : t;
          a.saveTo(s);
        }
      }
    }, r.prototype._innerSaveToNormal = function(e) {
      var t = this._normalState;
      t || (t = this._normalState = {}), e.textConfig && !t.textConfig && (t.textConfig = this.textConfig), this._savePrimaryToNormal(e, t, Id);
    }, r.prototype._savePrimaryToNormal = function(e, t, n) {
      for (var a = 0; a < n.length; a++) {
        var i = n[a];
        e[i] != null && !(i in t) && (t[i] = this[i]);
      }
    }, r.prototype.hasState = function() {
      return this.currentStates.length > 0;
    }, r.prototype.getState = function(e) {
      return this.states[e];
    }, r.prototype.ensureState = function(e) {
      var t = this.states;
      return t[e] || (t[e] = {}), t[e];
    }, r.prototype.clearStates = function(e) {
      this.useState(Md, !1, e);
    }, r.prototype.useState = function(e, t, n, a) {
      var i = e === Md, o = this.hasState();
      if (!(!o && i)) {
        var s = this.currentStates, l = this.stateTransition;
        if (!(bt(s, e) >= 0 && (t || s.length === 1))) {
          var u;
          if (this.stateProxy && !i && (u = this.stateProxy(e)), u || (u = this.states && this.states[e]), !u && !i) {
            Cr("State " + e + " not exists.");
            return;
          }
          i || this.saveCurrentToNormalState(u);
          var f = !!(u && u.hoverLayer || a);
          f && this._toggleHoverLayerFlag(!0), this._applyStateObj(e, u, this._normalState, t, !n && !this.__inHover && l && l.duration > 0, l);
          var h = this._textContent, c = this._textGuide;
          return h && h.useState(e, t, n, f), c && c.useState(e, t, n, f), i ? (this.currentStates = [], this._normalState = {}) : t ? this.currentStates.push(e) : this.currentStates = [e], this._updateAnimationTargets(), this.markRedraw(), !f && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~pr), u;
        }
      }
    }, r.prototype.useStates = function(e, t, n) {
      if (!e.length)
        this.clearStates();
      else {
        var a = [], i = this.currentStates, o = e.length, s = o === i.length;
        if (s) {
          for (var l = 0; l < o; l++)
            if (e[l] !== i[l]) {
              s = !1;
              break;
            }
        }
        if (s)
          return;
        for (var l = 0; l < o; l++) {
          var u = e[l], f = void 0;
          this.stateProxy && (f = this.stateProxy(u, e)), f || (f = this.states[u]), f && a.push(f);
        }
        var h = a[o - 1], c = !!(h && h.hoverLayer || n);
        c && this._toggleHoverLayerFlag(!0);
        var v = this._mergeStates(a), d = this.stateTransition;
        this.saveCurrentToNormalState(v), this._applyStateObj(e.join(","), v, this._normalState, !1, !t && !this.__inHover && d && d.duration > 0, d);
        var p = this._textContent, g = this._textGuide;
        p && p.useStates(e, t, c), g && g.useStates(e, t, c), this._updateAnimationTargets(), this.currentStates = e.slice(), this.markRedraw(), !c && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~pr);
      }
    }, r.prototype._updateAnimationTargets = function() {
      for (var e = 0; e < this.animators.length; e++) {
        var t = this.animators[e];
        t.targetName && t.changeTarget(this[t.targetName]);
      }
    }, r.prototype.removeState = function(e) {
      var t = bt(this.currentStates, e);
      if (t >= 0) {
        var n = this.currentStates.slice();
        n.splice(t, 1), this.useStates(n);
      }
    }, r.prototype.replaceState = function(e, t, n) {
      var a = this.currentStates.slice(), i = bt(a, e), o = bt(a, t) >= 0;
      i >= 0 ? o ? a.splice(i, 1) : a[i] = t : n && !o && a.push(t), this.useStates(a);
    }, r.prototype.toggleState = function(e, t) {
      t ? this.useState(e, !0) : this.removeState(e);
    }, r.prototype._mergeStates = function(e) {
      for (var t = {}, n, a = 0; a < e.length; a++) {
        var i = e[a];
        H(t, i), i.textConfig && (n = n || {}, H(n, i.textConfig));
      }
      return n && (t.textConfig = n), t;
    }, r.prototype._applyStateObj = function(e, t, n, a, i, o) {
      var s = !(t && a);
      t && t.textConfig ? (this.textConfig = H({}, a ? this.textConfig : n.textConfig), H(this.textConfig, t.textConfig)) : s && n.textConfig && (this.textConfig = n.textConfig);
      for (var l = {}, u = !1, f = 0; f < Id.length; f++) {
        var h = Id[f], c = i && MR[h];
        t && t[h] != null ? c ? (u = !0, l[h] = t[h]) : this[h] = t[h] : s && n[h] != null && (c ? (u = !0, l[h] = n[h]) : this[h] = n[h]);
      }
      if (!i)
        for (var f = 0; f < this.animators.length; f++) {
          var v = this.animators[f], d = v.targetName;
          v.getLoop() || v.__changeFinalValue(d ? (t || n)[d] : t || n);
        }
      u && this._transitionState(e, l, o);
    }, r.prototype._attachComponent = function(e) {
      if (e.__zr && !e.__hostTarget)
        throw new Error("Text element has been added to zrender.");
      if (e === this)
        throw new Error("Recursive component attachment.");
      var t = this.__zr;
      t && e.addSelfToZr(t), e.__zr = t, e.__hostTarget = this;
    }, r.prototype._detachComponent = function(e) {
      e.__zr && e.removeSelfFromZr(e.__zr), e.__zr = null, e.__hostTarget = null;
    }, r.prototype.getClipPath = function() {
      return this._clipPath;
    }, r.prototype.setClipPath = function(e) {
      this._clipPath && this._clipPath !== e && this.removeClipPath(), this._attachComponent(e), this._clipPath = e, this.markRedraw();
    }, r.prototype.removeClipPath = function() {
      var e = this._clipPath;
      e && (this._detachComponent(e), this._clipPath = null, this.markRedraw());
    }, r.prototype.getTextContent = function() {
      return this._textContent;
    }, r.prototype.setTextContent = function(e) {
      var t = this._textContent;
      if (t !== e) {
        if (t && t !== e && this.removeTextContent(), e.__zr && !e.__hostTarget)
          throw new Error("Text element has been added to zrender.");
        e.innerTransformable = new Xn(), this._attachComponent(e), this._textContent = e, this.markRedraw();
      }
    }, r.prototype.setTextConfig = function(e) {
      this.textConfig || (this.textConfig = {}), H(this.textConfig, e), this.markRedraw();
    }, r.prototype.removeTextConfig = function() {
      this.textConfig = null, this.markRedraw();
    }, r.prototype.removeTextContent = function() {
      var e = this._textContent;
      e && (e.innerTransformable = null, this._detachComponent(e), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
    }, r.prototype.getTextGuideLine = function() {
      return this._textGuide;
    }, r.prototype.setTextGuideLine = function(e) {
      this._textGuide && this._textGuide !== e && this.removeTextGuideLine(), this._attachComponent(e), this._textGuide = e, this.markRedraw();
    }, r.prototype.removeTextGuideLine = function() {
      var e = this._textGuide;
      e && (this._detachComponent(e), this._textGuide = null, this.markRedraw());
    }, r.prototype.markRedraw = function() {
      this.__dirty |= pr;
      var e = this.__zr;
      e && (this.__inHover ? e.refreshHover() : e.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
    }, r.prototype.dirty = function() {
      this.markRedraw();
    }, r.prototype._toggleHoverLayerFlag = function(e) {
      this.__inHover = e;
      var t = this._textContent, n = this._textGuide;
      t && (t.__inHover = e), n && (n.__inHover = e);
    }, r.prototype.addSelfToZr = function(e) {
      if (this.__zr !== e) {
        this.__zr = e;
        var t = this.animators;
        if (t)
          for (var n = 0; n < t.length; n++)
            e.animation.addAnimator(t[n]);
        this._clipPath && this._clipPath.addSelfToZr(e), this._textContent && this._textContent.addSelfToZr(e), this._textGuide && this._textGuide.addSelfToZr(e);
      }
    }, r.prototype.removeSelfFromZr = function(e) {
      if (this.__zr) {
        this.__zr = null;
        var t = this.animators;
        if (t)
          for (var n = 0; n < t.length; n++)
            e.animation.removeAnimator(t[n]);
        this._clipPath && this._clipPath.removeSelfFromZr(e), this._textContent && this._textContent.removeSelfFromZr(e), this._textGuide && this._textGuide.removeSelfFromZr(e);
      }
    }, r.prototype.animate = function(e, t, n) {
      var a = e ? this[e] : this;
      if (!a) {
        Cr('Property "' + e + '" is not existed in element ' + this.id);
        return;
      }
      var i = new gd(a, t, n);
      return e && (i.targetName = e), this.addAnimator(i, e), i;
    }, r.prototype.addAnimator = function(e, t) {
      var n = this.__zr, a = this;
      e.during(function() {
        a.updateDuringAnimation(t);
      }).done(function() {
        var i = a.animators, o = bt(i, e);
        o >= 0 && i.splice(o, 1);
      }), this.animators.push(e), n && n.animation.addAnimator(e), n && n.wakeUp();
    }, r.prototype.updateDuringAnimation = function(e) {
      this.markRedraw();
    }, r.prototype.stopAnimation = function(e, t) {
      for (var n = this.animators, a = n.length, i = [], o = 0; o < a; o++) {
        var s = n[o];
        !e || e === s.scope ? s.stop(t) : i.push(s);
      }
      return this.animators = i, this;
    }, r.prototype.animateTo = function(e, t, n) {
      Ld(this, e, t, n);
    }, r.prototype.animateFrom = function(e, t, n) {
      Ld(this, e, t, n, !0);
    }, r.prototype._transitionState = function(e, t, n, a) {
      for (var i = Ld(this, t, n, a), o = 0; o < i.length; o++)
        i[o].__fromStateTransition = e;
    }, r.prototype.getBoundingRect = function() {
      return null;
    }, r.prototype.getPaintRect = function() {
      return null;
    }, r.initDefaultProps = function() {
      var e = r.prototype;
      e.type = "element", e.name = "", e.ignore = e.silent = e.isGroup = e.draggable = e.dragging = e.ignoreClip = e.__inHover = !1, e.__dirty = pr;
      var t = {};
      function n(i, o, s) {
        t[i + o + s] || (console.warn("DEPRECATED: '" + i + "' has been deprecated. use '" + o + "', '" + s + "' instead"), t[i + o + s] = !0);
      }
      function a(i, o, s, l) {
        Object.defineProperty(e, i, {
          get: function() {
            if (n(i, s, l), !this[o]) {
              var f = this[o] = [];
              u(this, f);
            }
            return this[o];
          },
          set: function(f) {
            n(i, s, l), this[s] = f[0], this[l] = f[1], this[o] = f, u(this, f);
          }
        });
        function u(f, h) {
          Object.defineProperty(h, 0, {
            get: function() {
              return f[s];
            },
            set: function(c) {
              f[s] = c;
            }
          }), Object.defineProperty(h, 1, {
            get: function() {
              return f[l];
            },
            set: function(c) {
              f[l] = c;
            }
          });
        }
      }
      Object.defineProperty && (a("position", "_legacyPos", "x", "y"), a("scale", "_legacyScale", "scaleX", "scaleY"), a("origin", "_legacyOrigin", "originX", "originY"));
    }(), r;
  }();
  le(Of, Ir), le(Of, Xn);
  function Ld(r, e, t, n, a) {
    t = t || {};
    var i = [];
    F1(r, "", r, e, t, n, i, a);
    var o = i.length, s = !1, l = t.done, u = t.aborted, f = function() {
      s = !0, o--, o <= 0 && (s ? l && l() : u && u());
    }, h = function() {
      o--, o <= 0 && (s ? l && l() : u && u());
    };
    o || l && l(), i.length > 0 && t.during && i[0].during(function(d, p) {
      t.during(p);
    });
    for (var c = 0; c < i.length; c++) {
      var v = i[c];
      f && v.done(f), h && v.aborted(h), t.force && v.duration(t.duration), v.start(t.easing);
    }
    return i;
  }
  function Pd(r, e, t) {
    for (var n = 0; n < t; n++)
      r[n] = e[n];
  }
  function LR(r) {
    return Pe(r[0]);
  }
  function PR(r, e, t) {
    if (Pe(e[t]))
      if (Pe(r[t]) || (r[t] = []), Xe(e[t])) {
        var n = e[t].length;
        r[t].length !== n && (r[t] = new e[t].constructor(n), Pd(r[t], e[t], n));
      } else {
        var a = e[t], i = r[t], o = a.length;
        if (LR(a))
          for (var s = a[0].length, l = 0; l < o; l++)
            i[l] ? Pd(i[l], a[l], s) : i[l] = Array.prototype.slice.call(a[l]);
        else
          Pd(i, a, o);
        i.length = a.length;
      }
    else
      r[t] = e[t];
  }
  function ER(r, e) {
    return r === e || Pe(r) && Pe(e) && RR(r, e);
  }
  function RR(r, e) {
    var t = r.length;
    if (t !== e.length)
      return !1;
    for (var n = 0; n < t; n++)
      if (r[n] !== e[n])
        return !1;
    return !0;
  }
  function F1(r, e, t, n, a, i, o, s) {
    for (var l = Pt(n), u = a.duration, f = a.delay, h = a.additive, c = a.setToFinal, v = !it(i), d = r.animators, p = [], g = 0; g < l.length; g++) {
      var y = l[g], m = n[y];
      if (m != null && t[y] != null && (v || i[y]))
        if (it(m) && !Pe(m) && !Fs(m)) {
          if (e) {
            s || (t[y] = m, r.updateDuringAnimation(e));
            continue;
          }
          F1(r, y, t[y], m, a, i && i[y], o, s);
        } else
          p.push(y);
      else
        s || (t[y] = m, r.updateDuringAnimation(e), p.push(y));
    }
    var _ = p.length;
    if (!h && _)
      for (var S = 0; S < d.length; S++) {
        var b = d[S];
        if (b.targetName === e) {
          var w = b.stopTracks(p);
          if (w) {
            var T = bt(d, b);
            d.splice(T, 1);
          }
        }
      }
    if (a.force || (p = Ht(p, function(P) {
      return !ER(n[P], t[P]);
    }), _ = p.length), _ > 0 || a.force && !o.length) {
      var C = void 0, I = void 0, L = void 0;
      if (s) {
        I = {}, c && (C = {});
        for (var S = 0; S < _; S++) {
          var y = p[S];
          I[y] = t[y], c ? C[y] = n[y] : t[y] = n[y];
        }
      } else if (c) {
        L = {};
        for (var S = 0; S < _; S++) {
          var y = p[S];
          L[y] = ul(t[y]), PR(t, n, y);
        }
      }
      var b = new gd(t, !1, !1, h ? Ht(d, function(E) {
        return E.targetName === e;
      }) : null);
      b.targetName = e, a.scope && (b.scope = a.scope), c && C && b.whenWithKeys(0, C, p), L && b.whenWithKeys(0, L, p), b.whenWithKeys(u ?? 500, s ? I : n, p).delay(f || 0), r.addAnimator(b, e), o.push(b);
    }
  }
  var ct = function(r) {
    A(e, r);
    function e(t) {
      var n = r.call(this) || this;
      return n.isGroup = !0, n._children = [], n.attr(t), n;
    }
    return e.prototype.childrenRef = function() {
      return this._children;
    }, e.prototype.children = function() {
      return this._children.slice();
    }, e.prototype.childAt = function(t) {
      return this._children[t];
    }, e.prototype.childOfName = function(t) {
      for (var n = this._children, a = 0; a < n.length; a++)
        if (n[a].name === t)
          return n[a];
    }, e.prototype.childCount = function() {
      return this._children.length;
    }, e.prototype.add = function(t) {
      if (t && (t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), t.__hostTarget))
        throw "This elemenet has been used as an attachment";
      return this;
    }, e.prototype.addBefore = function(t, n) {
      if (t && t !== this && t.parent !== this && n && n.parent === this) {
        var a = this._children, i = a.indexOf(n);
        i >= 0 && (a.splice(i, 0, t), this._doAdd(t));
      }
      return this;
    }, e.prototype.replace = function(t, n) {
      var a = bt(this._children, t);
      return a >= 0 && this.replaceAt(n, a), this;
    }, e.prototype.replaceAt = function(t, n) {
      var a = this._children, i = a[n];
      if (t && t !== this && t.parent !== this && t !== i) {
        a[n] = t, i.parent = null;
        var o = this.__zr;
        o && i.removeSelfFromZr(o), this._doAdd(t);
      }
      return this;
    }, e.prototype._doAdd = function(t) {
      t.parent && t.parent.remove(t), t.parent = this;
      var n = this.__zr;
      n && n !== t.__zr && t.addSelfToZr(n), n && n.refresh();
    }, e.prototype.remove = function(t) {
      var n = this.__zr, a = this._children, i = bt(a, t);
      return i < 0 ? this : (a.splice(i, 1), t.parent = null, n && t.removeSelfFromZr(n), n && n.refresh(), this);
    }, e.prototype.removeAll = function() {
      for (var t = this._children, n = this.__zr, a = 0; a < t.length; a++) {
        var i = t[a];
        n && i.removeSelfFromZr(n), i.parent = null;
      }
      return t.length = 0, this;
    }, e.prototype.eachChild = function(t, n) {
      for (var a = this._children, i = 0; i < a.length; i++) {
        var o = a[i];
        t.call(n, o, i);
      }
      return this;
    }, e.prototype.traverse = function(t, n) {
      for (var a = 0; a < this._children.length; a++) {
        var i = this._children[a], o = t.call(n, i);
        i.isGroup && !o && i.traverse(t, n);
      }
      return this;
    }, e.prototype.addSelfToZr = function(t) {
      r.prototype.addSelfToZr.call(this, t);
      for (var n = 0; n < this._children.length; n++) {
        var a = this._children[n];
        a.addSelfToZr(t);
      }
    }, e.prototype.removeSelfFromZr = function(t) {
      r.prototype.removeSelfFromZr.call(this, t);
      for (var n = 0; n < this._children.length; n++) {
        var a = this._children[n];
        a.removeSelfFromZr(t);
      }
    }, e.prototype.getBoundingRect = function(t) {
      for (var n = new xt(0, 0, 0, 0), a = t || this._children, i = [], o = null, s = 0; s < a.length; s++) {
        var l = a[s];
        if (!(l.ignore || l.invisible)) {
          var u = l.getBoundingRect(), f = l.getLocalTransform(i);
          f ? (xt.applyTransform(n, u, f), o = o || n.clone(), o.union(n)) : (o = o || u.clone(), o.union(u));
        }
      }
      return o || n;
    }, e;
  }(Of);
  ct.prototype.type = "group";
  /*!
  * ZRender, a high performance 2d drawing library.
  *
  * Copyright (c) 2013, Baidu Inc.
  * All rights reserved.
  *
  * LICENSE
  * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
  */
  var dl = {}, pi = {};
  function kR(r) {
    delete pi[r];
  }
  function OR(r) {
    if (!r)
      return !1;
    if (typeof r == "string")
      return sl(r, 1) < bd;
    if (r.colorStops) {
      for (var e = r.colorStops, t = 0, n = e.length, a = 0; a < n; a++)
        t += sl(e[a].color, 1);
      return t /= n, t < bd;
    }
    return !1;
  }
  var NR = function() {
    function r(e, t, n) {
      var a = this;
      this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, n = n || {}, this.dom = t, this.id = e;
      var i = new XE(), o = n.renderer || "canvas";
      if (dl[o] || (o = Pt(dl)[0]), !dl[o])
        throw new Error("Renderer '" + o + "' is not imported. Please import it first.");
      n.useDirtyRect = n.useDirtyRect == null ? !1 : n.useDirtyRect;
      var s = new dl[o](t, i, n, e), l = n.ssr || s.ssrOnly;
      this.storage = i, this.painter = s;
      var u = !z.node && !z.worker && !l ? new AR(s.getViewportRoot(), s.root) : null, f = n.useCoarsePointer, h = f == null || f === "auto" ? z.touchEventsSupported : !!f, c = 44, v;
      h && (v = _t(n.pointerSize, c)), this.handler = new t1(i, s, u, s.root, v), this.animation = new _R({
        stage: {
          update: l ? null : function() {
            return a._flush(!0);
          }
        }
      }), l || this.animation.start();
    }
    return r.prototype.add = function(e) {
      e && (this.storage.addRoot(e), e.addSelfToZr(this), this.refresh());
    }, r.prototype.remove = function(e) {
      e && (this.storage.delRoot(e), e.removeSelfFromZr(this), this.refresh());
    }, r.prototype.configLayer = function(e, t) {
      this.painter.configLayer && this.painter.configLayer(e, t), this.refresh();
    }, r.prototype.setBackgroundColor = function(e) {
      this.painter.setBackgroundColor && this.painter.setBackgroundColor(e), this.refresh(), this._backgroundColor = e, this._darkMode = OR(e);
    }, r.prototype.getBackgroundColor = function() {
      return this._backgroundColor;
    }, r.prototype.setDarkMode = function(e) {
      this._darkMode = e;
    }, r.prototype.isDarkMode = function() {
      return this._darkMode;
    }, r.prototype.refreshImmediately = function(e) {
      e || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1;
    }, r.prototype.refresh = function() {
      this._needsRefresh = !0, this.animation.start();
    }, r.prototype.flush = function() {
      this._flush(!1);
    }, r.prototype._flush = function(e) {
      var t, n = Mo();
      this._needsRefresh && (t = !0, this.refreshImmediately(e)), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately());
      var a = Mo();
      t ? (this._stillFrameAccum = 0, this.trigger("rendered", {
        elapsedTime: a - n
      })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop());
    }, r.prototype.setSleepAfterStill = function(e) {
      this._sleepAfterStill = e;
    }, r.prototype.wakeUp = function() {
      this.animation.start(), this._stillFrameAccum = 0;
    }, r.prototype.refreshHover = function() {
      this._needsRefreshHover = !0;
    }, r.prototype.refreshHoverImmediately = function() {
      this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.getType() === "canvas" && this.painter.refreshHover();
    }, r.prototype.resize = function(e) {
      e = e || {}, this.painter.resize(e.width, e.height), this.handler.resize();
    }, r.prototype.clearAnimation = function() {
      this.animation.clear();
    }, r.prototype.getWidth = function() {
      return this.painter.getWidth();
    }, r.prototype.getHeight = function() {
      return this.painter.getHeight();
    }, r.prototype.setCursorStyle = function(e) {
      this.handler.setCursorStyle(e);
    }, r.prototype.findHover = function(e, t) {
      return this.handler.findHover(e, t);
    }, r.prototype.on = function(e, t, n) {
      return this.handler.on(e, t, n), this;
    }, r.prototype.off = function(e, t) {
      this.handler.off(e, t);
    }, r.prototype.trigger = function(e, t) {
      this.handler.trigger(e, t);
    }, r.prototype.clear = function() {
      for (var e = this.storage.getRoots(), t = 0; t < e.length; t++)
        e[t] instanceof ct && e[t].removeSelfFromZr(this);
      this.storage.delAllRoots(), this.painter.clear();
    }, r.prototype.dispose = function() {
      this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, kR(this.id);
    }, r;
  }();
  function Ed(r, e) {
    var t = new NR(Vv(), r, e);
    return pi[t.id] = t, t;
  }
  function VR(r) {
    r.dispose();
  }
  function BR() {
    for (var r in pi)
      pi.hasOwnProperty(r) && pi[r].dispose();
    pi = {};
  }
  function zR(r) {
    return pi[r];
  }
  function H1(r, e) {
    dl[r] = e;
  }
  var GR = "5.4.1", FR = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    init: Ed,
    dispose: VR,
    disposeAll: BR,
    getInstance: zR,
    registerPainter: H1,
    version: GR
  }), W1 = 1e-4, U1 = 20;
  function HR(r) {
    return r.replace(/^\s+|\s+$/g, "");
  }
  function Wt(r, e, t, n) {
    var a = e[0], i = e[1], o = t[0], s = t[1], l = i - a, u = s - o;
    if (l === 0)
      return u === 0 ? o : (o + s) / 2;
    if (n)
      if (l > 0) {
        if (r <= a)
          return o;
        if (r >= i)
          return s;
      } else {
        if (r >= a)
          return o;
        if (r <= i)
          return s;
      }
    else {
      if (r === a)
        return o;
      if (r === i)
        return s;
    }
    return (r - a) / l * u + o;
  }
  function Z(r, e) {
    switch (r) {
      case "center":
      case "middle":
        r = "50%";
        break;
      case "left":
      case "top":
        r = "0%";
        break;
      case "right":
      case "bottom":
        r = "100%";
        break;
    }
    return j(r) ? HR(r).match(/%$/) ? parseFloat(r) / 100 * e : parseFloat(r) : r == null ? NaN : +r;
  }
  function ie(r, e, t) {
    return e == null && (e = 10), e = Math.min(Math.max(0, e), U1), r = (+r).toFixed(e), t ? r : +r;
  }
  function yr(r) {
    return r.sort(function(e, t) {
      return e - t;
    }), r;
  }
  function rn(r) {
    if (r = +r, isNaN(r))
      return 0;
    if (r > 1e-14) {
      for (var e = 1, t = 0; t < 15; t++, e *= 10)
        if (Math.round(r * e) / e === r)
          return t;
    }
    return Nf(r);
  }
  function Nf(r) {
    var e = r.toString().toLowerCase(), t = e.indexOf("e"), n = t > 0 ? +e.slice(t + 1) : 0, a = t > 0 ? t : e.length, i = e.indexOf("."), o = i < 0 ? 0 : a - 1 - i;
    return Math.max(0, o - n);
  }
  function Rd(r, e) {
    var t = Math.log, n = Math.LN10, a = Math.floor(t(r[1] - r[0]) / n), i = Math.round(t(Math.abs(e[1] - e[0])) / n), o = Math.min(Math.max(-a + i, 0), 20);
    return isFinite(o) ? o : 20;
  }
  function WR(r, e, t) {
    if (!r[e])
      return 0;
    var n = Y1(r, t);
    return n[e] || 0;
  }
  function Y1(r, e) {
    var t = Ar(r, function(v, d) {
      return v + (isNaN(d) ? 0 : d);
    }, 0);
    if (t === 0)
      return [];
    for (var n = Math.pow(10, e), a = Y(r, function(v) {
      return (isNaN(v) ? 0 : v) / t * n * 100;
    }), i = n * 100, o = Y(a, function(v) {
      return Math.floor(v);
    }), s = Ar(o, function(v, d) {
      return v + d;
    }, 0), l = Y(a, function(v, d) {
      return v - o[d];
    }); s < i; ) {
      for (var u = Number.NEGATIVE_INFINITY, f = null, h = 0, c = l.length; h < c; ++h)
        l[h] > u && (u = l[h], f = h);
      ++o[f], l[f] = 0, ++s;
    }
    return Y(o, function(v) {
      return v / n;
    });
  }
  function UR(r, e) {
    var t = Math.max(rn(r), rn(e)), n = r + e;
    return t > U1 ? n : ie(n, t);
  }
  var kd = 9007199254740991;
  function Od(r) {
    var e = Math.PI * 2;
    return (r % e + e) % e;
  }
  function pl(r) {
    return r > -W1 && r < W1;
  }
  var YR = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
  function mr(r) {
    if (r instanceof Date)
      return r;
    if (j(r)) {
      var e = YR.exec(r);
      if (!e)
        return /* @__PURE__ */ new Date(NaN);
      if (e[8]) {
        var t = +e[4] || 0;
        return e[8].toUpperCase() !== "Z" && (t -= +e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, t, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0));
      } else
        return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0);
    } else if (r == null)
      return /* @__PURE__ */ new Date(NaN);
    return new Date(Math.round(r));
  }
  function $1(r) {
    return Math.pow(10, gl(r));
  }
  function gl(r) {
    if (r === 0)
      return 0;
    var e = Math.floor(Math.log(r) / Math.LN10);
    return r / Math.pow(10, e) >= 10 && e++, e;
  }
  function Nd(r, e) {
    var t = gl(r), n = Math.pow(10, t), a = r / n, i;
    return e ? a < 1.5 ? i = 1 : a < 2.5 ? i = 2 : a < 4 ? i = 3 : a < 7 ? i = 5 : i = 10 : a < 1 ? i = 1 : a < 2 ? i = 2 : a < 3 ? i = 3 : a < 5 ? i = 5 : i = 10, r = i * n, t >= -20 ? +r.toFixed(t < 0 ? -t : 0) : r;
  }
  function Vf(r, e) {
    var t = (r.length - 1) * e + 1, n = Math.floor(t), a = +r[n - 1], i = t - n;
    return i ? a + i * (r[n] - a) : a;
  }
  function Vd(r) {
    r.sort(function(l, u) {
      return s(l, u, 0) ? -1 : 1;
    });
    for (var e = -1 / 0, t = 1, n = 0; n < r.length; ) {
      for (var a = r[n].interval, i = r[n].close, o = 0; o < 2; o++)
        a[o] <= e && (a[o] = e, i[o] = o ? 1 : 1 - t), e = a[o], t = i[o];
      a[0] === a[1] && i[0] * i[1] !== 1 ? r.splice(n, 1) : n++;
    }
    return r;
    function s(l, u, f) {
      return l.interval[f] < u.interval[f] || l.interval[f] === u.interval[f] && (l.close[f] - u.close[f] === (f ? -1 : 1) || !f && s(l, u, 1));
    }
  }
  function xn(r) {
    var e = parseFloat(r);
    return e == r && (e !== 0 || !j(r) || r.indexOf("x") <= 0) ? e : NaN;
  }
  function Bf(r) {
    return !isNaN(xn(r));
  }
  function X1() {
    return Math.round(Math.random() * 9);
  }
  function Z1(r, e) {
    return e === 0 ? r : Z1(e, r % e);
  }
  function q1(r, e) {
    return r == null ? e : e == null ? r : r * e / Z1(r, e);
  }
  var $R = "[ECharts] ", K1 = {}, XR = typeof console < "u" && console.warn && console.log;
  function zf(r, e, t) {
    if (XR) {
      if (t) {
        if (K1[e])
          return;
        K1[e] = !0;
      }
      console[r]($R + e);
    }
  }
  function ZR(r, e) {
    zf("log", r, e);
  }
  function ae(r, e) {
    zf("warn", r, e);
  }
  function Ee(r, e) {
    zf("error", r, e);
  }
  function Rr(r) {
    zf("warn", "DEPRECATED: " + r, !0);
  }
  function ce(r, e, t) {
    Rr((t ? "[" + t + "]" : "") + (r + " is deprecated, use " + e + " instead."));
  }
  function Ke() {
    for (var r = [], e = 0; e < arguments.length; e++)
      r[e] = arguments[e];
    var t = "";
    {
      var n = function(a) {
        return a === void 0 ? "undefined" : a === 1 / 0 ? "Infinity" : a === -1 / 0 ? "-Infinity" : ca(a) ? "NaN" : a instanceof Date ? "Date(" + a.toISOString() + ")" : rt(a) ? "function () { ... }" : Gv(a) ? a + "" : null;
      };
      t = Y(r, function(a) {
        if (j(a))
          return a;
        var i = n(a);
        if (i != null)
          return i;
        if (typeof JSON < "u" && JSON.stringify)
          try {
            return JSON.stringify(a, function(o, s) {
              var l = n(s);
              return l ?? s;
            });
          } catch {
            return "?";
          }
        else
          return "?";
      }).join(" ");
    }
    return t;
  }
  function Ft(r) {
    throw new Error(r);
  }
  function j1(r, e, t) {
    return (e - r) * t + r;
  }
  var J1 = "series\0", Q1 = "\0_ec_\0";
  function Xt(r) {
    return r instanceof Array ? r : r == null ? [] : [r];
  }
  function gi(r, e, t) {
    if (r) {
      r[e] = r[e] || {}, r.emphasis = r.emphasis || {}, r.emphasis[e] = r.emphasis[e] || {};
      for (var n = 0, a = t.length; n < a; n++) {
        var i = t[n];
        !r.emphasis[e].hasOwnProperty(i) && r[e].hasOwnProperty(i) && (r.emphasis[e][i] = r[e][i]);
      }
    }
  }
  var tS = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
  function Eo(r) {
    return it(r) && !U(r) && !(r instanceof Date) ? r.value : r;
  }
  function qR(r) {
    return it(r) && !(r instanceof Array);
  }
  function eS(r, e, t) {
    var n = t === "normalMerge", a = t === "replaceMerge", i = t === "replaceAll";
    r = r || [], e = (e || []).slice();
    var o = nt();
    M(e, function(l, u) {
      if (!it(l)) {
        e[u] = null;
        return;
      }
      l.id != null && !aS(l.id) && nS(l.id), l.name != null && !aS(l.name) && nS(l.name);
    });
    var s = KR(r, o, t);
    return (n || a) && jR(s, r, o, e), n && JR(s, e), n || a ? QR(s, e, a) : i && tk(s, e), ek(s), s;
  }
  function KR(r, e, t) {
    var n = [];
    if (t === "replaceAll")
      return n;
    for (var a = 0; a < r.length; a++) {
      var i = r[a];
      i && i.id != null && e.set(i.id, a), n.push({
        existing: t === "replaceMerge" || Ro(i) ? null : i,
        newOption: null,
        keyInfo: null,
        brandNew: null
      });
    }
    return n;
  }
  function jR(r, e, t, n) {
    M(n, function(a, i) {
      if (!(!a || a.id == null)) {
        var o = yl(a.id), s = t.get(o);
        if (s != null) {
          var l = r[s];
          st(!l.newOption, 'Duplicated option on id "' + o + '".'), l.newOption = a, l.existing = e[s], n[i] = null;
        }
      }
    });
  }
  function JR(r, e) {
    M(e, function(t, n) {
      if (!(!t || t.name == null))
        for (var a = 0; a < r.length; a++) {
          var i = r[a].existing;
          if (!r[a].newOption && i && (i.id == null || t.id == null) && !Ro(t) && !Ro(i) && rS("name", i, t)) {
            r[a].newOption = t, e[n] = null;
            return;
          }
        }
    });
  }
  function QR(r, e, t) {
    M(e, function(n) {
      if (n) {
        for (
          var a, i = 0;
          // Be `!resultItem` only when `nextIdx >= result.length`.
          (a = r[i]) && // (1) Existing models that already have id should be able to mapped to. Because
          // after mapping performed, model will always be assigned with an id if user not given.
          // After that all models have id.
          // (2) If new option has id, it can only set to a hole or append to the last. It should
          // not be merged to the existings with different id. Because id should not be overwritten.
          // (3) Name can be overwritten, because axis use name as 'show label text'.
          (a.newOption || Ro(a.existing) || // In mode "replaceMerge", here no not-mapped-non-internal-existing.
          a.existing && n.id != null && !rS("id", n, a.existing));
        )
          i++;
        a ? (a.newOption = n, a.brandNew = t) : r.push({
          newOption: n,
          brandNew: t,
          existing: null,
          keyInfo: null
        }), i++;
      }
    });
  }
  function tk(r, e) {
    M(e, function(t) {
      r.push({
        newOption: t,
        brandNew: !0,
        existing: null,
        keyInfo: null
      });
    });
  }
  function ek(r) {
    var e = nt();
    M(r, function(t) {
      var n = t.existing;
      n && e.set(n.id, t);
    }), M(r, function(t) {
      var n = t.newOption;
      st(!n || n.id == null || !e.get(n.id) || e.get(n.id) === t, "id duplicates: " + (n && n.id)), n && n.id != null && e.set(n.id, t), !t.keyInfo && (t.keyInfo = {});
    }), M(r, function(t, n) {
      var a = t.existing, i = t.newOption, o = t.keyInfo;
      if (it(i)) {
        if (o.name = i.name != null ? yl(i.name) : a ? a.name : J1 + n, a)
          o.id = yl(a.id);
        else if (i.id != null)
          o.id = yl(i.id);
        else {
          var s = 0;
          do
            o.id = "\0" + o.name + "\0" + s++;
          while (e.get(o.id));
        }
        e.set(o.id, t);
      }
    });
  }
  function rS(r, e, t) {
    var n = _e(e[r], null), a = _e(t[r], null);
    return n != null && a != null && n === a;
  }
  function yl(r) {
    if (r == null)
      throw new Error();
    return _e(r, "");
  }
  function _e(r, e) {
    return r == null ? e : j(r) ? r : Ot(r) || Gs(r) ? r + "" : e;
  }
  function nS(r) {
    ae("`" + r + "` is invalid id or name. Must be a string or number.");
  }
  function aS(r) {
    return Gs(r) || Bf(r);
  }
  function Bd(r) {
    var e = r.name;
    return !!(e && e.indexOf(J1));
  }
  function Ro(r) {
    return r && r.id != null && yl(r.id).indexOf(Q1) === 0;
  }
  function rk(r) {
    return Q1 + r;
  }
  function nk(r, e, t) {
    M(r, function(n) {
      var a = n.newOption;
      it(a) && (n.keyInfo.mainType = e, n.keyInfo.subType = ak(e, a, n.existing, t));
    });
  }
  function ak(r, e, t, n) {
    var a = e.type ? e.type : t ? t.subType : n.determineSubType(r, e);
    return a;
  }
  function ik(r, e) {
    var t = {}, n = {};
    return a(r || [], t), a(e || [], n, t), [i(t), i(n)];
    function a(o, s, l) {
      for (var u = 0, f = o.length; u < f; u++) {
        var h = _e(o[u].seriesId, null);
        if (h == null)
          return;
        for (var c = Xt(o[u].dataIndex), v = l && l[h], d = 0, p = c.length; d < p; d++) {
          var g = c[d];
          v && v[g] ? v[g] = null : (s[h] || (s[h] = {}))[g] = 1;
        }
      }
    }
    function i(o, s) {
      var l = [];
      for (var u in o)
        if (o.hasOwnProperty(u) && o[u] != null)
          if (s)
            l.push(+u);
          else {
            var f = i(o[u], !0);
            f.length && l.push({
              seriesId: u,
              dataIndex: f
            });
          }
      return l;
    }
  }
  function yi(r, e) {
    if (e.dataIndexInside != null)
      return e.dataIndexInside;
    if (e.dataIndex != null)
      return U(e.dataIndex) ? Y(e.dataIndex, function(t) {
        return r.indexOfRawIndex(t);
      }) : r.indexOfRawIndex(e.dataIndex);
    if (e.name != null)
      return U(e.name) ? Y(e.name, function(t) {
        return r.indexOfName(t);
      }) : r.indexOfName(e.name);
  }
  function Nt() {
    var r = "__ec_inner_" + ok++;
    return function(e) {
      return e[r] || (e[r] = {});
    };
  }
  var ok = X1();
  function ml(r, e, t) {
    var n = zd(e, t), a = n.mainTypeSpecified, i = n.queryOptionMap, o = n.others, s = o, l = t ? t.defaultMainType : null;
    return !a && l && i.set(l, {}), i.each(function(u, f) {
      var h = _l(r, f, u, {
        useDefault: l === f,
        enableAll: t && t.enableAll != null ? t.enableAll : !0,
        enableNone: t && t.enableNone != null ? t.enableNone : !0
      });
      s[f + "Models"] = h.models, s[f + "Model"] = h.models[0];
    }), s;
  }
  function zd(r, e) {
    var t;
    if (j(r)) {
      var n = {};
      n[r + "Index"] = 0, t = n;
    } else
      t = r;
    var a = nt(), i = {}, o = !1;
    return M(t, function(s, l) {
      if (l === "dataIndex" || l === "dataIndexInside") {
        i[l] = s;
        return;
      }
      var u = l.match(/^(\w+)(Index|Id|Name)$/) || [], f = u[1], h = (u[2] || "").toLowerCase();
      if (!(!f || !h || e && e.includeMainTypes && bt(e.includeMainTypes, f) < 0)) {
        o = o || !!f;
        var c = a.get(f) || a.set(f, {});
        c[h] = s;
      }
    }), {
      mainTypeSpecified: o,
      queryOptionMap: a,
      others: i
    };
  }
  var ge = {
    useDefault: !0,
    enableAll: !1,
    enableNone: !1
  }, sk = {
    useDefault: !1,
    enableAll: !0,
    enableNone: !0
  };
  function _l(r, e, t, n) {
    n = n || ge;
    var a = t.index, i = t.id, o = t.name, s = {
      models: null,
      specified: a != null || i != null || o != null
    };
    if (!s.specified) {
      var l = void 0;
      return s.models = n.useDefault && (l = r.getComponent(e)) ? [l] : [], s;
    }
    return a === "none" || a === !1 ? (st(n.enableNone, '`"none"` or `false` is not a valid value on index option.'), s.models = [], s) : (a === "all" && (st(n.enableAll, '`"all"` is not a valid value on index option.'), a = i = o = null), s.models = r.queryComponents({
      mainType: e,
      index: a,
      id: i,
      name: o
    }), s);
  }
  function iS(r, e, t) {
    r.setAttribute ? r.setAttribute(e, t) : r[e] = t;
  }
  function lk(r, e) {
    return r.getAttribute ? r.getAttribute(e) : r[e];
  }
  function uk(r) {
    return r === "auto" ? z.domSupported ? "html" : "richText" : r || "html";
  }
  function Gd(r, e) {
    var t = nt(), n = [];
    return M(r, function(a) {
      var i = e(a);
      (t.get(i) || (n.push(i), t.set(i, []))).push(a);
    }), {
      keys: n,
      buckets: t
    };
  }
  function oS(r, e, t, n, a) {
    var i = e == null || e === "auto";
    if (n == null)
      return n;
    if (Ot(n)) {
      var o = j1(t || 0, n, a);
      return ie(o, i ? Math.max(rn(t || 0), rn(n)) : e);
    } else {
      if (j(n))
        return a < 1 ? t : n;
      for (var s = [], l = t, u = n, f = Math.max(l ? l.length : 0, u.length), h = 0; h < f; ++h) {
        var c = r.getDimensionInfo(h);
        if (c && c.type === "ordinal")
          s[h] = (a < 1 && l ? l : u)[h];
        else {
          var v = l && l[h] ? l[h] : 0, d = u[h], o = j1(v, d, a);
          s[h] = ie(o, i ? Math.max(rn(v), rn(d)) : e);
        }
      }
      return s;
    }
  }
  var fk = ".", mi = "___EC__COMPONENT__CONTAINER___", sS = "___EC__EXTENDED_CLASS___";
  function wn(r) {
    var e = {
      main: "",
      sub: ""
    };
    if (r) {
      var t = r.split(fk);
      e.main = t[0] || "", e.sub = t[1] || "";
    }
    return e;
  }
  function hk(r) {
    st(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(r), 'componentType "' + r + '" illegal');
  }
  function ck(r) {
    return !!(r && r[sS]);
  }
  function Fd(r, e) {
    r.$constructor = r, r.extend = function(t) {
      M(e, function(i) {
        t[i] || console.warn("Method `" + i + "` should be implemented" + (t.type ? " in " + t.type : "") + ".");
      });
      var n = this, a;
      return vk(n) ? a = /** @class */
      function(i) {
        A(o, i);
        function o() {
          return i.apply(this, arguments) || this;
        }
        return o;
      }(n) : (a = function() {
        (t.$constructor || n).apply(this, arguments);
      }, Bv(a, this)), H(a.prototype, t), a[sS] = !0, a.extend = this.extend, a.superCall = gk, a.superApply = yk, a.superClass = n, a;
    };
  }
  function vk(r) {
    return rt(r) && /^class\s/.test(Function.prototype.toString.call(r));
  }
  function lS(r, e) {
    r.extend = e.extend;
  }
  var dk = Math.round(Math.random() * 10);
  function pk(r) {
    var e = ["__\0is_clz", dk++].join("_");
    r.prototype[e] = !0, st(!r.isInstance, 'The method "is" can not be defined.'), r.isInstance = function(t) {
      return !!(t && t[e]);
    };
  }
  function gk(r, e) {
    for (var t = [], n = 2; n < arguments.length; n++)
      t[n - 2] = arguments[n];
    return this.superClass.prototype[e].apply(r, t);
  }
  function yk(r, e, t) {
    return this.superClass.prototype[e].apply(r, t);
  }
  function Gf(r) {
    var e = {};
    r.registerClass = function(n) {
      var a = n.type || n.prototype.type;
      if (a) {
        hk(a), n.prototype.type = a;
        var i = wn(a);
        if (!i.sub)
          e[i.main] && console.warn(i.main + " exists."), e[i.main] = n;
        else if (i.sub !== mi) {
          var o = t(i);
          o[i.sub] = n;
        }
      }
      return n;
    }, r.getClass = function(n, a, i) {
      var o = e[n];
      if (o && o[mi] && (o = a ? o[a] : null), i && !o)
        throw new Error(a ? "Component " + n + "." + (a || "") + " is used but not imported." : n + ".type should be specified.");
      return o;
    }, r.getClassesByMainType = function(n) {
      var a = wn(n), i = [], o = e[a.main];
      return o && o[mi] ? M(o, function(s, l) {
        l !== mi && i.push(s);
      }) : i.push(o), i;
    }, r.hasClass = function(n) {
      var a = wn(n);
      return !!e[a.main];
    }, r.getAllClassMainTypes = function() {
      var n = [];
      return M(e, function(a, i) {
        n.push(i);
      }), n;
    }, r.hasSubTypes = function(n) {
      var a = wn(n), i = e[a.main];
      return i && i[mi];
    };
    function t(n) {
      var a = e[n.main];
      return (!a || !a[mi]) && (a = e[n.main] = {}, a[mi] = !0), a;
    }
  }
  function _i(r, e) {
    for (var t = 0; t < r.length; t++)
      r[t][1] || (r[t][1] = r[t][0]);
    return e = e || !1, function(n, a, i) {
      for (var o = {}, s = 0; s < r.length; s++) {
        var l = r[s][1];
        if (!(a && bt(a, l) >= 0 || i && bt(i, l) < 0)) {
          var u = n.getShallow(l, e);
          u != null && (o[r[s][0]] = u);
        }
      }
      return o;
    };
  }
  var mk = [
    ["fill", "color"],
    ["shadowBlur"],
    ["shadowOffsetX"],
    ["shadowOffsetY"],
    ["opacity"],
    ["shadowColor"]
    // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
    // So do not transfer decal directly.
  ], _k = _i(mk), Sk = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getAreaStyle = function(e, t) {
        return _k(this, e, t);
      }, r;
    }()
  ), Hd = new nl(50);
  function xk(r) {
    if (typeof r == "string") {
      var e = Hd.get(r);
      return e && e.image;
    } else
      return r;
  }
  function Wd(r, e, t, n, a) {
    if (r)
      if (typeof r == "string") {
        if (e && e.__zrImageSrc === r || !t)
          return e;
        var i = Hd.get(r), o = { hostEl: t, cb: n, cbPayload: a };
        return i ? (e = i.image, !Ff(e) && i.pending.push(o)) : (e = qt.loadImage(r, uS, uS), e.__zrImageSrc = r, Hd.put(r, e.__cachedImgObj = {
          image: e,
          pending: [o]
        })), e;
      } else
        return r;
    else
      return e;
  }
  function uS() {
    var r = this.__cachedImgObj;
    this.onload = this.onerror = this.__cachedImgObj = null;
    for (var e = 0; e < r.pending.length; e++) {
      var t = r.pending[e], n = t.cb;
      n && n(this, t.cbPayload), t.hostEl.dirty();
    }
    r.pending.length = 0;
  }
  function Ff(r) {
    return r && r.width && r.height;
  }
  var Ud = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
  function fS(r, e, t, n, a) {
    if (!e)
      return "";
    var i = (r + "").split(`
`);
    a = hS(e, t, n, a);
    for (var o = 0, s = i.length; o < s; o++)
      i[o] = cS(i[o], a);
    return i.join(`
`);
  }
  function hS(r, e, t, n) {
    n = n || {};
    var a = H({}, n);
    a.font = e, t = _t(t, "..."), a.maxIterations = _t(n.maxIterations, 2);
    var i = a.minChar = _t(n.minChar, 0);
    a.cnCharWidth = gr("国", e);
    var o = a.ascCharWidth = gr("a", e);
    a.placeholder = _t(n.placeholder, "");
    for (var s = r = Math.max(0, r - 1), l = 0; l < i && s >= o; l++)
      s -= o;
    var u = gr(t, e);
    return u > s && (t = "", u = 0), s = r - u, a.ellipsis = t, a.ellipsisWidth = u, a.contentWidth = s, a.containerWidth = r, a;
  }
  function cS(r, e) {
    var t = e.containerWidth, n = e.font, a = e.contentWidth;
    if (!t)
      return "";
    var i = gr(r, n);
    if (i <= t)
      return r;
    for (var o = 0; ; o++) {
      if (i <= a || o >= e.maxIterations) {
        r += e.ellipsis;
        break;
      }
      var s = o === 0 ? wk(r, a, e.ascCharWidth, e.cnCharWidth) : i > 0 ? Math.floor(r.length * a / i) : 0;
      r = r.substr(0, s), i = gr(r, n);
    }
    return r === "" && (r = e.placeholder), r;
  }
  function wk(r, e, t, n) {
    for (var a = 0, i = 0, o = r.length; i < o && a < e; i++) {
      var s = r.charCodeAt(i);
      a += 0 <= s && s <= 127 ? t : n;
    }
    return i;
  }
  function bk(r, e) {
    r != null && (r += "");
    var t = e.overflow, n = e.padding, a = e.font, i = t === "truncate", o = Rf(a), s = _t(e.lineHeight, o), l = !!e.backgroundColor, u = e.lineOverflow === "truncate", f = e.width, h;
    f != null && (t === "break" || t === "breakAll") ? h = r ? dS(r, e.font, f, t === "breakAll", 0).lines : [] : h = r ? r.split(`
`) : [];
    var c = h.length * s, v = _t(e.height, c);
    if (c > v && u) {
      var d = Math.floor(v / s);
      h = h.slice(0, d);
    }
    if (r && i && f != null)
      for (var p = hS(f, a, e.ellipsis, {
        minChar: e.truncateMinChar,
        placeholder: e.placeholder
      }), g = 0; g < h.length; g++)
        h[g] = cS(h[g], p);
    for (var y = v, m = 0, g = 0; g < h.length; g++)
      m = Math.max(gr(h[g], a), m);
    f == null && (f = m);
    var _ = m;
    return n && (y += n[0] + n[2], _ += n[1] + n[3], f += n[1] + n[3]), l && (_ = f), {
      lines: h,
      height: v,
      outerWidth: _,
      outerHeight: y,
      lineHeight: s,
      calculatedLineHeight: o,
      contentWidth: m,
      contentHeight: c,
      width: f
    };
  }
  var Tk = function() {
    function r() {
    }
    return r;
  }(), vS = function() {
    function r(e) {
      this.tokens = [], e && (this.tokens = e);
    }
    return r;
  }(), Ck = function() {
    function r() {
      this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [];
    }
    return r;
  }();
  function Ak(r, e) {
    var t = new Ck();
    if (r != null && (r += ""), !r)
      return t;
    for (var n = e.width, a = e.height, i = e.overflow, o = (i === "break" || i === "breakAll") && n != null ? { width: n, accumWidth: 0, breakAll: i === "breakAll" } : null, s = Ud.lastIndex = 0, l; (l = Ud.exec(r)) != null; ) {
      var u = l.index;
      u > s && Yd(t, r.substring(s, u), e, o), Yd(t, l[2], e, o, l[1]), s = Ud.lastIndex;
    }
    s < r.length && Yd(t, r.substring(s, r.length), e, o);
    var f = [], h = 0, c = 0, v = e.padding, d = i === "truncate", p = e.lineOverflow === "truncate";
    function g(G, W, X) {
      G.width = W, G.lineHeight = X, h += X, c = Math.max(c, W);
    }
    t:
      for (var y = 0; y < t.lines.length; y++) {
        for (var m = t.lines[y], _ = 0, S = 0, b = 0; b < m.tokens.length; b++) {
          var w = m.tokens[b], T = w.styleName && e.rich[w.styleName] || {}, C = w.textPadding = T.padding, I = C ? C[1] + C[3] : 0, L = w.font = T.font || e.font;
          w.contentHeight = Rf(L);
          var P = _t(T.height, w.contentHeight);
          if (w.innerHeight = P, C && (P += C[0] + C[2]), w.height = P, w.lineHeight = Dr(T.lineHeight, e.lineHeight, P), w.align = T && T.align || e.align, w.verticalAlign = T && T.verticalAlign || "middle", p && a != null && h + w.lineHeight > a) {
            b > 0 ? (m.tokens = m.tokens.slice(0, b), g(m, S, _), t.lines = t.lines.slice(0, y + 1)) : t.lines = t.lines.slice(0, y);
            break t;
          }
          var E = T.width, R = E == null || E === "auto";
          if (typeof E == "string" && E.charAt(E.length - 1) === "%")
            w.percentWidth = E, f.push(w), w.contentWidth = gr(w.text, L);
          else {
            if (R) {
              var k = T.backgroundColor, O = k && k.image;
              O && (O = xk(O), Ff(O) && (w.width = Math.max(w.width, O.width * P / O.height)));
            }
            var N = d && n != null ? n - S : null;
            N != null && N < w.width ? !R || N < I ? (w.text = "", w.width = w.contentWidth = 0) : (w.text = fS(w.text, N - I, L, e.ellipsis, { minChar: e.truncateMinChar }), w.width = w.contentWidth = gr(w.text, L)) : w.contentWidth = gr(w.text, L);
          }
          w.width += I, S += w.width, T && (_ = Math.max(_, w.lineHeight));
        }
        g(m, S, _);
      }
    t.outerWidth = t.width = _t(n, c), t.outerHeight = t.height = _t(a, h), t.contentHeight = h, t.contentWidth = c, v && (t.outerWidth += v[1] + v[3], t.outerHeight += v[0] + v[2]);
    for (var y = 0; y < f.length; y++) {
      var w = f[y], F = w.percentWidth;
      w.width = parseInt(F, 10) / 100 * t.width;
    }
    return t;
  }
  function Yd(r, e, t, n, a) {
    var i = e === "", o = a && t.rich[a] || {}, s = r.lines, l = o.font || t.font, u = !1, f, h;
    if (n) {
      var c = o.padding, v = c ? c[1] + c[3] : 0;
      if (o.width != null && o.width !== "auto") {
        var d = en(o.width, n.width) + v;
        s.length > 0 && d + n.accumWidth > n.width && (f = e.split(`
`), u = !0), n.accumWidth = d;
      } else {
        var p = dS(e, l, n.width, n.breakAll, n.accumWidth);
        n.accumWidth = p.accumWidth + v, h = p.linesWidths, f = p.lines;
      }
    } else
      f = e.split(`
`);
    for (var g = 0; g < f.length; g++) {
      var y = f[g], m = new Tk();
      if (m.styleName = a, m.text = y, m.isLineHolder = !y && !i, typeof o.width == "number" ? m.width = o.width : m.width = h ? h[g] : gr(y, l), !g && !u) {
        var _ = (s[s.length - 1] || (s[0] = new vS())).tokens, S = _.length;
        S === 1 && _[0].isLineHolder ? _[0] = m : (y || !S || i) && _.push(m);
      } else
        s.push(new vS([m]));
    }
  }
  function Dk(r) {
    var e = r.charCodeAt(0);
    return e >= 33 && e <= 383;
  }
  var Mk = Ar(",&?/;] ".split(""), function(r, e) {
    return r[e] = !0, r;
  }, {});
  function Ik(r) {
    return Dk(r) ? !!Mk[r] : !0;
  }
  function dS(r, e, t, n, a) {
    for (var i = [], o = [], s = "", l = "", u = 0, f = 0, h = 0; h < r.length; h++) {
      var c = r.charAt(h);
      if (c === `
`) {
        l && (s += l, f += u), i.push(s), o.push(f), s = "", l = "", u = 0, f = 0;
        continue;
      }
      var v = gr(c, e), d = n ? !1 : !Ik(c);
      if (i.length ? f + v > t : a + f + v > t) {
        f ? (s || l) && (d ? (s || (s = l, l = "", u = 0, f = u), i.push(s), o.push(f - u), l += c, u += v, s = "", f = u) : (l && (s += l, l = "", u = 0), i.push(s), o.push(f), s = c, f = v)) : d ? (i.push(l), o.push(u), l = c, u = v) : (i.push(c), o.push(v));
        continue;
      }
      f += v, d ? (l += c, u += v) : (l && (s += l, l = "", u = 0), s += c);
    }
    return !i.length && !s && (s = r, l = "", u = 0), l && (s += l), s && (i.push(s), o.push(f)), i.length === 1 && (f += a), {
      accumWidth: f,
      lines: i,
      linesWidths: o
    };
  }
  var $d = "__zr_style_" + Math.round(Math.random() * 10), Si = {
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    shadowColor: "#000",
    opacity: 1,
    blend: "source-over"
  }, Hf = {
    style: {
      shadowBlur: !0,
      shadowOffsetX: !0,
      shadowOffsetY: !0,
      shadowColor: !0,
      opacity: !0
    }
  };
  Si[$d] = !0;
  var pS = ["z", "z2", "invisible"], Lk = ["invisible"], kr = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype._init = function(t) {
      for (var n = Pt(t), a = 0; a < n.length; a++) {
        var i = n[a];
        i === "style" ? this.useStyle(t[i]) : r.prototype.attrKV.call(this, i, t[i]);
      }
      this.style || this.useStyle({});
    }, e.prototype.beforeBrush = function() {
    }, e.prototype.afterBrush = function() {
    }, e.prototype.innerBeforeBrush = function() {
    }, e.prototype.innerAfterBrush = function() {
    }, e.prototype.shouldBePainted = function(t, n, a, i) {
      var o = this.transform;
      if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && Pk(this, t, n) || o && !o[0] && !o[3])
        return !1;
      if (a && this.__clipPaths) {
        for (var s = 0; s < this.__clipPaths.length; ++s)
          if (this.__clipPaths[s].isZeroArea())
            return !1;
      }
      if (i && this.parent)
        for (var l = this.parent; l; ) {
          if (l.ignore)
            return !1;
          l = l.parent;
        }
      return !0;
    }, e.prototype.contain = function(t, n) {
      return this.rectContain(t, n);
    }, e.prototype.traverse = function(t, n) {
      t.call(n, this);
    }, e.prototype.rectContain = function(t, n) {
      var a = this.transformCoordToLocal(t, n), i = this.getBoundingRect();
      return i.contain(a[0], a[1]);
    }, e.prototype.getPaintRect = function() {
      var t = this._paintRect;
      if (!this._paintRect || this.__dirty) {
        var n = this.transform, a = this.getBoundingRect(), i = this.style, o = i.shadowBlur || 0, s = i.shadowOffsetX || 0, l = i.shadowOffsetY || 0;
        t = this._paintRect || (this._paintRect = new xt(0, 0, 0, 0)), n ? xt.applyTransform(t, a, n) : t.copy(a), (o || s || l) && (t.width += o * 2 + Math.abs(s), t.height += o * 2 + Math.abs(l), t.x = Math.min(t.x, t.x + s - o), t.y = Math.min(t.y, t.y + l - o));
        var u = this.dirtyRectTolerance;
        t.isZero() || (t.x = Math.floor(t.x - u), t.y = Math.floor(t.y - u), t.width = Math.ceil(t.width + 1 + u * 2), t.height = Math.ceil(t.height + 1 + u * 2));
      }
      return t;
    }, e.prototype.setPrevPaintRect = function(t) {
      t ? (this._prevPaintRect = this._prevPaintRect || new xt(0, 0, 0, 0), this._prevPaintRect.copy(t)) : this._prevPaintRect = null;
    }, e.prototype.getPrevPaintRect = function() {
      return this._prevPaintRect;
    }, e.prototype.animateStyle = function(t) {
      return this.animate("style", t);
    }, e.prototype.updateDuringAnimation = function(t) {
      t === "style" ? this.dirtyStyle() : this.markRedraw();
    }, e.prototype.attrKV = function(t, n) {
      t !== "style" ? r.prototype.attrKV.call(this, t, n) : this.style ? this.setStyle(n) : this.useStyle(n);
    }, e.prototype.setStyle = function(t, n) {
      return typeof t == "string" ? this.style[t] = n : H(this.style, t), this.dirtyStyle(), this;
    }, e.prototype.dirtyStyle = function(t) {
      t || this.markRedraw(), this.__dirty |= tl, this._rect && (this._rect = null);
    }, e.prototype.dirty = function() {
      this.dirtyStyle();
    }, e.prototype.styleChanged = function() {
      return !!(this.__dirty & tl);
    }, e.prototype.styleUpdated = function() {
      this.__dirty &= ~tl;
    }, e.prototype.createStyle = function(t) {
      return Us(Si, t);
    }, e.prototype.useStyle = function(t) {
      t[$d] || (t = this.createStyle(t)), this.__inHover ? this.__hoverStyle = t : this.style = t, this.dirtyStyle();
    }, e.prototype.isStyleObject = function(t) {
      return t[$d];
    }, e.prototype._innerSaveToNormal = function(t) {
      r.prototype._innerSaveToNormal.call(this, t);
      var n = this._normalState;
      t.style && !n.style && (n.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(t, n, pS);
    }, e.prototype._applyStateObj = function(t, n, a, i, o, s) {
      r.prototype._applyStateObj.call(this, t, n, a, i, o, s);
      var l = !(n && i), u;
      if (n && n.style ? o ? i ? u = n.style : (u = this._mergeStyle(this.createStyle(), a.style), this._mergeStyle(u, n.style)) : (u = this._mergeStyle(this.createStyle(), i ? this.style : a.style), this._mergeStyle(u, n.style)) : l && (u = a.style), u)
        if (o) {
          var f = this.style;
          if (this.style = this.createStyle(l ? {} : f), l)
            for (var h = Pt(f), c = 0; c < h.length; c++) {
              var v = h[c];
              v in u && (u[v] = u[v], this.style[v] = f[v]);
            }
          for (var d = Pt(u), c = 0; c < d.length; c++) {
            var v = d[c];
            this.style[v] = this.style[v];
          }
          this._transitionState(t, {
            style: u
          }, s, this.getAnimationStyleProps());
        } else
          this.useStyle(u);
      for (var p = this.__inHover ? Lk : pS, c = 0; c < p.length; c++) {
        var v = p[c];
        n && n[v] != null ? this[v] = n[v] : l && a[v] != null && (this[v] = a[v]);
      }
    }, e.prototype._mergeStates = function(t) {
      for (var n = r.prototype._mergeStates.call(this, t), a, i = 0; i < t.length; i++) {
        var o = t[i];
        o.style && (a = a || {}, this._mergeStyle(a, o.style));
      }
      return a && (n.style = a), n;
    }, e.prototype._mergeStyle = function(t, n) {
      return H(t, n), t;
    }, e.prototype.getAnimationStyleProps = function() {
      return Hf;
    }, e.initDefaultProps = function() {
      var t = e.prototype;
      t.type = "displayable", t.invisible = !1, t.z = 0, t.z2 = 0, t.zlevel = 0, t.culling = !1, t.cursor = "pointer", t.rectHover = !1, t.incremental = !1, t._rect = null, t.dirtyRectTolerance = 0, t.__dirty = pr | tl;
    }(), e;
  }(Of), Xd = new xt(0, 0, 0, 0), Zd = new xt(0, 0, 0, 0);
  function Pk(r, e, t) {
    return Xd.copy(r.getBoundingRect()), r.transform && Xd.applyTransform(r.transform), Zd.width = e, Zd.height = t, !Xd.intersect(Zd);
  }
  var or = Math.min, sr = Math.max, qd = Math.sin, Kd = Math.cos, xi = Math.PI * 2, Wf = va(), Uf = va(), Yf = va();
  function $f(r, e, t) {
    if (r.length !== 0) {
      for (var n = r[0], a = n[0], i = n[0], o = n[1], s = n[1], l = 1; l < r.length; l++)
        n = r[l], a = or(a, n[0]), i = sr(i, n[0]), o = or(o, n[1]), s = sr(s, n[1]);
      e[0] = a, e[1] = o, t[0] = i, t[1] = s;
    }
  }
  function gS(r, e, t, n, a, i) {
    a[0] = or(r, t), a[1] = or(e, n), i[0] = sr(r, t), i[1] = sr(e, n);
  }
  var yS = [], mS = [];
  function Ek(r, e, t, n, a, i, o, s, l, u) {
    var f = v1, h = be, c = f(r, t, a, o, yS);
    l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0;
    for (var v = 0; v < c; v++) {
      var d = h(r, t, a, o, yS[v]);
      l[0] = or(d, l[0]), u[0] = sr(d, u[0]);
    }
    c = f(e, n, i, s, mS);
    for (var v = 0; v < c; v++) {
      var p = h(e, n, i, s, mS[v]);
      l[1] = or(p, l[1]), u[1] = sr(p, u[1]);
    }
    l[0] = or(r, l[0]), u[0] = sr(r, u[0]), l[0] = or(o, l[0]), u[0] = sr(o, u[0]), l[1] = or(e, l[1]), u[1] = sr(e, u[1]), l[1] = or(s, l[1]), u[1] = sr(s, u[1]);
  }
  function Rk(r, e, t, n, a, i, o, s) {
    var l = p1, u = Le, f = sr(or(l(r, t, a), 1), 0), h = sr(or(l(e, n, i), 1), 0), c = u(r, t, a, f), v = u(e, n, i, h);
    o[0] = or(r, a, c), o[1] = or(e, i, v), s[0] = sr(r, a, c), s[1] = sr(e, i, v);
  }
  function kk(r, e, t, n, a, i, o, s, l) {
    var u = Wn, f = Un, h = Math.abs(a - i);
    if (h % xi < 1e-4 && h > 1e-4) {
      s[0] = r - t, s[1] = e - n, l[0] = r + t, l[1] = e + n;
      return;
    }
    if (Wf[0] = Kd(a) * t + r, Wf[1] = qd(a) * n + e, Uf[0] = Kd(i) * t + r, Uf[1] = qd(i) * n + e, u(s, Wf, Uf), f(l, Wf, Uf), a = a % xi, a < 0 && (a = a + xi), i = i % xi, i < 0 && (i = i + xi), a > i && !o ? i += xi : a < i && o && (a += xi), o) {
      var c = i;
      i = a, a = c;
    }
    for (var v = 0; v < i; v += Math.PI / 2)
      v > a && (Yf[0] = Kd(v) * t + r, Yf[1] = qd(v) * n + e, u(s, Yf, s), f(l, Yf, l));
  }
  var Kt = {
    M: 1,
    L: 2,
    C: 3,
    Q: 4,
    A: 5,
    Z: 6,
    R: 7
  }, wi = [], bi = [], bn = [], wa = [], Tn = [], Cn = [], jd = Math.min, Jd = Math.max, Ti = Math.cos, Ci = Math.sin, Zn = Math.abs, Qd = Math.PI, ba = Qd * 2, tp = typeof Float32Array < "u", Sl = [];
  function ep(r) {
    var e = Math.round(r / Qd * 1e8) / 1e8;
    return e % 2 * Qd;
  }
  function _S(r, e) {
    var t = ep(r[0]);
    t < 0 && (t += ba);
    var n = t - r[0], a = r[1];
    a += n, !e && a - t >= ba ? a = t + ba : e && t - a >= ba ? a = t - ba : !e && t > a ? a = t + (ba - ep(t - a)) : e && t < a && (a = t - (ba - ep(a - t))), r[0] = t, r[1] = a;
  }
  var An = function() {
    function r(e) {
      this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, e && (this._saveData = !1), this._saveData && (this.data = []);
    }
    return r.prototype.increaseVersion = function() {
      this._version++;
    }, r.prototype.getVersion = function() {
      return this._version;
    }, r.prototype.setScale = function(e, t, n) {
      n = n || 0, n > 0 && (this._ux = Zn(n / Ef / e) || 0, this._uy = Zn(n / Ef / t) || 0);
    }, r.prototype.setDPR = function(e) {
      this.dpr = e;
    }, r.prototype.setContext = function(e) {
      this._ctx = e;
    }, r.prototype.getContext = function() {
      return this._ctx;
    }, r.prototype.beginPath = function() {
      return this._ctx && this._ctx.beginPath(), this.reset(), this;
    }, r.prototype.reset = function() {
      this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
    }, r.prototype.moveTo = function(e, t) {
      return this._drawPendingPt(), this.addData(Kt.M, e, t), this._ctx && this._ctx.moveTo(e, t), this._x0 = e, this._y0 = t, this._xi = e, this._yi = t, this;
    }, r.prototype.lineTo = function(e, t) {
      var n = Zn(e - this._xi), a = Zn(t - this._yi), i = n > this._ux || a > this._uy;
      if (this.addData(Kt.L, e, t), this._ctx && i && this._ctx.lineTo(e, t), i)
        this._xi = e, this._yi = t, this._pendingPtDist = 0;
      else {
        var o = n * n + a * a;
        o > this._pendingPtDist && (this._pendingPtX = e, this._pendingPtY = t, this._pendingPtDist = o);
      }
      return this;
    }, r.prototype.bezierCurveTo = function(e, t, n, a, i, o) {
      return this._drawPendingPt(), this.addData(Kt.C, e, t, n, a, i, o), this._ctx && this._ctx.bezierCurveTo(e, t, n, a, i, o), this._xi = i, this._yi = o, this;
    }, r.prototype.quadraticCurveTo = function(e, t, n, a) {
      return this._drawPendingPt(), this.addData(Kt.Q, e, t, n, a), this._ctx && this._ctx.quadraticCurveTo(e, t, n, a), this._xi = n, this._yi = a, this;
    }, r.prototype.arc = function(e, t, n, a, i, o) {
      this._drawPendingPt(), Sl[0] = a, Sl[1] = i, _S(Sl, o), a = Sl[0], i = Sl[1];
      var s = i - a;
      return this.addData(Kt.A, e, t, n, n, a, s, 0, o ? 0 : 1), this._ctx && this._ctx.arc(e, t, n, a, i, o), this._xi = Ti(i) * n + e, this._yi = Ci(i) * n + t, this;
    }, r.prototype.arcTo = function(e, t, n, a, i) {
      return this._drawPendingPt(), this._ctx && this._ctx.arcTo(e, t, n, a, i), this;
    }, r.prototype.rect = function(e, t, n, a) {
      return this._drawPendingPt(), this._ctx && this._ctx.rect(e, t, n, a), this.addData(Kt.R, e, t, n, a), this;
    }, r.prototype.closePath = function() {
      this._drawPendingPt(), this.addData(Kt.Z);
      var e = this._ctx, t = this._x0, n = this._y0;
      return e && e.closePath(), this._xi = t, this._yi = n, this;
    }, r.prototype.fill = function(e) {
      e && e.fill(), this.toStatic();
    }, r.prototype.stroke = function(e) {
      e && e.stroke(), this.toStatic();
    }, r.prototype.len = function() {
      return this._len;
    }, r.prototype.setData = function(e) {
      var t = e.length;
      !(this.data && this.data.length === t) && tp && (this.data = new Float32Array(t));
      for (var n = 0; n < t; n++)
        this.data[n] = e[n];
      this._len = t;
    }, r.prototype.appendPath = function(e) {
      e instanceof Array || (e = [e]);
      for (var t = e.length, n = 0, a = this._len, i = 0; i < t; i++)
        n += e[i].len();
      tp && this.data instanceof Float32Array && (this.data = new Float32Array(a + n));
      for (var i = 0; i < t; i++)
        for (var o = e[i].data, s = 0; s < o.length; s++)
          this.data[a++] = o[s];
      this._len = a;
    }, r.prototype.addData = function(e, t, n, a, i, o, s, l, u) {
      if (this._saveData) {
        var f = this.data;
        this._len + arguments.length > f.length && (this._expandData(), f = this.data);
        for (var h = 0; h < arguments.length; h++)
          f[this._len++] = arguments[h];
      }
    }, r.prototype._drawPendingPt = function() {
      this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
    }, r.prototype._expandData = function() {
      if (!(this.data instanceof Array)) {
        for (var e = [], t = 0; t < this._len; t++)
          e[t] = this.data[t];
        this.data = e;
      }
    }, r.prototype.toStatic = function() {
      if (this._saveData) {
        this._drawPendingPt();
        var e = this.data;
        e instanceof Array && (e.length = this._len, tp && this._len > 11 && (this.data = new Float32Array(e)));
      }
    }, r.prototype.getBoundingRect = function() {
      bn[0] = bn[1] = Tn[0] = Tn[1] = Number.MAX_VALUE, wa[0] = wa[1] = Cn[0] = Cn[1] = -Number.MAX_VALUE;
      var e = this.data, t = 0, n = 0, a = 0, i = 0, o;
      for (o = 0; o < this._len; ) {
        var s = e[o++], l = o === 1;
        switch (l && (t = e[o], n = e[o + 1], a = t, i = n), s) {
          case Kt.M:
            t = a = e[o++], n = i = e[o++], Tn[0] = a, Tn[1] = i, Cn[0] = a, Cn[1] = i;
            break;
          case Kt.L:
            gS(t, n, e[o], e[o + 1], Tn, Cn), t = e[o++], n = e[o++];
            break;
          case Kt.C:
            Ek(t, n, e[o++], e[o++], e[o++], e[o++], e[o], e[o + 1], Tn, Cn), t = e[o++], n = e[o++];
            break;
          case Kt.Q:
            Rk(t, n, e[o++], e[o++], e[o], e[o + 1], Tn, Cn), t = e[o++], n = e[o++];
            break;
          case Kt.A:
            var u = e[o++], f = e[o++], h = e[o++], c = e[o++], v = e[o++], d = e[o++] + v;
            o += 1;
            var p = !e[o++];
            l && (a = Ti(v) * h + u, i = Ci(v) * c + f), kk(u, f, h, c, v, d, p, Tn, Cn), t = Ti(d) * h + u, n = Ci(d) * c + f;
            break;
          case Kt.R:
            a = t = e[o++], i = n = e[o++];
            var g = e[o++], y = e[o++];
            gS(a, i, a + g, i + y, Tn, Cn);
            break;
          case Kt.Z:
            t = a, n = i;
            break;
        }
        Wn(bn, bn, Tn), Un(wa, wa, Cn);
      }
      return o === 0 && (bn[0] = bn[1] = wa[0] = wa[1] = 0), new xt(bn[0], bn[1], wa[0] - bn[0], wa[1] - bn[1]);
    }, r.prototype._calculateLength = function() {
      var e = this.data, t = this._len, n = this._ux, a = this._uy, i = 0, o = 0, s = 0, l = 0;
      this._pathSegLen || (this._pathSegLen = []);
      for (var u = this._pathSegLen, f = 0, h = 0, c = 0; c < t; ) {
        var v = e[c++], d = c === 1;
        d && (i = e[c], o = e[c + 1], s = i, l = o);
        var p = -1;
        switch (v) {
          case Kt.M:
            i = s = e[c++], o = l = e[c++];
            break;
          case Kt.L: {
            var g = e[c++], y = e[c++], m = g - i, _ = y - o;
            (Zn(m) > n || Zn(_) > a || c === t - 1) && (p = Math.sqrt(m * m + _ * _), i = g, o = y);
            break;
          }
          case Kt.C: {
            var S = e[c++], b = e[c++], g = e[c++], y = e[c++], w = e[c++], T = e[c++];
            p = ZE(i, o, S, b, g, y, w, T, 10), i = w, o = T;
            break;
          }
          case Kt.Q: {
            var S = e[c++], b = e[c++], g = e[c++], y = e[c++];
            p = KE(i, o, S, b, g, y, 10), i = g, o = y;
            break;
          }
          case Kt.A:
            var C = e[c++], I = e[c++], L = e[c++], P = e[c++], E = e[c++], R = e[c++], k = R + E;
            c += 1, e[c++], d && (s = Ti(E) * L + C, l = Ci(E) * P + I), p = Jd(L, P) * jd(ba, Math.abs(R)), i = Ti(k) * L + C, o = Ci(k) * P + I;
            break;
          case Kt.R: {
            s = i = e[c++], l = o = e[c++];
            var O = e[c++], N = e[c++];
            p = O * 2 + N * 2;
            break;
          }
          case Kt.Z: {
            var m = s - i, _ = l - o;
            p = Math.sqrt(m * m + _ * _), i = s, o = l;
            break;
          }
        }
        p >= 0 && (u[h++] = p, f += p);
      }
      return this._pathLen = f, f;
    }, r.prototype.rebuildPath = function(e, t) {
      var n = this.data, a = this._ux, i = this._uy, o = this._len, s, l, u, f, h, c, v = t < 1, d, p, g = 0, y = 0, m, _ = 0, S, b;
      if (!(v && (this._pathSegLen || this._calculateLength(), d = this._pathSegLen, p = this._pathLen, m = t * p, !m)))
        t:
          for (var w = 0; w < o; ) {
            var T = n[w++], C = w === 1;
            switch (C && (u = n[w], f = n[w + 1], s = u, l = f), T !== Kt.L && _ > 0 && (e.lineTo(S, b), _ = 0), T) {
              case Kt.M:
                s = u = n[w++], l = f = n[w++], e.moveTo(u, f);
                break;
              case Kt.L: {
                h = n[w++], c = n[w++];
                var I = Zn(h - u), L = Zn(c - f);
                if (I > a || L > i) {
                  if (v) {
                    var P = d[y++];
                    if (g + P > m) {
                      var E = (m - g) / P;
                      e.lineTo(u * (1 - E) + h * E, f * (1 - E) + c * E);
                      break t;
                    }
                    g += P;
                  }
                  e.lineTo(h, c), u = h, f = c, _ = 0;
                } else {
                  var R = I * I + L * L;
                  R > _ && (S = h, b = c, _ = R);
                }
                break;
              }
              case Kt.C: {
                var k = n[w++], O = n[w++], N = n[w++], F = n[w++], G = n[w++], W = n[w++];
                if (v) {
                  var P = d[y++];
                  if (g + P > m) {
                    var E = (m - g) / P;
                    _a(u, k, N, G, E, wi), _a(f, O, F, W, E, bi), e.bezierCurveTo(wi[1], bi[1], wi[2], bi[2], wi[3], bi[3]);
                    break t;
                  }
                  g += P;
                }
                e.bezierCurveTo(k, O, N, F, G, W), u = G, f = W;
                break;
              }
              case Kt.Q: {
                var k = n[w++], O = n[w++], N = n[w++], F = n[w++];
                if (v) {
                  var P = d[y++];
                  if (g + P > m) {
                    var E = (m - g) / P;
                    rl(u, k, N, E, wi), rl(f, O, F, E, bi), e.quadraticCurveTo(wi[1], bi[1], wi[2], bi[2]);
                    break t;
                  }
                  g += P;
                }
                e.quadraticCurveTo(k, O, N, F), u = N, f = F;
                break;
              }
              case Kt.A:
                var X = n[w++], K = n[w++], et = n[w++], lt = n[w++], ft = n[w++], It = n[w++], zt = n[w++], Mt = !n[w++], dt = et > lt ? et : lt, Lt = Zn(et - lt) > 1e-3, Tt = ft + It, at = !1;
                if (v) {
                  var P = d[y++];
                  g + P > m && (Tt = ft + It * (m - g) / P, at = !0), g += P;
                }
                if (Lt && e.ellipse ? e.ellipse(X, K, et, lt, zt, ft, Tt, Mt) : e.arc(X, K, dt, ft, Tt, Mt), at)
                  break t;
                C && (s = Ti(ft) * et + X, l = Ci(ft) * lt + K), u = Ti(Tt) * et + X, f = Ci(Tt) * lt + K;
                break;
              case Kt.R:
                s = u = n[w], l = f = n[w + 1], h = n[w++], c = n[w++];
                var wt = n[w++], re = n[w++];
                if (v) {
                  var P = d[y++];
                  if (g + P > m) {
                    var Bt = m - g;
                    e.moveTo(h, c), e.lineTo(h + jd(Bt, wt), c), Bt -= wt, Bt > 0 && e.lineTo(h + wt, c + jd(Bt, re)), Bt -= re, Bt > 0 && e.lineTo(h + Jd(wt - Bt, 0), c + re), Bt -= wt, Bt > 0 && e.lineTo(h, c + Jd(re - Bt, 0));
                    break t;
                  }
                  g += P;
                }
                e.rect(h, c, wt, re);
                break;
              case Kt.Z:
                if (v) {
                  var P = d[y++];
                  if (g + P > m) {
                    var E = (m - g) / P;
                    e.lineTo(u * (1 - E) + s * E, f * (1 - E) + l * E);
                    break t;
                  }
                  g += P;
                }
                e.closePath(), u = s, f = l;
            }
          }
    }, r.prototype.clone = function() {
      var e = new r(), t = this.data;
      return e.data = t.slice ? t.slice() : Array.prototype.slice.call(t), e._len = this._len, e;
    }, r.CMD = Kt, r.initDefaultProps = function() {
      var e = r.prototype;
      e._saveData = !0, e._ux = 0, e._uy = 0, e._pendingPtDist = 0, e._version = 0;
    }(), r;
  }();
  function Ta(r, e, t, n, a, i, o) {
    if (a === 0)
      return !1;
    var s = a, l = 0, u = r;
    if (o > e + s && o > n + s || o < e - s && o < n - s || i > r + s && i > t + s || i < r - s && i < t - s)
      return !1;
    if (r !== t)
      l = (e - n) / (r - t), u = (r * n - t * e) / (r - t);
    else
      return Math.abs(i - r) <= s / 2;
    var f = l * i - o + u, h = f * f / (l * l + 1);
    return h <= s / 2 * s / 2;
  }
  function Ok(r, e, t, n, a, i, o, s, l, u, f) {
    if (l === 0)
      return !1;
    var h = l;
    if (f > e + h && f > n + h && f > i + h && f > s + h || f < e - h && f < n - h && f < i - h && f < s - h || u > r + h && u > t + h && u > a + h && u > o + h || u < r - h && u < t - h && u < a - h && u < o - h)
      return !1;
    var c = d1(r, e, t, n, a, i, o, s, u, f, null);
    return c <= h / 2;
  }
  function SS(r, e, t, n, a, i, o, s, l) {
    if (o === 0)
      return !1;
    var u = o;
    if (l > e + u && l > n + u && l > i + u || l < e - u && l < n - u && l < i - u || s > r + u && s > t + u && s > a + u || s < r - u && s < t - u && s < a - u)
      return !1;
    var f = g1(r, e, t, n, a, i, s, l, null);
    return f <= u / 2;
  }
  var xS = Math.PI * 2;
  function Ca(r) {
    return r %= xS, r < 0 && (r += xS), r;
  }
  var xl = Math.PI * 2;
  function Nk(r, e, t, n, a, i, o, s, l) {
    if (o === 0)
      return !1;
    var u = o;
    s -= r, l -= e;
    var f = Math.sqrt(s * s + l * l);
    if (f - u > t || f + u < t)
      return !1;
    if (Math.abs(n - a) % xl < 1e-4)
      return !0;
    if (i) {
      var h = n;
      n = Ca(a), a = Ca(h);
    } else
      n = Ca(n), a = Ca(a);
    n > a && (a += xl);
    var c = Math.atan2(l, s);
    return c < 0 && (c += xl), c >= n && c <= a || c + xl >= n && c + xl <= a;
  }
  function qn(r, e, t, n, a, i) {
    if (i > e && i > n || i < e && i < n || n === e)
      return 0;
    var o = (i - e) / (n - e), s = n < e ? 1 : -1;
    (o === 1 || o === 0) && (s = n < e ? 0.5 : -0.5);
    var l = o * (t - r) + r;
    return l === a ? 1 / 0 : l > a ? s : 0;
  }
  var Aa = An.CMD, Ai = Math.PI * 2, Vk = 1e-4;
  function Bk(r, e) {
    return Math.abs(r - e) < Vk;
  }
  var je = [-1, -1, -1], Or = [-1, -1];
  function zk() {
    var r = Or[0];
    Or[0] = Or[1], Or[1] = r;
  }
  function Gk(r, e, t, n, a, i, o, s, l, u) {
    if (u > e && u > n && u > i && u > s || u < e && u < n && u < i && u < s)
      return 0;
    var f = Sf(e, n, i, s, u, je);
    if (f === 0)
      return 0;
    for (var h = 0, c = -1, v = void 0, d = void 0, p = 0; p < f; p++) {
      var g = je[p], y = g === 0 || g === 1 ? 0.5 : 1, m = be(r, t, a, o, g);
      m < l || (c < 0 && (c = v1(e, n, i, s, Or), Or[1] < Or[0] && c > 1 && zk(), v = be(e, n, i, s, Or[0]), c > 1 && (d = be(e, n, i, s, Or[1]))), c === 2 ? g < Or[0] ? h += v < e ? y : -y : g < Or[1] ? h += d < v ? y : -y : h += s < d ? y : -y : g < Or[0] ? h += v < e ? y : -y : h += s < v ? y : -y);
    }
    return h;
  }
  function Fk(r, e, t, n, a, i, o, s) {
    if (s > e && s > n && s > i || s < e && s < n && s < i)
      return 0;
    var l = qE(e, n, i, s, je);
    if (l === 0)
      return 0;
    var u = p1(e, n, i);
    if (u >= 0 && u <= 1) {
      for (var f = 0, h = Le(e, n, i, u), c = 0; c < l; c++) {
        var v = je[c] === 0 || je[c] === 1 ? 0.5 : 1, d = Le(r, t, a, je[c]);
        d < o || (je[c] < u ? f += h < e ? v : -v : f += i < h ? v : -v);
      }
      return f;
    } else {
      var v = je[0] === 0 || je[0] === 1 ? 0.5 : 1, d = Le(r, t, a, je[0]);
      return d < o ? 0 : i < e ? v : -v;
    }
  }
  function Hk(r, e, t, n, a, i, o, s) {
    if (s -= e, s > t || s < -t)
      return 0;
    var l = Math.sqrt(t * t - s * s);
    je[0] = -l, je[1] = l;
    var u = Math.abs(n - a);
    if (u < 1e-4)
      return 0;
    if (u >= Ai - 1e-4) {
      n = 0, a = Ai;
      var f = i ? 1 : -1;
      return o >= je[0] + r && o <= je[1] + r ? f : 0;
    }
    if (n > a) {
      var h = n;
      n = a, a = h;
    }
    n < 0 && (n += Ai, a += Ai);
    for (var c = 0, v = 0; v < 2; v++) {
      var d = je[v];
      if (d + r > o) {
        var p = Math.atan2(s, d), f = i ? 1 : -1;
        p < 0 && (p = Ai + p), (p >= n && p <= a || p + Ai >= n && p + Ai <= a) && (p > Math.PI / 2 && p < Math.PI * 1.5 && (f = -f), c += f);
      }
    }
    return c;
  }
  function wS(r, e, t, n, a) {
    for (var i = r.data, o = r.len(), s = 0, l = 0, u = 0, f = 0, h = 0, c, v, d = 0; d < o; ) {
      var p = i[d++], g = d === 1;
      switch (p === Aa.M && d > 1 && (t || (s += qn(l, u, f, h, n, a))), g && (l = i[d], u = i[d + 1], f = l, h = u), p) {
        case Aa.M:
          f = i[d++], h = i[d++], l = f, u = h;
          break;
        case Aa.L:
          if (t) {
            if (Ta(l, u, i[d], i[d + 1], e, n, a))
              return !0;
          } else
            s += qn(l, u, i[d], i[d + 1], n, a) || 0;
          l = i[d++], u = i[d++];
          break;
        case Aa.C:
          if (t) {
            if (Ok(l, u, i[d++], i[d++], i[d++], i[d++], i[d], i[d + 1], e, n, a))
              return !0;
          } else
            s += Gk(l, u, i[d++], i[d++], i[d++], i[d++], i[d], i[d + 1], n, a) || 0;
          l = i[d++], u = i[d++];
          break;
        case Aa.Q:
          if (t) {
            if (SS(l, u, i[d++], i[d++], i[d], i[d + 1], e, n, a))
              return !0;
          } else
            s += Fk(l, u, i[d++], i[d++], i[d], i[d + 1], n, a) || 0;
          l = i[d++], u = i[d++];
          break;
        case Aa.A:
          var y = i[d++], m = i[d++], _ = i[d++], S = i[d++], b = i[d++], w = i[d++];
          d += 1;
          var T = !!(1 - i[d++]);
          c = Math.cos(b) * _ + y, v = Math.sin(b) * S + m, g ? (f = c, h = v) : s += qn(l, u, c, v, n, a);
          var C = (n - y) * S / _ + y;
          if (t) {
            if (Nk(y, m, S, b, b + w, T, e, C, a))
              return !0;
          } else
            s += Hk(y, m, S, b, b + w, T, C, a);
          l = Math.cos(b + w) * _ + y, u = Math.sin(b + w) * S + m;
          break;
        case Aa.R:
          f = l = i[d++], h = u = i[d++];
          var I = i[d++], L = i[d++];
          if (c = f + I, v = h + L, t) {
            if (Ta(f, h, c, h, e, n, a) || Ta(c, h, c, v, e, n, a) || Ta(c, v, f, v, e, n, a) || Ta(f, v, f, h, e, n, a))
              return !0;
          } else
            s += qn(c, h, c, v, n, a), s += qn(f, v, f, h, n, a);
          break;
        case Aa.Z:
          if (t) {
            if (Ta(l, u, f, h, e, n, a))
              return !0;
          } else
            s += qn(l, u, f, h, n, a);
          l = f, u = h;
          break;
      }
    }
    return !t && !Bk(u, h) && (s += qn(l, u, f, h, n, a) || 0), s !== 0;
  }
  function Wk(r, e, t) {
    return wS(r, 0, !1, e, t);
  }
  function Uk(r, e, t, n) {
    return wS(r, e, !0, t, n);
  }
  var Xf = ot({
    fill: "#000",
    stroke: null,
    strokePercent: 1,
    fillOpacity: 1,
    strokeOpacity: 1,
    lineDashOffset: 0,
    lineWidth: 1,
    lineCap: "butt",
    miterLimit: 10,
    strokeNoScale: !1,
    strokeFirst: !1
  }, Si), Yk = {
    style: ot({
      fill: !0,
      stroke: !0,
      strokePercent: !0,
      fillOpacity: !0,
      strokeOpacity: !0,
      lineDashOffset: !0,
      lineWidth: !0,
      miterLimit: !0
    }, Hf.style)
  }, rp = Sn.concat([
    "invisible",
    "culling",
    "z",
    "z2",
    "zlevel",
    "parent"
  ]), Dt = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.update = function() {
      var t = this;
      r.prototype.update.call(this);
      var n = this.style;
      if (n.decal) {
        var a = this._decalEl = this._decalEl || new e();
        a.buildPath === e.prototype.buildPath && (a.buildPath = function(l) {
          t.buildPath(l, t.shape);
        }), a.silent = !0;
        var i = a.style;
        for (var o in n)
          i[o] !== n[o] && (i[o] = n[o]);
        i.fill = n.fill ? n.decal : null, i.decal = null, i.shadowColor = null, n.strokeFirst && (i.stroke = null);
        for (var s = 0; s < rp.length; ++s)
          a[rp[s]] = this[rp[s]];
        a.__dirty |= pr;
      } else
        this._decalEl && (this._decalEl = null);
    }, e.prototype.getDecalElement = function() {
      return this._decalEl;
    }, e.prototype._init = function(t) {
      var n = Pt(t);
      this.shape = this.getDefaultShape();
      var a = this.getDefaultStyle();
      a && this.useStyle(a);
      for (var i = 0; i < n.length; i++) {
        var o = n[i], s = t[o];
        o === "style" ? this.style ? H(this.style, s) : this.useStyle(s) : o === "shape" ? H(this.shape, s) : r.prototype.attrKV.call(this, o, s);
      }
      this.style || this.useStyle({});
    }, e.prototype.getDefaultStyle = function() {
      return null;
    }, e.prototype.getDefaultShape = function() {
      return {};
    }, e.prototype.canBeInsideText = function() {
      return this.hasFill();
    }, e.prototype.getInsideTextFill = function() {
      var t = this.style.fill;
      if (t !== "none") {
        if (j(t)) {
          var n = sl(t, 0);
          return n > 0.5 ? Td : n > 0.2 ? DR : Cd;
        } else if (t)
          return Cd;
      }
      return Td;
    }, e.prototype.getInsideTextStroke = function(t) {
      var n = this.style.fill;
      if (j(n)) {
        var a = this.__zr, i = !!(a && a.isDarkMode()), o = sl(t, 0) < bd;
        if (i === o)
          return n;
      }
    }, e.prototype.buildPath = function(t, n, a) {
    }, e.prototype.pathUpdated = function() {
      this.__dirty &= ~To;
    }, e.prototype.getUpdatedPathProxy = function(t) {
      return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, t), this.path;
    }, e.prototype.createPathProxy = function() {
      this.path = new An(!1);
    }, e.prototype.hasStroke = function() {
      var t = this.style, n = t.stroke;
      return !(n == null || n === "none" || !(t.lineWidth > 0));
    }, e.prototype.hasFill = function() {
      var t = this.style, n = t.fill;
      return n != null && n !== "none";
    }, e.prototype.getBoundingRect = function() {
      var t = this._rect, n = this.style, a = !t;
      if (a) {
        var i = !1;
        this.path || (i = !0, this.createPathProxy());
        var o = this.path;
        (i || this.__dirty & To) && (o.beginPath(), this.buildPath(o, this.shape, !1), this.pathUpdated()), t = o.getBoundingRect();
      }
      if (this._rect = t, this.hasStroke() && this.path && this.path.len() > 0) {
        var s = this._rectStroke || (this._rectStroke = t.clone());
        if (this.__dirty || a) {
          s.copy(t);
          var l = n.strokeNoScale ? this.getLineScale() : 1, u = n.lineWidth;
          if (!this.hasFill()) {
            var f = this.strokeContainThreshold;
            u = Math.max(u, f ?? 4);
          }
          l > 1e-10 && (s.width += u / l, s.height += u / l, s.x -= u / l / 2, s.y -= u / l / 2);
        }
        return s;
      }
      return t;
    }, e.prototype.contain = function(t, n) {
      var a = this.transformCoordToLocal(t, n), i = this.getBoundingRect(), o = this.style;
      if (t = a[0], n = a[1], i.contain(t, n)) {
        var s = this.path;
        if (this.hasStroke()) {
          var l = o.lineWidth, u = o.strokeNoScale ? this.getLineScale() : 1;
          if (u > 1e-10 && (this.hasFill() || (l = Math.max(l, this.strokeContainThreshold)), Uk(s, l / u, t, n)))
            return !0;
        }
        if (this.hasFill())
          return Wk(s, t, n);
      }
      return !1;
    }, e.prototype.dirtyShape = function() {
      this.__dirty |= To, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
    }, e.prototype.dirty = function() {
      this.dirtyStyle(), this.dirtyShape();
    }, e.prototype.animateShape = function(t) {
      return this.animate("shape", t);
    }, e.prototype.updateDuringAnimation = function(t) {
      t === "style" ? this.dirtyStyle() : t === "shape" ? this.dirtyShape() : this.markRedraw();
    }, e.prototype.attrKV = function(t, n) {
      t === "shape" ? this.setShape(n) : r.prototype.attrKV.call(this, t, n);
    }, e.prototype.setShape = function(t, n) {
      var a = this.shape;
      return a || (a = this.shape = {}), typeof t == "string" ? a[t] = n : H(a, t), this.dirtyShape(), this;
    }, e.prototype.shapeChanged = function() {
      return !!(this.__dirty & To);
    }, e.prototype.createStyle = function(t) {
      return Us(Xf, t);
    }, e.prototype._innerSaveToNormal = function(t) {
      r.prototype._innerSaveToNormal.call(this, t);
      var n = this._normalState;
      t.shape && !n.shape && (n.shape = H({}, this.shape));
    }, e.prototype._applyStateObj = function(t, n, a, i, o, s) {
      r.prototype._applyStateObj.call(this, t, n, a, i, o, s);
      var l = !(n && i), u;
      if (n && n.shape ? o ? i ? u = n.shape : (u = H({}, a.shape), H(u, n.shape)) : (u = H({}, i ? this.shape : a.shape), H(u, n.shape)) : l && (u = a.shape), u)
        if (o) {
          this.shape = H({}, this.shape);
          for (var f = {}, h = Pt(u), c = 0; c < h.length; c++) {
            var v = h[c];
            typeof u[v] == "object" ? this.shape[v] = u[v] : f[v] = u[v];
          }
          this._transitionState(t, {
            shape: f
          }, s);
        } else
          this.shape = u, this.dirtyShape();
    }, e.prototype._mergeStates = function(t) {
      for (var n = r.prototype._mergeStates.call(this, t), a, i = 0; i < t.length; i++) {
        var o = t[i];
        o.shape && (a = a || {}, this._mergeStyle(a, o.shape));
      }
      return a && (n.shape = a), n;
    }, e.prototype.getAnimationStyleProps = function() {
      return Yk;
    }, e.prototype.isZeroArea = function() {
      return !1;
    }, e.extend = function(t) {
      var n = function(i) {
        A(o, i);
        function o(s) {
          var l = i.call(this, s) || this;
          return t.init && t.init.call(l, s), l;
        }
        return o.prototype.getDefaultStyle = function() {
          return ht(t.style);
        }, o.prototype.getDefaultShape = function() {
          return ht(t.shape);
        }, o;
      }(e);
      for (var a in t)
        typeof t[a] == "function" && (n.prototype[a] = t[a]);
      return n;
    }, e.initDefaultProps = function() {
      var t = e.prototype;
      t.type = "path", t.strokeContainThreshold = 5, t.segmentIgnoreThreshold = 0, t.subPixelOptimize = !1, t.autoBatch = !1, t.__dirty = pr | tl | To;
    }(), e;
  }(kr), $k = ot({
    strokeFirst: !0,
    font: Et,
    x: 0,
    y: 0,
    textAlign: "left",
    textBaseline: "top",
    miterLimit: 2
  }, Xf), ko = function(r) {
    A(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.hasStroke = function() {
      var t = this.style, n = t.stroke;
      return n != null && n !== "none" && t.lineWidth > 0;
    }, e.prototype.hasFill = function() {
      var t = this.style, n = t.fill;
      return n != null && n !== "none";
    }, e.prototype.createStyle = function(t) {
      return Us($k, t);
    }, e.prototype.setBoundingRect = function(t) {
      this._rect = t;
    }, e.prototype.getBoundingRect = function() {
      var t = this.style;
      if (!this._rect) {
        var n = t.text;
        n != null ? n += "" : n = "";
        var a = cl(n, t.font, t.textAlign, t.textBaseline);
        if (a.x += t.x || 0, a.y += t.y || 0, this.hasStroke()) {
          var i = t.lineWidth;
          a.x -= i / 2, a.y -= i / 2, a.width += i, a.height += i;
        }
        this._rect = a;
      }
      return this._rect;
    }, e.initDefaultProps = function() {
      var t = e.prototype;
      t.dirtyRectTolerance = 10;
    }(), e;
  }(kr);
  ko.prototype.type = "tspan";
  var Xk = ot({
    x: 0,
    y: 0
  }, Si), Zk = {
    style: ot({
      x: !0,
      y: !0,
      width: !0,
      height: !0,
      sx: !0,
      sy: !0,
      sWidth: !0,
      sHeight: !0
    }, Hf.style)
  };
  function qk(r) {
    return !!(r && typeof r != "string" && r.width && r.height);
  }
  var Te = function(r) {
    A(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.createStyle = function(t) {
      return Us(Xk, t);
    }, e.prototype._getSize = function(t) {
      var n = this.style, a = n[t];
      if (a != null)
        return a;
      var i = qk(n.image) ? n.image : this.__image;
      if (!i)
        return 0;
      var o = t === "width" ? "height" : "width", s = n[o];
      return s == null ? i[t] : i[t] / i[o] * s;
    }, e.prototype.getWidth = function() {
      return this._getSize("width");
    }, e.prototype.getHeight = function() {
      return this._getSize("height");
    }, e.prototype.getAnimationStyleProps = function() {
      return Zk;
    }, e.prototype.getBoundingRect = function() {
      var t = this.style;
      return this._rect || (this._rect = new xt(t.x || 0, t.y || 0, this.getWidth(), this.getHeight())), this._rect;
    }, e;
  }(kr);
  Te.prototype.type = "image";
  function Kk(r, e) {
    var t = e.x, n = e.y, a = e.width, i = e.height, o = e.r, s, l, u, f;
    a < 0 && (t = t + a, a = -a), i < 0 && (n = n + i, i = -i), typeof o == "number" ? s = l = u = f = o : o instanceof Array ? o.length === 1 ? s = l = u = f = o[0] : o.length === 2 ? (s = u = o[0], l = f = o[1]) : o.length === 3 ? (s = o[0], l = f = o[1], u = o[2]) : (s = o[0], l = o[1], u = o[2], f = o[3]) : s = l = u = f = 0;
    var h;
    s + l > a && (h = s + l, s *= a / h, l *= a / h), u + f > a && (h = u + f, u *= a / h, f *= a / h), l + u > i && (h = l + u, l *= i / h, u *= i / h), s + f > i && (h = s + f, s *= i / h, f *= i / h), r.moveTo(t + s, n), r.lineTo(t + a - l, n), l !== 0 && r.arc(t + a - l, n + l, l, -Math.PI / 2, 0), r.lineTo(t + a, n + i - u), u !== 0 && r.arc(t + a - u, n + i - u, u, 0, Math.PI / 2), r.lineTo(t + f, n + i), f !== 0 && r.arc(t + f, n + i - f, f, Math.PI / 2, Math.PI), r.lineTo(t, n + s), s !== 0 && r.arc(t + s, n + s, s, Math.PI, Math.PI * 1.5);
  }
  var Oo = Math.round;
  function bS(r, e, t) {
    if (e) {
      var n = e.x1, a = e.x2, i = e.y1, o = e.y2;
      r.x1 = n, r.x2 = a, r.y1 = i, r.y2 = o;
      var s = t && t.lineWidth;
      return s && (Oo(n * 2) === Oo(a * 2) && (r.x1 = r.x2 = Di(n, s, !0)), Oo(i * 2) === Oo(o * 2) && (r.y1 = r.y2 = Di(i, s, !0))), r;
    }
  }
  function TS(r, e, t) {
    if (e) {
      var n = e.x, a = e.y, i = e.width, o = e.height;
      r.x = n, r.y = a, r.width = i, r.height = o;
      var s = t && t.lineWidth;
      return s && (r.x = Di(n, s, !0), r.y = Di(a, s, !0), r.width = Math.max(Di(n + i, s, !1) - r.x, i === 0 ? 0 : 1), r.height = Math.max(Di(a + o, s, !1) - r.y, o === 0 ? 0 : 1)), r;
    }
  }
  function Di(r, e, t) {
    if (!e)
      return r;
    var n = Oo(r * 2);
    return (n + Oo(e)) % 2 === 0 ? n / 2 : (n + (t ? 1 : -1)) / 2;
  }
  var jk = function() {
    function r() {
      this.x = 0, this.y = 0, this.width = 0, this.height = 0;
    }
    return r;
  }(), Jk = {}, Rt = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new jk();
    }, e.prototype.buildPath = function(t, n) {
      var a, i, o, s;
      if (this.subPixelOptimize) {
        var l = TS(Jk, n, this.style);
        a = l.x, i = l.y, o = l.width, s = l.height, l.r = n.r, n = l;
      } else
        a = n.x, i = n.y, o = n.width, s = n.height;
      n.r ? Kk(t, n) : t.rect(a, i, o, s);
    }, e.prototype.isZeroArea = function() {
      return !this.shape.width || !this.shape.height;
    }, e;
  }(Dt);
  Rt.prototype.type = "rect";
  var CS = {
    fill: "#000"
  }, AS = 2, Qk = {
    style: ot({
      fill: !0,
      stroke: !0,
      fillOpacity: !0,
      strokeOpacity: !0,
      lineWidth: !0,
      fontSize: !0,
      lineHeight: !0,
      width: !0,
      height: !0,
      textShadowColor: !0,
      textShadowBlur: !0,
      textShadowOffsetX: !0,
      textShadowOffsetY: !0,
      backgroundColor: !0,
      padding: !0,
      borderColor: !0,
      borderWidth: !0,
      borderRadius: !0
    }, Hf.style)
  }, kt = function(r) {
    A(e, r);
    function e(t) {
      var n = r.call(this) || this;
      return n.type = "text", n._children = [], n._defaultStyle = CS, n.attr(t), n;
    }
    return e.prototype.childrenRef = function() {
      return this._children;
    }, e.prototype.update = function() {
      r.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
      for (var t = 0; t < this._children.length; t++) {
        var n = this._children[t];
        n.zlevel = this.zlevel, n.z = this.z, n.z2 = this.z2, n.culling = this.culling, n.cursor = this.cursor, n.invisible = this.invisible;
      }
    }, e.prototype.updateTransform = function() {
      var t = this.innerTransformable;
      t ? (t.updateTransform(), t.transform && (this.transform = t.transform)) : r.prototype.updateTransform.call(this);
    }, e.prototype.getLocalTransform = function(t) {
      var n = this.innerTransformable;
      return n ? n.getLocalTransform(t) : r.prototype.getLocalTransform.call(this, t);
    }, e.prototype.getComputedTransform = function() {
      return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), r.prototype.getComputedTransform.call(this);
    }, e.prototype._updateSubTexts = function() {
      this._childCursor = 0, rO(this.style), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
    }, e.prototype.addSelfToZr = function(t) {
      r.prototype.addSelfToZr.call(this, t);
      for (var n = 0; n < this._children.length; n++)
        this._children[n].__zr = t;
    }, e.prototype.removeSelfFromZr = function(t) {
      r.prototype.removeSelfFromZr.call(this, t);
      for (var n = 0; n < this._children.length; n++)
        this._children[n].__zr = null;
    }, e.prototype.getBoundingRect = function() {
      if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
        for (var t = new xt(0, 0, 0, 0), n = this._children, a = [], i = null, o = 0; o < n.length; o++) {
          var s = n[o], l = s.getBoundingRect(), u = s.getLocalTransform(a);
          u ? (t.copy(l), t.applyTransform(u), i = i || t.clone(), i.union(t)) : (i = i || l.clone(), i.union(l));
        }
        this._rect = i || t;
      }
      return this._rect;
    }, e.prototype.setDefaultTextStyle = function(t) {
      this._defaultStyle = t || CS;
    }, e.prototype.setTextContent = function(t) {
      throw new Error("Can't attach text on another text");
    }, e.prototype._mergeStyle = function(t, n) {
      if (!n)
        return t;
      var a = n.rich, i = t.rich || a && {};
      return H(t, n), a && i ? (this._mergeRich(i, a), t.rich = i) : i && (t.rich = i), t;
    }, e.prototype._mergeRich = function(t, n) {
      for (var a = Pt(n), i = 0; i < a.length; i++) {
        var o = a[i];
        t[o] = t[o] || {}, H(t[o], n[o]);
      }
    }, e.prototype.getAnimationStyleProps = function() {
      return Qk;
    }, e.prototype._getOrCreateChild = function(t) {
      var n = this._children[this._childCursor];
      return (!n || !(n instanceof t)) && (n = new t()), this._children[this._childCursor++] = n, n.__zr = this.__zr, n.parent = this, n;
    }, e.prototype._updatePlainTexts = function() {
      var t = this.style, n = t.font || Et, a = t.padding, i = OS(t), o = bk(i, t), s = np(t), l = !!t.backgroundColor, u = o.outerHeight, f = o.outerWidth, h = o.contentWidth, c = o.lines, v = o.lineHeight, d = this._defaultStyle, p = t.x || 0, g = t.y || 0, y = t.align || d.align || "left", m = t.verticalAlign || d.verticalAlign || "top", _ = p, S = Lo(g, o.contentHeight, m);
      if (s || a) {
        var b = vl(p, f, y), w = Lo(g, u, m);
        s && this._renderBackground(t, t, b, w, f, u);
      }
      S += v / 2, a && (_ = kS(p, y, a), m === "top" ? S += a[0] : m === "bottom" && (S -= a[2]));
      for (var T = 0, C = !1, I = RS("fill" in t ? t.fill : (C = !0, d.fill)), L = ES("stroke" in t ? t.stroke : !l && (!d.autoStroke || C) ? (T = AS, d.stroke) : null), P = t.textShadowBlur > 0, E = t.width != null && (t.overflow === "truncate" || t.overflow === "break" || t.overflow === "breakAll"), R = o.calculatedLineHeight, k = 0; k < c.length; k++) {
        var O = this._getOrCreateChild(ko), N = O.createStyle();
        O.useStyle(N), N.text = c[k], N.x = _, N.y = S, y && (N.textAlign = y), N.textBaseline = "middle", N.opacity = t.opacity, N.strokeFirst = !0, P && (N.shadowBlur = t.textShadowBlur || 0, N.shadowColor = t.textShadowColor || "transparent", N.shadowOffsetX = t.textShadowOffsetX || 0, N.shadowOffsetY = t.textShadowOffsetY || 0), N.stroke = L, N.fill = I, L && (N.lineWidth = t.lineWidth || T, N.lineDash = t.lineDash, N.lineDashOffset = t.lineDashOffset || 0), N.font = n, IS(N, t), S += v, E && O.setBoundingRect(new xt(vl(N.x, t.width, N.textAlign), Lo(N.y, R, N.textBaseline), h, R));
      }
    }, e.prototype._updateRichTexts = function() {
      var t = this.style, n = OS(t), a = Ak(n, t), i = a.width, o = a.outerWidth, s = a.outerHeight, l = t.padding, u = t.x || 0, f = t.y || 0, h = this._defaultStyle, c = t.align || h.align, v = t.verticalAlign || h.verticalAlign, d = vl(u, o, c), p = Lo(f, s, v), g = d, y = p;
      l && (g += l[3], y += l[0]);
      var m = g + i;
      np(t) && this._renderBackground(t, t, d, p, o, s);
      for (var _ = !!t.backgroundColor, S = 0; S < a.lines.length; S++) {
        for (var b = a.lines[S], w = b.tokens, T = w.length, C = b.lineHeight, I = b.width, L = 0, P = g, E = m, R = T - 1, k = void 0; L < T && (k = w[L], !k.align || k.align === "left"); )
          this._placeToken(k, t, C, y, P, "left", _), I -= k.width, P += k.width, L++;
        for (; R >= 0 && (k = w[R], k.align === "right"); )
          this._placeToken(k, t, C, y, E, "right", _), I -= k.width, E -= k.width, R--;
        for (P += (i - (P - g) - (m - E) - I) / 2; L <= R; )
          k = w[L], this._placeToken(k, t, C, y, P + k.width / 2, "center", _), P += k.width, L++;
        y += C;
      }
    }, e.prototype._placeToken = function(t, n, a, i, o, s, l) {
      var u = n.rich[t.styleName] || {};
      u.text = t.text;
      var f = t.verticalAlign, h = i + a / 2;
      f === "top" ? h = i + t.height / 2 : f === "bottom" && (h = i + a - t.height / 2);
      var c = !t.isLineHolder && np(u);
      c && this._renderBackground(u, n, s === "right" ? o - t.width : s === "center" ? o - t.width / 2 : o, h - t.height / 2, t.width, t.height);
      var v = !!u.backgroundColor, d = t.textPadding;
      d && (o = kS(o, s, d), h -= t.height / 2 - d[0] - t.innerHeight / 2);
      var p = this._getOrCreateChild(ko), g = p.createStyle();
      p.useStyle(g);
      var y = this._defaultStyle, m = !1, _ = 0, S = RS("fill" in u ? u.fill : "fill" in n ? n.fill : (m = !0, y.fill)), b = ES("stroke" in u ? u.stroke : "stroke" in n ? n.stroke : !v && !l && (!y.autoStroke || m) ? (_ = AS, y.stroke) : null), w = u.textShadowBlur > 0 || n.textShadowBlur > 0;
      g.text = t.text, g.x = o, g.y = h, w && (g.shadowBlur = u.textShadowBlur || n.textShadowBlur || 0, g.shadowColor = u.textShadowColor || n.textShadowColor || "transparent", g.shadowOffsetX = u.textShadowOffsetX || n.textShadowOffsetX || 0, g.shadowOffsetY = u.textShadowOffsetY || n.textShadowOffsetY || 0), g.textAlign = s, g.textBaseline = "middle", g.font = t.font || Et, g.opacity = Dr(u.opacity, n.opacity, 1), IS(g, u), b && (g.lineWidth = Dr(u.lineWidth, n.lineWidth, _), g.lineDash = _t(u.lineDash, n.lineDash), g.lineDashOffset = n.lineDashOffset || 0, g.stroke = b), S && (g.fill = S);
      var T = t.contentWidth, C = t.contentHeight;
      p.setBoundingRect(new xt(vl(g.x, T, g.textAlign), Lo(g.y, C, g.textBaseline), T, C));
    }, e.prototype._renderBackground = function(t, n, a, i, o, s) {
      var l = t.backgroundColor, u = t.borderWidth, f = t.borderColor, h = l && l.image, c = l && !h, v = t.borderRadius, d = this, p, g;
      if (c || t.lineHeight || u && f) {
        p = this._getOrCreateChild(Rt), p.useStyle(p.createStyle()), p.style.fill = null;
        var y = p.shape;
        y.x = a, y.y = i, y.width = o, y.height = s, y.r = v, p.dirtyShape();
      }
      if (c) {
        var m = p.style;
        m.fill = l || null, m.fillOpacity = _t(t.fillOpacity, 1);
      } else if (h) {
        g = this._getOrCreateChild(Te), g.onload = function() {
          d.dirtyStyle();
        };
        var _ = g.style;
        _.image = l.image, _.x = a, _.y = i, _.width = o, _.height = s;
      }
      if (u && f) {
        var m = p.style;
        m.lineWidth = u, m.stroke = f, m.strokeOpacity = _t(t.strokeOpacity, 1), m.lineDash = t.borderDash, m.lineDashOffset = t.borderDashOffset || 0, p.strokeContainThreshold = 0, p.hasFill() && p.hasStroke() && (m.strokeFirst = !0, m.lineWidth *= 2);
      }
      var S = (p || g).style;
      S.shadowBlur = t.shadowBlur || 0, S.shadowColor = t.shadowColor || "transparent", S.shadowOffsetX = t.shadowOffsetX || 0, S.shadowOffsetY = t.shadowOffsetY || 0, S.opacity = Dr(t.opacity, n.opacity, 1);
    }, e.makeFont = function(t) {
      var n = "";
      return LS(t) && (n = [
        t.fontStyle,
        t.fontWeight,
        MS(t.fontSize),
        t.fontFamily || "sans-serif"
      ].join(" ")), n && Mr(n) || t.textFont || t.font;
    }, e;
  }(kr), tO = { left: !0, right: 1, center: 1 }, eO = { top: 1, bottom: 1, middle: 1 }, DS = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
  function MS(r) {
    return typeof r == "string" && (r.indexOf("px") !== -1 || r.indexOf("rem") !== -1 || r.indexOf("em") !== -1) ? r : isNaN(+r) ? tt + "px" : r + "px";
  }
  function IS(r, e) {
    for (var t = 0; t < DS.length; t++) {
      var n = DS[t], a = e[n];
      a != null && (r[n] = a);
    }
  }
  function LS(r) {
    return r.fontSize != null || r.fontFamily || r.fontWeight;
  }
  function rO(r) {
    return PS(r), M(r.rich, PS), r;
  }
  function PS(r) {
    if (r) {
      r.font = kt.makeFont(r);
      var e = r.align;
      e === "middle" && (e = "center"), r.align = e == null || tO[e] ? e : "left";
      var t = r.verticalAlign;
      t === "center" && (t = "middle"), r.verticalAlign = t == null || eO[t] ? t : "top";
      var n = r.padding;
      n && (r.padding = uf(r.padding));
    }
  }
  function ES(r, e) {
    return r == null || e <= 0 || r === "transparent" || r === "none" ? null : r.image || r.colorStops ? "#000" : r;
  }
  function RS(r) {
    return r == null || r === "none" ? null : r.image || r.colorStops ? "#000" : r;
  }
  function kS(r, e, t) {
    return e === "right" ? r - t[1] : e === "center" ? r + t[3] / 2 - t[1] / 2 : r + t[3];
  }
  function OS(r) {
    var e = r.text;
    return e != null && (e += ""), e;
  }
  function np(r) {
    return !!(r.backgroundColor || r.lineHeight || r.borderWidth && r.borderColor);
  }
  var gt = Nt(), ap = function(r, e, t, n) {
    if (n) {
      var a = gt(n);
      a.dataIndex = t, a.dataType = e, a.seriesIndex = r, n.type === "group" && n.traverse(function(i) {
        var o = gt(i);
        o.seriesIndex = r, o.dataIndex = t, o.dataType = e;
      });
    }
  }, NS = 1, VS = {}, BS = Nt(), ip = Nt(), op = 0, wl = 1, Zf = 2, Je = ["emphasis", "blur", "select"], bl = ["normal", "emphasis", "blur", "select"], No = 10, nO = 9, Mi = "highlight", qf = "downplay", Tl = "select", Kf = "unselect", Cl = "toggleSelect";
  function Vo(r) {
    return r != null && r !== "none";
  }
  var zS = new nl(100);
  function GS(r) {
    if (j(r)) {
      var e = zS.get(r);
      return e || (e = wf(r, -0.1), zS.put(r, e)), e;
    } else if (Fs(r)) {
      var t = H({}, r);
      return t.colorStops = Y(r.colorStops, function(n) {
        return {
          offset: n.offset,
          color: wf(n.color, -0.1)
        };
      }), t;
    }
    return r;
  }
  function jf(r, e, t) {
    r.onHoverStateChange && (r.hoverState || 0) !== t && r.onHoverStateChange(e), r.hoverState = t;
  }
  function FS(r) {
    jf(r, "emphasis", Zf);
  }
  function HS(r) {
    r.hoverState === Zf && jf(r, "normal", op);
  }
  function sp(r) {
    jf(r, "blur", wl);
  }
  function WS(r) {
    r.hoverState === wl && jf(r, "normal", op);
  }
  function aO(r) {
    r.selected = !0;
  }
  function iO(r) {
    r.selected = !1;
  }
  function US(r, e, t) {
    e(r, t);
  }
  function Kn(r, e, t) {
    US(r, e, t), r.isGroup && r.traverse(function(n) {
      US(n, e, t);
    });
  }
  function Jf(r, e) {
    switch (e) {
      case "emphasis":
        r.hoverState = Zf;
        break;
      case "normal":
        r.hoverState = op;
        break;
      case "blur":
        r.hoverState = wl;
        break;
      case "select":
        r.selected = !0;
    }
  }
  function oO(r, e, t, n) {
    for (var a = r.style, i = {}, o = 0; o < e.length; o++) {
      var s = e[o], l = a[s];
      i[s] = l ?? (n && n[s]);
    }
    for (var o = 0; o < r.animators.length; o++) {
      var u = r.animators[o];
      u.__fromStateTransition && u.__fromStateTransition.indexOf(t) < 0 && u.targetName === "style" && u.saveTo(i, e);
    }
    return i;
  }
  function sO(r, e, t, n) {
    var a = t && bt(t, "select") >= 0, i = !1;
    if (r instanceof Dt) {
      var o = BS(r), s = a && o.selectFill || o.normalFill, l = a && o.selectStroke || o.normalStroke;
      if (Vo(s) || Vo(l)) {
        n = n || {};
        var u = n.style || {};
        u.fill === "inherit" ? (i = !0, n = H({}, n), u = H({}, u), u.fill = s) : !Vo(u.fill) && Vo(s) ? (i = !0, n = H({}, n), u = H({}, u), u.fill = GS(s)) : !Vo(u.stroke) && Vo(l) && (i || (n = H({}, n), u = H({}, u)), u.stroke = GS(l)), n.style = u;
      }
    }
    if (n && n.z2 == null) {
      i || (n = H({}, n));
      var f = r.z2EmphasisLift;
      n.z2 = r.z2 + (f ?? No);
    }
    return n;
  }
  function lO(r, e, t) {
    if (t && t.z2 == null) {
      t = H({}, t);
      var n = r.z2SelectLift;
      t.z2 = r.z2 + (n ?? nO);
    }
    return t;
  }
  function uO(r, e, t) {
    var n = bt(r.currentStates, e) >= 0, a = r.style.opacity, i = n ? null : oO(r, ["opacity"], e, {
      opacity: 1
    });
    t = t || {};
    var o = t.style || {};
    return o.opacity == null && (t = H({}, t), o = H({
      // Already being applied 'emphasis'. DON'T mul opacity multiple times.
      opacity: n ? a : i.opacity * 0.1
    }, o), t.style = o), t;
  }
  function lp(r, e) {
    var t = this.states[r];
    if (this.style) {
      if (r === "emphasis")
        return sO(this, r, e, t);
      if (r === "blur")
        return uO(this, r, t);
      if (r === "select")
        return lO(this, r, t);
    }
    return t;
  }
  function Ii(r) {
    r.stateProxy = lp;
    var e = r.getTextContent(), t = r.getTextGuideLine();
    e && (e.stateProxy = lp), t && (t.stateProxy = lp);
  }
  function YS(r, e) {
    !KS(r, e) && !r.__highByOuter && Kn(r, FS);
  }
  function $S(r, e) {
    !KS(r, e) && !r.__highByOuter && Kn(r, HS);
  }
  function jn(r, e) {
    r.__highByOuter |= 1 << (e || 0), Kn(r, FS);
  }
  function Jn(r, e) {
    !(r.__highByOuter &= ~(1 << (e || 0))) && Kn(r, HS);
  }
  function XS(r) {
    Kn(r, sp);
  }
  function up(r) {
    Kn(r, WS);
  }
  function ZS(r) {
    Kn(r, aO);
  }
  function qS(r) {
    Kn(r, iO);
  }
  function KS(r, e) {
    return r.__highDownSilentOnTouch && e.zrByTouch;
  }
  function jS(r) {
    var e = r.getModel(), t = [], n = [];
    e.eachComponent(function(a, i) {
      var o = ip(i), s = a === "series", l = s ? r.getViewOfSeriesModel(i) : r.getViewOfComponentModel(i);
      !s && n.push(l), o.isBlured && (l.group.traverse(function(u) {
        WS(u);
      }), s && t.push(i)), o.isBlured = !1;
    }), M(n, function(a) {
      a && a.toggleBlurSeries && a.toggleBlurSeries(t, !1, e);
    });
  }
  function fp(r, e, t, n) {
    var a = n.getModel();
    t = t || "coordinateSystem";
    function i(u, f) {
      for (var h = 0; h < f.length; h++) {
        var c = u.getItemGraphicEl(f[h]);
        c && up(c);
      }
    }
    if (r != null && !(!e || e === "none")) {
      var o = a.getSeriesByIndex(r), s = o.coordinateSystem;
      s && s.master && (s = s.master);
      var l = [];
      a.eachSeries(function(u) {
        var f = o === u, h = u.coordinateSystem;
        h && h.master && (h = h.master);
        var c = h && s ? h === s : f;
        if (!// Not blur other series if blurScope series
        (t === "series" && !f || t === "coordinateSystem" && !c || e === "series" && f)) {
          var v = n.getViewOfSeriesModel(u);
          if (v.group.traverse(function(g) {
            sp(g);
          }), Pe(e))
            i(u.getData(), e);
          else if (it(e))
            for (var d = Pt(e), p = 0; p < d.length; p++)
              i(u.getData(d[p]), e[d[p]]);
          l.push(u), ip(u).isBlured = !0;
        }
      }), a.eachComponent(function(u, f) {
        if (u !== "series") {
          var h = n.getViewOfComponentModel(f);
          h && h.toggleBlurSeries && h.toggleBlurSeries(l, !0, a);
        }
      });
    }
  }
  function hp(r, e, t) {
    if (!(r == null || e == null)) {
      var n = t.getModel().getComponent(r, e);
      if (n) {
        ip(n).isBlured = !0;
        var a = t.getViewOfComponentModel(n);
        !a || !a.focusBlurEnabled || a.group.traverse(function(i) {
          sp(i);
        });
      }
    }
  }
  function fO(r, e, t) {
    var n = r.seriesIndex, a = r.getData(e.dataType);
    if (!a) {
      Ee("Unknown dataType " + e.dataType);
      return;
    }
    var i = yi(a, e);
    i = (U(i) ? i[0] : i) || 0;
    var o = a.getItemGraphicEl(i);
    if (!o)
      for (var s = a.count(), l = 0; !o && l < s; )
        o = a.getItemGraphicEl(l++);
    if (o) {
      var u = gt(o);
      fp(n, u.focus, u.blurScope, t);
    } else {
      var f = r.get(["emphasis", "focus"]), h = r.get(["emphasis", "blurScope"]);
      f != null && fp(n, f, h, t);
    }
  }
  function cp(r, e, t, n) {
    var a = {
      focusSelf: !1,
      dispatchers: null
    };
    if (r == null || r === "series" || e == null || t == null)
      return a;
    var i = n.getModel().getComponent(r, e);
    if (!i)
      return a;
    var o = n.getViewOfComponentModel(i);
    if (!o || !o.findHighDownDispatchers)
      return a;
    for (var s = o.findHighDownDispatchers(t), l, u = 0; u < s.length; u++)
      if (Ma(s[u]) || Ee("param should be highDownDispatcher"), gt(s[u]).focus === "self") {
        l = !0;
        break;
      }
    return {
      focusSelf: l,
      dispatchers: s
    };
  }
  function hO(r, e, t) {
    Ma(r) || Ee("param should be highDownDispatcher");
    var n = gt(r), a = cp(n.componentMainType, n.componentIndex, n.componentHighDownName, t), i = a.dispatchers, o = a.focusSelf;
    i ? (o && hp(n.componentMainType, n.componentIndex, t), M(i, function(s) {
      return YS(s, e);
    })) : (fp(n.seriesIndex, n.focus, n.blurScope, t), n.focus === "self" && hp(n.componentMainType, n.componentIndex, t), YS(r, e));
  }
  function cO(r, e, t) {
    Ma(r) || Ee("param should be highDownDispatcher"), jS(t);
    var n = gt(r), a = cp(n.componentMainType, n.componentIndex, n.componentHighDownName, t).dispatchers;
    a ? M(a, function(i) {
      return $S(i, e);
    }) : $S(r, e);
  }
  function vO(r, e, t) {
    if (dp(e)) {
      var n = e.dataType, a = r.getData(n), i = yi(a, e);
      U(i) || (i = [i]), r[e.type === Cl ? "toggleSelect" : e.type === Tl ? "select" : "unselect"](i, n);
    }
  }
  function JS(r) {
    var e = r.getAllData();
    M(e, function(t) {
      var n = t.data, a = t.type;
      n.eachItemGraphicEl(function(i, o) {
        r.isSelected(o, a) ? ZS(i) : qS(i);
      });
    });
  }
  function dO(r) {
    var e = [];
    return r.eachSeries(function(t) {
      var n = t.getAllData();
      M(n, function(a) {
        a.data;
        var i = a.type, o = t.getSelectedDataIndices();
        if (o.length > 0) {
          var s = {
            dataIndex: o,
            seriesIndex: t.seriesIndex
          };
          i != null && (s.dataType = i), e.push(s);
        }
      });
    }), e;
  }
  function Da(r, e, t) {
    Li(r, !0), Kn(r, Ii), vp(r, e, t);
  }
  function pO(r) {
    Li(r, !1);
  }
  function oe(r, e, t, n) {
    n ? pO(r) : Da(r, e, t);
  }
  function vp(r, e, t) {
    var n = gt(r);
    e != null ? (n.focus = e, n.blurScope = t) : n.focus && (n.focus = null);
  }
  var QS = ["emphasis", "blur", "select"], gO = {
    itemStyle: "getItemStyle",
    lineStyle: "getLineStyle",
    areaStyle: "getAreaStyle"
  };
  function Re(r, e, t, n) {
    t = t || "itemStyle";
    for (var a = 0; a < QS.length; a++) {
      var i = QS[a], o = e.getModel([i, t]), s = r.ensureState(i);
      s.style = n ? n(o) : o[gO[t]]();
    }
  }
  function Li(r, e) {
    var t = e === !1, n = r;
    r.highDownSilentOnTouch && (n.__highDownSilentOnTouch = r.highDownSilentOnTouch), (!t || n.__highDownDispatcher) && (n.__highByOuter = n.__highByOuter || 0, n.__highDownDispatcher = !t);
  }
  function Ma(r) {
    return !!(r && r.__highDownDispatcher);
  }
  function yO(r, e, t) {
    var n = gt(r);
    n.componentMainType = e.mainType, n.componentIndex = e.componentIndex, n.componentHighDownName = t;
  }
  function mO(r) {
    var e = VS[r];
    return e == null && NS <= 32 && (e = VS[r] = NS++), e;
  }
  function dp(r) {
    var e = r.type;
    return e === Tl || e === Kf || e === Cl;
  }
  function tx(r) {
    var e = r.type;
    return e === Mi || e === qf;
  }
  function _O(r) {
    var e = BS(r);
    e.normalFill = r.style.fill, e.normalStroke = r.style.stroke;
    var t = r.states.select || {};
    e.selectFill = t.style && t.style.fill || null, e.selectStroke = t.style && t.style.stroke || null;
  }
  var Bo = An.CMD, SO = [[], [], []], ex = Math.sqrt, xO = Math.atan2;
  function rx(r, e) {
    if (e) {
      var t = r.data, n = r.len(), a, i, o, s, l, u, f = Bo.M, h = Bo.C, c = Bo.L, v = Bo.R, d = Bo.A, p = Bo.Q;
      for (o = 0, s = 0; o < n; ) {
        switch (a = t[o++], s = o, i = 0, a) {
          case f:
            i = 1;
            break;
          case c:
            i = 1;
            break;
          case h:
            i = 3;
            break;
          case p:
            i = 2;
            break;
          case d:
            var g = e[4], y = e[5], m = ex(e[0] * e[0] + e[1] * e[1]), _ = ex(e[2] * e[2] + e[3] * e[3]), S = xO(-e[1] / _, e[0] / m);
            t[o] *= m, t[o++] += g, t[o] *= _, t[o++] += y, t[o++] *= m, t[o++] *= _, t[o++] += S, t[o++] += S, o += 2, s = o;
            break;
          case v:
            u[0] = t[o++], u[1] = t[o++], Ie(u, u, e), t[s++] = u[0], t[s++] = u[1], u[0] += t[o++], u[1] += t[o++], Ie(u, u, e), t[s++] = u[0], t[s++] = u[1];
        }
        for (l = 0; l < i; l++) {
          var b = SO[l];
          b[0] = t[o++], b[1] = t[o++], Ie(b, b, e), t[s++] = b[0], t[s++] = b[1];
        }
      }
      r.increaseVersion();
    }
  }
  var pp = Math.sqrt, Qf = Math.sin, th = Math.cos, Al = Math.PI;
  function nx(r) {
    return Math.sqrt(r[0] * r[0] + r[1] * r[1]);
  }
  function gp(r, e) {
    return (r[0] * e[0] + r[1] * e[1]) / (nx(r) * nx(e));
  }
  function ax(r, e) {
    return (r[0] * e[1] < r[1] * e[0] ? -1 : 1) * Math.acos(gp(r, e));
  }
  function ix(r, e, t, n, a, i, o, s, l, u, f) {
    var h = l * (Al / 180), c = th(h) * (r - t) / 2 + Qf(h) * (e - n) / 2, v = -1 * Qf(h) * (r - t) / 2 + th(h) * (e - n) / 2, d = c * c / (o * o) + v * v / (s * s);
    d > 1 && (o *= pp(d), s *= pp(d));
    var p = (a === i ? -1 : 1) * pp((o * o * (s * s) - o * o * (v * v) - s * s * (c * c)) / (o * o * (v * v) + s * s * (c * c))) || 0, g = p * o * v / s, y = p * -s * c / o, m = (r + t) / 2 + th(h) * g - Qf(h) * y, _ = (e + n) / 2 + Qf(h) * g + th(h) * y, S = ax([1, 0], [(c - g) / o, (v - y) / s]), b = [(c - g) / o, (v - y) / s], w = [(-1 * c - g) / o, (-1 * v - y) / s], T = ax(b, w);
    if (gp(b, w) <= -1 && (T = Al), gp(b, w) >= 1 && (T = 0), T < 0) {
      var C = Math.round(T / Al * 1e6) / 1e6;
      T = Al * 2 + C % 2 * Al;
    }
    f.addData(u, m, _, o, s, S, T, h, i);
  }
  var wO = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig, bO = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  function TO(r) {
    var e = new An();
    if (!r)
      return e;
    var t = 0, n = 0, a = t, i = n, o, s = An.CMD, l = r.match(wO);
    if (!l)
      return e;
    for (var u = 0; u < l.length; u++) {
      for (var f = l[u], h = f.charAt(0), c = void 0, v = f.match(bO) || [], d = v.length, p = 0; p < d; p++)
        v[p] = parseFloat(v[p]);
      for (var g = 0; g < d; ) {
        var y = void 0, m = void 0, _ = void 0, S = void 0, b = void 0, w = void 0, T = void 0, C = t, I = n, L = void 0, P = void 0;
        switch (h) {
          case "l":
            t += v[g++], n += v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "L":
            t = v[g++], n = v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "m":
            t += v[g++], n += v[g++], c = s.M, e.addData(c, t, n), a = t, i = n, h = "l";
            break;
          case "M":
            t = v[g++], n = v[g++], c = s.M, e.addData(c, t, n), a = t, i = n, h = "L";
            break;
          case "h":
            t += v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "H":
            t = v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "v":
            n += v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "V":
            n = v[g++], c = s.L, e.addData(c, t, n);
            break;
          case "C":
            c = s.C, e.addData(c, v[g++], v[g++], v[g++], v[g++], v[g++], v[g++]), t = v[g - 2], n = v[g - 1];
            break;
          case "c":
            c = s.C, e.addData(c, v[g++] + t, v[g++] + n, v[g++] + t, v[g++] + n, v[g++] + t, v[g++] + n), t += v[g - 2], n += v[g - 1];
            break;
          case "S":
            y = t, m = n, L = e.len(), P = e.data, o === s.C && (y += t - P[L - 4], m += n - P[L - 3]), c = s.C, C = v[g++], I = v[g++], t = v[g++], n = v[g++], e.addData(c, y, m, C, I, t, n);
            break;
          case "s":
            y = t, m = n, L = e.len(), P = e.data, o === s.C && (y += t - P[L - 4], m += n - P[L - 3]), c = s.C, C = t + v[g++], I = n + v[g++], t += v[g++], n += v[g++], e.addData(c, y, m, C, I, t, n);
            break;
          case "Q":
            C = v[g++], I = v[g++], t = v[g++], n = v[g++], c = s.Q, e.addData(c, C, I, t, n);
            break;
          case "q":
            C = v[g++] + t, I = v[g++] + n, t += v[g++], n += v[g++], c = s.Q, e.addData(c, C, I, t, n);
            break;
          case "T":
            y = t, m = n, L = e.len(), P = e.data, o === s.Q && (y += t - P[L - 4], m += n - P[L - 3]), t = v[g++], n = v[g++], c = s.Q, e.addData(c, y, m, t, n);
            break;
          case "t":
            y = t, m = n, L = e.len(), P = e.data, o === s.Q && (y += t - P[L - 4], m += n - P[L - 3]), t += v[g++], n += v[g++], c = s.Q, e.addData(c, y, m, t, n);
            break;
          case "A":
            _ = v[g++], S = v[g++], b = v[g++], w = v[g++], T = v[g++], C = t, I = n, t = v[g++], n = v[g++], c = s.A, ix(C, I, t, n, w, T, _, S, b, c, e);
            break;
          case "a":
            _ = v[g++], S = v[g++], b = v[g++], w = v[g++], T = v[g++], C = t, I = n, t += v[g++], n += v[g++], c = s.A, ix(C, I, t, n, w, T, _, S, b, c, e);
            break;
        }
      }
      (h === "z" || h === "Z") && (c = s.Z, e.addData(c), t = a, n = i), o = c;
    }
    return e.toStatic(), e;
  }
  var ox = function(r) {
    A(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.applyTransform = function(t) {
    }, e;
  }(Dt);
  function sx(r) {
    return r.setData != null;
  }
  function lx(r, e) {
    var t = TO(r), n = H({}, e);
    return n.buildPath = function(a) {
      if (sx(a)) {
        a.setData(t.data);
        var i = a.getContext();
        i && a.rebuildPath(i, 1);
      } else {
        var i = a;
        t.rebuildPath(i, 1);
      }
    }, n.applyTransform = function(a) {
      rx(t, a), this.dirtyShape();
    }, n;
  }
  function ux(r, e) {
    return new ox(lx(r, e));
  }
  function CO(r, e) {
    var t = lx(r, e), n = function(a) {
      A(i, a);
      function i(o) {
        var s = a.call(this, o) || this;
        return s.applyTransform = t.applyTransform, s.buildPath = t.buildPath, s;
      }
      return i;
    }(ox);
    return n;
  }
  function AO(r, e) {
    for (var t = [], n = r.length, a = 0; a < n; a++) {
      var i = r[a];
      t.push(i.getUpdatedPathProxy(!0));
    }
    var o = new Dt(e);
    return o.createPathProxy(), o.buildPath = function(s) {
      if (sx(s)) {
        s.appendPath(t);
        var l = s.getContext();
        l && s.rebuildPath(l, 1);
      }
    }, o;
  }
  function yp(r, e) {
    e = e || {};
    var t = new Dt();
    return r.shape && t.setShape(r.shape), t.setStyle(r.style), e.bakeTransform ? rx(t.path, r.getComputedTransform()) : e.toLocal ? t.setLocalTransform(r.getComputedTransform()) : t.copyTransform(r), t.buildPath = r.buildPath, t.applyTransform = t.applyTransform, t.z = r.z, t.z2 = r.z2, t.zlevel = r.zlevel, t;
  }
  var DO = function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r = 0;
    }
    return r;
  }(), Nr = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new DO();
    }, e.prototype.buildPath = function(t, n) {
      t.moveTo(n.cx + n.r, n.cy), t.arc(n.cx, n.cy, n.r, 0, Math.PI * 2);
    }, e;
  }(Dt);
  Nr.prototype.type = "circle";
  var MO = function() {
    function r() {
      this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
    }
    return r;
  }(), Dl = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new MO();
    }, e.prototype.buildPath = function(t, n) {
      var a = 0.5522848, i = n.cx, o = n.cy, s = n.rx, l = n.ry, u = s * a, f = l * a;
      t.moveTo(i - s, o), t.bezierCurveTo(i - s, o - f, i - u, o - l, i, o - l), t.bezierCurveTo(i + u, o - l, i + s, o - f, i + s, o), t.bezierCurveTo(i + s, o + f, i + u, o + l, i, o + l), t.bezierCurveTo(i - u, o + l, i - s, o + f, i - s, o), t.closePath();
    }, e;
  }(Dt);
  Dl.prototype.type = "ellipse";
  var fx = Math.PI, mp = fx * 2, Pi = Math.sin, zo = Math.cos, IO = Math.acos, Ve = Math.atan2, hx = Math.abs, Ml = Math.sqrt, Il = Math.max, Dn = Math.min, nn = 1e-4;
  function LO(r, e, t, n, a, i, o, s) {
    var l = t - r, u = n - e, f = o - a, h = s - i, c = h * l - f * u;
    if (!(c * c < nn))
      return c = (f * (e - i) - h * (r - a)) / c, [r + c * l, e + c * u];
  }
  function eh(r, e, t, n, a, i, o) {
    var s = r - t, l = e - n, u = (o ? i : -i) / Ml(s * s + l * l), f = u * l, h = -u * s, c = r + f, v = e + h, d = t + f, p = n + h, g = (c + d) / 2, y = (v + p) / 2, m = d - c, _ = p - v, S = m * m + _ * _, b = a - i, w = c * p - d * v, T = (_ < 0 ? -1 : 1) * Ml(Il(0, b * b * S - w * w)), C = (w * _ - m * T) / S, I = (-w * m - _ * T) / S, L = (w * _ + m * T) / S, P = (-w * m + _ * T) / S, E = C - g, R = I - y, k = L - g, O = P - y;
    return E * E + R * R > k * k + O * O && (C = L, I = P), {
      cx: C,
      cy: I,
      x0: -f,
      y0: -h,
      x1: C * (a / b - 1),
      y1: I * (a / b - 1)
    };
  }
  function PO(r) {
    var e;
    if (U(r)) {
      var t = r.length;
      if (!t)
        return r;
      t === 1 ? e = [r[0], r[0], 0, 0] : t === 2 ? e = [r[0], r[0], r[1], r[1]] : t === 3 ? e = r.concat(r[2]) : e = r;
    } else
      e = [r, r, r, r];
    return e;
  }
  function EO(r, e) {
    var t, n = Il(e.r, 0), a = Il(e.r0 || 0, 0), i = n > 0, o = a > 0;
    if (!(!i && !o)) {
      if (i || (n = a, a = 0), a > n) {
        var s = n;
        n = a, a = s;
      }
      var l = e.startAngle, u = e.endAngle;
      if (!(isNaN(l) || isNaN(u))) {
        var f = e.cx, h = e.cy, c = !!e.clockwise, v = hx(u - l), d = v > mp && v % mp;
        if (d > nn && (v = d), !(n > nn))
          r.moveTo(f, h);
        else if (v > mp - nn)
          r.moveTo(f + n * zo(l), h + n * Pi(l)), r.arc(f, h, n, l, u, !c), a > nn && (r.moveTo(f + a * zo(u), h + a * Pi(u)), r.arc(f, h, a, u, l, c));
        else {
          var p = void 0, g = void 0, y = void 0, m = void 0, _ = void 0, S = void 0, b = void 0, w = void 0, T = void 0, C = void 0, I = void 0, L = void 0, P = void 0, E = void 0, R = void 0, k = void 0, O = n * zo(l), N = n * Pi(l), F = a * zo(u), G = a * Pi(u), W = v > nn;
          if (W) {
            var X = e.cornerRadius;
            X && (t = PO(X), p = t[0], g = t[1], y = t[2], m = t[3]);
            var K = hx(n - a) / 2;
            if (_ = Dn(K, y), S = Dn(K, m), b = Dn(K, p), w = Dn(K, g), I = T = Il(_, S), L = C = Il(b, w), (T > nn || C > nn) && (P = n * zo(u), E = n * Pi(u), R = a * zo(l), k = a * Pi(l), v < fx)) {
              var et = LO(O, N, R, k, P, E, F, G);
              if (et) {
                var lt = O - et[0], ft = N - et[1], It = P - et[0], zt = E - et[1], Mt = 1 / Pi(IO((lt * It + ft * zt) / (Ml(lt * lt + ft * ft) * Ml(It * It + zt * zt))) / 2), dt = Ml(et[0] * et[0] + et[1] * et[1]);
                I = Dn(T, (n - dt) / (Mt + 1)), L = Dn(C, (a - dt) / (Mt - 1));
              }
            }
          }
          if (!W)
            r.moveTo(f + O, h + N);
          else if (I > nn) {
            var Lt = Dn(y, I), Tt = Dn(m, I), at = eh(R, k, O, N, n, Lt, c), wt = eh(P, E, F, G, n, Tt, c);
            r.moveTo(f + at.cx + at.x0, h + at.cy + at.y0), I < T && Lt === Tt ? r.arc(f + at.cx, h + at.cy, I, Ve(at.y0, at.x0), Ve(wt.y0, wt.x0), !c) : (Lt > 0 && r.arc(f + at.cx, h + at.cy, Lt, Ve(at.y0, at.x0), Ve(at.y1, at.x1), !c), r.arc(f, h, n, Ve(at.cy + at.y1, at.cx + at.x1), Ve(wt.cy + wt.y1, wt.cx + wt.x1), !c), Tt > 0 && r.arc(f + wt.cx, h + wt.cy, Tt, Ve(wt.y1, wt.x1), Ve(wt.y0, wt.x0), !c));
          } else
            r.moveTo(f + O, h + N), r.arc(f, h, n, l, u, !c);
          if (!(a > nn) || !W)
            r.lineTo(f + F, h + G);
          else if (L > nn) {
            var Lt = Dn(p, L), Tt = Dn(g, L), at = eh(F, G, P, E, a, -Tt, c), wt = eh(O, N, R, k, a, -Lt, c);
            r.lineTo(f + at.cx + at.x0, h + at.cy + at.y0), L < C && Lt === Tt ? r.arc(f + at.cx, h + at.cy, L, Ve(at.y0, at.x0), Ve(wt.y0, wt.x0), !c) : (Tt > 0 && r.arc(f + at.cx, h + at.cy, Tt, Ve(at.y0, at.x0), Ve(at.y1, at.x1), !c), r.arc(f, h, a, Ve(at.cy + at.y1, at.cx + at.x1), Ve(wt.cy + wt.y1, wt.cx + wt.x1), c), Lt > 0 && r.arc(f + wt.cx, h + wt.cy, Lt, Ve(wt.y1, wt.x1), Ve(wt.y0, wt.x0), !c));
          } else
            r.lineTo(f + F, h + G), r.arc(f, h, a, u, l, c);
        }
        r.closePath();
      }
    }
  }
  var RO = function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0, this.cornerRadius = 0;
    }
    return r;
  }(), Be = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new RO();
    }, e.prototype.buildPath = function(t, n) {
      EO(t, n);
    }, e.prototype.isZeroArea = function() {
      return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
    }, e;
  }(Dt);
  Be.prototype.type = "sector";
  var kO = function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
    }
    return r;
  }(), Go = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new kO();
    }, e.prototype.buildPath = function(t, n) {
      var a = n.cx, i = n.cy, o = Math.PI * 2;
      t.moveTo(a + n.r, i), t.arc(a, i, n.r, 0, o, !1), t.moveTo(a + n.r0, i), t.arc(a, i, n.r0, 0, o, !0);
    }, e;
  }(Dt);
  Go.prototype.type = "ring";
  function OO(r, e, t, n) {
    var a = [], i = [], o = [], s = [], l, u, f, h;
    if (n) {
      f = [1 / 0, 1 / 0], h = [-1 / 0, -1 / 0];
      for (var c = 0, v = r.length; c < v; c++)
        Wn(f, f, r[c]), Un(h, h, r[c]);
      Wn(f, f, n[0]), Un(h, h, n[1]);
    }
    for (var c = 0, v = r.length; c < v; c++) {
      var d = r[c];
      if (t)
        l = r[c ? c - 1 : v - 1], u = r[(c + 1) % v];
      else if (c === 0 || c === v - 1) {
        a.push(yn(r[c]));
        continue;
      } else
        l = r[c - 1], u = r[c + 1];
      da(i, u, l), Xs(i, i, e);
      var p = hf(d, l), g = hf(d, u), y = p + g;
      y !== 0 && (p /= y, g /= y), Xs(o, i, -p), Xs(s, i, g);
      var m = Hv([], d, o), _ = Hv([], d, s);
      n && (Un(m, m, f), Wn(m, m, h), Un(_, _, f), Wn(_, _, h)), a.push(m), a.push(_);
    }
    return t && a.push(a.shift()), a;
  }
  function cx(r, e, t) {
    var n = e.smooth, a = e.points;
    if (a && a.length >= 2) {
      if (n) {
        var i = OO(a, n, t, e.smoothConstraint);
        r.moveTo(a[0][0], a[0][1]);
        for (var o = a.length, s = 0; s < (t ? o : o - 1); s++) {
          var l = i[s * 2], u = i[s * 2 + 1], f = a[(s + 1) % o];
          r.bezierCurveTo(l[0], l[1], u[0], u[1], f[0], f[1]);
        }
      } else {
        r.moveTo(a[0][0], a[0][1]);
        for (var s = 1, h = a.length; s < h; s++)
          r.lineTo(a[s][0], a[s][1]);
      }
      t && r.closePath();
    }
  }
  var NO = function() {
    function r() {
      this.points = null, this.smooth = 0, this.smoothConstraint = null;
    }
    return r;
  }(), ze = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new NO();
    }, e.prototype.buildPath = function(t, n) {
      cx(t, n, !0);
    }, e;
  }(Dt);
  ze.prototype.type = "polygon";
  var VO = function() {
    function r() {
      this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
    }
    return r;
  }(), Ge = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new VO();
    }, e.prototype.buildPath = function(t, n) {
      cx(t, n, !1);
    }, e;
  }(Dt);
  Ge.prototype.type = "polyline";
  var BO = {}, zO = function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    }
    return r;
  }(), Se = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new zO();
    }, e.prototype.buildPath = function(t, n) {
      var a, i, o, s;
      if (this.subPixelOptimize) {
        var l = bS(BO, n, this.style);
        a = l.x1, i = l.y1, o = l.x2, s = l.y2;
      } else
        a = n.x1, i = n.y1, o = n.x2, s = n.y2;
      var u = n.percent;
      u !== 0 && (t.moveTo(a, i), u < 1 && (o = a * (1 - u) + o * u, s = i * (1 - u) + s * u), t.lineTo(o, s));
    }, e.prototype.pointAt = function(t) {
      var n = this.shape;
      return [
        n.x1 * (1 - t) + n.x2 * t,
        n.y1 * (1 - t) + n.y2 * t
      ];
    }, e;
  }(Dt);
  Se.prototype.type = "line";
  var lr = [], GO = function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
    }
    return r;
  }();
  function vx(r, e, t) {
    var n = r.cpx2, a = r.cpy2;
    return n != null || a != null ? [
      (t ? c1 : be)(r.x1, r.cpx1, r.cpx2, r.x2, e),
      (t ? c1 : be)(r.y1, r.cpy1, r.cpy2, r.y2, e)
    ] : [
      (t ? nd : Le)(r.x1, r.cpx1, r.x2, e),
      (t ? nd : Le)(r.y1, r.cpy1, r.y2, e)
    ];
  }
  var Fo = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new GO();
    }, e.prototype.buildPath = function(t, n) {
      var a = n.x1, i = n.y1, o = n.x2, s = n.y2, l = n.cpx1, u = n.cpy1, f = n.cpx2, h = n.cpy2, c = n.percent;
      c !== 0 && (t.moveTo(a, i), f == null || h == null ? (c < 1 && (rl(a, l, o, c, lr), l = lr[1], o = lr[2], rl(i, u, s, c, lr), u = lr[1], s = lr[2]), t.quadraticCurveTo(l, u, o, s)) : (c < 1 && (_a(a, l, f, o, c, lr), l = lr[1], f = lr[2], o = lr[3], _a(i, u, h, s, c, lr), u = lr[1], h = lr[2], s = lr[3]), t.bezierCurveTo(l, u, f, h, o, s)));
    }, e.prototype.pointAt = function(t) {
      return vx(this.shape, t, !1);
    }, e.prototype.tangentAt = function(t) {
      var n = vx(this.shape, t, !0);
      return oi(n, n);
    }, e;
  }(Dt);
  Fo.prototype.type = "bezier-curve";
  var FO = function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
    }
    return r;
  }(), Ll = function(r) {
    A(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new FO();
    }, e.prototype.buildPath = function(t, n) {
      var a = n.cx, i = n.cy, o = Math.max(n.r, 0), s = n.startAngle, l = n.endAngle, u = n.clockwise, f = Math.cos(s), h = Math.sin(s);
      t.moveTo(f * o + a, h * o + i), t.arc(a, i, o, s, l, !u);
    }, e;
  }(Dt);
  Ll.prototype.type = "arc";
  var rh = function(r) {
    A(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "compound", t;
    }
    return e.prototype._updatePathDirty = function() {
      for (var t = this.shape.paths, n = this.shapeChanged(), a = 0; a < t.length; a++)
        n = n || t[a].shapeChanged();
      n && this.dirtyShape();
    }, e.prototype.beforeBrush = function() {
      this._updatePathDirty();
      for (var t = this.shape.paths || [], n = this.getGlobalScale(), a = 0; a < t.length; a++)
        t[a].path || t[a].createPathProxy(), t[a].path.setScale(n[0], n[1], t[a].segmentIgnoreThreshold);
    }, e.prototype.buildPath = function(t, n) {
      for (var a = n.paths || [], i = 0; i < a.length; i++)
        a[i].buildPath(t, a[i].shape, !0);
    }, e.prototype.afterBrush = function() {
      for (var t = this.shape.paths || [], n = 0; n < t.length; n++)
        t[n].pathUpdated();
    }, e.prototype.getBoundingRect = function() {
      return this._updatePathDirty.call(this), Dt.prototype.getBoundingRect.call(this);
    }, e;
  }(Dt), dx = function() {
    function r(e) {
      this.colorStops = e || [];
    }
    return r.prototype.addColorStop = function(e, t) {
      this.colorStops.push({
        offset: e,
        color: t
      });
    }, r;
  }(), Ho = function(r) {
    A(e, r);
    function e(t, n, a, i, o, s) {
      var l = r.call(this, o) || this;
      return l.x = t ?? 0, l.y = n ?? 0, l.x2 = a ?? 1, l.y2 = i ?? 0, l.type = "linear", l.global = s || !1, l;
    }
    return e;
  }(dx), _p = function(r) {
    A(e, r);
    function e(t, n, a, i, o) {
      var s = r.call(this, i) || this;
      return s.x = t ?? 0.5, s.y = n ?? 0.5, s.r = a ?? 0.5, s.type = "radial", s.global = o || !1, s;
    }
    return e;
  }(dx), Ei = [0, 0], Ri = [0, 0], nh = new St(), ah = new St(), ih = function() {
    function r(e, t) {
      this._corners = [], this._axes = [], this._origin = [0, 0];
      for (var n = 0; n < 4; n++)
        this._corners[n] = new St();
      for (var n = 0; n < 2; n++)
        this._axes[n] = new St();
      e && this.fromBoundingRect(e, t);
    }
    return r.prototype.fromBoundingRect = function(e, t) {
      var n = this._corners, a = this._axes, i = e.x, o = e.y, s = i + e.width, l = o + e.height;
      if (n[0].set(i, o), n[1].set(s, o), n[2].set(s, l), n[3].set(i, l), t)
        for (var u = 0; u < 4; u++)
          n[u].transform(t);
      St.sub(a[0], n[1], n[0]), St.sub(a[1], n[3], n[0]), a[0].normalize(), a[1].normalize();
      for (var u = 0; u < 2; u++)
        this._origin[u] = a[u].dot(n[0]);
    }, r.prototype.intersect = function(e, t) {
      var n = !0, a = !t;
      return nh.set(1 / 0, 1 / 0), ah.set(0, 0), !this._intersectCheckOneSide(this, e, nh, ah, a, 1) && (n = !1, a) || !this._intersectCheckOneSide(e, this, nh, ah, a, -1) && (n = !1, a) || a || St.copy(t, n ? nh : ah), n;
    }, r.prototype._intersectCheckOneSide = function(e, t, n, a, i, o) {
      for (var s = !0, l = 0; l < 2; l++) {
        var u = this._axes[l];
        if (this._getProjMinMaxOnAxis(l, e._corners, Ei), this._getProjMinMaxOnAxis(l, t._corners, Ri), Ei[1] < Ri[0] || Ei[0] > Ri[1]) {
          if (s = !1, i)
            return s;
          var f = Math.abs(Ri[0] - Ei[1]), h = Math.abs(Ei[0] - Ri[1]);
          Math.min(f, h) > a.len() && (f < h ? St.scale(a, u, -f * o) : St.scale(a, u, h * o));
        } else if (n) {
          var f = Math.abs(Ri[0] - Ei[1]), h = Math.abs(Ei[0] - Ri[1]);
          Math.min(f, h) < n.len() && (f < h ? St.scale(n, u, f * o) : St.scale(n, u, -h * o));
        }
      }
      return s;
    }, r.prototype._getProjMinMaxOnAxis = function(e, t, n) {
      for (var a = this._axes[e], i = this._origin, o = t[0].dot(a) + i[e], s = o, l = o, u = 1; u < t.length; u++) {
        var f = t[u].dot(a) + i[e];
        s = Math.min(f, s), l = Math.max(f, l);
      }
      n[0] = s, n[1] = l;
    }, r;
  }(), HO = [], px = function(r) {
    A(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.notClear = !0, t.incremental = !0, t._displayables = [], t._temporaryDisplayables = [], t._cursor = 0, t;
    }
    return e.prototype.traverse = function(t, n) {
      t.call(n, this);
    }, e.prototype.useStyle = function() {
      this.style = {};
    }, e.prototype.getCursor = function() {
      return this._cursor;
    }, e.prototype.innerAfterBrush = function() {
      this._cursor = this._displayables.length;
    }, e.prototype.clearDisplaybles = function() {
      this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1;
    }, e.prototype.clearTemporalDisplayables = function() {
      this._temporaryDisplayables = [];
    }, e.prototype.addDisplayable = function(t, n) {
      n ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.markRedraw();
    }, e.prototype.addDisplayables = function(t, n) {
      n = n || !1;
      for (var a = 0; a < t.length; a++)
        this.addDisplayable(t[a], n);
    }, e.prototype.getDisplayables = function() {
      return this._displayables;
    }, e.prototype.getTemporalDisplayables = function() {
      return this._temporaryDisplayables;
    }, e.prototype.eachPendingDisplayable = function(t) {
      for (var n = this._cursor; n < this._displayables.length; n++)
        t && t(this._displayables[n]);
      for (var n = 0; n < this._temporaryDisplayables.length; n++)
        t && t(this._temporaryDisplayables[n]);
    }, e.prototype.update = function() {
      this.updateTransform();
      for (var t = this._cursor; t < this._displayables.length; t++) {
        var n = this._displayables[t];
        n.parent = this, n.update(), n.parent = null;
      }
      for (var t = 0; t < this._temporaryDisplayables.length; t++) {
        var n = this._temporaryDisplayables[t];
        n.parent = this, n.update(), n.parent = null;
      }
    }, e.prototype.getBoundingRect = function() {
      if (!this._rect) {
        for (var t = new xt(1 / 0, 1 / 0, -1 / 0, -1 / 0), n = 0; n < this._displayables.length; n++) {
          var a = this._displayables[n], i = a.getBoundingRect().clone();
          a.needLocalTransform() && i.applyTransform(a.getLocalTransform(HO)), t.union(i);
        }
        this._rect = t;
      }
      return this._rect;
    }, e.prototype.contain = function(t, n) {
      var a = this.transformCoordToLocal(t, n), i = this.getBoundingRect();
      if (i.contain(a[0], a[1]))
        for (var o = 0; o < this._displayables.length; o++) {
          var s = this._displayables[o];
          if (s.contain(t, n))
            return !0;
        }
      return !1;
    }, e;
  }(kr), gx = Nt();
  function Wo(r, e, t, n, a) {
    var i;
    if (e && e.ecModel) {
      var o = e.ecModel.getUpdatePayload();
      i = o && o.animation;
    }
    var s = e && e.isAnimationEnabled(), l = r === "update";
    if (s) {
      var u = void 0, f = void 0, h = void 0;
      n ? (u = _t(n.duration, 200), f = _t(n.easing, "cubicOut"), h = 0) : (u = e.getShallow(l ? "animationDurationUpdate" : "animationDuration"), f = e.getShallow(l ? "animationEasingUpdate" : "animationEasing"), h = e.getShallow(l ? "animationDelayUpdate" : "animationDelay")), i && (i.duration != null && (u = i.duration), i.easing != null && (f = i.easing), i.delay != null && (h = i.delay)), rt(h) && (h = h(t, a)), rt(u) && (u = u(t));
      var c = {
        duration: u || 0,
        delay: h,
        easing: f
      };
      return c;
    } else
      return null;
  }
  function Sp(r, e, t, n, a, i, o) {
    var s = !1, l;
    rt(a) ? (o = i, i = a, a = null) : it(a) && (i = a.cb, o = a.during, s = a.isFrom, l = a.removeOpt, a = a.dataIndex);
    var u = r === "leave";
    u || e.stopAnimation("leave");
    var f = Wo(r, n, a, u ? l || {} : null, n && n.getAnimationDelayParams ? n.getAnimationDelayParams(e, a) : null);
    if (f && f.duration > 0) {
      var h = f.duration, c = f.delay, v = f.easing, d = {
        duration: h,
        delay: c || 0,
        easing: v,
        done: i,
        force: !!i || !!o,
        // Set to final state in update/init animation.
        // So the post processing based on the path shape can be done correctly.
        setToFinal: !u,
        scope: r,
        during: o
      };
      s ? e.animateFrom(t, d) : e.animateTo(t, d);
    } else
      e.stopAnimation(), !s && e.attr(t), o && o(1), i && i();
  }
  function Vt(r, e, t, n, a, i) {
    Sp("update", r, e, t, n, a, i);
  }
  function te(r, e, t, n, a, i) {
    Sp("enter", r, e, t, n, a, i);
  }
  function Uo(r) {
    if (!r.__zr)
      return !0;
    for (var e = 0; e < r.animators.length; e++) {
      var t = r.animators[e];
      if (t.scope === "leave")
        return !0;
    }
    return !1;
  }
  function Ia(r, e, t, n, a, i) {
    Uo(r) || Sp("leave", r, e, t, n, a, i);
  }
  function yx(r, e, t, n) {
    r.removeTextContent(), r.removeTextGuideLine(), Ia(r, {
      style: {
        opacity: 0
      }
    }, e, t, n);
  }
  function Pl(r, e, t) {
    function n() {
      r.parent && r.parent.remove(r);
    }
    r.isGroup ? r.traverse(function(a) {
      a.isGroup || yx(a, e, t, n);
    }) : yx(r, e, t, n);
  }
  function an(r) {
    gx(r).oldStyle = r.style;
  }
  function WO(r) {
    return gx(r).oldStyle;
  }
  var oh = Math.max, sh = Math.min, xp = {};
  function mx(r) {
    return Dt.extend(r);
  }
  var UO = CO;
  function _x(r, e) {
    return UO(r, e);
  }
  function Vr(r, e) {
    xp[r] = e;
  }
  function lh(r) {
    if (xp.hasOwnProperty(r))
      return xp[r];
  }
  function El(r, e, t, n) {
    var a = ux(r, e);
    return t && (n === "center" && (t = Sx(t, a.getBoundingRect())), bp(a, t)), a;
  }
  function wp(r, e, t) {
    var n = new Te({
      style: {
        image: r,
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height
      },
      onload: function(a) {
        if (t === "center") {
          var i = {
            width: a.width,
            height: a.height
          };
          n.setStyle(Sx(e, i));
        }
      }
    });
    return n;
  }
  function Sx(r, e) {
    var t = e.width / e.height, n = r.height * t, a;
    n <= r.width ? a = r.height : (n = r.width, a = n / t);
    var i = r.x + r.width / 2, o = r.y + r.height / 2;
    return {
      x: i - n / 2,
      y: o - a / 2,
      width: n,
      height: a
    };
  }
  var _r = AO;
  function bp(r, e) {
    if (r.applyTransform) {
      var t = r.getBoundingRect(), n = t.calculateTransform(e);
      r.applyTransform(n);
    }
  }
  function Yo(r, e) {
    return bS(r, r, {
      lineWidth: e
    }), r;
  }
  function YO(r) {
    return TS(r.shape, r.shape, r.style), r;
  }
  var uh = Di;
  function La(r, e) {
    for (var t = qs([]); r && r !== e; )
      mn(t, r.getLocalTransform(), t), r = r.parent;
    return t;
  }
  function on(r, e, t) {
    return e && !Pe(e) && (e = Xn.getLocalTransform(e)), t && (e = si([], e)), Ie([], r, e);
  }
  function fh(r, e, t) {
    var n = e[4] === 0 || e[5] === 0 || e[0] === 0 ? 1 : Math.abs(2 * e[4] / e[0]), a = e[4] === 0 || e[5] === 0 || e[2] === 0 ? 1 : Math.abs(2 * e[4] / e[2]), i = [r === "left" ? -n : r === "right" ? n : 0, r === "top" ? -a : r === "bottom" ? a : 0];
    return i = on(i, e, t), Math.abs(i[0]) > Math.abs(i[1]) ? i[0] > 0 ? "right" : "left" : i[1] > 0 ? "bottom" : "top";
  }
  function xx(r) {
    return !r.isGroup;
  }
  function $O(r) {
    return r.shape != null;
  }
  function Rl(r, e, t) {
    if (!r || !e)
      return;
    function n(o) {
      var s = {};
      return o.traverse(function(l) {
        xx(l) && l.anid && (s[l.anid] = l);
      }), s;
    }
    function a(o) {
      var s = {
        x: o.x,
        y: o.y,
        rotation: o.rotation
      };
      return $O(o) && (s.shape = H({}, o.shape)), s;
    }
    var i = n(r);
    e.traverse(function(o) {
      if (xx(o) && o.anid) {
        var s = i[o.anid];
        if (s) {
          var l = a(o);
          o.attr(a(s)), Vt(o, l, t, gt(o).dataIndex);
        }
      }
    });
  }
  function Tp(r, e) {
    return Y(r, function(t) {
      var n = t[0];
      n = oh(n, e.x), n = sh(n, e.x + e.width);
      var a = t[1];
      return a = oh(a, e.y), a = sh(a, e.y + e.height), [n, a];
    });
  }
  function bx(r, e) {
    var t = oh(r.x, e.x), n = sh(r.x + r.width, e.x + e.width), a = oh(r.y, e.y), i = sh(r.y + r.height, e.y + e.height);
    if (n >= t && i >= a)
      return {
        x: t,
        y: a,
        width: n - t,
        height: i - a
      };
  }
  function $o(r, e, t) {
    var n = H({
      rectHover: !0
    }, e), a = n.style = {
      strokeNoScale: !0
    };
    if (t = t || {
      x: -1,
      y: -1,
      width: 2,
      height: 2
    }, r)
      return r.indexOf("image://") === 0 ? (a.image = r.slice(8), ot(a, t), new Te(n)) : El(r.replace("path://", ""), n, t, "center");
  }
  function kl(r, e, t, n, a) {
    for (var i = 0, o = a[a.length - 1]; i < a.length; i++) {
      var s = a[i];
      if (Tx(r, e, t, n, s[0], s[1], o[0], o[1]))
        return !0;
      o = s;
    }
  }
  function Tx(r, e, t, n, a, i, o, s) {
    var l = t - r, u = n - e, f = o - a, h = s - i, c = Cp(f, h, l, u);
    if (XO(c))
      return !1;
    var v = r - a, d = e - i, p = Cp(v, d, l, u) / c;
    if (p < 0 || p > 1)
      return !1;
    var g = Cp(v, d, f, h) / c;
    return !(g < 0 || g > 1);
  }
  function Cp(r, e, t, n) {
    return r * n - t * e;
  }
  function XO(r) {
    return r <= 1e-6 && r >= -1e-6;
  }
  function Xo(r) {
    var e = r.itemTooltipOption, t = r.componentModel, n = r.itemName, a = j(e) ? {
      formatter: e
    } : e, i = t.mainType, o = t.componentIndex, s = {
      componentType: i,
      name: n,
      $vars: ["name"]
    };
    s[i + "Index"] = o;
    var l = r.formatterParamsExtra;
    l && M(Pt(l), function(f) {
      Q(s, f) || (s[f] = l[f], s.$vars.push(f));
    });
    var u = gt(r.el);
    u.componentMainType = i, u.componentIndex = o, u.tooltipConfig = {
      name: n,
      option: ot({
        content: n,
        formatterParams: s
      }, a)
    };
  }
  function Cx(r, e) {
    var t;
    r.isGroup && (t = e(r)), t || r.traverse(e);
  }
  function Pa(r, e) {
    if (r)
      if (U(r))
        for (var t = 0; t < r.length; t++)
          Cx(r[t], e);
      else
        Cx(r, e);
  }
  Vr("circle", Nr), Vr("ellipse", Dl), Vr("sector", Be), Vr("ring", Go), Vr("polygon", ze), Vr("polyline", Ge), Vr("rect", Rt), Vr("line", Se), Vr("bezierCurve", Fo), Vr("arc", Ll);
  var Ol = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    updateProps: Vt,
    initProps: te,
    removeElement: Ia,
    removeElementWithFadeOut: Pl,
    isElementRemoved: Uo,
    extendShape: mx,
    extendPath: _x,
    registerShape: Vr,
    getShapeClass: lh,
    makePath: El,
    makeImage: wp,
    mergePath: _r,
    resizePath: bp,
    subPixelOptimizeLine: Yo,
    subPixelOptimizeRect: YO,
    subPixelOptimize: uh,
    getTransform: La,
    applyTransform: on,
    transformDirection: fh,
    groupTransition: Rl,
    clipPointsByRect: Tp,
    clipRectByRect: bx,
    createIcon: $o,
    linePolygonIntersect: kl,
    lineLineIntersect: Tx,
    setTooltipConfig: Xo,
    traverseElements: Pa,
    Group: ct,
    Image: Te,
    Text: kt,
    Circle: Nr,
    Ellipse: Dl,
    Sector: Be,
    Ring: Go,
    Polygon: ze,
    Polyline: Ge,
    Rect: Rt,
    Line: Se,
    BezierCurve: Fo,
    Arc: Ll,
    IncrementalDisplayable: px,
    CompoundPath: rh,
    LinearGradient: Ho,
    RadialGradient: _p,
    BoundingRect: xt,
    OrientedBoundingRect: ih,
    Point: St,
    Path: Dt
  }), hh = {};
  function Ax(r, e) {
    for (var t = 0; t < Je.length; t++) {
      var n = Je[t], a = e[n], i = r.ensureState(n);
      i.style = i.style || {}, i.style.text = a;
    }
    var o = r.currentStates.slice();
    r.clearStates(!0), r.setStyle({
      text: e.normal
    }), r.useStates(o, !0);
  }
  function Ap(r, e, t) {
    var n = r.labelFetcher, a = r.labelDataIndex, i = r.labelDimIndex, o = e.normal, s;
    n && (s = n.getFormattedLabel(a, "normal", null, i, o && o.get("formatter"), t != null ? {
      interpolatedValue: t
    } : null)), s == null && (s = rt(r.defaultText) ? r.defaultText(a, r, t) : r.defaultText);
    for (var l = {
      normal: s
    }, u = 0; u < Je.length; u++) {
      var f = Je[u], h = e[f];
      l[f] = _t(n ? n.getFormattedLabel(a, f, null, i, h && h.get("formatter")) : null, s);
    }
    return l;
  }
  function ke(r, e, t, n) {
    t = t || hh;
    for (var a = r instanceof kt, i = !1, o = 0; o < bl.length; o++) {
      var s = e[bl[o]];
      if (s && s.getShallow("show")) {
        i = !0;
        break;
      }
    }
    var l = a ? r : r.getTextContent();
    if (i) {
      a || (l || (l = new kt(), r.setTextContent(l)), r.stateProxy && (l.stateProxy = r.stateProxy));
      var u = Ap(t, e), f = e.normal, h = !!f.getShallow("show"), c = jt(f, n && n.normal, t, !1, !a);
      c.text = u.normal, a || r.setTextConfig(ch(f, t, !1));
      for (var o = 0; o < Je.length; o++) {
        var v = Je[o], s = e[v];
        if (s) {
          var d = l.ensureState(v), p = !!_t(s.getShallow("show"), h);
          if (p !== h && (d.ignore = !p), d.style = jt(s, n && n[v], t, !0, !a), d.style.text = u[v], !a) {
            var g = r.ensureState(v);
            g.textConfig = ch(s, t, !0);
          }
        }
      }
      l.silent = !!f.getShallow("silent"), l.style.x != null && (c.x = l.style.x), l.style.y != null && (c.y = l.style.y), l.ignore = !h, l.useStyle(c), l.dirty(), t.enableTextSetter && (Zo(l).setLabelText = function(y) {
        var m = Ap(t, e, y);
        Ax(l, m);
      });
    } else
      l && (l.ignore = !0);
    r.dirty();
  }
  function Ce(r, e) {
    e = e || "label";
    for (var t = {
      normal: r.getModel(e)
    }, n = 0; n < Je.length; n++) {
      var a = Je[n];
      t[a] = r.getModel([a, e]);
    }
    return t;
  }
  function jt(r, e, t, n, a) {
    var i = {};
    return ZO(i, r, t, n, a), e && H(i, e), i;
  }
  function ch(r, e, t) {
    e = e || {};
    var n = {}, a, i = r.getShallow("rotate"), o = _t(r.getShallow("distance"), t ? null : 5), s = r.getShallow("offset");
    return a = r.getShallow("position") || (t ? null : "inside"), a === "outside" && (a = e.defaultOutsidePosition || "top"), a != null && (n.position = a), s != null && (n.offset = s), i != null && (i *= Math.PI / 180, n.rotation = i), o != null && (n.distance = o), n.outsideFill = r.get("color") === "inherit" ? e.inheritColor || null : "auto", n;
  }
  function ZO(r, e, t, n, a) {
    t = t || hh;
    var i = e.ecModel, o = i && i.option.textStyle, s = qO(e), l;
    if (s) {
      l = {};
      for (var u in s)
        if (s.hasOwnProperty(u)) {
          var f = e.getModel(["rich", u]);
          Lx(l[u] = {}, f, o, t, n, a, !1, !0);
        }
    }
    l && (r.rich = l);
    var h = e.get("overflow");
    h && (r.overflow = h);
    var c = e.get("minMargin");
    c != null && (r.margin = c), Lx(r, e, o, t, n, a, !0, !1);
  }
  function qO(r) {
    for (var e; r && r !== r.ecModel; ) {
      var t = (r.option || hh).rich;
      if (t) {
        e = e || {};
        for (var n = Pt(t), a = 0; a < n.length; a++) {
          var i = n[a];
          e[i] = 1;
        }
      }
      r = r.parentModel;
    }
    return e;
  }
  var Dx = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], Mx = ["align", "lineHeight", "width", "height", "tag", "verticalAlign"], Ix = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
  function Lx(r, e, t, n, a, i, o, s) {
    t = !a && t || hh;
    var l = n && n.inheritColor, u = e.getShallow("color"), f = e.getShallow("textBorderColor"), h = _t(e.getShallow("opacity"), t.opacity);
    (u === "inherit" || u === "auto") && (u === "auto" && ce("color: 'auto'", "color: 'inherit'"), l ? u = l : u = null), (f === "inherit" || f === "auto") && (f === "auto" && ce("color: 'auto'", "color: 'inherit'"), l ? f = l : f = null), i || (u = u || t.color, f = f || t.textBorderColor), u != null && (r.fill = u), f != null && (r.stroke = f);
    var c = _t(e.getShallow("textBorderWidth"), t.textBorderWidth);
    c != null && (r.lineWidth = c);
    var v = _t(e.getShallow("textBorderType"), t.textBorderType);
    v != null && (r.lineDash = v);
    var d = _t(e.getShallow("textBorderDashOffset"), t.textBorderDashOffset);
    d != null && (r.lineDashOffset = d), !a && h == null && !s && (h = n && n.defaultOpacity), h != null && (r.opacity = h), !a && !i && r.fill == null && n.inheritColor && (r.fill = n.inheritColor);
    for (var p = 0; p < Dx.length; p++) {
      var g = Dx[p], y = _t(e.getShallow(g), t[g]);
      y != null && (r[g] = y);
    }
    for (var p = 0; p < Mx.length; p++) {
      var g = Mx[p], y = e.getShallow(g);
      y != null && (r[g] = y);
    }
    if (r.verticalAlign == null) {
      var m = e.getShallow("baseline");
      m != null && (r.verticalAlign = m);
    }
    if (!o || !n.disableBox) {
      for (var p = 0; p < Ix.length; p++) {
        var g = Ix[p], y = e.getShallow(g);
        y != null && (r[g] = y);
      }
      var _ = e.getShallow("borderType");
      _ != null && (r.borderDash = _), (r.backgroundColor === "auto" || r.backgroundColor === "inherit") && l && (r.backgroundColor === "auto" && ce("backgroundColor: 'auto'", "backgroundColor: 'inherit'"), r.backgroundColor = l), (r.borderColor === "auto" || r.borderColor === "inherit") && l && (r.borderColor === "auto" && ce("borderColor: 'auto'", "borderColor: 'inherit'"), r.borderColor = l);
    }
  }
  function Px(r, e) {
    var t = e && e.getModel("textStyle");
    return Mr([
      // FIXME in node-canvas fontWeight is before fontStyle
      r.fontStyle || t && t.getShallow("fontStyle") || "",
      r.fontWeight || t && t.getShallow("fontWeight") || "",
      (r.fontSize || t && t.getShallow("fontSize") || 12) + "px",
      r.fontFamily || t && t.getShallow("fontFamily") || "sans-serif"
    ].join(" "));
  }
  var Zo = Nt();
  function Ex(r, e, t, n) {
    if (r) {
      var a = Zo(r);
      a.prevValue = a.value, a.value = t;
      var i = e.normal;
      a.valueAnimation = i.get("valueAnimation"), a.valueAnimation && (a.precision = i.get("precision"), a.defaultInterpolatedText = n, a.statesModels = e);
    }
  }
  function Rx(r, e, t, n, a) {
    var i = Zo(r);
    if (!i.valueAnimation || i.prevValue === i.value)
      return;
    var o = i.defaultInterpolatedText, s = _t(i.interpolatedValue, i.prevValue), l = i.value;
    function u(f) {
      var h = oS(t, i.precision, s, l, f);
      i.interpolatedValue = f === 1 ? null : h;
      var c = Ap({
        labelDataIndex: e,
        labelFetcher: a,
        defaultText: o ? o(h) : h + ""
      }, i.statesModels, h);
      Ax(r, c);
    }
    r.percent = 0, (i.prevValue == null ? te : Vt)(r, {
      // percent is used to prevent animation from being aborted #15916
      percent: 1
    }, n, e, null, u);
  }
  var KO = ["textStyle", "color"], Dp = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"], Mp = new kt(), jO = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getTextColor = function(e) {
        var t = this.ecModel;
        return this.getShallow("color") || (!e && t ? t.get(KO) : null);
      }, r.prototype.getFont = function() {
        return Px({
          fontStyle: this.getShallow("fontStyle"),
          fontWeight: this.getShallow("fontWeight"),
          fontSize: this.getShallow("fontSize"),
          fontFamily: this.getShallow("fontFamily")
        }, this.ecModel);
      }, r.prototype.getTextRect = function(e) {
        for (var t = {
          text: e,
          verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
        }, n = 0; n < Dp.length; n++)
          t[Dp[n]] = this.getShallow(Dp[n]);
        return Mp.useStyle(t), Mp.update(), Mp.getBoundingRect();
      }, r;
    }()
  ), kx = [
    ["lineWidth", "width"],
    ["stroke", "color"],
    ["opacity"],
    ["shadowBlur"],
    ["shadowOffsetX"],
    ["shadowOffsetY"],
    ["shadowColor"],
    ["lineDash", "type"],
    ["lineDashOffset", "dashOffset"],
    ["lineCap", "cap"],
    ["lineJoin", "join"],
    ["miterLimit"]
    // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
    // So do not transfer decal directly.
  ], JO = _i(kx), QO = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getLineStyle = function(e) {
        return JO(this, e);
      }, r;
    }()
  ), Ox = [
    ["fill", "color"],
    ["stroke", "borderColor"],
    ["lineWidth", "borderWidth"],
    ["opacity"],
    ["shadowBlur"],
    ["shadowOffsetX"],
    ["shadowOffsetY"],
    ["shadowColor"],
    ["lineDash", "borderType"],
    ["lineDashOffset", "borderDashOffset"],
    ["lineCap", "borderCap"],
    ["lineJoin", "borderJoin"],
    ["miterLimit", "borderMiterLimit"]
    // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
    // So do not transfer decal directly.
  ], tN = _i(Ox), eN = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getItemStyle = function(e, t) {
        return tN(this, e, t);
      }, r;
    }()
  ), Gt = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.parentModel = t, this.ecModel = n, this.option = e;
      }
      return r.prototype.init = function(e, t, n) {
      }, r.prototype.mergeOption = function(e, t) {
        mt(this.option, e, !0);
      }, r.prototype.get = function(e, t) {
        return e == null ? this.option : this._doGet(this.parsePath(e), !t && this.parentModel);
      }, r.prototype.getShallow = function(e, t) {
        var n = this.option, a = n == null ? n : n[e];
        if (a == null && !t) {
          var i = this.parentModel;
          i && (a = i.getShallow(e));
        }
        return a;
      }, r.prototype.getModel = function(e, t) {
        var n = e != null, a = n ? this.parsePath(e) : null, i = n ? this._doGet(a) : this.option;
        return t = t || this.parentModel && this.parentModel.getModel(this.resolveParentPath(a)), new r(i, t, this.ecModel);
      }, r.prototype.isEmpty = function() {
        return this.option == null;
      }, r.prototype.restoreData = function() {
      }, r.prototype.clone = function() {
        var e = this.constructor;
        return new e(ht(this.option));
      }, r.prototype.parsePath = function(e) {
        return typeof e == "string" ? e.split(".") : e;
      }, r.prototype.resolveParentPath = function(e) {
        return e;
      }, r.prototype.isAnimationEnabled = function() {
        if (!z.node && this.option) {
          if (this.option.animation != null)
            return !!this.option.animation;
          if (this.parentModel)
            return this.parentModel.isAnimationEnabled();
        }
      }, r.prototype._doGet = function(e, t) {
        var n = this.option;
        if (!e)
          return n;
        for (var a = 0; a < e.length && !(e[a] && (n = n && typeof n == "object" ? n[e[a]] : null, n == null)); a++)
          ;
        return n == null && t && (n = t._doGet(this.resolveParentPath(e), t.parentModel)), n;
      }, r;
    }()
  );
  Fd(Gt), pk(Gt), le(Gt, QO), le(Gt, eN), le(Gt, Sk), le(Gt, jO);
  var rN = Math.round(Math.random() * 10);
  function qo(r) {
    return [r || "", rN++].join("_");
  }
  function nN(r) {
    var e = {};
    r.registerSubTypeDefaulter = function(t, n) {
      var a = wn(t);
      e[a.main] = n;
    }, r.determineSubType = function(t, n) {
      var a = n.type;
      if (!a) {
        var i = wn(t).main;
        r.hasSubTypes(t) && e[i] && (a = e[i](n));
      }
      return a;
    };
  }
  function aN(r, e) {
    r.topologicalTravel = function(i, o, s, l) {
      if (!i.length)
        return;
      var u = t(o), f = u.graph, h = u.noEntryList, c = {};
      for (M(i, function(m) {
        c[m] = !0;
      }); h.length; ) {
        var v = h.pop(), d = f[v], p = !!c[v];
        p && (s.call(l, v, d.originalDeps.slice()), delete c[v]), M(d.successor, p ? y : g);
      }
      M(c, function() {
        var m = "";
        throw m = Ke("Circular dependency may exists: ", c, i, o), new Error(m);
      });
      function g(m) {
        f[m].entryCount--, f[m].entryCount === 0 && h.push(m);
      }
      function y(m) {
        c[m] = !0, g(m);
      }
    };
    function t(i) {
      var o = {}, s = [];
      return M(i, function(l) {
        var u = n(o, l), f = u.originalDeps = e(l), h = a(f, i);
        u.entryCount = h.length, u.entryCount === 0 && s.push(l), M(h, function(c) {
          bt(u.predecessor, c) < 0 && u.predecessor.push(c);
          var v = n(o, c);
          bt(v.successor, c) < 0 && v.successor.push(l);
        });
      }), {
        graph: o,
        noEntryList: s
      };
    }
    function n(i, o) {
      return i[o] || (i[o] = {
        predecessor: [],
        successor: []
      }), i[o];
    }
    function a(i, o) {
      var s = [];
      return M(i, function(l) {
        bt(o, l) >= 0 && s.push(l);
      }), s;
    }
  }
  function Ea(r, e) {
    return mt(mt({}, r, !0), e, !0);
  }
  var iN = {
    time: {
      month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
    },
    legend: {
      selector: {
        all: "All",
        inverse: "Inv"
      }
    },
    toolbox: {
      brush: {
        title: {
          rect: "Box Select",
          polygon: "Lasso Select",
          lineX: "Horizontally Select",
          lineY: "Vertically Select",
          keep: "Keep Selections",
          clear: "Clear Selections"
        }
      },
      dataView: {
        title: "Data View",
        lang: ["Data View", "Close", "Refresh"]
      },
      dataZoom: {
        title: {
          zoom: "Zoom",
          back: "Zoom Reset"
        }
      },
      magicType: {
        title: {
          line: "Switch to Line Chart",
          bar: "Switch to Bar Chart",
          stack: "Stack",
          tiled: "Tile"
        }
      },
      restore: {
        title: "Restore"
      },
      saveAsImage: {
        title: "Save as Image",
        lang: ["Right Click to Save Image"]
      }
    },
    series: {
      typeNames: {
        pie: "Pie chart",
        bar: "Bar chart",
        line: "Line chart",
        scatter: "Scatter plot",
        effectScatter: "Ripple scatter plot",
        radar: "Radar chart",
        tree: "Tree",
        treemap: "Treemap",
        boxplot: "Boxplot",
        candlestick: "Candlestick",
        k: "K line chart",
        heatmap: "Heat map",
        map: "Map",
        parallel: "Parallel coordinate map",
        lines: "Line graph",
        graph: "Relationship graph",
        sankey: "Sankey diagram",
        funnel: "Funnel chart",
        gauge: "Gauge",
        pictorialBar: "Pictorial bar",
        themeRiver: "Theme River Map",
        sunburst: "Sunburst"
      }
    },
    aria: {
      general: {
        withTitle: 'This is a chart about "{title}"',
        withoutTitle: "This is a chart"
      },
      series: {
        single: {
          prefix: "",
          withName: " with type {seriesType} named {seriesName}.",
          withoutName: " with type {seriesType}."
        },
        multiple: {
          prefix: ". It consists of {seriesCount} series count.",
          withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
          withoutName: " The {seriesId} series is a {seriesType}.",
          separator: {
            middle: "",
            end: ""
          }
        }
      },
      data: {
        allData: "The data is as follows: ",
        partialData: "The first {displayCnt} items are: ",
        withName: "the data for {name} is {value}",
        withoutName: "{value}",
        separator: {
          middle: ", ",
          end: ". "
        }
      }
    }
  }, oN = {
    time: {
      month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
      monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
      dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
      dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
    },
    legend: {
      selector: {
        all: "全选",
        inverse: "反选"
      }
    },
    toolbox: {
      brush: {
        title: {
          rect: "矩形选择",
          polygon: "圈选",
          lineX: "横向选择",
          lineY: "纵向选择",
          keep: "保持选择",
          clear: "清除选择"
        }
      },
      dataView: {
        title: "数据视图",
        lang: ["数据视图", "关闭", "刷新"]
      },
      dataZoom: {
        title: {
          zoom: "区域缩放",
          back: "区域缩放还原"
        }
      },
      magicType: {
        title: {
          line: "切换为折线图",
          bar: "切换为柱状图",
          stack: "切换为堆叠",
          tiled: "切换为平铺"
        }
      },
      restore: {
        title: "还原"
      },
      saveAsImage: {
        title: "保存为图片",
        lang: ["右键另存为图片"]
      }
    },
    series: {
      typeNames: {
        pie: "饼图",
        bar: "柱状图",
        line: "折线图",
        scatter: "散点图",
        effectScatter: "涟漪散点图",
        radar: "雷达图",
        tree: "树图",
        treemap: "矩形树图",
        boxplot: "箱型图",
        candlestick: "K线图",
        k: "K线图",
        heatmap: "热力图",
        map: "地图",
        parallel: "平行坐标图",
        lines: "线图",
        graph: "关系图",
        sankey: "桑基图",
        funnel: "漏斗图",
        gauge: "仪表盘图",
        pictorialBar: "象形柱图",
        themeRiver: "主题河流图",
        sunburst: "旭日图"
      }
    },
    aria: {
      general: {
        withTitle: "这是一个关于“{title}”的图表。",
        withoutTitle: "这是一个图表，"
      },
      series: {
        single: {
          prefix: "",
          withName: "图表类型是{seriesType}，表示{seriesName}。",
          withoutName: "图表类型是{seriesType}。"
        },
        multiple: {
          prefix: "它由{seriesCount}个图表系列组成。",
          withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
          withoutName: "第{seriesId}个系列是一个{seriesType}，",
          separator: {
            middle: "；",
            end: "。"
          }
        }
      },
      data: {
        allData: "其数据是——",
        partialData: "其中，前{displayCnt}项是——",
        withName: "{name}的数据是{value}",
        withoutName: "{value}",
        separator: {
          middle: "，",
          end: ""
        }
      }
    }
  }, vh = "ZH", Ip = "EN", Nl = Ip, dh = {}, Lp = {}, Nx = z.domSupported ? function() {
    var r = (
      /* eslint-disable-next-line */
      (document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase()
    );
    return r.indexOf(vh) > -1 ? vh : Nl;
  }() : Nl;
  function Pp(r, e) {
    r = r.toUpperCase(), Lp[r] = new Gt(e), dh[r] = e;
  }
  function sN(r) {
    if (j(r)) {
      var e = dh[r.toUpperCase()] || {};
      return r === vh || r === Ip ? ht(e) : mt(ht(e), ht(dh[Nl]), !1);
    } else
      return mt(ht(r), ht(dh[Nl]), !1);
  }
  function Ep(r) {
    return Lp[r];
  }
  function lN() {
    return Lp[Nl];
  }
  Pp(Ip, iN), Pp(vh, oN);
  var Rp = 1e3, kp = Rp * 60, Vl = kp * 60, Br = Vl * 24, Vx = Br * 365, Bl = {
    year: "{yyyy}",
    month: "{MMM}",
    day: "{d}",
    hour: "{HH}:{mm}",
    minute: "{HH}:{mm}",
    second: "{HH}:{mm}:{ss}",
    millisecond: "{HH}:{mm}:{ss} {SSS}",
    none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
  }, ph = "{yyyy}-{MM}-{dd}", Bx = {
    year: "{yyyy}",
    month: "{yyyy}-{MM}",
    day: ph,
    hour: ph + " " + Bl.hour,
    minute: ph + " " + Bl.minute,
    second: ph + " " + Bl.second,
    millisecond: Bl.none
  }, Op = ["year", "month", "day", "hour", "minute", "second", "millisecond"], zx = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
  function ur(r, e) {
    return r += "", "0000".substr(0, e - r.length) + r;
  }
  function Ko(r) {
    switch (r) {
      case "half-year":
      case "quarter":
        return "month";
      case "week":
      case "half-week":
        return "day";
      case "half-day":
      case "quarter-day":
        return "hour";
      default:
        return r;
    }
  }
  function uN(r) {
    return r === Ko(r);
  }
  function fN(r) {
    switch (r) {
      case "year":
      case "month":
        return "day";
      case "millisecond":
        return "millisecond";
      default:
        return "second";
    }
  }
  function zl(r, e, t, n) {
    var a = mr(r), i = a[Np(t)](), o = a[jo(t)]() + 1, s = Math.floor((o - 1) / 3) + 1, l = a[gh(t)](), u = a["get" + (t ? "UTC" : "") + "Day"](), f = a[Gl(t)](), h = (f - 1) % 12 + 1, c = a[yh(t)](), v = a[mh(t)](), d = a[_h(t)](), p = n instanceof Gt ? n : Ep(n || Nx) || lN(), g = p.getModel("time"), y = g.get("month"), m = g.get("monthAbbr"), _ = g.get("dayOfWeek"), S = g.get("dayOfWeekAbbr");
    return (e || "").replace(/{yyyy}/g, i + "").replace(/{yy}/g, i % 100 + "").replace(/{Q}/g, s + "").replace(/{MMMM}/g, y[o - 1]).replace(/{MMM}/g, m[o - 1]).replace(/{MM}/g, ur(o, 2)).replace(/{M}/g, o + "").replace(/{dd}/g, ur(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, _[u]).replace(/{ee}/g, S[u]).replace(/{e}/g, u + "").replace(/{HH}/g, ur(f, 2)).replace(/{H}/g, f + "").replace(/{hh}/g, ur(h + "", 2)).replace(/{h}/g, h + "").replace(/{mm}/g, ur(c, 2)).replace(/{m}/g, c + "").replace(/{ss}/g, ur(v, 2)).replace(/{s}/g, v + "").replace(/{SSS}/g, ur(d, 3)).replace(/{S}/g, d + "");
  }
  function hN(r, e, t, n, a) {
    var i = null;
    if (j(t))
      i = t;
    else if (rt(t))
      i = t(r.value, e, {
        level: r.level
      });
    else {
      var o = H({}, Bl);
      if (r.level > 0)
        for (var s = 0; s < Op.length; ++s)
          o[Op[s]] = "{primary|" + o[Op[s]] + "}";
      var l = t ? t.inherit === !1 ? t : ot(t, o) : o, u = Gx(r.value, a);
      if (l[u])
        i = l[u];
      else if (l.inherit) {
        for (var f = zx.indexOf(u), s = f - 1; s >= 0; --s)
          if (l[u]) {
            i = l[u];
            break;
          }
        i = i || o.none;
      }
      if (U(i)) {
        var h = r.level == null ? 0 : r.level >= 0 ? r.level : i.length + r.level;
        h = Math.min(h, i.length - 1), i = i[h];
      }
    }
    return zl(new Date(r.value), i, a, n);
  }
  function Gx(r, e) {
    var t = mr(r), n = t[jo(e)]() + 1, a = t[gh(e)](), i = t[Gl(e)](), o = t[yh(e)](), s = t[mh(e)](), l = t[_h(e)](), u = l === 0, f = u && s === 0, h = f && o === 0, c = h && i === 0, v = c && a === 1, d = v && n === 1;
    return d ? "year" : v ? "month" : c ? "day" : h ? "hour" : f ? "minute" : u ? "second" : "millisecond";
  }
  function Fx(r, e, t) {
    var n = Ot(r) ? mr(r) : r;
    switch (e = e || Gx(r, t), e) {
      case "year":
        return n[Np(t)]();
      case "half-year":
        return n[jo(t)]() >= 6 ? 1 : 0;
      case "quarter":
        return Math.floor((n[jo(t)]() + 1) / 4);
      case "month":
        return n[jo(t)]();
      case "day":
        return n[gh(t)]();
      case "half-day":
        return n[Gl(t)]() / 24;
      case "hour":
        return n[Gl(t)]();
      case "minute":
        return n[yh(t)]();
      case "second":
        return n[mh(t)]();
      case "millisecond":
        return n[_h(t)]();
    }
  }
  function Np(r) {
    return r ? "getUTCFullYear" : "getFullYear";
  }
  function jo(r) {
    return r ? "getUTCMonth" : "getMonth";
  }
  function gh(r) {
    return r ? "getUTCDate" : "getDate";
  }
  function Gl(r) {
    return r ? "getUTCHours" : "getHours";
  }
  function yh(r) {
    return r ? "getUTCMinutes" : "getMinutes";
  }
  function mh(r) {
    return r ? "getUTCSeconds" : "getSeconds";
  }
  function _h(r) {
    return r ? "getUTCMilliseconds" : "getMilliseconds";
  }
  function cN(r) {
    return r ? "setUTCFullYear" : "setFullYear";
  }
  function Hx(r) {
    return r ? "setUTCMonth" : "setMonth";
  }
  function Wx(r) {
    return r ? "setUTCDate" : "setDate";
  }
  function Ux(r) {
    return r ? "setUTCHours" : "setHours";
  }
  function Yx(r) {
    return r ? "setUTCMinutes" : "setMinutes";
  }
  function $x(r) {
    return r ? "setUTCSeconds" : "setSeconds";
  }
  function Xx(r) {
    return r ? "setUTCMilliseconds" : "setMilliseconds";
  }
  function vN(r, e, t, n, a, i, o, s) {
    var l = new kt({
      style: {
        text: r,
        font: e,
        align: t,
        verticalAlign: n,
        padding: a,
        rich: i,
        overflow: o ? "truncate" : null,
        lineHeight: s
      }
    });
    return l.getBoundingRect();
  }
  function Vp(r) {
    if (!Bf(r))
      return j(r) ? r : "-";
    var e = (r + "").split(".");
    return e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e.length > 1 ? "." + e[1] : "");
  }
  function Bp(r, e) {
    return r = (r || "").toLowerCase().replace(/-(.)/g, function(t, n) {
      return n.toUpperCase();
    }), e && r && (r = r.charAt(0).toUpperCase() + r.slice(1)), r;
  }
  var ki = uf;
  function zp(r, e, t) {
    var n = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}";
    function a(f) {
      return f && Mr(f) ? f : "-";
    }
    function i(f) {
      return !!(f != null && !isNaN(f) && isFinite(f));
    }
    var o = e === "time", s = r instanceof Date;
    if (o || s) {
      var l = o ? mr(r) : r;
      if (isNaN(+l)) {
        if (s)
          return "-";
      } else
        return zl(l, n, t);
    }
    if (e === "ordinal")
      return Gs(r) ? a(r) : Ot(r) && i(r) ? r + "" : "-";
    var u = xn(r);
    return i(u) ? Vp(u) : Gs(r) ? a(r) : typeof r == "boolean" ? r + "" : "-";
  }
  var Zx = ["a", "b", "c", "d", "e", "f", "g"], Gp = function(r, e) {
    return "{" + r + (e ?? "") + "}";
  };
  function Fp(r, e, t) {
    U(e) || (e = [e]);
    var n = e.length;
    if (!n)
      return "";
    for (var a = e[0].$vars || [], i = 0; i < a.length; i++) {
      var o = Zx[i];
      r = r.replace(Gp(o), Gp(o, 0));
    }
    for (var s = 0; s < n; s++)
      for (var l = 0; l < a.length; l++) {
        var u = e[s][a[l]];
        r = r.replace(Gp(Zx[l], s), t ? Ze(u) : u);
      }
    return r;
  }
  function dN(r, e, t) {
    return M(e, function(n, a) {
      r = r.replace("{" + a + "}", t ? Ze(n) : n);
    }), r;
  }
  function qx(r, e) {
    var t = j(r) ? {
      color: r,
      extraCssText: e
    } : r || {}, n = t.color, a = t.type;
    e = t.extraCssText;
    var i = t.renderMode || "html";
    if (!n)
      return "";
    if (i === "html")
      return a === "subItem" ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + Ze(n) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + Ze(n) + ";" + (e || "") + '"></span>';
    var o = t.markerId || "markerX";
    return {
      renderMode: i,
      content: "{" + o + "|}  ",
      style: a === "subItem" ? {
        width: 4,
        height: 4,
        borderRadius: 2,
        backgroundColor: n
      } : {
        width: 10,
        height: 10,
        borderRadius: 5,
        backgroundColor: n
      }
    };
  }
  function pN(r, e, t) {
    ce("echarts.format.formatTime", "echarts.time.format"), (r === "week" || r === "month" || r === "quarter" || r === "half-year" || r === "year") && (r = `MM-dd
yyyy`);
    var n = mr(e), a = t ? "getUTC" : "get", i = n[a + "FullYear"](), o = n[a + "Month"]() + 1, s = n[a + "Date"](), l = n[a + "Hours"](), u = n[a + "Minutes"](), f = n[a + "Seconds"](), h = n[a + "Milliseconds"]();
    return r = r.replace("MM", ur(o, 2)).replace("M", o).replace("yyyy", i).replace("yy", ur(i % 100 + "", 2)).replace("dd", ur(s, 2)).replace("d", s).replace("hh", ur(l, 2)).replace("h", l).replace("mm", ur(u, 2)).replace("m", u).replace("ss", ur(f, 2)).replace("s", f).replace("SSS", ur(h, 3)), r;
  }
  function gN(r) {
    return r && r.charAt(0).toUpperCase() + r.substr(1);
  }
  function Oi(r, e) {
    return e = e || "transparent", j(r) ? r : it(r) && r.colorStops && (r.colorStops[0] || {}).color || e;
  }
  function Sh(r, e) {
    if (e === "_blank" || e === "blank") {
      var t = window.open();
      t.opener = null, t.location.href = r;
    } else
      window.open(r, e);
  }
  var xh = M, Kx = ["left", "right", "top", "bottom", "width", "height"], Ni = [["width", "left", "right"], ["height", "top", "bottom"]];
  function Hp(r, e, t, n, a) {
    var i = 0, o = 0;
    n == null && (n = 1 / 0), a == null && (a = 1 / 0);
    var s = 0;
    e.eachChild(function(l, u) {
      var f = l.getBoundingRect(), h = e.childAt(u + 1), c = h && h.getBoundingRect(), v, d;
      if (r === "horizontal") {
        var p = f.width + (c ? -c.x + f.x : 0);
        v = i + p, v > n || l.newline ? (i = 0, v = p, o += s + t, s = f.height) : s = Math.max(s, f.height);
      } else {
        var g = f.height + (c ? -c.y + f.y : 0);
        d = o + g, d > a || l.newline ? (i += s + t, o = 0, d = g, s = f.width) : s = Math.max(s, f.width);
      }
      l.newline || (l.x = i, l.y = o, l.markRedraw(), r === "horizontal" ? i = v + t : o = d + t);
    });
  }
  var Vi = Hp;
  yt(Hp, "vertical"), yt(Hp, "horizontal");
  function yN(r, e, t) {
    var n = e.width, a = e.height, i = Z(r.left, n), o = Z(r.top, a), s = Z(r.right, n), l = Z(r.bottom, a);
    return (isNaN(i) || isNaN(parseFloat(r.left))) && (i = 0), (isNaN(s) || isNaN(parseFloat(r.right))) && (s = n), (isNaN(o) || isNaN(parseFloat(r.top))) && (o = 0), (isNaN(l) || isNaN(parseFloat(r.bottom))) && (l = a), t = ki(t || 0), {
      width: Math.max(s - i - t[1] - t[3], 0),
      height: Math.max(l - o - t[0] - t[2], 0)
    };
  }
  function ye(r, e, t) {
    t = ki(t || 0);
    var n = e.width, a = e.height, i = Z(r.left, n), o = Z(r.top, a), s = Z(r.right, n), l = Z(r.bottom, a), u = Z(r.width, n), f = Z(r.height, a), h = t[2] + t[0], c = t[1] + t[3], v = r.aspect;
    switch (isNaN(u) && (u = n - s - c - i), isNaN(f) && (f = a - l - h - o), v != null && (isNaN(u) && isNaN(f) && (v > n / a ? u = n * 0.8 : f = a * 0.8), isNaN(u) && (u = v * f), isNaN(f) && (f = u / v)), isNaN(i) && (i = n - s - u - c), isNaN(o) && (o = a - l - f - h), r.left || r.right) {
      case "center":
        i = n / 2 - u / 2 - t[3];
        break;
      case "right":
        i = n - u - c;
        break;
    }
    switch (r.top || r.bottom) {
      case "middle":
      case "center":
        o = a / 2 - f / 2 - t[0];
        break;
      case "bottom":
        o = a - f - h;
        break;
    }
    i = i || 0, o = o || 0, isNaN(u) && (u = n - c - i - (s || 0)), isNaN(f) && (f = a - h - o - (l || 0));
    var d = new xt(i + t[3], o + t[0], u, f);
    return d.margin = t, d;
  }
  function wh(r, e, t, n, a, i) {
    var o = !a || !a.hv || a.hv[0], s = !a || !a.hv || a.hv[1], l = a && a.boundingMode || "all";
    if (i = i || r, i.x = r.x, i.y = r.y, !o && !s)
      return !1;
    var u;
    if (l === "raw")
      u = r.type === "group" ? new xt(0, 0, +e.width || 0, +e.height || 0) : r.getBoundingRect();
    else if (u = r.getBoundingRect(), r.needLocalTransform()) {
      var f = r.getLocalTransform();
      u = u.clone(), u.applyTransform(f);
    }
    var h = ye(ot({
      width: u.width,
      height: u.height
    }, e), t, n), c = o ? h.x - u.x : 0, v = s ? h.y - u.y : 0;
    return l === "raw" ? (i.x = c, i.y = v) : (i.x += c, i.y += v), i === r && r.markRedraw(), !0;
  }
  function mN(r, e) {
    return r[Ni[e][0]] != null || r[Ni[e][1]] != null && r[Ni[e][2]] != null;
  }
  function Fl(r) {
    var e = r.layoutMode || r.constructor.layoutMode;
    return it(e) ? e : e ? {
      type: e
    } : null;
  }
  function Ra(r, e, t) {
    var n = t && t.ignoreSize;
    !U(n) && (n = [n, n]);
    var a = o(Ni[0], 0), i = o(Ni[1], 1);
    u(Ni[0], r, a), u(Ni[1], r, i);
    function o(f, h) {
      var c = {}, v = 0, d = {}, p = 0, g = 2;
      if (xh(f, function(_) {
        d[_] = r[_];
      }), xh(f, function(_) {
        s(e, _) && (c[_] = d[_] = e[_]), l(c, _) && v++, l(d, _) && p++;
      }), n[h])
        return l(e, f[1]) ? d[f[2]] = null : l(e, f[2]) && (d[f[1]] = null), d;
      if (p === g || !v)
        return d;
      if (v >= g)
        return c;
      for (var y = 0; y < f.length; y++) {
        var m = f[y];
        if (!s(c, m) && s(r, m)) {
          c[m] = r[m];
          break;
        }
      }
      return c;
    }
    function s(f, h) {
      return f.hasOwnProperty(h);
    }
    function l(f, h) {
      return f[h] != null && f[h] !== "auto";
    }
    function u(f, h, c) {
      xh(f, function(v) {
        h[v] = c[v];
      });
    }
  }
  function Jo(r) {
    return jx({}, r);
  }
  function jx(r, e) {
    return e && r && xh(Kx, function(t) {
      e.hasOwnProperty(t) && (r[t] = e[t]);
    }), r;
  }
  var _N = Nt(), Ct = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this, t, n, a) || this;
        return i.uid = qo("ec_cpt_model"), i;
      }
      return e.prototype.init = function(t, n, a) {
        this.mergeDefaultAndTheme(t, a);
      }, e.prototype.mergeDefaultAndTheme = function(t, n) {
        var a = Fl(this), i = a ? Jo(t) : {}, o = n.getTheme();
        mt(t, o.get(this.mainType)), mt(t, this.getDefaultOption()), a && Ra(t, i, a);
      }, e.prototype.mergeOption = function(t, n) {
        mt(this.option, t, !0);
        var a = Fl(this);
        a && Ra(this.option, t, a);
      }, e.prototype.optionUpdated = function(t, n) {
      }, e.prototype.getDefaultOption = function() {
        var t = this.constructor;
        if (!ck(t))
          return t.defaultOption;
        var n = _N(this);
        if (!n.defaultOption) {
          for (var a = [], i = t; i; ) {
            var o = i.prototype.defaultOption;
            o && a.push(o), i = i.superClass;
          }
          for (var s = {}, l = a.length - 1; l >= 0; l--)
            s = mt(s, a[l], !0);
          n.defaultOption = s;
        }
        return n.defaultOption;
      }, e.prototype.getReferringComponents = function(t, n) {
        var a = t + "Index", i = t + "Id";
        return _l(this.ecModel, t, {
          index: this.get(a, !0),
          id: this.get(i, !0)
        }, n);
      }, e.prototype.getBoxLayoutParams = function() {
        var t = this;
        return {
          left: t.get("left"),
          top: t.get("top"),
          right: t.get("right"),
          bottom: t.get("bottom"),
          width: t.get("width"),
          height: t.get("height")
        };
      }, e.prototype.getZLevelKey = function() {
        return "";
      }, e.prototype.setZLevel = function(t) {
        this.option.zlevel = t;
      }, e.protoInitialize = function() {
        var t = e.prototype;
        t.type = "component", t.id = "", t.name = "", t.mainType = "", t.subType = "", t.componentIndex = 0;
      }(), e;
    }(Gt)
  );
  lS(Ct, Gt), Gf(Ct), nN(Ct), aN(Ct, SN);
  function SN(r) {
    var e = [];
    return M(Ct.getClassesByMainType(r), function(t) {
      e = e.concat(t.dependencies || t.prototype.dependencies || []);
    }), e = Y(e, function(t) {
      return wn(t).main;
    }), r !== "dataset" && bt(e, "dataset") <= 0 && e.unshift("dataset"), e;
  }
  var Jx = "";
  typeof navigator < "u" && (Jx = navigator.platform || "");
  var Qo = "rgba(0, 0, 0, 0.2)", xN = {
    darkMode: "auto",
    // backgroundColor: 'rgba(0,0,0,0)',
    colorBy: "series",
    color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
    gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
    aria: {
      decal: {
        decals: [{
          color: Qo,
          dashArrayX: [1, 0],
          dashArrayY: [2, 5],
          symbolSize: 1,
          rotation: Math.PI / 6
        }, {
          color: Qo,
          symbol: "circle",
          dashArrayX: [[8, 8], [0, 8, 8, 0]],
          dashArrayY: [6, 0],
          symbolSize: 0.8
        }, {
          color: Qo,
          dashArrayX: [1, 0],
          dashArrayY: [4, 3],
          rotation: -Math.PI / 4
        }, {
          color: Qo,
          dashArrayX: [[6, 6], [0, 6, 6, 0]],
          dashArrayY: [6, 0]
        }, {
          color: Qo,
          dashArrayX: [[1, 0], [1, 6]],
          dashArrayY: [1, 0, 6, 0],
          rotation: Math.PI / 4
        }, {
          color: Qo,
          symbol: "triangle",
          dashArrayX: [[9, 9], [0, 9, 9, 0]],
          dashArrayY: [7, 2],
          symbolSize: 0.75
        }]
      }
    },
    // If xAxis and yAxis declared, grid is created by default.
    // grid: {},
    textStyle: {
      // color: '#000',
      // decoration: 'none',
      // PENDING
      fontFamily: Jx.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
      // fontFamily: 'Arial, Verdana, sans-serif',
      fontSize: 12,
      fontStyle: "normal",
      fontWeight: "normal"
    },
    // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
    // Default is source-over
    blendMode: null,
    stateAnimation: {
      duration: 300,
      easing: "cubicOut"
    },
    animation: "auto",
    animationDuration: 1e3,
    animationDurationUpdate: 500,
    animationEasing: "cubicInOut",
    animationEasingUpdate: "cubicInOut",
    animationThreshold: 2e3,
    // Configuration for progressive/incremental rendering
    progressiveThreshold: 3e3,
    progressive: 400,
    // Threshold of if use single hover layer to optimize.
    // It is recommended that `hoverLayerThreshold` is equivalent to or less than
    // `progressiveThreshold`, otherwise hover will cause restart of progressive,
    // which is unexpected.
    // see example <echarts/test/heatmap-large.html>.
    hoverLayerThreshold: 3e3,
    // See: module:echarts/scale/Time
    useUTC: !1
  }, Wp = nt(["tooltip", "label", "itemName", "itemId", "itemGroupId", "seriesName"]), zr = "original", Fe = "arrayRows", Gr = "objectRows", Mn = "keyedColumns", Qn = "typedArray", Qx = "unknown", In = "column", ts = "row", Oe = {
    Must: 1,
    Might: 2,
    Not: 3
    // Other cases
  }, tw = Nt();
  function wN(r) {
    tw(r).datasetMap = nt();
  }
  function ew(r, e, t) {
    var n = {}, a = Yp(e);
    if (!a || !r)
      return n;
    var i = [], o = [], s = e.ecModel, l = tw(s).datasetMap, u = a.uid + "_" + t.seriesLayoutBy, f, h;
    r = r.slice(), M(r, function(p, g) {
      var y = it(p) ? p : r[g] = {
        name: p
      };
      y.type === "ordinal" && f == null && (f = g, h = d(y)), n[y.name] = [];
    });
    var c = l.get(u) || l.set(u, {
      categoryWayDim: h,
      valueWayDim: 0
    });
    M(r, function(p, g) {
      var y = p.name, m = d(p);
      if (f == null) {
        var _ = c.valueWayDim;
        v(n[y], _, m), v(o, _, m), c.valueWayDim += m;
      } else if (f === g)
        v(n[y], 0, m), v(i, 0, m);
      else {
        var _ = c.categoryWayDim;
        v(n[y], _, m), v(o, _, m), c.categoryWayDim += m;
      }
    });
    function v(p, g, y) {
      for (var m = 0; m < y; m++)
        p.push(g + m);
    }
    function d(p) {
      var g = p.dimsDef;
      return g ? g.length : 1;
    }
    return i.length && (n.itemName = i), o.length && (n.seriesName = o), n;
  }
  function Up(r, e, t) {
    var n = {}, a = Yp(r);
    if (!a)
      return n;
    var i = e.sourceFormat, o = e.dimensionsDefine, s;
    (i === Gr || i === Mn) && M(o, function(f, h) {
      (it(f) ? f.name : f) === "name" && (s = h);
    });
    var l = function() {
      for (var f = {}, h = {}, c = [], v = 0, d = Math.min(5, t); v < d; v++) {
        var p = nw(e.data, i, e.seriesLayoutBy, o, e.startIndex, v);
        c.push(p);
        var g = p === Oe.Not;
        if (g && f.v == null && v !== s && (f.v = v), (f.n == null || f.n === f.v || !g && c[f.n] === Oe.Not) && (f.n = v), y(f) && c[f.n] !== Oe.Not)
          return f;
        g || (p === Oe.Might && h.v == null && v !== s && (h.v = v), (h.n == null || h.n === h.v) && (h.n = v));
      }
      function y(m) {
        return m.v != null && m.n != null;
      }
      return y(f) ? f : y(h) ? h : null;
    }();
    if (l) {
      n.value = [l.v];
      var u = s ?? l.n;
      n.itemName = [u], n.seriesName = [u];
    }
    return n;
  }
  function Yp(r) {
    var e = r.get("data", !0);
    if (!e)
      return _l(r.ecModel, "dataset", {
        index: r.get("datasetIndex", !0),
        id: r.get("datasetId", !0)
      }, ge).models[0];
  }
  function bN(r) {
    return !r.get("transform", !0) && !r.get("fromTransformResult", !0) ? [] : _l(r.ecModel, "dataset", {
      index: r.get("fromDatasetIndex", !0),
      id: r.get("fromDatasetId", !0)
    }, ge).models;
  }
  function rw(r, e) {
    return nw(r.data, r.sourceFormat, r.seriesLayoutBy, r.dimensionsDefine, r.startIndex, e);
  }
  function nw(r, e, t, n, a, i) {
    var o, s = 5;
    if (Xe(r))
      return Oe.Not;
    var l, u;
    if (n) {
      var f = n[i];
      it(f) ? (l = f.name, u = f.type) : j(f) && (l = f);
    }
    if (u != null)
      return u === "ordinal" ? Oe.Must : Oe.Not;
    if (e === Fe) {
      var h = r;
      if (t === ts) {
        for (var c = h[i], v = 0; v < (c || []).length && v < s; v++)
          if ((o = S(c[a + v])) != null)
            return o;
      } else
        for (var v = 0; v < h.length && v < s; v++) {
          var d = h[a + v];
          if (d && (o = S(d[i])) != null)
            return o;
        }
    } else if (e === Gr) {
      var p = r;
      if (!l)
        return Oe.Not;
      for (var v = 0; v < p.length && v < s; v++) {
        var g = p[v];
        if (g && (o = S(g[l])) != null)
          return o;
      }
    } else if (e === Mn) {
      var y = r;
      if (!l)
        return Oe.Not;
      var c = y[l];
      if (!c || Xe(c))
        return Oe.Not;
      for (var v = 0; v < c.length && v < s; v++)
        if ((o = S(c[v])) != null)
          return o;
    } else if (e === zr)
      for (var m = r, v = 0; v < m.length && v < s; v++) {
        var g = m[v], _ = Eo(g);
        if (!U(_))
          return Oe.Not;
        if ((o = S(_[i])) != null)
          return o;
      }
    function S(b) {
      var w = j(b);
      if (b != null && isFinite(b) && b !== "")
        return w ? Oe.Might : Oe.Not;
      if (w && b !== "-")
        return Oe.Must;
    }
    return Oe.Not;
  }
  var $p = nt();
  function TN(r, e) {
    st($p.get(r) == null && e), $p.set(r, e);
  }
  function CN(r, e, t) {
    var n = $p.get(e);
    if (!n)
      return t;
    var a = n(r);
    if (!a)
      return t;
    for (var i = 0; i < a.length; i++)
      st(Ro(a[i]));
    return t.concat(a);
  }
  var aw = Nt(), AN = Nt(), Xp = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getColorFromPalette = function(e, t, n) {
        var a = Xt(this.get("color", !0)), i = this.get("colorLayer", !0);
        return iw(this, aw, a, i, e, t, n);
      }, r.prototype.clearColorPalette = function() {
        MN(this, aw);
      }, r;
    }()
  );
  function Zp(r, e, t, n) {
    var a = Xt(r.get(["aria", "decal", "decals"]));
    return iw(r, AN, a, null, e, t, n);
  }
  function DN(r, e) {
    for (var t = r.length, n = 0; n < t; n++)
      if (r[n].length > e)
        return r[n];
    return r[t - 1];
  }
  function iw(r, e, t, n, a, i, o) {
    i = i || r;
    var s = e(i), l = s.paletteIdx || 0, u = s.paletteNameMap = s.paletteNameMap || {};
    if (u.hasOwnProperty(a))
      return u[a];
    var f = o == null || !n ? t : DN(n, o);
    if (f = f || t, !(!f || !f.length)) {
      var h = f[l];
      return a && (u[a] = h), s.paletteIdx = (l + 1) % f.length, h;
    }
  }
  function MN(r, e) {
    e(r).paletteIdx = 0, e(r).paletteNameMap = {};
  }
  var bh, Hl, ow, qp = "\0_ec_inner", sw = 1, IN = {
    grid: "GridComponent",
    polar: "PolarComponent",
    geo: "GeoComponent",
    singleAxis: "SingleAxisComponent",
    parallel: "ParallelComponent",
    calendar: "CalendarComponent",
    graphic: "GraphicComponent",
    toolbox: "ToolboxComponent",
    tooltip: "TooltipComponent",
    axisPointer: "AxisPointerComponent",
    brush: "BrushComponent",
    title: "TitleComponent",
    timeline: "TimelineComponent",
    markPoint: "MarkPointComponent",
    markLine: "MarkLineComponent",
    markArea: "MarkAreaComponent",
    legend: "LegendComponent",
    dataZoom: "DataZoomComponent",
    visualMap: "VisualMapComponent",
    // aria: 'AriaComponent',
    // dataset: 'DatasetComponent',
    // Dependencies
    xAxis: "GridComponent",
    yAxis: "GridComponent",
    angleAxis: "PolarComponent",
    radiusAxis: "PolarComponent"
  }, LN = {
    line: "LineChart",
    bar: "BarChart",
    pie: "PieChart",
    scatter: "ScatterChart",
    radar: "RadarChart",
    map: "MapChart",
    tree: "TreeChart",
    treemap: "TreemapChart",
    graph: "GraphChart",
    gauge: "GaugeChart",
    funnel: "FunnelChart",
    parallel: "ParallelChart",
    sankey: "SankeyChart",
    boxplot: "BoxplotChart",
    candlestick: "CandlestickChart",
    effectScatter: "EffectScatterChart",
    lines: "LinesChart",
    heatmap: "HeatmapChart",
    pictorialBar: "PictorialBarChart",
    themeRiver: "ThemeRiverChart",
    sunburst: "SunburstChart",
    custom: "CustomChart"
  }, Th = {};
  function PN(r) {
    M(r, function(e, t) {
      if (!Ct.hasClass(t)) {
        var n = IN[t];
        n && !Th[n] && (Ee("Component " + t + ` is used but not imported.
import { ` + n + ` } from 'echarts/components';
echarts.use([` + n + "]);"), Th[n] = !0);
      }
    });
  }
  var Kp = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.init = function(t, n, a, i, o, s) {
        i = i || {}, this.option = null, this._theme = new Gt(i), this._locale = new Gt(o), this._optionManager = s;
      }, e.prototype.setOption = function(t, n, a) {
        st(t != null, "option is null/undefined"), st(t[qp] !== sw, "please use chart.getOption()");
        var i = fw(n);
        this._optionManager.setOption(t, a, i), this._resetOption(null, i);
      }, e.prototype.resetOption = function(t, n) {
        return this._resetOption(t, fw(n));
      }, e.prototype._resetOption = function(t, n) {
        var a = !1, i = this._optionManager;
        if (!t || t === "recreate") {
          var o = i.mountOption(t === "recreate");
          PN(o), !this.option || t === "recreate" ? ow(this, o) : (this.restoreData(), this._mergeOption(o, n)), a = !0;
        }
        if ((t === "timeline" || t === "media") && this.restoreData(), !t || t === "recreate" || t === "timeline") {
          var s = i.getTimelineOption(this);
          s && (a = !0, this._mergeOption(s, n));
        }
        if (!t || t === "recreate" || t === "media") {
          var l = i.getMediaOption(this);
          l.length && M(l, function(u) {
            a = !0, this._mergeOption(u, n);
          }, this);
        }
        return a;
      }, e.prototype.mergeOption = function(t) {
        this._mergeOption(t, null);
      }, e.prototype._mergeOption = function(t, n) {
        var a = this.option, i = this._componentsMap, o = this._componentsCount, s = [], l = nt(), u = n && n.replaceMergeMainTypeMap;
        wN(this), M(t, function(h, c) {
          h != null && (Ct.hasClass(c) ? c && (s.push(c), l.set(c, !0)) : a[c] = a[c] == null ? ht(h) : mt(a[c], h, !0));
        }), u && u.each(function(h, c) {
          Ct.hasClass(c) && !l.get(c) && (s.push(c), l.set(c, !0));
        }), Ct.topologicalTravel(s, Ct.getAllClassMainTypes(), f, this);
        function f(h) {
          var c = CN(this, h, Xt(t[h])), v = i.get(h), d = (
            // `!oldCmptList` means init. See the comment in `mappingToExists`
            v ? u && u.get(h) ? "replaceMerge" : "normalMerge" : "replaceAll"
          ), p = eS(v, c, d);
          nk(p, h, Ct), a[h] = null, i.set(h, null), o.set(h, 0);
          var g = [], y = [], m = 0, _, S;
          M(p, function(b, w) {
            var T = b.existing, C = b.newOption;
            if (!C)
              T && (T.mergeOption({}, this), T.optionUpdated({}, !1));
            else {
              var I = h === "series", L = Ct.getClass(
                h,
                b.keyInfo.subType,
                !I
                // Give a more detailed warn later if series don't exists
              );
              if (!L) {
                {
                  var P = b.keyInfo.subType, E = LN[P];
                  Th[P] || (Th[P] = !0, Ee(E ? "Series " + P + ` is used but not imported.
import { ` + E + ` } from 'echarts/charts';
echarts.use([` + E + "]);" : "Unknown series " + P));
                }
                return;
              }
              if (h === "tooltip") {
                if (_) {
                  S || (ae("Currently only one tooltip component is allowed."), S = !0);
                  return;
                }
                _ = !0;
              }
              if (T && T.constructor === L)
                T.name = b.keyInfo.name, T.mergeOption(C, this), T.optionUpdated(C, !1);
              else {
                var R = H({
                  componentIndex: w
                }, b.keyInfo);
                T = new L(C, this, this, R), H(T, R), b.brandNew && (T.__requireNewView = !0), T.init(C, this, this), T.optionUpdated(null, !0);
              }
            }
            T ? (g.push(T.option), y.push(T), m++) : (g.push(void 0), y.push(void 0));
          }, this), a[h] = g, i.set(h, y), o.set(h, m), h === "series" && bh(this);
        }
        this._seriesIndices || bh(this);
      }, e.prototype.getOption = function() {
        var t = ht(this.option);
        return M(t, function(n, a) {
          if (Ct.hasClass(a)) {
            for (var i = Xt(n), o = i.length, s = !1, l = o - 1; l >= 0; l--)
              i[l] && !Ro(i[l]) ? s = !0 : (i[l] = null, !s && o--);
            i.length = o, t[a] = i;
          }
        }), delete t[qp], t;
      }, e.prototype.getTheme = function() {
        return this._theme;
      }, e.prototype.getLocaleModel = function() {
        return this._locale;
      }, e.prototype.setUpdatePayload = function(t) {
        this._payload = t;
      }, e.prototype.getUpdatePayload = function() {
        return this._payload;
      }, e.prototype.getComponent = function(t, n) {
        var a = this._componentsMap.get(t);
        if (a) {
          var i = a[n || 0];
          if (i)
            return i;
          if (n == null) {
            for (var o = 0; o < a.length; o++)
              if (a[o])
                return a[o];
          }
        }
      }, e.prototype.queryComponents = function(t) {
        var n = t.mainType;
        if (!n)
          return [];
        var a = t.index, i = t.id, o = t.name, s = this._componentsMap.get(n);
        if (!s || !s.length)
          return [];
        var l;
        return a != null ? (l = [], M(Xt(a), function(u) {
          s[u] && l.push(s[u]);
        })) : i != null ? l = lw("id", i, s) : o != null ? l = lw("name", o, s) : l = Ht(s, function(u) {
          return !!u;
        }), uw(l, t);
      }, e.prototype.findComponents = function(t) {
        var n = t.query, a = t.mainType, i = s(n), o = i ? this.queryComponents(i) : Ht(this._componentsMap.get(a), function(u) {
          return !!u;
        });
        return l(uw(o, t));
        function s(u) {
          var f = a + "Index", h = a + "Id", c = a + "Name";
          return u && (u[f] != null || u[h] != null || u[c] != null) ? {
            mainType: a,
            // subType will be filtered finally.
            index: u[f],
            id: u[h],
            name: u[c]
          } : null;
        }
        function l(u) {
          return t.filter ? Ht(u, t.filter) : u;
        }
      }, e.prototype.eachComponent = function(t, n, a) {
        var i = this._componentsMap;
        if (rt(t)) {
          var o = n, s = t;
          i.each(function(h, c) {
            for (var v = 0; h && v < h.length; v++) {
              var d = h[v];
              d && s.call(o, c, d, d.componentIndex);
            }
          });
        } else
          for (var l = j(t) ? i.get(t) : it(t) ? this.findComponents(t) : null, u = 0; l && u < l.length; u++) {
            var f = l[u];
            f && n.call(a, f, f.componentIndex);
          }
      }, e.prototype.getSeriesByName = function(t) {
        var n = _e(t, null);
        return Ht(this._componentsMap.get("series"), function(a) {
          return !!a && n != null && a.name === n;
        });
      }, e.prototype.getSeriesByIndex = function(t) {
        return this._componentsMap.get("series")[t];
      }, e.prototype.getSeriesByType = function(t) {
        return Ht(this._componentsMap.get("series"), function(n) {
          return !!n && n.subType === t;
        });
      }, e.prototype.getSeries = function() {
        return Ht(this._componentsMap.get("series"), function(t) {
          return !!t;
        });
      }, e.prototype.getSeriesCount = function() {
        return this._componentsCount.get("series");
      }, e.prototype.eachSeries = function(t, n) {
        Hl(this), M(this._seriesIndices, function(a) {
          var i = this._componentsMap.get("series")[a];
          t.call(n, i, a);
        }, this);
      }, e.prototype.eachRawSeries = function(t, n) {
        M(this._componentsMap.get("series"), function(a) {
          a && t.call(n, a, a.componentIndex);
        });
      }, e.prototype.eachSeriesByType = function(t, n, a) {
        Hl(this), M(this._seriesIndices, function(i) {
          var o = this._componentsMap.get("series")[i];
          o.subType === t && n.call(a, o, i);
        }, this);
      }, e.prototype.eachRawSeriesByType = function(t, n, a) {
        return M(this.getSeriesByType(t), n, a);
      }, e.prototype.isSeriesFiltered = function(t) {
        return Hl(this), this._seriesIndicesMap.get(t.componentIndex) == null;
      }, e.prototype.getCurrentSeriesIndices = function() {
        return (this._seriesIndices || []).slice();
      }, e.prototype.filterSeries = function(t, n) {
        Hl(this);
        var a = [];
        M(this._seriesIndices, function(i) {
          var o = this._componentsMap.get("series")[i];
          t.call(n, o, i) && a.push(i);
        }, this), this._seriesIndices = a, this._seriesIndicesMap = nt(a);
      }, e.prototype.restoreData = function(t) {
        bh(this);
        var n = this._componentsMap, a = [];
        n.each(function(i, o) {
          Ct.hasClass(o) && a.push(o);
        }), Ct.topologicalTravel(a, Ct.getAllClassMainTypes(), function(i) {
          M(n.get(i), function(o) {
            o && (i !== "series" || !EN(o, t)) && o.restoreData();
          });
        });
      }, e.internalField = function() {
        bh = function(t) {
          var n = t._seriesIndices = [];
          M(t._componentsMap.get("series"), function(a) {
            a && n.push(a.componentIndex);
          }), t._seriesIndicesMap = nt(n);
        }, Hl = function(t) {
          if (!t._seriesIndices)
            throw new Error("Option should contains series.");
        }, ow = function(t, n) {
          t.option = {}, t.option[qp] = sw, t._componentsMap = nt({
            series: []
          }), t._componentsCount = nt();
          var a = n.aria;
          it(a) && a.enabled == null && (a.enabled = !0), RN(n, t._theme.option), mt(n, xN, !1), t._mergeOption(n, null);
        };
      }(), e;
    }(Gt)
  );
  function EN(r, e) {
    if (e) {
      var t = e.seriesIndex, n = e.seriesId, a = e.seriesName;
      return t != null && r.componentIndex !== t || n != null && r.id !== n || a != null && r.name !== a;
    }
  }
  function RN(r, e) {
    var t = r.color && !r.colorLayer;
    M(e, function(n, a) {
      a === "colorLayer" && t || Ct.hasClass(a) || (typeof n == "object" ? r[a] = r[a] ? mt(r[a], n, !1) : ht(n) : r[a] == null && (r[a] = n));
    });
  }
  function lw(r, e, t) {
    if (U(e)) {
      var n = nt();
      return M(e, function(i) {
        if (i != null) {
          var o = _e(i, null);
          o != null && n.set(i, !0);
        }
      }), Ht(t, function(i) {
        return i && n.get(i[r]);
      });
    } else {
      var a = _e(e, null);
      return Ht(t, function(i) {
        return i && a != null && i[r] === a;
      });
    }
  }
  function uw(r, e) {
    return e.hasOwnProperty("subType") ? Ht(r, function(t) {
      return t && t.subType === e.subType;
    }) : r;
  }
  function fw(r) {
    var e = nt();
    return r && M(Xt(r.replaceMerge), function(t) {
      st(Ct.hasClass(t), '"' + t + '" is not valid component main type in "replaceMerge"'), e.set(t, !0);
    }), {
      replaceMergeMainTypeMap: e
    };
  }
  le(Kp, Xp);
  var kN = [
    "getDom",
    "getZr",
    "getWidth",
    "getHeight",
    "getDevicePixelRatio",
    "dispatchAction",
    "isSSR",
    "isDisposed",
    "on",
    "off",
    "getDataURL",
    "getConnectedDataURL",
    // 'getModel',
    "getOption",
    // 'getViewOfComponentModel',
    // 'getViewOfSeriesModel',
    "getId",
    "updateLabelLayout"
  ], hw = (
    /** @class */
    function() {
      function r(e) {
        M(kN, function(t) {
          this[t] = J(e[t], e);
        }, this);
      }
      return r;
    }()
  ), jp = {}, Bi = (
    /** @class */
    function() {
      function r() {
        this._coordinateSystems = [];
      }
      return r.prototype.create = function(e, t) {
        var n = [];
        M(jp, function(a, i) {
          var o = a.create(e, t);
          n = n.concat(o || []);
        }), this._coordinateSystems = n;
      }, r.prototype.update = function(e, t) {
        M(this._coordinateSystems, function(n) {
          n.update && n.update(e, t);
        });
      }, r.prototype.getCoordinateSystems = function() {
        return this._coordinateSystems.slice();
      }, r.register = function(e, t) {
        jp[e] = t;
      }, r.get = function(e) {
        return jp[e];
      }, r;
    }()
  ), ON = /^(min|max)?(.+)$/, NN = (
    /** @class */
    function() {
      function r(e) {
        this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = e;
      }
      return r.prototype.setOption = function(e, t, n) {
        e && (M(Xt(e.series), function(o) {
          o && o.data && Xe(o.data) && Hs(o.data);
        }), M(Xt(e.dataset), function(o) {
          o && o.source && Xe(o.source) && Hs(o.source);
        })), e = ht(e);
        var a = this._optionBackup, i = VN(e, t, !a);
        this._newBaseOption = i.baseOption, a ? (i.timelineOptions.length && (a.timelineOptions = i.timelineOptions), i.mediaList.length && (a.mediaList = i.mediaList), i.mediaDefault && (a.mediaDefault = i.mediaDefault)) : this._optionBackup = i;
      }, r.prototype.mountOption = function(e) {
        var t = this._optionBackup;
        return this._timelineOptions = t.timelineOptions, this._mediaList = t.mediaList, this._mediaDefault = t.mediaDefault, this._currentMediaIndices = [], ht(e ? t.baseOption : this._newBaseOption);
      }, r.prototype.getTimelineOption = function(e) {
        var t, n = this._timelineOptions;
        if (n.length) {
          var a = e.getComponent("timeline");
          a && (t = ht(
            // FIXME:TS as TimelineModel or quivlant interface
            n[a.getCurrentIndex()]
          ));
        }
        return t;
      }, r.prototype.getMediaOption = function(e) {
        var t = this._api.getWidth(), n = this._api.getHeight(), a = this._mediaList, i = this._mediaDefault, o = [], s = [];
        if (!a.length && !i)
          return s;
        for (var l = 0, u = a.length; l < u; l++)
          BN(a[l].query, t, n) && o.push(l);
        return !o.length && i && (o = [-1]), o.length && !GN(o, this._currentMediaIndices) && (s = Y(o, function(f) {
          return ht(f === -1 ? i.option : a[f].option);
        })), this._currentMediaIndices = o, s;
      }, r;
    }()
  );
  function VN(r, e, t) {
    var n = [], a, i, o = r.baseOption, s = r.timeline, l = r.options, u = r.media, f = !!r.media, h = !!(l || s || o && o.timeline);
    o ? (i = o, i.timeline || (i.timeline = s)) : ((h || f) && (r.options = r.media = null), i = r), f && (U(u) ? M(u, function(v) {
      v && !v.option && it(v.query) && it(v.query.option) && Ee("Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }"), v && v.option && (v.query ? n.push(v) : a || (a = v));
    }) : Ee("Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }")), c(i), M(l, function(v) {
      return c(v);
    }), M(n, function(v) {
      return c(v.option);
    });
    function c(v) {
      M(e, function(d) {
        d(v, t);
      });
    }
    return {
      baseOption: i,
      timelineOptions: l || [],
      mediaDefault: a,
      mediaList: n
    };
  }
  function BN(r, e, t) {
    var n = {
      width: e,
      height: t,
      aspectratio: e / t
      // lower case for convenience.
    }, a = !0;
    return M(r, function(i, o) {
      var s = o.match(ON);
      if (!(!s || !s[1] || !s[2])) {
        var l = s[1], u = s[2].toLowerCase();
        zN(n[u], i, l) || (a = !1);
      }
    }), a;
  }
  function zN(r, e, t) {
    return t === "min" ? r >= e : t === "max" ? r <= e : r === e;
  }
  function GN(r, e) {
    return r.join(",") === e.join(",");
  }
  var Fr = M, Wl = it, cw = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
  function Jp(r) {
    var e = r && r.itemStyle;
    if (e)
      for (var t = 0, n = cw.length; t < n; t++) {
        var a = cw[t], i = e.normal, o = e.emphasis;
        i && i[a] && (ce("itemStyle.normal." + a, a), r[a] = r[a] || {}, r[a].normal ? mt(r[a].normal, i[a]) : r[a].normal = i[a], i[a] = null), o && o[a] && (ce("itemStyle.emphasis." + a, "emphasis." + a), r[a] = r[a] || {}, r[a].emphasis ? mt(r[a].emphasis, o[a]) : r[a].emphasis = o[a], o[a] = null);
      }
  }
  function He(r, e, t) {
    if (r && r[e] && (r[e].normal || r[e].emphasis)) {
      var n = r[e].normal, a = r[e].emphasis;
      n && (Rr("'normal' hierarchy in " + e + " has been removed since 4.0. All style properties are configured in " + e + " directly now."), t ? (r[e].normal = r[e].emphasis = null, ot(r[e], n)) : r[e] = n), a && (Rr(e + ".emphasis has been changed to emphasis." + e + " since 4.0"), r.emphasis = r.emphasis || {}, r.emphasis[e] = a, a.focus && (r.emphasis.focus = a.focus), a.blurScope && (r.emphasis.blurScope = a.blurScope));
    }
  }
  function Ul(r) {
    He(r, "itemStyle"), He(r, "lineStyle"), He(r, "areaStyle"), He(r, "label"), He(r, "labelLine"), He(r, "upperLabel"), He(r, "edgeLabel");
  }
  function me(r, e) {
    var t = Wl(r) && r[e], n = Wl(t) && t.textStyle;
    if (n) {
      Rr("textStyle hierarchy in " + e + " has been removed since 4.0. All textStyle properties are configured in " + e + " directly now.");
      for (var a = 0, i = tS.length; a < i; a++) {
        var o = tS[a];
        n.hasOwnProperty(o) && (t[o] = n[o]);
      }
    }
  }
  function Hr(r) {
    r && (Ul(r), me(r, "label"), r.emphasis && me(r.emphasis, "label"));
  }
  function FN(r) {
    if (Wl(r)) {
      Jp(r), Ul(r), me(r, "label"), me(r, "upperLabel"), me(r, "edgeLabel"), r.emphasis && (me(r.emphasis, "label"), me(r.emphasis, "upperLabel"), me(r.emphasis, "edgeLabel"));
      var e = r.markPoint;
      e && (Jp(e), Hr(e));
      var t = r.markLine;
      t && (Jp(t), Hr(t));
      var n = r.markArea;
      n && Hr(n);
      var a = r.data;
      if (r.type === "graph") {
        a = a || r.nodes;
        var i = r.links || r.edges;
        if (i && !Xe(i))
          for (var o = 0; o < i.length; o++)
            Hr(i[o]);
        M(r.categories, function(u) {
          Ul(u);
        });
      }
      if (a && !Xe(a))
        for (var o = 0; o < a.length; o++)
          Hr(a[o]);
      if (e = r.markPoint, e && e.data)
        for (var s = e.data, o = 0; o < s.length; o++)
          Hr(s[o]);
      if (t = r.markLine, t && t.data)
        for (var l = t.data, o = 0; o < l.length; o++)
          U(l[o]) ? (Hr(l[o][0]), Hr(l[o][1])) : Hr(l[o]);
      r.type === "gauge" ? (me(r, "axisLabel"), me(r, "title"), me(r, "detail")) : r.type === "treemap" ? (He(r.breadcrumb, "itemStyle"), M(r.levels, function(u) {
        Ul(u);
      })) : r.type === "tree" && Ul(r.leaves);
    }
  }
  function ta(r) {
    return U(r) ? r : r ? [r] : [];
  }
  function vw(r) {
    return (U(r) ? r[0] : r) || {};
  }
  function HN(r, e) {
    Fr(ta(r.series), function(n) {
      Wl(n) && FN(n);
    });
    var t = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
    e && t.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), Fr(t, function(n) {
      Fr(ta(r[n]), function(a) {
        a && (me(a, "axisLabel"), me(a.axisPointer, "label"));
      });
    }), Fr(ta(r.parallel), function(n) {
      var a = n && n.parallelAxisDefault;
      me(a, "axisLabel"), me(a && a.axisPointer, "label");
    }), Fr(ta(r.calendar), function(n) {
      He(n, "itemStyle"), me(n, "dayLabel"), me(n, "monthLabel"), me(n, "yearLabel");
    }), Fr(ta(r.radar), function(n) {
      me(n, "name"), n.name && n.axisName == null && (n.axisName = n.name, delete n.name, Rr("name property in radar component has been changed to axisName")), n.nameGap != null && n.axisNameGap == null && (n.axisNameGap = n.nameGap, delete n.nameGap, Rr("nameGap property in radar component has been changed to axisNameGap")), Fr(n.indicator, function(a) {
        a.text && ce("text", "name", "radar.indicator");
      });
    }), Fr(ta(r.geo), function(n) {
      Wl(n) && (Hr(n), Fr(ta(n.regions), function(a) {
        Hr(a);
      }));
    }), Fr(ta(r.timeline), function(n) {
      Hr(n), He(n, "label"), He(n, "itemStyle"), He(n, "controlStyle", !0);
      var a = n.data;
      U(a) && M(a, function(i) {
        it(i) && (He(i, "label"), He(i, "itemStyle"));
      });
    }), Fr(ta(r.toolbox), function(n) {
      He(n, "iconStyle"), Fr(n.feature, function(a) {
        He(a, "iconStyle");
      });
    }), me(vw(r.axisPointer), "label"), me(vw(r.tooltip).axisPointer, "label");
  }
  function WN(r, e) {
    for (var t = e.split(","), n = r, a = 0; a < t.length && (n = n && n[t[a]], n != null); a++)
      ;
    return n;
  }
  function UN(r, e, t, n) {
    for (var a = e.split(","), i = r, o, s = 0; s < a.length - 1; s++)
      o = a[s], i[o] == null && (i[o] = {}), i = i[o];
    (n || i[a[s]] == null) && (i[a[s]] = t);
  }
  function dw(r) {
    r && M(YN, function(e) {
      e[0] in r && !(e[1] in r) && (r[e[1]] = r[e[0]]);
    });
  }
  var YN = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]], $N = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"], Qp = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
  function Yl(r) {
    var e = r && r.itemStyle;
    if (e)
      for (var t = 0; t < Qp.length; t++) {
        var n = Qp[t][1], a = Qp[t][0];
        e[n] != null && (e[a] = e[n], ce(n, a));
      }
  }
  function pw(r) {
    r && r.alignTo === "edge" && r.margin != null && r.edgeDistance == null && (ce("label.margin", "label.edgeDistance", "pie"), r.edgeDistance = r.margin);
  }
  function gw(r) {
    r && r.downplay && !r.blur && (r.blur = r.downplay, ce("downplay", "blur", "sunburst"));
  }
  function XN(r) {
    r && r.focusNodeAdjacency != null && (r.emphasis = r.emphasis || {}, r.emphasis.focus == null && (ce("focusNodeAdjacency", "emphasis: { focus: 'adjacency'}", "graph/sankey"), r.emphasis.focus = "adjacency"));
  }
  function yw(r, e) {
    if (r)
      for (var t = 0; t < r.length; t++)
        e(r[t]), r[t] && yw(r[t].children, e);
  }
  function mw(r, e) {
    HN(r, e), r.series = Xt(r.series), M(r.series, function(t) {
      if (it(t)) {
        var n = t.type;
        if (n === "line")
          t.clipOverflow != null && (t.clip = t.clipOverflow, ce("clipOverflow", "clip", "line"));
        else if (n === "pie" || n === "gauge") {
          t.clockWise != null && (t.clockwise = t.clockWise, ce("clockWise", "clockwise")), pw(t.label);
          var a = t.data;
          if (a && !Xe(a))
            for (var i = 0; i < a.length; i++)
              pw(a[i]);
          t.hoverOffset != null && (t.emphasis = t.emphasis || {}, (t.emphasis.scaleSize = null) && (ce("hoverOffset", "emphasis.scaleSize"), t.emphasis.scaleSize = t.hoverOffset));
        } else if (n === "gauge") {
          var o = WN(t, "pointer.color");
          o != null && UN(t, "itemStyle.color", o);
        } else if (n === "bar") {
          Yl(t), Yl(t.backgroundStyle), Yl(t.emphasis);
          var a = t.data;
          if (a && !Xe(a))
            for (var i = 0; i < a.length; i++)
              typeof a[i] == "object" && (Yl(a[i]), Yl(a[i] && a[i].emphasis));
        } else if (n === "sunburst") {
          var s = t.highlightPolicy;
          s && (t.emphasis = t.emphasis || {}, t.emphasis.focus || (t.emphasis.focus = s, ce("highlightPolicy", "emphasis.focus", "sunburst"))), gw(t), yw(t.data, gw);
        } else
          n === "graph" || n === "sankey" ? XN(t) : n === "map" && (t.mapType && !t.map && (ce("mapType", "map", "map"), t.map = t.mapType), t.mapLocation && (Rr("`mapLocation` is not used anymore."), ot(t, t.mapLocation)));
        t.hoverAnimation != null && (t.emphasis = t.emphasis || {}, t.emphasis && t.emphasis.scale == null && (ce("hoverAnimation", "emphasis.scale"), t.emphasis.scale = t.hoverAnimation)), dw(t);
      }
    }), r.dataRange && (r.visualMap = r.dataRange), M($N, function(t) {
      var n = r[t];
      n && (U(n) || (n = [n]), M(n, function(a) {
        dw(a);
      }));
    });
  }
  function ZN(r) {
    var e = nt();
    r.eachSeries(function(t) {
      var n = t.get("stack");
      if (n) {
        var a = e.get(n) || e.set(n, []), i = t.getData(), o = {
          // Used for calculate axis extent automatically.
          // TODO: Type getCalculationInfo return more specific type?
          stackResultDimension: i.getCalculationInfo("stackResultDimension"),
          stackedOverDimension: i.getCalculationInfo("stackedOverDimension"),
          stackedDimension: i.getCalculationInfo("stackedDimension"),
          stackedByDimension: i.getCalculationInfo("stackedByDimension"),
          isStackedByIndex: i.getCalculationInfo("isStackedByIndex"),
          data: i,
          seriesModel: t
        };
        if (!o.stackedDimension || !(o.isStackedByIndex || o.stackedByDimension))
          return;
        a.length && i.setCalculationInfo("stackedOnSeries", a[a.length - 1].seriesModel), a.push(o);
      }
    }), e.each(qN);
  }
  function qN(r) {
    M(r, function(e, t) {
      var n = [], a = [NaN, NaN], i = [e.stackResultDimension, e.stackedOverDimension], o = e.data, s = e.isStackedByIndex, l = e.seriesModel.get("stackStrategy") || "samesign";
      o.modify(i, function(u, f, h) {
        var c = o.get(e.stackedDimension, h);
        if (isNaN(c))
          return a;
        var v, d;
        s ? d = o.getRawIndex(h) : v = o.get(e.stackedByDimension, h);
        for (var p = NaN, g = t - 1; g >= 0; g--) {
          var y = r[g];
          if (s || (d = y.data.rawIndexOf(y.stackedByDimension, v)), d >= 0) {
            var m = y.data.getByRawIndex(y.stackResultDimension, d);
            if (l === "all" || l === "positive" && m > 0 || l === "negative" && m < 0 || l === "samesign" && c >= 0 && m > 0 || l === "samesign" && c <= 0 && m < 0) {
              c = UR(c, m), p = m;
              break;
            }
          }
        }
        return n[0] = c, n[1] = p, n;
      });
    });
  }
  var Ch = (
    /** @class */
    function() {
      function r(e) {
        this.data = e.data || (e.sourceFormat === Mn ? {} : []), this.sourceFormat = e.sourceFormat || Qx, this.seriesLayoutBy = e.seriesLayoutBy || In, this.startIndex = e.startIndex || 0, this.dimensionsDetectedCount = e.dimensionsDetectedCount, this.metaRawOption = e.metaRawOption;
        var t = this.dimensionsDefine = e.dimensionsDefine;
        if (t)
          for (var n = 0; n < t.length; n++) {
            var a = t[n];
            a.type == null && rw(this, n) === Oe.Must && (a.type = "ordinal");
          }
      }
      return r;
    }()
  );
  function tg(r) {
    return r instanceof Ch;
  }
  function eg(r, e, t) {
    t = t || _w(r);
    var n = e.seriesLayoutBy, a = jN(r, t, n, e.sourceHeader, e.dimensions), i = new Ch({
      data: r,
      sourceFormat: t,
      seriesLayoutBy: n,
      dimensionsDefine: a.dimensionsDefine,
      startIndex: a.startIndex,
      dimensionsDetectedCount: a.dimensionsDetectedCount,
      metaRawOption: ht(e)
    });
    return i;
  }
  function rg(r) {
    return new Ch({
      data: r,
      sourceFormat: Xe(r) ? Qn : zr
    });
  }
  function KN(r) {
    return new Ch({
      data: r.data,
      sourceFormat: r.sourceFormat,
      seriesLayoutBy: r.seriesLayoutBy,
      dimensionsDefine: ht(r.dimensionsDefine),
      startIndex: r.startIndex,
      dimensionsDetectedCount: r.dimensionsDetectedCount
    });
  }
  function _w(r) {
    var e = Qx;
    if (Xe(r))
      e = Qn;
    else if (U(r)) {
      r.length === 0 && (e = Fe);
      for (var t = 0, n = r.length; t < n; t++) {
        var a = r[t];
        if (a != null) {
          if (U(a)) {
            e = Fe;
            break;
          } else if (it(a)) {
            e = Gr;
            break;
          }
        }
      }
    } else if (it(r)) {
      for (var i in r)
        if (Q(r, i) && Pe(r[i])) {
          e = Mn;
          break;
        }
    }
    return e;
  }
  function jN(r, e, t, n, a) {
    var i, o;
    if (!r)
      return {
        dimensionsDefine: Sw(a),
        startIndex: o,
        dimensionsDetectedCount: i
      };
    if (e === Fe) {
      var s = r;
      n === "auto" || n == null ? xw(function(u) {
        u != null && u !== "-" && (j(u) ? o == null && (o = 1) : o = 0);
      }, t, s, 10) : o = Ot(n) ? n : n ? 1 : 0, !a && o === 1 && (a = [], xw(function(u, f) {
        a[f] = u != null ? u + "" : "";
      }, t, s, 1 / 0)), i = a ? a.length : t === ts ? s.length : s[0] ? s[0].length : null;
    } else if (e === Gr)
      a || (a = JN(r));
    else if (e === Mn)
      a || (a = [], M(r, function(u, f) {
        a.push(f);
      }));
    else if (e === zr) {
      var l = Eo(r[0]);
      i = U(l) && l.length || 1;
    } else
      e === Qn && st(!!a, "dimensions must be given if data is TypedArray.");
    return {
      startIndex: o,
      dimensionsDefine: Sw(a),
      dimensionsDetectedCount: i
    };
  }
  function JN(r) {
    for (var e = 0, t; e < r.length && !(t = r[e++]); )
      ;
    if (t) {
      var n = [];
      return M(t, function(a, i) {
        n.push(i);
      }), n;
    }
  }
  function Sw(r) {
    if (r) {
      var e = nt();
      return Y(r, function(t, n) {
        t = it(t) ? t : {
          name: t
        };
        var a = {
          name: t.name,
          displayName: t.displayName,
          type: t.type
        };
        if (a.name == null)
          return a;
        a.name += "", a.displayName == null && (a.displayName = a.name);
        var i = e.get(a.name);
        return i ? a.name += "-" + i.count++ : e.set(a.name, {
          count: 1
        }), a;
      });
    }
  }
  function xw(r, e, t, n) {
    if (e === ts)
      for (var a = 0; a < t.length && a < n; a++)
        r(t[a] ? t[a][0] : null, a);
    else
      for (var i = t[0] || [], a = 0; a < i.length && a < n; a++)
        r(i[a], a);
  }
  function ww(r) {
    var e = r.sourceFormat;
    return e === Gr || e === Mn;
  }
  var zi, Gi, Fi, bw, Tw, Cw = (
    /** @class */
    function() {
      function r(e, t) {
        var n = tg(e) ? e : rg(e);
        this._source = n;
        var a = this._data = n.data;
        if (n.sourceFormat === Qn) {
          if (t == null)
            throw new Error("Typed array data must specify dimension size");
          this._offset = 0, this._dimSize = t, this._data = a;
        }
        Tw(this, a, n);
      }
      return r.prototype.getSource = function() {
        return this._source;
      }, r.prototype.count = function() {
        return 0;
      }, r.prototype.getItem = function(e, t) {
      }, r.prototype.appendData = function(e) {
      }, r.prototype.clean = function() {
      }, r.protoInitialize = function() {
        var e = r.prototype;
        e.pure = !1, e.persistent = !0;
      }(), r.internalField = function() {
        var e;
        Tw = function(o, s, l) {
          var u = l.sourceFormat, f = l.seriesLayoutBy, h = l.startIndex, c = l.dimensionsDefine, v = bw[ag(u, f)];
          if (st(v, "Invalide sourceFormat: " + u), H(o, v), u === Qn)
            o.getItem = t, o.count = a, o.fillStorage = n;
          else {
            var d = Dw(u, f);
            o.getItem = J(d, null, s, h, c);
            var p = Iw(u, f);
            o.count = J(p, null, s, h, c);
          }
        };
        var t = function(o, s) {
          o = o - this._offset, s = s || [];
          for (var l = this._data, u = this._dimSize, f = u * o, h = 0; h < u; h++)
            s[h] = l[f + h];
          return s;
        }, n = function(o, s, l, u) {
          for (var f = this._data, h = this._dimSize, c = 0; c < h; c++) {
            for (var v = u[c], d = v[0] == null ? 1 / 0 : v[0], p = v[1] == null ? -1 / 0 : v[1], g = s - o, y = l[c], m = 0; m < g; m++) {
              var _ = f[m * h + c];
              y[o + m] = _, _ < d && (d = _), _ > p && (p = _);
            }
            v[0] = d, v[1] = p;
          }
        }, a = function() {
          return this._data ? this._data.length / this._dimSize : 0;
        };
        bw = (e = {}, e[Fe + "_" + In] = {
          pure: !0,
          appendData: i
        }, e[Fe + "_" + ts] = {
          pure: !0,
          appendData: function() {
            throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
          }
        }, e[Gr] = {
          pure: !0,
          appendData: i
        }, e[Mn] = {
          pure: !0,
          appendData: function(o) {
            var s = this._data;
            M(o, function(l, u) {
              for (var f = s[u] || (s[u] = []), h = 0; h < (l || []).length; h++)
                f.push(l[h]);
            });
          }
        }, e[zr] = {
          appendData: i
        }, e[Qn] = {
          persistent: !1,
          pure: !0,
          appendData: function(o) {
            st(Xe(o), "Added data must be TypedArray if data in initialization is TypedArray"), this._data = o;
          },
          // Clean self if data is already used.
          clean: function() {
            this._offset += this.count(), this._data = null;
          }
        }, e);
        function i(o) {
          for (var s = 0; s < o.length; s++)
            this._data.push(o[s]);
        }
      }(), r;
    }()
  ), Aw = function(r, e, t, n) {
    return r[n];
  }, QN = (zi = {}, zi[Fe + "_" + In] = function(r, e, t, n) {
    return r[n + e];
  }, zi[Fe + "_" + ts] = function(r, e, t, n, a) {
    n += e;
    for (var i = a || [], o = r, s = 0; s < o.length; s++) {
      var l = o[s];
      i[s] = l ? l[n] : null;
    }
    return i;
  }, zi[Gr] = Aw, zi[Mn] = function(r, e, t, n, a) {
    for (var i = a || [], o = 0; o < t.length; o++) {
      var s = t[o].name;
      if (s == null)
        throw new Error();
      var l = r[s];
      i[o] = l ? l[n] : null;
    }
    return i;
  }, zi[zr] = Aw, zi);
  function Dw(r, e) {
    var t = QN[ag(r, e)];
    return st(t, 'Do not support get item on "' + r + '", "' + e + '".'), t;
  }
  var Mw = function(r, e, t) {
    return r.length;
  }, tV = (Gi = {}, Gi[Fe + "_" + In] = function(r, e, t) {
    return Math.max(0, r.length - e);
  }, Gi[Fe + "_" + ts] = function(r, e, t) {
    var n = r[0];
    return n ? Math.max(0, n.length - e) : 0;
  }, Gi[Gr] = Mw, Gi[Mn] = function(r, e, t) {
    var n = t[0].name;
    if (n == null)
      throw new Error();
    var a = r[n];
    return a ? a.length : 0;
  }, Gi[zr] = Mw, Gi);
  function Iw(r, e) {
    var t = tV[ag(r, e)];
    return st(t, 'Do not support count on "' + r + '", "' + e + '".'), t;
  }
  var ng = function(r, e, t) {
    return r[e];
  }, eV = (Fi = {}, Fi[Fe] = ng, Fi[Gr] = function(r, e, t) {
    return r[t];
  }, Fi[Mn] = ng, Fi[zr] = function(r, e, t) {
    var n = Eo(r);
    return n instanceof Array ? n[e] : n;
  }, Fi[Qn] = ng, Fi);
  function Lw(r) {
    var e = eV[r];
    return st(e, 'Do not support get value on "' + r + '".'), e;
  }
  function ag(r, e) {
    return r === Fe ? r + "_" + e : r;
  }
  function es(r, e, t) {
    if (r) {
      var n = r.getRawDataItem(e);
      if (n != null) {
        var a = r.getStore(), i = a.getSource().sourceFormat;
        if (t != null) {
          var o = r.getDimensionIndex(t), s = a.getDimensionProperty(o);
          return Lw(i)(n, o, s);
        } else {
          var l = n;
          return i === zr && (l = Eo(n)), l;
        }
      }
    }
  }
  var rV = /\{@(.+?)\}/g, ig = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getDataParams = function(e, t) {
        var n = this.getData(t), a = this.getRawValue(e, t), i = n.getRawIndex(e), o = n.getName(e), s = n.getRawDataItem(e), l = n.getItemVisual(e, "style"), u = l && l[n.getItemVisual(e, "drawType") || "fill"], f = l && l.stroke, h = this.mainType, c = h === "series", v = n.userOutput && n.userOutput.get();
        return {
          componentType: h,
          componentSubType: this.subType,
          componentIndex: this.componentIndex,
          seriesType: c ? this.subType : null,
          seriesIndex: this.seriesIndex,
          seriesId: c ? this.id : null,
          seriesName: c ? this.name : null,
          name: o,
          dataIndex: i,
          data: s,
          dataType: t,
          value: a,
          color: u,
          borderColor: f,
          dimensionNames: v ? v.fullDimensions : null,
          encode: v ? v.encode : null,
          // Param name list for mapping `a`, `b`, `c`, `d`, `e`
          $vars: ["seriesName", "name", "value"]
        };
      }, r.prototype.getFormattedLabel = function(e, t, n, a, i, o) {
        t = t || "normal";
        var s = this.getData(n), l = this.getDataParams(e, n);
        if (o && (l.value = o.interpolatedValue), a != null && U(l.value) && (l.value = l.value[a]), !i) {
          var u = s.getItemModel(e);
          i = u.get(t === "normal" ? ["label", "formatter"] : [t, "label", "formatter"]);
        }
        if (rt(i))
          return l.status = t, l.dimensionIndex = a, i(l);
        if (j(i)) {
          var f = Fp(i, l);
          return f.replace(rV, function(h, c) {
            var v = c.length, d = c;
            d.charAt(0) === "[" && d.charAt(v - 1) === "]" && (d = +d.slice(1, v - 1), isNaN(d) && Ee("Invalide label formatter: @" + c + ", only support @[0], @[1], @[2], ..."));
            var p = es(s, e, d);
            if (o && U(o.interpolatedValue)) {
              var g = s.getDimensionIndex(d);
              g >= 0 && (p = o.interpolatedValue[g]);
            }
            return p != null ? p + "" : "";
          });
        }
      }, r.prototype.getRawValue = function(e, t) {
        return es(this.getData(t), e);
      }, r.prototype.formatTooltip = function(e, t, n) {
      }, r;
    }()
  );
  function Pw(r) {
    var e, t;
    return it(r) ? r.type ? t = r : console.warn("The return type of `formatTooltip` is not supported: " + Ke(r)) : e = r, {
      text: e,
      // markers: markers || markersExisting,
      frag: t
    };
  }
  function $l(r) {
    return new nV(r);
  }
  var nV = (
    /** @class */
    function() {
      function r(e) {
        e = e || {}, this._reset = e.reset, this._plan = e.plan, this._count = e.count, this._onDirty = e.onDirty, this._dirty = !0;
      }
      return r.prototype.perform = function(e) {
        var t = this._upstream, n = e && e.skip;
        if (this._dirty && t) {
          var a = this.context;
          a.data = a.outputData = t.context.outputData;
        }
        this.__pipeline && (this.__pipeline.currentTask = this);
        var i;
        this._plan && !n && (i = this._plan(this.context));
        var o = f(this._modBy), s = this._modDataCount || 0, l = f(e && e.modBy), u = e && e.modDataCount || 0;
        (o !== l || s !== u) && (i = "reset");
        function f(m) {
          return !(m >= 1) && (m = 1), m;
        }
        var h;
        (this._dirty || i === "reset") && (this._dirty = !1, h = this._doReset(n)), this._modBy = l, this._modDataCount = u;
        var c = e && e.step;
        if (t ? (st(t._outputDueEnd != null), this._dueEnd = t._outputDueEnd) : (st(!this._progress || this._count), this._dueEnd = this._count ? this._count(this.context) : 1 / 0), this._progress) {
          var v = this._dueIndex, d = Math.min(c != null ? this._dueIndex + c : 1 / 0, this._dueEnd);
          if (!n && (h || v < d)) {
            var p = this._progress;
            if (U(p))
              for (var g = 0; g < p.length; g++)
                this._doProgress(p[g], v, d, l, u);
            else
              this._doProgress(p, v, d, l, u);
          }
          this._dueIndex = d;
          var y = this._settedOutputEnd != null ? this._settedOutputEnd : d;
          st(y >= this._outputDueEnd), this._outputDueEnd = y;
        } else
          this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
        return this.unfinished();
      }, r.prototype.dirty = function() {
        this._dirty = !0, this._onDirty && this._onDirty(this.context);
      }, r.prototype._doProgress = function(e, t, n, a, i) {
        Ew.reset(t, n, a, i), this._callingProgress = e, this._callingProgress({
          start: t,
          end: n,
          count: n - t,
          next: Ew.next
        }, this.context);
      }, r.prototype._doReset = function(e) {
        this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null;
        var t, n;
        !e && this._reset && (t = this._reset(this.context), t && t.progress && (n = t.forceFirstProgress, t = t.progress), U(t) && !t.length && (t = null)), this._progress = t, this._modBy = this._modDataCount = null;
        var a = this._downstream;
        return a && a.dirty(), n;
      }, r.prototype.unfinished = function() {
        return this._progress && this._dueIndex < this._dueEnd;
      }, r.prototype.pipe = function(e) {
        st(e && !e._disposed && e !== this), (this._downstream !== e || this._dirty) && (this._downstream = e, e._upstream = this, e.dirty());
      }, r.prototype.dispose = function() {
        this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
      }, r.prototype.getUpstream = function() {
        return this._upstream;
      }, r.prototype.getDownstream = function() {
        return this._downstream;
      }, r.prototype.setOutputEnd = function(e) {
        this._outputDueEnd = this._settedOutputEnd = e;
      }, r;
    }()
  ), Ew = function() {
    var r, e, t, n, a, i = {
      reset: function(l, u, f, h) {
        e = l, r = u, t = f, n = h, a = Math.ceil(n / t), i.next = t > 1 && n > 0 ? s : o;
      }
    };
    return i;
    function o() {
      return e < r ? e++ : null;
    }
    function s() {
      var l = e % a * t + Math.ceil(e / a), u = e >= r ? null : l < n ? l : e;
      return e++, u;
    }
  }();
  function ka(r, e) {
    var t = e && e.type;
    return t === "ordinal" ? r : (t === "time" && !Ot(r) && r != null && r !== "-" && (r = +mr(r)), r == null || r === "" ? NaN : +r);
  }
  var aV = nt({
    number: function(r) {
      return parseFloat(r);
    },
    time: function(r) {
      return +mr(r);
    },
    trim: function(r) {
      return j(r) ? Mr(r) : r;
    }
  });
  function Rw(r) {
    return aV.get(r);
  }
  var kw = {
    lt: function(r, e) {
      return r < e;
    },
    lte: function(r, e) {
      return r <= e;
    },
    gt: function(r, e) {
      return r > e;
    },
    gte: function(r, e) {
      return r >= e;
    }
  }, iV = (
    /** @class */
    function() {
      function r(e, t) {
        if (!Ot(t)) {
          var n = "";
          n = 'rvalue of "<", ">", "<=", ">=" can only be number in filter.', Ft(n);
        }
        this._opFn = kw[e], this._rvalFloat = xn(t);
      }
      return r.prototype.evaluate = function(e) {
        return Ot(e) ? this._opFn(e, this._rvalFloat) : this._opFn(xn(e), this._rvalFloat);
      }, r;
    }()
  ), Ow = (
    /** @class */
    function() {
      function r(e, t) {
        var n = e === "desc";
        this._resultLT = n ? 1 : -1, t == null && (t = n ? "min" : "max"), this._incomparable = t === "min" ? -1 / 0 : 1 / 0;
      }
      return r.prototype.evaluate = function(e, t) {
        var n = Ot(e) ? e : xn(e), a = Ot(t) ? t : xn(t), i = isNaN(n), o = isNaN(a);
        if (i && (n = this._incomparable), o && (a = this._incomparable), i && o) {
          var s = j(e), l = j(t);
          s && (n = l ? e : 0), l && (a = s ? t : 0);
        }
        return n < a ? this._resultLT : n > a ? -this._resultLT : 0;
      }, r;
    }()
  ), oV = (
    /** @class */
    function() {
      function r(e, t) {
        this._rval = t, this._isEQ = e, this._rvalTypeof = typeof t, this._rvalFloat = xn(t);
      }
      return r.prototype.evaluate = function(e) {
        var t = e === this._rval;
        if (!t) {
          var n = typeof e;
          n !== this._rvalTypeof && (n === "number" || this._rvalTypeof === "number") && (t = xn(e) === this._rvalFloat);
        }
        return this._isEQ ? t : !t;
      }, r;
    }()
  );
  function sV(r, e) {
    return r === "eq" || r === "ne" ? new oV(r === "eq", e) : Q(kw, r) ? new iV(r, e) : null;
  }
  var lV = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getRawData = function() {
        throw new Error("not supported");
      }, r.prototype.getRawDataItem = function(e) {
        throw new Error("not supported");
      }, r.prototype.cloneRawData = function() {
      }, r.prototype.getDimensionInfo = function(e) {
      }, r.prototype.cloneAllDimensionInfo = function() {
      }, r.prototype.count = function() {
      }, r.prototype.retrieveValue = function(e, t) {
      }, r.prototype.retrieveValueFromItem = function(e, t) {
      }, r.prototype.convertValue = function(e, t) {
        return ka(e, t);
      }, r;
    }()
  );
  function uV(r, e) {
    var t = new lV(), n = r.data, a = t.sourceFormat = r.sourceFormat, i = r.startIndex, o = "";
    r.seriesLayoutBy !== In && (o = '`seriesLayoutBy` of upstream dataset can only be "column" in data transform.', Ft(o));
    var s = [], l = {}, u = r.dimensionsDefine;
    if (u)
      M(u, function(p, g) {
        var y = p.name, m = {
          index: g,
          name: y,
          displayName: p.displayName
        };
        if (s.push(m), y != null) {
          var _ = "";
          Q(l, y) && (_ = 'dimension name "' + y + '" duplicated.', Ft(_)), l[y] = m;
        }
      });
    else
      for (var f = 0; f < r.dimensionsDetectedCount; f++)
        s.push({
          index: f
        });
    var h = Dw(a, In);
    e.__isBuiltIn && (t.getRawDataItem = function(p) {
      return h(n, i, s, p);
    }, t.getRawData = J(fV, null, r)), t.cloneRawData = J(hV, null, r);
    var c = Iw(a, In);
    t.count = J(c, null, n, i, s);
    var v = Lw(a);
    t.retrieveValue = function(p, g) {
      var y = h(n, i, s, p);
      return d(y, g);
    };
    var d = t.retrieveValueFromItem = function(p, g) {
      if (p != null) {
        var y = s[g];
        if (y)
          return v(p, g, y.name);
      }
    };
    return t.getDimensionInfo = J(cV, null, s, l), t.cloneAllDimensionInfo = J(vV, null, s), t;
  }
  function fV(r) {
    var e = r.sourceFormat;
    if (!og(e)) {
      var t = "";
      t = "`getRawData` is not supported in source format " + e, Ft(t);
    }
    return r.data;
  }
  function hV(r) {
    var e = r.sourceFormat, t = r.data;
    if (!og(e)) {
      var n = "";
      n = "`cloneRawData` is not supported in source format " + e, Ft(n);
    }
    if (e === Fe) {
      for (var a = [], i = 0, o = t.length; i < o; i++)
        a.push(t[i].slice());
      return a;
    } else if (e === Gr) {
      for (var a = [], i = 0, o = t.length; i < o; i++)
        a.push(H({}, t[i]));
      return a;
    }
  }
  function cV(r, e, t) {
    if (t != null) {
      if (Ot(t) || !isNaN(t) && !Q(e, t))
        return r[t];
      if (Q(e, t))
        return e[t];
    }
  }
  function vV(r) {
    return ht(r);
  }
  var Nw = nt();
  function dV(r) {
    r = ht(r);
    var e = r.type, t = "";
    e || (t = "Must have a `type` when `registerTransform`.", Ft(t));
    var n = e.split(":");
    n.length !== 2 && (t = 'Name must include namespace like "ns:regression".', Ft(t));
    var a = !1;
    n[0] === "echarts" && (e = n[1], a = !0), r.__isBuiltIn = a, Nw.set(e, r);
  }
  function pV(r, e, t) {
    var n = Xt(r), a = n.length, i = "";
    a || (i = "If `transform` declared, it should at least contain one transform.", Ft(i));
    for (var o = 0, s = a; o < s; o++) {
      var l = n[o];
      e = gV(l, e, t, a === 1 ? null : o), o !== s - 1 && (e.length = Math.max(e.length, 1));
    }
    return e;
  }
  function gV(r, e, t, n) {
    var a = "";
    e.length || (a = "Must have at least one upstream dataset.", Ft(a)), it(r) || (a = "transform declaration must be an object rather than " + typeof r + ".", Ft(a));
    var i = r.type, o = Nw.get(i);
    o || (a = 'Can not find transform on type "' + i + '".', Ft(a));
    var s = Y(e, function(f) {
      return uV(f, o);
    }), l = Xt(o.transform({
      upstream: s[0],
      upstreamList: s,
      config: ht(r.config)
    }));
    if (r.print) {
      var u = Y(l, function(f) {
        var h = n != null ? " === pipe index: " + n : "";
        return ["=== dataset index: " + t.datasetIndex + h + " ===", "- transform result data:", Ke(f.data), "- transform result dimensions:", Ke(f.dimensions)].join(`
`);
      }).join(`
`);
      ZR(u);
    }
    return Y(l, function(f, h) {
      var c = "";
      it(f) || (c = "A transform should not return some empty results.", Ft(c)), f.data || (c = "Transform result data should be not be null or undefined", Ft(c));
      var v = _w(f.data);
      og(v) || (c = "Transform result data should be array rows or object rows.", Ft(c));
      var d, p = e[0];
      if (p && h === 0 && !f.dimensions) {
        var g = p.startIndex;
        g && (f.data = p.data.slice(0, g).concat(f.data)), d = {
          seriesLayoutBy: In,
          sourceHeader: g,
          dimensions: p.metaRawOption.dimensions
        };
      } else
        d = {
          seriesLayoutBy: In,
          sourceHeader: 0,
          dimensions: f.dimensions
        };
      return eg(f.data, d, null);
    });
  }
  function og(r) {
    return r === Fe || r === Gr;
  }
  var Ah = "undefined", yV = typeof Uint32Array === Ah ? Array : Uint32Array, mV = typeof Uint16Array === Ah ? Array : Uint16Array, Vw = typeof Int32Array === Ah ? Array : Int32Array, Bw = typeof Float64Array === Ah ? Array : Float64Array, zw = {
    float: Bw,
    int: Vw,
    // Ordinal data type can be string or int
    ordinal: Array,
    number: Array,
    time: Bw
  }, sg;
  function Xl(r) {
    return r > 65535 ? yV : mV;
  }
  function rs() {
    return [1 / 0, -1 / 0];
  }
  function _V(r) {
    var e = r.constructor;
    return e === Array ? r.slice() : new e(r);
  }
  function Gw(r, e, t, n, a) {
    var i = zw[t || "float"];
    if (a) {
      var o = r[e], s = o && o.length;
      if (s !== n) {
        for (var l = new i(n), u = 0; u < s; u++)
          l[u] = o[u];
        r[e] = l;
      }
    } else
      r[e] = new i(n);
  }
  var lg = (
    /** @class */
    function() {
      function r() {
        this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = nt();
      }
      return r.prototype.initData = function(e, t, n) {
        st(rt(e.getItem) && rt(e.count), "Invalid data provider."), this._provider = e, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
        var a = e.getSource(), i = this.defaultDimValueGetter = sg[a.sourceFormat];
        this._dimValueGetter = n || i, this._rawExtent = [];
        var o = ww(a);
        this._dimensions = Y(t, function(s) {
          return o && st(s.property != null), {
            // Only pick these two props. Not leak other properties like orderMeta.
            type: s.type,
            property: s.property
          };
        }), this._initDataFromProvider(0, e.count());
      }, r.prototype.getProvider = function() {
        return this._provider;
      }, r.prototype.getSource = function() {
        return this._provider.getSource();
      }, r.prototype.ensureCalculationDimension = function(e, t) {
        var n = this._calcDimNameToIdx, a = this._dimensions, i = n.get(e);
        if (i != null) {
          if (a[i].type === t)
            return i;
        } else
          i = a.length;
        return a[i] = {
          type: t
        }, n.set(e, i), this._chunks[i] = new zw[t || "float"](this._rawCount), this._rawExtent[i] = rs(), i;
      }, r.prototype.collectOrdinalMeta = function(e, t) {
        var n = this._chunks[e], a = this._dimensions[e], i = this._rawExtent, o = a.ordinalOffset || 0, s = n.length;
        o === 0 && (i[e] = rs());
        for (var l = i[e], u = o; u < s; u++) {
          var f = n[u] = t.parseAndCollect(n[u]);
          isNaN(f) || (l[0] = Math.min(f, l[0]), l[1] = Math.max(f, l[1]));
        }
        a.ordinalMeta = t, a.ordinalOffset = s, a.type = "ordinal";
      }, r.prototype.getOrdinalMeta = function(e) {
        var t = this._dimensions[e], n = t.ordinalMeta;
        return n;
      }, r.prototype.getDimensionProperty = function(e) {
        var t = this._dimensions[e];
        return t && t.property;
      }, r.prototype.appendData = function(e) {
        st(!this._indices, "appendData can only be called on raw data.");
        var t = this._provider, n = this.count();
        t.appendData(e);
        var a = t.count();
        return t.persistent || (a += n), n < a && this._initDataFromProvider(n, a, !0), [n, a];
      }, r.prototype.appendValues = function(e, t) {
        for (var n = this._chunks, a = this._dimensions, i = a.length, o = this._rawExtent, s = this.count(), l = s + Math.max(e.length, t || 0), u = 0; u < i; u++) {
          var f = a[u];
          Gw(n, u, f.type, l, !0);
        }
        for (var h = [], c = s; c < l; c++)
          for (var v = c - s, d = 0; d < i; d++) {
            var f = a[d], p = sg.arrayRows.call(this, e[v] || h, f.property, v, d);
            n[d][c] = p;
            var g = o[d];
            p < g[0] && (g[0] = p), p > g[1] && (g[1] = p);
          }
        return this._rawCount = this._count = l, {
          start: s,
          end: l
        };
      }, r.prototype._initDataFromProvider = function(e, t, n) {
        for (var a = this._provider, i = this._chunks, o = this._dimensions, s = o.length, l = this._rawExtent, u = Y(o, function(m) {
          return m.property;
        }), f = 0; f < s; f++) {
          var h = o[f];
          l[f] || (l[f] = rs()), Gw(i, f, h.type, t, n);
        }
        if (a.fillStorage)
          a.fillStorage(e, t, i, l);
        else
          for (var c = [], v = e; v < t; v++) {
            c = a.getItem(v, c);
            for (var d = 0; d < s; d++) {
              var p = i[d], g = this._dimValueGetter(c, u[d], v, d);
              p[v] = g;
              var y = l[d];
              g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
            }
          }
        !a.persistent && a.clean && a.clean(), this._rawCount = this._count = t, this._extent = [];
      }, r.prototype.count = function() {
        return this._count;
      }, r.prototype.get = function(e, t) {
        if (!(t >= 0 && t < this._count))
          return NaN;
        var n = this._chunks[e];
        return n ? n[this.getRawIndex(t)] : NaN;
      }, r.prototype.getValues = function(e, t) {
        var n = [], a = [];
        if (t == null) {
          t = e, e = [];
          for (var i = 0; i < this._dimensions.length; i++)
            a.push(i);
        } else
          a = e;
        for (var i = 0, o = a.length; i < o; i++)
          n.push(this.get(a[i], t));
        return n;
      }, r.prototype.getByRawIndex = function(e, t) {
        if (!(t >= 0 && t < this._rawCount))
          return NaN;
        var n = this._chunks[e];
        return n ? n[t] : NaN;
      }, r.prototype.getSum = function(e) {
        var t = this._chunks[e], n = 0;
        if (t)
          for (var a = 0, i = this.count(); a < i; a++) {
            var o = this.get(e, a);
            isNaN(o) || (n += o);
          }
        return n;
      }, r.prototype.getMedian = function(e) {
        var t = [];
        this.each([e], function(i) {
          isNaN(i) || t.push(i);
        });
        var n = t.sort(function(i, o) {
          return i - o;
        }), a = this.count();
        return a === 0 ? 0 : a % 2 === 1 ? n[(a - 1) / 2] : (n[a / 2] + n[a / 2 - 1]) / 2;
      }, r.prototype.indexOfRawIndex = function(e) {
        if (e >= this._rawCount || e < 0)
          return -1;
        if (!this._indices)
          return e;
        var t = this._indices, n = t[e];
        if (n != null && n < this._count && n === e)
          return e;
        for (var a = 0, i = this._count - 1; a <= i; ) {
          var o = (a + i) / 2 | 0;
          if (t[o] < e)
            a = o + 1;
          else if (t[o] > e)
            i = o - 1;
          else
            return o;
        }
        return -1;
      }, r.prototype.indicesOfNearest = function(e, t, n) {
        var a = this._chunks, i = a[e], o = [];
        if (!i)
          return o;
        n == null && (n = 1 / 0);
        for (var s = 1 / 0, l = -1, u = 0, f = 0, h = this.count(); f < h; f++) {
          var c = this.getRawIndex(f), v = t - i[c], d = Math.abs(v);
          d <= n && ((d < s || d === s && v >= 0 && l < 0) && (s = d, l = v, u = 0), v === l && (o[u++] = f));
        }
        return o.length = u, o;
      }, r.prototype.getIndices = function() {
        var e, t = this._indices;
        if (t) {
          var n = t.constructor, a = this._count;
          if (n === Array) {
            e = new n(a);
            for (var i = 0; i < a; i++)
              e[i] = t[i];
          } else
            e = new n(t.buffer, 0, a);
        } else {
          var n = Xl(this._rawCount);
          e = new n(this.count());
          for (var i = 0; i < e.length; i++)
            e[i] = i;
        }
        return e;
      }, r.prototype.filter = function(e, t) {
        if (!this._count)
          return this;
        for (var n = this.clone(), a = n.count(), i = Xl(n._rawCount), o = new i(a), s = [], l = e.length, u = 0, f = e[0], h = n._chunks, c = 0; c < a; c++) {
          var v = void 0, d = n.getRawIndex(c);
          if (l === 0)
            v = t(c);
          else if (l === 1) {
            var p = h[f][d];
            v = t(p, c);
          } else {
            for (var g = 0; g < l; g++)
              s[g] = h[e[g]][d];
            s[g] = c, v = t.apply(null, s);
          }
          v && (o[u++] = d);
        }
        return u < a && (n._indices = o), n._count = u, n._extent = [], n._updateGetRawIdx(), n;
      }, r.prototype.selectRange = function(e) {
        var t = this.clone(), n = t._count;
        if (!n)
          return this;
        var a = Pt(e), i = a.length;
        if (!i)
          return this;
        var o = t.count(), s = Xl(t._rawCount), l = new s(o), u = 0, f = a[0], h = e[f][0], c = e[f][1], v = t._chunks, d = !1;
        if (!t._indices) {
          var p = 0;
          if (i === 1) {
            for (var g = v[a[0]], y = 0; y < n; y++) {
              var m = g[y];
              (m >= h && m <= c || isNaN(m)) && (l[u++] = p), p++;
            }
            d = !0;
          } else if (i === 2) {
            for (var g = v[a[0]], _ = v[a[1]], S = e[a[1]][0], b = e[a[1]][1], y = 0; y < n; y++) {
              var m = g[y], w = _[y];
              (m >= h && m <= c || isNaN(m)) && (w >= S && w <= b || isNaN(w)) && (l[u++] = p), p++;
            }
            d = !0;
          }
        }
        if (!d)
          if (i === 1)
            for (var y = 0; y < o; y++) {
              var T = t.getRawIndex(y), m = v[a[0]][T];
              (m >= h && m <= c || isNaN(m)) && (l[u++] = T);
            }
          else
            for (var y = 0; y < o; y++) {
              for (var C = !0, T = t.getRawIndex(y), I = 0; I < i; I++) {
                var L = a[I], m = v[L][T];
                (m < e[L][0] || m > e[L][1]) && (C = !1);
              }
              C && (l[u++] = t.getRawIndex(y));
            }
        return u < o && (t._indices = l), t._count = u, t._extent = [], t._updateGetRawIdx(), t;
      }, r.prototype.map = function(e, t) {
        var n = this.clone(e);
        return this._updateDims(n, e, t), n;
      }, r.prototype.modify = function(e, t) {
        this._updateDims(this, e, t);
      }, r.prototype._updateDims = function(e, t, n) {
        for (var a = e._chunks, i = [], o = t.length, s = e.count(), l = [], u = e._rawExtent, f = 0; f < t.length; f++)
          u[t[f]] = rs();
        for (var h = 0; h < s; h++) {
          for (var c = e.getRawIndex(h), v = 0; v < o; v++)
            l[v] = a[t[v]][c];
          l[o] = h;
          var d = n && n.apply(null, l);
          if (d != null) {
            typeof d != "object" && (i[0] = d, d = i);
            for (var f = 0; f < d.length; f++) {
              var p = t[f], g = d[f], y = u[p], m = a[p];
              m && (m[c] = g), g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
            }
          }
        }
      }, r.prototype.lttbDownSample = function(e, t) {
        var n = this.clone([e], !0), a = n._chunks, i = a[e], o = this.count(), s = 0, l = Math.floor(1 / t), u = this.getRawIndex(0), f, h, c, v = new (Xl(this._rawCount))(Math.min((Math.ceil(o / l) + 2) * 2, o));
        v[s++] = u;
        for (var d = 1; d < o - 1; d += l) {
          for (var p = Math.min(d + l, o - 1), g = Math.min(d + l * 2, o), y = (g + p) / 2, m = 0, _ = p; _ < g; _++) {
            var S = this.getRawIndex(_), b = i[S];
            isNaN(b) || (m += b);
          }
          m /= g - p;
          var w = d, T = Math.min(d + l, o), C = d - 1, I = i[u];
          f = -1, c = w;
          for (var L = -1, P = 0, _ = w; _ < T; _++) {
            var S = this.getRawIndex(_), b = i[S];
            if (isNaN(b)) {
              P++, L < 0 && (L = S);
              continue;
            }
            h = Math.abs((C - y) * (b - I) - (C - _) * (m - I)), h > f && (f = h, c = S);
          }
          P > 0 && P < T - w && (v[s++] = Math.min(L, c), c = Math.max(L, c)), v[s++] = c, u = c;
        }
        return v[s++] = this.getRawIndex(o - 1), n._count = s, n._indices = v, n.getRawIndex = this._getRawIdx, n;
      }, r.prototype.downSample = function(e, t, n, a) {
        for (var i = this.clone([e], !0), o = i._chunks, s = [], l = Math.floor(1 / t), u = o[e], f = this.count(), h = i._rawExtent[e] = rs(), c = new (Xl(this._rawCount))(Math.ceil(f / l)), v = 0, d = 0; d < f; d += l) {
          l > f - d && (l = f - d, s.length = l);
          for (var p = 0; p < l; p++) {
            var g = this.getRawIndex(d + p);
            s[p] = u[g];
          }
          var y = n(s), m = this.getRawIndex(Math.min(d + a(s, y) || 0, f - 1));
          u[m] = y, y < h[0] && (h[0] = y), y > h[1] && (h[1] = y), c[v++] = m;
        }
        return i._count = v, i._indices = c, i._updateGetRawIdx(), i;
      }, r.prototype.each = function(e, t) {
        if (this._count)
          for (var n = e.length, a = this._chunks, i = 0, o = this.count(); i < o; i++) {
            var s = this.getRawIndex(i);
            switch (n) {
              case 0:
                t(i);
                break;
              case 1:
                t(a[e[0]][s], i);
                break;
              case 2:
                t(a[e[0]][s], a[e[1]][s], i);
                break;
              default:
                for (var l = 0, u = []; l < n; l++)
                  u[l] = a[e[l]][s];
                u[l] = i, t.apply(null, u);
            }
          }
      }, r.prototype.getDataExtent = function(e) {
        var t = this._chunks[e], n = rs();
        if (!t)
          return n;
        var a = this.count(), i = !this._indices, o;
        if (i)
          return this._rawExtent[e].slice();
        if (o = this._extent[e], o)
          return o.slice();
        o = n;
        for (var s = o[0], l = o[1], u = 0; u < a; u++) {
          var f = this.getRawIndex(u), h = t[f];
          h < s && (s = h), h > l && (l = h);
        }
        return o = [s, l], this._extent[e] = o, o;
      }, r.prototype.getRawDataItem = function(e) {
        var t = this.getRawIndex(e);
        if (this._provider.persistent)
          return this._provider.getItem(t);
        for (var n = [], a = this._chunks, i = 0; i < a.length; i++)
          n.push(a[i][t]);
        return n;
      }, r.prototype.clone = function(e, t) {
        var n = new r(), a = this._chunks, i = e && Ar(e, function(s, l) {
          return s[l] = !0, s;
        }, {});
        if (i)
          for (var o = 0; o < a.length; o++)
            n._chunks[o] = i[o] ? _V(a[o]) : a[o];
        else
          n._chunks = a;
        return this._copyCommonProps(n), t || (n._indices = this._cloneIndices()), n._updateGetRawIdx(), n;
      }, r.prototype._copyCommonProps = function(e) {
        e._count = this._count, e._rawCount = this._rawCount, e._provider = this._provider, e._dimensions = this._dimensions, e._extent = ht(this._extent), e._rawExtent = ht(this._rawExtent);
      }, r.prototype._cloneIndices = function() {
        if (this._indices) {
          var e = this._indices.constructor, t = void 0;
          if (e === Array) {
            var n = this._indices.length;
            t = new e(n);
            for (var a = 0; a < n; a++)
              t[a] = this._indices[a];
          } else
            t = new e(this._indices);
          return t;
        }
        return null;
      }, r.prototype._getRawIdxIdentity = function(e) {
        return e;
      }, r.prototype._getRawIdx = function(e) {
        return e < this._count && e >= 0 ? this._indices[e] : -1;
      }, r.prototype._updateGetRawIdx = function() {
        this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
      }, r.internalField = function() {
        function e(t, n, a, i) {
          return ka(t[i], this._dimensions[i]);
        }
        sg = {
          arrayRows: e,
          objectRows: function(t, n, a, i) {
            return ka(t[n], this._dimensions[i]);
          },
          keyedColumns: e,
          original: function(t, n, a, i) {
            var o = t && (t.value == null ? t : t.value);
            return ka(o instanceof Array ? o[i] : o, this._dimensions[i]);
          },
          typedArray: function(t, n, a, i) {
            return t[i];
          }
        };
      }(), r;
    }()
  ), Fw = (
    /** @class */
    function() {
      function r(e) {
        this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = e;
      }
      return r.prototype.dirty = function() {
        this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
      }, r.prototype._setLocalSource = function(e, t) {
        this._sourceList = e, this._upstreamSignList = t, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
      }, r.prototype._getVersionSign = function() {
        return this._sourceHost.uid + "_" + this._versionSignBase;
      }, r.prototype.prepareSource = function() {
        this._isDirty() && (this._createSource(), this._dirty = !1);
      }, r.prototype._createSource = function() {
        this._setLocalSource([], []);
        var e = this._sourceHost, t = this._getUpstreamSourceManagers(), n = !!t.length, a, i;
        if (Zl(e)) {
          var o = e, s = void 0, l = void 0, u = void 0;
          if (n) {
            var f = t[0];
            f.prepareSource(), u = f.getSource(), s = u.data, l = u.sourceFormat, i = [f._getVersionSign()];
          } else
            s = o.get("data", !0), l = Xe(s) ? Qn : zr, i = [];
          var h = this._getSourceMetaRawOption() || {}, c = u && u.metaRawOption || {}, v = _t(h.seriesLayoutBy, c.seriesLayoutBy) || null, d = _t(h.sourceHeader, c.sourceHeader), p = _t(h.dimensions, c.dimensions), g = v !== c.seriesLayoutBy || !!d != !!c.sourceHeader || p;
          a = g ? [eg(s, {
            seriesLayoutBy: v,
            sourceHeader: d,
            dimensions: p
          }, l)] : [];
        } else {
          var y = e;
          if (n) {
            var m = this._applyTransform(t);
            a = m.sourceList, i = m.upstreamSignList;
          } else {
            var _ = y.get("source", !0);
            a = [eg(_, this._getSourceMetaRawOption(), null)], i = [];
          }
        }
        st(a && i), this._setLocalSource(a, i);
      }, r.prototype._applyTransform = function(e) {
        var t = this._sourceHost, n = t.get("transform", !0), a = t.get("fromTransformResult", !0);
        if (st(a != null || n != null), a != null) {
          var i = "";
          e.length !== 1 && (i = "When using `fromTransformResult`, there should be only one upstream dataset", Ww(i));
        }
        var o, s = [], l = [];
        return M(e, function(u) {
          u.prepareSource();
          var f = u.getSource(a || 0), h = "";
          a != null && !f && (h = "Can not retrieve result by `fromTransformResult`: " + a, Ww(h)), s.push(f), l.push(u._getVersionSign());
        }), n ? o = pV(n, s, {
          datasetIndex: t.componentIndex
        }) : a != null && (o = [KN(s[0])]), {
          sourceList: o,
          upstreamSignList: l
        };
      }, r.prototype._isDirty = function() {
        if (this._dirty)
          return !0;
        for (var e = this._getUpstreamSourceManagers(), t = 0; t < e.length; t++) {
          var n = e[t];
          if (
            // Consider the case that there is ancestor diry, call it recursively.
            // The performance is probably not an issue because usually the chain is not long.
            n._isDirty() || this._upstreamSignList[t] !== n._getVersionSign()
          )
            return !0;
        }
      }, r.prototype.getSource = function(e) {
        e = e || 0;
        var t = this._sourceList[e];
        if (!t) {
          var n = this._getUpstreamSourceManagers();
          return n[0] && n[0].getSource(e);
        }
        return t;
      }, r.prototype.getSharedDataStore = function(e) {
        st(Zl(this._sourceHost), "Can only call getDataStore on series source manager.");
        var t = e.makeStoreSchema();
        return this._innerGetDataStore(t.dimensions, e.source, t.hash);
      }, r.prototype._innerGetDataStore = function(e, t, n) {
        var a = 0, i = this._storeList, o = i[a];
        o || (o = i[a] = {});
        var s = o[n];
        if (!s) {
          var l = this._getUpstreamSourceManagers()[0];
          Zl(this._sourceHost) && l ? s = l._innerGetDataStore(e, t, n) : (s = new lg(), s.initData(new Cw(t, e.length), e)), o[n] = s;
        }
        return s;
      }, r.prototype._getUpstreamSourceManagers = function() {
        var e = this._sourceHost;
        if (Zl(e)) {
          var t = Yp(e);
          return t ? [t.getSourceManager()] : [];
        } else
          return Y(bN(e), function(n) {
            return n.getSourceManager();
          });
      }, r.prototype._getSourceMetaRawOption = function() {
        var e = this._sourceHost, t, n, a;
        if (Zl(e))
          t = e.get("seriesLayoutBy", !0), n = e.get("sourceHeader", !0), a = e.get("dimensions", !0);
        else if (!this._getUpstreamSourceManagers().length) {
          var i = e;
          t = i.get("seriesLayoutBy", !0), n = i.get("sourceHeader", !0), a = i.get("dimensions", !0);
        }
        return {
          seriesLayoutBy: t,
          sourceHeader: n,
          dimensions: a
        };
      }, r;
    }()
  );
  function Hw(r) {
    var e = r.option.transform;
    e && Hs(r.option.transform);
  }
  function Zl(r) {
    return r.mainType === "series";
  }
  function Ww(r) {
    throw new Error(r);
  }
  var Uw = "line-height:1";
  function Yw(r, e) {
    var t = r.color || "#6e7079", n = r.fontSize || 12, a = r.fontWeight || "400", i = r.color || "#464646", o = r.fontSize || 14, s = r.fontWeight || "900";
    return e === "html" ? {
      // eslint-disable-next-line max-len
      nameStyle: "font-size:" + Ze(n + "") + "px;color:" + Ze(t) + ";font-weight:" + Ze(a + ""),
      // eslint-disable-next-line max-len
      valueStyle: "font-size:" + Ze(o + "") + "px;color:" + Ze(i) + ";font-weight:" + Ze(s + "")
    } : {
      nameStyle: {
        fontSize: n,
        fill: t,
        fontWeight: a
      },
      valueStyle: {
        fontSize: o,
        fill: i,
        fontWeight: s
      }
    };
  }
  var SV = [0, 10, 20, 30], xV = ["", `
`, `

`, `


`];
  function Ae(r, e) {
    return e.type = r, e;
  }
  function ug(r) {
    return r.type === "section";
  }
  function $w(r) {
    return ug(r) ? wV : bV;
  }
  function Xw(r) {
    if (ug(r)) {
      var e = 0, t = r.blocks.length, n = t > 1 || t > 0 && !r.noHeader;
      return M(r.blocks, function(a) {
        var i = Xw(a);
        i >= e && (e = i + +(n && // 0 always can not be readable gap level.
        (!i || ug(a) && !a.noHeader)));
      }), e;
    }
    return 0;
  }
  function wV(r, e, t, n) {
    var a = e.noHeader, i = TV(Xw(e)), o = [], s = e.blocks || [];
    st(!s || U(s)), s = s || [];
    var l = r.orderMode;
    if (e.sortBlocks && l) {
      s = s.slice();
      var u = {
        valueAsc: "asc",
        valueDesc: "desc"
      };
      if (Q(u, l)) {
        var f = new Ow(u[l], null);
        s.sort(function(d, p) {
          return f.evaluate(d.sortParam, p.sortParam);
        });
      } else
        l === "seriesDesc" && s.reverse();
    }
    M(s, function(d, p) {
      var g = e.valueFormatter, y = $w(d)(
        // Inherit valueFormatter
        g ? H(H({}, r), {
          valueFormatter: g
        }) : r,
        d,
        p > 0 ? i.html : 0,
        n
      );
      y != null && o.push(y);
    });
    var h = r.renderMode === "richText" ? o.join(i.richText) : fg(o.join(""), a ? t : i.html);
    if (a)
      return h;
    var c = zp(e.header, "ordinal", r.useUTC), v = Yw(n, r.renderMode).nameStyle;
    return r.renderMode === "richText" ? qw(r, c, v) + i.richText + h : fg('<div style="' + v + ";" + Uw + ';">' + Ze(c) + "</div>" + h, t);
  }
  function bV(r, e, t, n) {
    var a = r.renderMode, i = e.noName, o = e.noValue, s = !e.markerType, l = e.name, u = r.useUTC, f = e.valueFormatter || r.valueFormatter || function(S) {
      return S = U(S) ? S : [S], Y(S, function(b, w) {
        return zp(b, U(v) ? v[w] : v, u);
      });
    };
    if (!(i && o)) {
      var h = s ? "" : r.markupStyleCreator.makeTooltipMarker(e.markerType, e.markerColor || "#333", a), c = i ? "" : zp(l, "ordinal", u), v = e.valueType, d = o ? [] : f(e.value), p = !s || !i, g = !s && i, y = Yw(n, a), m = y.nameStyle, _ = y.valueStyle;
      return a === "richText" ? (s ? "" : h) + (i ? "" : qw(r, c, m)) + (o ? "" : DV(r, d, p, g, _)) : fg((s ? "" : h) + (i ? "" : CV(c, !s, m)) + (o ? "" : AV(d, p, g, _)), t);
    }
  }
  function Zw(r, e, t, n, a, i) {
    if (r) {
      var o = $w(r), s = {
        useUTC: a,
        renderMode: t,
        orderMode: n,
        markupStyleCreator: e,
        valueFormatter: r.valueFormatter
      };
      return o(s, r, 0, i);
    }
  }
  function TV(r) {
    return {
      html: SV[r],
      richText: xV[r]
    };
  }
  function fg(r, e) {
    var t = '<div style="clear:both"></div>', n = "margin: " + e + "px 0 0";
    return '<div style="' + n + ";" + Uw + ';">' + r + t + "</div>";
  }
  function CV(r, e, t) {
    var n = e ? "margin-left:2px" : "";
    return '<span style="' + t + ";" + n + '">' + Ze(r) + "</span>";
  }
  function AV(r, e, t, n) {
    var a = t ? "10px" : "20px", i = e ? "float:right;margin-left:" + a : "";
    return r = U(r) ? r : [r], '<span style="' + i + ";" + n + '">' + Y(r, function(o) {
      return Ze(o);
    }).join("&nbsp;&nbsp;") + "</span>";
  }
  function qw(r, e, t) {
    return r.markupStyleCreator.wrapRichTextStyle(e, t);
  }
  function DV(r, e, t, n, a) {
    var i = [a], o = n ? 10 : 20;
    return t && i.push({
      padding: [0, 0, 0, o],
      align: "right"
    }), r.markupStyleCreator.wrapRichTextStyle(U(e) ? e.join("  ") : e, i);
  }
  function Kw(r, e) {
    var t = r.getData().getItemVisual(e, "style"), n = t[r.visualDrawType];
    return Oi(n);
  }
  function jw(r, e) {
    var t = r.get("padding");
    return t ?? (e === "richText" ? [8, 10] : 10);
  }
  var hg = (
    /** @class */
    function() {
      function r() {
        this.richTextStyles = {}, this._nextStyleNameId = X1();
      }
      return r.prototype._generateStyleName = function() {
        return "__EC_aUTo_" + this._nextStyleNameId++;
      }, r.prototype.makeTooltipMarker = function(e, t, n) {
        var a = n === "richText" ? this._generateStyleName() : null, i = qx({
          color: t,
          type: e,
          renderMode: n,
          markerId: a
        });
        return j(i) ? i : (st(a), this.richTextStyles[a] = i.style, i.content);
      }, r.prototype.wrapRichTextStyle = function(e, t) {
        var n = {};
        U(t) ? M(t, function(i) {
          return H(n, i);
        }) : H(n, t);
        var a = this._generateStyleName();
        return this.richTextStyles[a] = n, "{" + a + "|" + e + "}";
      }, r;
    }()
  );
  function Jw(r) {
    var e = r.series, t = r.dataIndex, n = r.multipleSeries, a = e.getData(), i = a.mapDimensionsAll("defaultedTooltip"), o = i.length, s = e.getRawValue(t), l = U(s), u = Kw(e, t), f, h, c, v;
    if (o > 1 || l && !o) {
      var d = MV(s, e, t, i, u);
      f = d.inlineValues, h = d.inlineValueTypes, c = d.blocks, v = d.inlineValues[0];
    } else if (o) {
      var p = a.getDimensionInfo(i[0]);
      v = f = es(a, t, i[0]), h = p.type;
    } else
      v = f = l ? s[0] : s;
    var g = Bd(e), y = g && e.name || "", m = a.getName(t), _ = n ? y : m;
    return Ae("section", {
      header: y,
      // When series name not specified, do not show a header line with only '-'.
      // This case alway happen in tooltip.trigger: 'item'.
      noHeader: n || !g,
      sortParam: v,
      blocks: [Ae("nameValue", {
        markerType: "item",
        markerColor: u,
        // Do not mix display seriesName and itemName in one tooltip,
        // which might confuses users.
        name: _,
        // name dimension might be auto assigned, where the name might
        // be not readable. So we check trim here.
        noName: !Mr(_),
        value: f,
        valueType: h
      })].concat(c || [])
    });
  }
  function MV(r, e, t, n, a) {
    var i = e.getData(), o = Ar(r, function(h, c, v) {
      var d = i.getDimensionInfo(v);
      return h = h || d && d.tooltip !== !1 && d.displayName != null;
    }, !1), s = [], l = [], u = [];
    n.length ? M(n, function(h) {
      f(es(i, t, h), h);
    }) : M(r, f);
    function f(h, c) {
      var v = i.getDimensionInfo(c);
      !v || v.otherDims.tooltip === !1 || (o ? u.push(Ae("nameValue", {
        markerType: "subItem",
        markerColor: a,
        name: v.displayName,
        value: h,
        valueType: v.type
      })) : (s.push(h), l.push(v.type)));
    }
    return {
      inlineValues: s,
      inlineValueTypes: l,
      blocks: u
    };
  }
  var Oa = Nt();
  function Dh(r, e) {
    return r.getName(e) || r.getId(e);
  }
  var Mh = "__universalTransitionEnabled", Zt = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t._selectedDataIndicesMap = {}, t;
      }
      return e.prototype.init = function(t, n, a) {
        this.seriesIndex = this.componentIndex, this.dataTask = $l({
          count: LV,
          reset: PV
        }), this.dataTask.context = {
          model: this
        }, this.mergeDefaultAndTheme(t, a);
        var i = Oa(this).sourceManager = new Fw(this);
        i.prepareSource();
        var o = this.getInitialData(t, a);
        tb(o, this), this.dataTask.context.data = o, st(o, "getInitialData returned invalid data."), Oa(this).dataBeforeProcessed = o, Qw(this), this._initSelectedMapFromData(o);
      }, e.prototype.mergeDefaultAndTheme = function(t, n) {
        var a = Fl(this), i = a ? Jo(t) : {}, o = this.subType;
        Ct.hasClass(o) && (o += "Series"), mt(t, n.getTheme().get(this.subType)), mt(t, this.getDefaultOption()), gi(t, "label", ["show"]), this.fillDataTextStyle(t.data), a && Ra(t, i, a);
      }, e.prototype.mergeOption = function(t, n) {
        t = mt(this.option, t, !0), this.fillDataTextStyle(t.data);
        var a = Fl(this);
        a && Ra(this.option, t, a);
        var i = Oa(this).sourceManager;
        i.dirty(), i.prepareSource();
        var o = this.getInitialData(t, n);
        tb(o, this), this.dataTask.dirty(), this.dataTask.context.data = o, Oa(this).dataBeforeProcessed = o, Qw(this), this._initSelectedMapFromData(o);
      }, e.prototype.fillDataTextStyle = function(t) {
        if (t && !Xe(t))
          for (var n = ["show"], a = 0; a < t.length; a++)
            t[a] && t[a].label && gi(t[a], "label", n);
      }, e.prototype.getInitialData = function(t, n) {
      }, e.prototype.appendData = function(t) {
        var n = this.getRawData();
        n.appendData(t.data);
      }, e.prototype.getData = function(t) {
        var n = cg(this);
        if (n) {
          var a = n.context.data;
          return t == null ? a : a.getLinkedData(t);
        } else
          return Oa(this).data;
      }, e.prototype.getAllData = function() {
        var t = this.getData();
        return t && t.getLinkedDataAll ? t.getLinkedDataAll() : [{
          data: t
        }];
      }, e.prototype.setData = function(t) {
        var n = cg(this);
        if (n) {
          var a = n.context;
          a.outputData = t, n !== this.dataTask && (a.data = t);
        }
        Oa(this).data = t;
      }, e.prototype.getEncode = function() {
        var t = this.get("encode", !0);
        if (t)
          return nt(t);
      }, e.prototype.getSourceManager = function() {
        return Oa(this).sourceManager;
      }, e.prototype.getSource = function() {
        return this.getSourceManager().getSource();
      }, e.prototype.getRawData = function() {
        return Oa(this).dataBeforeProcessed;
      }, e.prototype.getColorBy = function() {
        var t = this.get("colorBy");
        return t || "series";
      }, e.prototype.isColorBySeries = function() {
        return this.getColorBy() === "series";
      }, e.prototype.getBaseAxis = function() {
        var t = this.coordinateSystem;
        return t && t.getBaseAxis && t.getBaseAxis();
      }, e.prototype.formatTooltip = function(t, n, a) {
        return Jw({
          series: this,
          dataIndex: t,
          multipleSeries: n
        });
      }, e.prototype.isAnimationEnabled = function() {
        var t = this.ecModel;
        if (z.node && !(t && t.ssr))
          return !1;
        var n = this.getShallow("animation");
        return n && this.getData().count() > this.getShallow("animationThreshold") && (n = !1), !!n;
      }, e.prototype.restoreData = function() {
        this.dataTask.dirty();
      }, e.prototype.getColorFromPalette = function(t, n, a) {
        var i = this.ecModel, o = Xp.prototype.getColorFromPalette.call(this, t, n, a);
        return o || (o = i.getColorFromPalette(t, n, a)), o;
      }, e.prototype.coordDimToDataDim = function(t) {
        return this.getRawData().mapDimensionsAll(t);
      }, e.prototype.getProgressive = function() {
        return this.get("progressive");
      }, e.prototype.getProgressiveThreshold = function() {
        return this.get("progressiveThreshold");
      }, e.prototype.select = function(t, n) {
        this._innerSelect(this.getData(n), t);
      }, e.prototype.unselect = function(t, n) {
        var a = this.option.selectedMap;
        if (a) {
          var i = this.option.selectedMode, o = this.getData(n);
          if (i === "series" || a === "all") {
            this.option.selectedMap = {}, this._selectedDataIndicesMap = {};
            return;
          }
          for (var s = 0; s < t.length; s++) {
            var l = t[s], u = Dh(o, l);
            a[u] = !1, this._selectedDataIndicesMap[u] = -1;
          }
        }
      }, e.prototype.toggleSelect = function(t, n) {
        for (var a = [], i = 0; i < t.length; i++)
          a[0] = t[i], this.isSelected(t[i], n) ? this.unselect(a, n) : this.select(a, n);
      }, e.prototype.getSelectedDataIndices = function() {
        if (this.option.selectedMap === "all")
          return [].slice.call(this.getData().getIndices());
        for (var t = this._selectedDataIndicesMap, n = Pt(t), a = [], i = 0; i < n.length; i++) {
          var o = t[n[i]];
          o >= 0 && a.push(o);
        }
        return a;
      }, e.prototype.isSelected = function(t, n) {
        var a = this.option.selectedMap;
        if (!a)
          return !1;
        var i = this.getData(n);
        return (a === "all" || a[Dh(i, t)]) && !i.getItemModel(t).get(["select", "disabled"]);
      }, e.prototype.isUniversalTransitionEnabled = function() {
        if (this[Mh])
          return !0;
        var t = this.option.universalTransition;
        return t ? t === !0 ? !0 : t && t.enabled : !1;
      }, e.prototype._innerSelect = function(t, n) {
        var a, i, o = this.option, s = o.selectedMode, l = n.length;
        if (!(!s || !l)) {
          if (s === "series")
            o.selectedMap = "all";
          else if (s === "multiple") {
            it(o.selectedMap) || (o.selectedMap = {});
            for (var u = o.selectedMap, f = 0; f < l; f++) {
              var h = n[f], c = Dh(t, h);
              u[c] = !0, this._selectedDataIndicesMap[c] = t.getRawIndex(h);
            }
          } else if (s === "single" || s === !0) {
            var v = n[l - 1], c = Dh(t, v);
            o.selectedMap = (a = {}, a[c] = !0, a), this._selectedDataIndicesMap = (i = {}, i[c] = t.getRawIndex(v), i);
          }
        }
      }, e.prototype._initSelectedMapFromData = function(t) {
        if (!this.option.selectedMap) {
          var n = [];
          t.hasItemOption && t.each(function(a) {
            var i = t.getRawDataItem(a);
            i && i.selected && n.push(a);
          }), n.length > 0 && this._innerSelect(t, n);
        }
      }, e.registerClass = function(t) {
        return Ct.registerClass(t);
      }, e.protoInitialize = function() {
        var t = e.prototype;
        t.type = "series.__base__", t.seriesIndex = 0, t.ignoreStyleOnData = !1, t.hasSymbolVisual = !1, t.defaultSymbol = "circle", t.visualStyleAccessPath = "itemStyle", t.visualDrawType = "fill";
      }(), e;
    }(Ct)
  );
  le(Zt, ig), le(Zt, Xp), lS(Zt, Ct);
  function Qw(r) {
    var e = r.name;
    Bd(r) || (r.name = IV(r) || e);
  }
  function IV(r) {
    var e = r.getRawData(), t = e.mapDimensionsAll("seriesName"), n = [];
    return M(t, function(a) {
      var i = e.getDimensionInfo(a);
      i.displayName && n.push(i.displayName);
    }), n.join(" ");
  }
  function LV(r) {
    return r.model.getRawData().count();
  }
  function PV(r) {
    var e = r.model;
    return e.setData(e.getRawData().cloneShallow()), EV;
  }
  function EV(r, e) {
    e.outputData && r.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
  }
  function tb(r, e) {
    M(Ws(r.CHANGABLE_METHODS, r.DOWNSAMPLE_METHODS), function(t) {
      r.wrapMethod(t, yt(RV, e));
    });
  }
  function RV(r, e) {
    var t = cg(r);
    return t && t.setOutputEnd((e || this).count()), e;
  }
  function cg(r) {
    var e = (r.ecModel || {}).scheduler, t = e && e.getPipeline(r.uid);
    if (t) {
      var n = t.currentTask;
      if (n) {
        var a = n.agentStubMap;
        a && (n = a.get(r.uid));
      }
      return n;
    }
  }
  var Jt = (
    /** @class */
    function() {
      function r() {
        this.group = new ct(), this.uid = qo("viewComponent");
      }
      return r.prototype.init = function(e, t) {
      }, r.prototype.render = function(e, t, n, a) {
      }, r.prototype.dispose = function(e, t) {
      }, r.prototype.updateView = function(e, t, n, a) {
      }, r.prototype.updateLayout = function(e, t, n, a) {
      }, r.prototype.updateVisual = function(e, t, n, a) {
      }, r.prototype.toggleBlurSeries = function(e, t, n) {
      }, r.prototype.eachRendered = function(e) {
        var t = this.group;
        t && t.traverse(e);
      }, r;
    }()
  );
  Fd(Jt), Gf(Jt);
  function ns() {
    var r = Nt();
    return function(e) {
      var t = r(e), n = e.pipelineContext, a = !!t.large, i = !!t.progressiveRender, o = t.large = !!(n && n.large), s = t.progressiveRender = !!(n && n.progressiveRender);
      return (a !== o || i !== s) && "reset";
    };
  }
  var eb = Nt(), kV = ns(), $t = (
    /** @class */
    function() {
      function r() {
        this.group = new ct(), this.uid = qo("viewChart"), this.renderTask = $l({
          plan: OV,
          reset: NV
        }), this.renderTask.context = {
          view: this
        };
      }
      return r.prototype.init = function(e, t) {
      }, r.prototype.render = function(e, t, n, a) {
        throw new Error("render method must been implemented");
      }, r.prototype.highlight = function(e, t, n, a) {
        var i = e.getData(a && a.dataType);
        if (!i) {
          Ee("Unknown dataType " + a.dataType);
          return;
        }
        nb(i, a, "emphasis");
      }, r.prototype.downplay = function(e, t, n, a) {
        var i = e.getData(a && a.dataType);
        if (!i) {
          Ee("Unknown dataType " + a.dataType);
          return;
        }
        nb(i, a, "normal");
      }, r.prototype.remove = function(e, t) {
        this.group.removeAll();
      }, r.prototype.dispose = function(e, t) {
      }, r.prototype.updateView = function(e, t, n, a) {
        this.render(e, t, n, a);
      }, r.prototype.updateLayout = function(e, t, n, a) {
        this.render(e, t, n, a);
      }, r.prototype.updateVisual = function(e, t, n, a) {
        this.render(e, t, n, a);
      }, r.prototype.eachRendered = function(e) {
        Pa(this.group, e);
      }, r.markUpdateMethod = function(e, t) {
        eb(e).updateMethod = t;
      }, r.protoInitialize = function() {
        var e = r.prototype;
        e.type = "chart";
      }(), r;
    }()
  );
  function rb(r, e, t) {
    r && Ma(r) && (e === "emphasis" ? jn : Jn)(r, t);
  }
  function nb(r, e, t) {
    var n = yi(r, e), a = e && e.highlightKey != null ? mO(e.highlightKey) : null;
    n != null ? M(Xt(n), function(i) {
      rb(r.getItemGraphicEl(i), t, a);
    }) : r.eachItemGraphicEl(function(i) {
      rb(i, t, a);
    });
  }
  Fd($t, ["dispose"]), Gf($t);
  function OV(r) {
    return kV(r.model);
  }
  function NV(r) {
    var e = r.model, t = r.ecModel, n = r.api, a = r.payload, i = e.pipelineContext.progressiveRender, o = r.view, s = a && eb(a).updateMethod, l = i ? "incrementalPrepareRender" : s && o[s] ? s : "render";
    return l !== "render" && o[l](e, t, n, a), VV[l];
  }
  var VV = {
    incrementalPrepareRender: {
      progress: function(r, e) {
        e.view.incrementalRender(r, e.model, e.ecModel, e.api, e.payload);
      }
    },
    render: {
      // Put view.render in `progress` to support appendData. But in this case
      // view.render should not be called in reset, otherwise it will be called
      // twise. Use `forceFirstProgress` to make sure that view.render is called
      // in any cases.
      forceFirstProgress: !0,
      progress: function(r, e) {
        e.view.render(e.model, e.ecModel, e.api, e.payload);
      }
    }
  }, Ih = "\0__throttleOriginMethod", ab = "\0__throttleRate", ib = "\0__throttleType";
  function Lh(r, e, t) {
    var n, a = 0, i = 0, o = null, s, l, u, f;
    e = e || 0;
    function h() {
      i = (/* @__PURE__ */ new Date()).getTime(), o = null, r.apply(l, u || []);
    }
    var c = function() {
      for (var v = [], d = 0; d < arguments.length; d++)
        v[d] = arguments[d];
      n = (/* @__PURE__ */ new Date()).getTime(), l = this, u = v;
      var p = f || e, g = f || t;
      f = null, s = n - (g ? a : i) - p, clearTimeout(o), g ? o = setTimeout(h, p) : s >= 0 ? h() : o = setTimeout(h, -s), a = n;
    };
    return c.clear = function() {
      o && (clearTimeout(o), o = null);
    }, c.debounceNextCall = function(v) {
      f = v;
    }, c;
  }
  function as(r, e, t, n) {
    var a = r[e];
    if (a) {
      var i = a[Ih] || a, o = a[ib], s = a[ab];
      if (s !== t || o !== n) {
        if (t == null || !n)
          return r[e] = i;
        a = r[e] = Lh(i, t, n === "debounce"), a[Ih] = i, a[ib] = n, a[ab] = t;
      }
      return a;
    }
  }
  function ql(r, e) {
    var t = r[e];
    t && t[Ih] && (t.clear && t.clear(), r[e] = t[Ih]);
  }
  var ob = Nt(), sb = {
    itemStyle: _i(Ox, !0),
    lineStyle: _i(kx, !0)
  }, BV = {
    lineStyle: "stroke",
    itemStyle: "fill"
  };
  function lb(r, e) {
    var t = r.visualStyleMapper || sb[e];
    return t || (console.warn("Unknown style type '" + e + "'."), sb.itemStyle);
  }
  function ub(r, e) {
    var t = r.visualDrawType || BV[e];
    return t || (console.warn("Unknown style type '" + e + "'."), "fill");
  }
  var zV = {
    createOnAllSeries: !0,
    performRawSeries: !0,
    reset: function(r, e) {
      var t = r.getData(), n = r.visualStyleAccessPath || "itemStyle", a = r.getModel(n), i = lb(r, n), o = i(a), s = a.getShallow("decal");
      s && (t.setVisual("decal", s), s.dirty = !0);
      var l = ub(r, n), u = o[l], f = rt(u) ? u : null, h = o.fill === "auto" || o.stroke === "auto";
      if (!o[l] || f || h) {
        var c = r.getColorFromPalette(
          // TODO series count changed.
          r.name,
          null,
          e.getSeriesCount()
        );
        o[l] || (o[l] = c, t.setVisual("colorFromPalette", !0)), o.fill = o.fill === "auto" || rt(o.fill) ? c : o.fill, o.stroke = o.stroke === "auto" || rt(o.stroke) ? c : o.stroke;
      }
      if (t.setVisual("style", o), t.setVisual("drawType", l), !e.isSeriesFiltered(r) && f)
        return t.setVisual("colorFromPalette", !1), {
          dataEach: function(v, d) {
            var p = r.getDataParams(d), g = H({}, o);
            g[l] = f(p), v.setItemVisual(d, "style", g);
          }
        };
    }
  }, Kl = new Gt(), GV = {
    createOnAllSeries: !0,
    performRawSeries: !0,
    reset: function(r, e) {
      if (!(r.ignoreStyleOnData || e.isSeriesFiltered(r))) {
        var t = r.getData(), n = r.visualStyleAccessPath || "itemStyle", a = lb(r, n), i = t.getVisual("drawType");
        return {
          dataEach: t.hasItemOption ? function(o, s) {
            var l = o.getRawDataItem(s);
            if (l && l[n]) {
              Kl.option = l[n];
              var u = a(Kl), f = o.ensureUniqueItemVisual(s, "style");
              H(f, u), Kl.option.decal && (o.setItemVisual(s, "decal", Kl.option.decal), Kl.option.decal.dirty = !0), i in u && o.setItemVisual(s, "colorFromPalette", !1);
            }
          } : null
        };
      }
    }
  }, FV = {
    performRawSeries: !0,
    overallReset: function(r) {
      var e = nt();
      r.eachSeries(function(t) {
        var n = t.getColorBy();
        if (!t.isColorBySeries()) {
          var a = t.type + "-" + n, i = e.get(a);
          i || (i = {}, e.set(a, i)), ob(t).scope = i;
        }
      }), r.eachSeries(function(t) {
        if (!(t.isColorBySeries() || r.isSeriesFiltered(t))) {
          var n = t.getRawData(), a = {}, i = t.getData(), o = ob(t).scope, s = t.visualStyleAccessPath || "itemStyle", l = ub(t, s);
          i.each(function(u) {
            var f = i.getRawIndex(u);
            a[f] = u;
          }), n.each(function(u) {
            var f = a[u], h = i.getItemVisual(f, "colorFromPalette");
            if (h) {
              var c = i.ensureUniqueItemVisual(f, "style"), v = n.getName(u) || u + "", d = n.count();
              c[l] = t.getColorFromPalette(v, o, d);
            }
          });
        }
      });
    }
  }, Ph = Math.PI;
  function HV(r, e) {
    e = e || {}, ot(e, {
      text: "loading",
      textColor: "#000",
      fontSize: 12,
      fontWeight: "normal",
      fontStyle: "normal",
      fontFamily: "sans-serif",
      maskColor: "rgba(255, 255, 255, 0.8)",
      showSpinner: !0,
      color: "#5470c6",
      spinnerRadius: 10,
      lineWidth: 5,
      zlevel: 0
    });
    var t = new ct(), n = new Rt({
      style: {
        fill: e.maskColor
      },
      zlevel: e.zlevel,
      z: 1e4
    });
    t.add(n);
    var a = new kt({
      style: {
        text: e.text,
        fill: e.textColor,
        fontSize: e.fontSize,
        fontWeight: e.fontWeight,
        fontStyle: e.fontStyle,
        fontFamily: e.fontFamily
      },
      zlevel: e.zlevel,
      z: 10001
    }), i = new Rt({
      style: {
        fill: "none"
      },
      textContent: a,
      textConfig: {
        position: "right",
        distance: 10
      },
      zlevel: e.zlevel,
      z: 10001
    });
    t.add(i);
    var o;
    return e.showSpinner && (o = new Ll({
      shape: {
        startAngle: -Ph / 2,
        endAngle: -Ph / 2 + 0.1,
        r: e.spinnerRadius
      },
      style: {
        stroke: e.color,
        lineCap: "round",
        lineWidth: e.lineWidth
      },
      zlevel: e.zlevel,
      z: 10001
    }), o.animateShape(!0).when(1e3, {
      endAngle: Ph * 3 / 2
    }).start("circularInOut"), o.animateShape(!0).when(1e3, {
      startAngle: Ph * 3 / 2
    }).delay(300).start("circularInOut"), t.add(o)), t.resize = function() {
      var s = a.getBoundingRect().width, l = e.showSpinner ? e.spinnerRadius : 0, u = (r.getWidth() - l * 2 - (e.showSpinner && s ? 10 : 0) - s) / 2 - (e.showSpinner && s ? 0 : 5 + s / 2) + (e.showSpinner ? 0 : s / 2) + (s ? 0 : l), f = r.getHeight() / 2;
      e.showSpinner && o.setShape({
        cx: u,
        cy: f
      }), i.setShape({
        x: u - l,
        y: f - l,
        width: l * 2,
        height: l * 2
      }), n.setShape({
        x: 0,
        y: 0,
        width: r.getWidth(),
        height: r.getHeight()
      });
    }, t.resize(), t;
  }
  var fb = (
    /** @class */
    function() {
      function r(e, t, n, a) {
        this._stageTaskMap = nt(), this.ecInstance = e, this.api = t, n = this._dataProcessorHandlers = n.slice(), a = this._visualHandlers = a.slice(), this._allHandlers = n.concat(a);
      }
      return r.prototype.restoreData = function(e, t) {
        e.restoreData(t), this._stageTaskMap.each(function(n) {
          var a = n.overallTask;
          a && a.dirty();
        });
      }, r.prototype.getPerformArgs = function(e, t) {
        if (e.__pipeline) {
          var n = this._pipelineMap.get(e.__pipeline.id), a = n.context, i = !t && n.progressiveEnabled && (!a || a.progressiveRender) && e.__idxInPipeline > n.blockIndex, o = i ? n.step : null, s = a && a.modDataCount, l = s != null ? Math.ceil(s / o) : null;
          return {
            step: o,
            modBy: l,
            modDataCount: s
          };
        }
      }, r.prototype.getPipeline = function(e) {
        return this._pipelineMap.get(e);
      }, r.prototype.updateStreamModes = function(e, t) {
        var n = this._pipelineMap.get(e.uid), a = e.getData(), i = a.count(), o = n.progressiveEnabled && t.incrementalPrepareRender && i >= n.threshold, s = e.get("large") && i >= e.get("largeThreshold"), l = e.get("progressiveChunkMode") === "mod" ? i : null;
        e.pipelineContext = n.context = {
          progressiveRender: o,
          modDataCount: l,
          large: s
        };
      }, r.prototype.restorePipelines = function(e) {
        var t = this, n = t._pipelineMap = nt();
        e.eachSeries(function(a) {
          var i = a.getProgressive(), o = a.uid;
          n.set(o, {
            id: o,
            head: null,
            tail: null,
            threshold: a.getProgressiveThreshold(),
            progressiveEnabled: i && !(a.preventIncremental && a.preventIncremental()),
            blockIndex: -1,
            step: Math.round(i || 700),
            count: 0
          }), t._pipe(a, a.dataTask);
        });
      }, r.prototype.prepareStageTasks = function() {
        var e = this._stageTaskMap, t = this.api.getModel(), n = this.api;
        M(this._allHandlers, function(a) {
          var i = e.get(a.uid) || e.set(a.uid, {}), o = "";
          o = '"reset" and "overallReset" must not be both specified.', st(!(a.reset && a.overallReset), o), a.reset && this._createSeriesStageTask(a, i, t, n), a.overallReset && this._createOverallStageTask(a, i, t, n);
        }, this);
      }, r.prototype.prepareView = function(e, t, n, a) {
        var i = e.renderTask, o = i.context;
        o.model = t, o.ecModel = n, o.api = a, i.__block = !e.incrementalPrepareRender, this._pipe(t, i);
      }, r.prototype.performDataProcessorTasks = function(e, t) {
        this._performStageTasks(this._dataProcessorHandlers, e, t, {
          block: !0
        });
      }, r.prototype.performVisualTasks = function(e, t, n) {
        this._performStageTasks(this._visualHandlers, e, t, n);
      }, r.prototype._performStageTasks = function(e, t, n, a) {
        a = a || {};
        var i = !1, o = this;
        M(e, function(l, u) {
          if (!(a.visualType && a.visualType !== l.visualType)) {
            var f = o._stageTaskMap.get(l.uid), h = f.seriesTaskMap, c = f.overallTask;
            if (c) {
              var v, d = c.agentStubMap;
              d.each(function(g) {
                s(a, g) && (g.dirty(), v = !0);
              }), v && c.dirty(), o.updatePayload(c, n);
              var p = o.getPerformArgs(c, a.block);
              d.each(function(g) {
                g.perform(p);
              }), c.perform(p) && (i = !0);
            } else
              h && h.each(function(g, y) {
                s(a, g) && g.dirty();
                var m = o.getPerformArgs(g, a.block);
                m.skip = !l.performRawSeries && t.isSeriesFiltered(g.context.model), o.updatePayload(g, n), g.perform(m) && (i = !0);
              });
          }
        });
        function s(l, u) {
          return l.setDirty && (!l.dirtyMap || l.dirtyMap.get(u.__pipeline.id));
        }
        this.unfinished = i || this.unfinished;
      }, r.prototype.performSeriesTasks = function(e) {
        var t;
        e.eachSeries(function(n) {
          t = n.dataTask.perform() || t;
        }), this.unfinished = t || this.unfinished;
      }, r.prototype.plan = function() {
        this._pipelineMap.each(function(e) {
          var t = e.tail;
          do {
            if (t.__block) {
              e.blockIndex = t.__idxInPipeline;
              break;
            }
            t = t.getUpstream();
          } while (t);
        });
      }, r.prototype.updatePayload = function(e, t) {
        t !== "remain" && (e.context.payload = t);
      }, r.prototype._createSeriesStageTask = function(e, t, n, a) {
        var i = this, o = t.seriesTaskMap, s = t.seriesTaskMap = nt(), l = e.seriesType, u = e.getTargetSeries;
        e.createOnAllSeries ? n.eachRawSeries(f) : l ? n.eachRawSeriesByType(l, f) : u && u(n, a).each(f);
        function f(h) {
          var c = h.uid, v = s.set(c, o && o.get(c) || $l({
            plan: XV,
            reset: ZV,
            count: KV
          }));
          v.context = {
            model: h,
            ecModel: n,
            api: a,
            // PENDING: `useClearVisual` not used?
            useClearVisual: e.isVisual && !e.isLayout,
            plan: e.plan,
            reset: e.reset,
            scheduler: i
          }, i._pipe(h, v);
        }
      }, r.prototype._createOverallStageTask = function(e, t, n, a) {
        var i = this, o = t.overallTask = t.overallTask || $l({
          reset: WV
        });
        o.context = {
          ecModel: n,
          api: a,
          overallReset: e.overallReset,
          scheduler: i
        };
        var s = o.agentStubMap, l = o.agentStubMap = nt(), u = e.seriesType, f = e.getTargetSeries, h = !0, c = !1, v = "";
        v = '"createOnAllSeries" is not supported for "overallReset", because it will block all streams.', st(!e.createOnAllSeries, v), u ? n.eachRawSeriesByType(u, d) : f ? f(n, a).each(d) : (h = !1, M(n.getSeries(), d));
        function d(p) {
          var g = p.uid, y = l.set(g, s && s.get(g) || // When the result of `getTargetSeries` changed, the overallTask
          // should be set as dirty and re-performed.
          (c = !0, $l({
            reset: UV,
            onDirty: $V
          })));
          y.context = {
            model: p,
            overallProgress: h
            // FIXME:TS never used, so comment it
            // modifyOutputEnd: modifyOutputEnd
          }, y.agent = o, y.__block = h, i._pipe(p, y);
        }
        c && o.dirty();
      }, r.prototype._pipe = function(e, t) {
        var n = e.uid, a = this._pipelineMap.get(n);
        !a.head && (a.head = t), a.tail && a.tail.pipe(t), a.tail = t, t.__idxInPipeline = a.count++, t.__pipeline = a;
      }, r.wrapStageHandler = function(e, t) {
        return rt(e) && (e = {
          overallReset: e,
          seriesType: jV(e)
        }), e.uid = qo("stageHandler"), t && (e.visualType = t), e;
      }, r;
    }()
  );
  function WV(r) {
    r.overallReset(r.ecModel, r.api, r.payload);
  }
  function UV(r) {
    return r.overallProgress && YV;
  }
  function YV() {
    this.agent.dirty(), this.getDownstream().dirty();
  }
  function $V() {
    this.agent && this.agent.dirty();
  }
  function XV(r) {
    return r.plan ? r.plan(r.model, r.ecModel, r.api, r.payload) : null;
  }
  function ZV(r) {
    r.useClearVisual && r.data.clearAllVisual();
    var e = r.resetDefines = Xt(r.reset(r.model, r.ecModel, r.api, r.payload));
    return e.length > 1 ? Y(e, function(t, n) {
      return hb(n);
    }) : qV;
  }
  var qV = hb(0);
  function hb(r) {
    return function(e, t) {
      var n = t.data, a = t.resetDefines[r];
      if (a && a.dataEach)
        for (var i = e.start; i < e.end; i++)
          a.dataEach(n, i);
      else
        a && a.progress && a.progress(e, n);
    };
  }
  function KV(r) {
    return r.data.count();
  }
  function jV(r) {
    Eh = null;
    try {
      r(jl, cb);
    } catch {
    }
    return Eh;
  }
  var jl = {}, cb = {}, Eh;
  vb(jl, Kp), vb(cb, hw), jl.eachSeriesByType = jl.eachRawSeriesByType = function(r) {
    Eh = r;
  }, jl.eachComponent = function(r) {
    r.mainType === "series" && r.subType && (Eh = r.subType);
  };
  function vb(r, e) {
    for (var t in e.prototype)
      r[t] = ue;
  }
  var db = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"], JV = {
    color: db,
    colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], db]
  }, Qe = "#B9B8CE", pb = "#100C2A", Rh = function() {
    return {
      axisLine: {
        lineStyle: {
          color: Qe
        }
      },
      splitLine: {
        lineStyle: {
          color: "#484753"
        }
      },
      splitArea: {
        areaStyle: {
          color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
        }
      },
      minorSplitLine: {
        lineStyle: {
          color: "#20203B"
        }
      }
    };
  }, gb = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"], yb = {
    darkMode: !0,
    color: gb,
    backgroundColor: pb,
    axisPointer: {
      lineStyle: {
        color: "#817f91"
      },
      crossStyle: {
        color: "#817f91"
      },
      label: {
        // TODO Contrast of label backgorundColor
        color: "#fff"
      }
    },
    legend: {
      textStyle: {
        color: Qe
      }
    },
    textStyle: {
      color: Qe
    },
    title: {
      textStyle: {
        color: "#EEF1FA"
      },
      subtextStyle: {
        color: "#B9B8CE"
      }
    },
    toolbox: {
      iconStyle: {
        borderColor: Qe
      }
    },
    dataZoom: {
      borderColor: "#71708A",
      textStyle: {
        color: Qe
      },
      brushStyle: {
        color: "rgba(135,163,206,0.3)"
      },
      handleStyle: {
        color: "#353450",
        borderColor: "#C5CBE3"
      },
      moveHandleStyle: {
        color: "#B0B6C3",
        opacity: 0.3
      },
      fillerColor: "rgba(135,163,206,0.2)",
      emphasis: {
        handleStyle: {
          borderColor: "#91B7F2",
          color: "#4D587D"
        },
        moveHandleStyle: {
          color: "#636D9A",
          opacity: 0.7
        }
      },
      dataBackground: {
        lineStyle: {
          color: "#71708A",
          width: 1
        },
        areaStyle: {
          color: "#71708A"
        }
      },
      selectedDataBackground: {
        lineStyle: {
          color: "#87A3CE"
        },
        areaStyle: {
          color: "#87A3CE"
        }
      }
    },
    visualMap: {
      textStyle: {
        color: Qe
      }
    },
    timeline: {
      lineStyle: {
        color: Qe
      },
      label: {
        color: Qe
      },
      controlStyle: {
        color: Qe,
        borderColor: Qe
      }
    },
    calendar: {
      itemStyle: {
        color: pb
      },
      dayLabel: {
        color: Qe
      },
      monthLabel: {
        color: Qe
      },
      yearLabel: {
        color: Qe
      }
    },
    timeAxis: Rh(),
    logAxis: Rh(),
    valueAxis: Rh(),
    categoryAxis: Rh(),
    line: {
      symbol: "circle"
    },
    graph: {
      color: gb
    },
    gauge: {
      title: {
        color: Qe
      },
      axisLine: {
        lineStyle: {
          color: [[1, "rgba(207,212,219,0.2)"]]
        }
      },
      axisLabel: {
        color: Qe
      },
      detail: {
        color: "#EEF1FA"
      }
    },
    candlestick: {
      itemStyle: {
        color: "#f64e56",
        color0: "#54ea92",
        borderColor: "#f64e56",
        borderColor0: "#54ea92"
        // borderColor: '#ca2824',
        // borderColor0: '#09a443'
      }
    }
  };
  yb.categoryAxis.splitLine.show = !1;
  var QV = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.normalizeQuery = function(e) {
        var t = {}, n = {}, a = {};
        if (j(e)) {
          var i = wn(e);
          t.mainType = i.main || null, t.subType = i.sub || null;
        } else {
          var o = ["Index", "Name", "Id"], s = {
            name: 1,
            dataIndex: 1,
            dataType: 1
          };
          M(e, function(l, u) {
            for (var f = !1, h = 0; h < o.length; h++) {
              var c = o[h], v = u.lastIndexOf(c);
              if (v > 0 && v === u.length - c.length) {
                var d = u.slice(0, v);
                d !== "data" && (t.mainType = d, t[c.toLowerCase()] = l, f = !0);
              }
            }
            s.hasOwnProperty(u) && (n[u] = l, f = !0), f || (a[u] = l);
          });
        }
        return {
          cptQuery: t,
          dataQuery: n,
          otherQuery: a
        };
      }, r.prototype.filter = function(e, t) {
        var n = this.eventInfo;
        if (!n)
          return !0;
        var a = n.targetEl, i = n.packedEvent, o = n.model, s = n.view;
        if (!o || !s)
          return !0;
        var l = t.cptQuery, u = t.dataQuery;
        return f(l, o, "mainType") && f(l, o, "subType") && f(l, o, "index", "componentIndex") && f(l, o, "name") && f(l, o, "id") && f(u, i, "name") && f(u, i, "dataIndex") && f(u, i, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(e, t.otherQuery, a, i));
        function f(h, c, v, d) {
          return h[v] == null || c[d || v] === h[v];
        }
      }, r.prototype.afterTrigger = function() {
        this.eventInfo = null;
      }, r;
    }()
  ), vg = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"], mb = vg.concat(["symbolKeepAspect"]), tB = {
    createOnAllSeries: !0,
    // For legend.
    performRawSeries: !0,
    reset: function(r, e) {
      var t = r.getData();
      if (r.legendIcon && t.setVisual("legendIcon", r.legendIcon), !r.hasSymbolVisual)
        return;
      for (var n = {}, a = {}, i = !1, o = 0; o < vg.length; o++) {
        var s = vg[o], l = r.get(s);
        rt(l) ? (i = !0, a[s] = l) : n[s] = l;
      }
      if (n.symbol = n.symbol || r.defaultSymbol, t.setVisual(H({
        legendIcon: r.legendIcon || n.symbol,
        symbolKeepAspect: r.get("symbolKeepAspect")
      }, n)), e.isSeriesFiltered(r))
        return;
      var u = Pt(a);
      function f(h, c) {
        for (var v = r.getRawValue(c), d = r.getDataParams(c), p = 0; p < u.length; p++) {
          var g = u[p];
          h.setItemVisual(c, g, a[g](v, d));
        }
      }
      return {
        dataEach: i ? f : null
      };
    }
  }, eB = {
    createOnAllSeries: !0,
    // For legend.
    performRawSeries: !0,
    reset: function(r, e) {
      if (!r.hasSymbolVisual || e.isSeriesFiltered(r))
        return;
      var t = r.getData();
      function n(a, i) {
        for (var o = a.getItemModel(i), s = 0; s < mb.length; s++) {
          var l = mb[s], u = o.getShallow(l, !0);
          u != null && a.setItemVisual(i, l, u);
        }
      }
      return {
        dataEach: t.hasItemOption ? n : null
      };
    }
  };
  function dg(r, e, t) {
    switch (t) {
      case "color":
        var n = r.getItemVisual(e, "style");
        return n[r.getVisual("drawType")];
      case "opacity":
        return r.getItemVisual(e, "style").opacity;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        return r.getItemVisual(e, t);
      default:
        console.warn("Unknown visual type " + t);
    }
  }
  function Jl(r, e) {
    switch (e) {
      case "color":
        var t = r.getVisual("style");
        return t[r.getVisual("drawType")];
      case "opacity":
        return r.getVisual("style").opacity;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        return r.getVisual(e);
      default:
        console.warn("Unknown visual type " + e);
    }
  }
  function _b(r, e, t, n) {
    switch (t) {
      case "color":
        var a = r.ensureUniqueItemVisual(e, "style");
        a[r.getVisual("drawType")] = n, r.setItemVisual(e, "colorFromPalette", !1);
        break;
      case "opacity":
        r.ensureUniqueItemVisual(e, "style").opacity = n;
        break;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        r.setItemVisual(e, t, n);
        break;
      default:
        console.warn("Unknown visual type " + t);
    }
  }
  function Sb(r, e) {
    function t(n, a) {
      var i = [];
      return n.eachComponent({
        mainType: "series",
        subType: r,
        query: a
      }, function(o) {
        i.push(o.seriesIndex);
      }), i;
    }
    M([[r + "ToggleSelect", "toggleSelect"], [r + "Select", "select"], [r + "UnSelect", "unselect"]], function(n) {
      e(n[0], function(a, i, o) {
        a = H({}, a), ce(a.type, n[1]), o.dispatchAction(H(a, {
          type: n[1],
          seriesIndex: t(i, a)
        }));
      });
    });
  }
  function is(r, e, t, n, a) {
    var i = r + e;
    t.isSilent(i) || (Rr("event " + i + " is deprecated."), n.eachComponent({
      mainType: "series",
      subType: "pie"
    }, function(o) {
      for (var s = o.seriesIndex, l = o.option.selectedMap, u = a.selected, f = 0; f < u.length; f++)
        if (u[f].seriesIndex === s) {
          var h = o.getData(), c = yi(h, a.fromActionPayload);
          t.trigger(i, {
            type: i,
            seriesId: o.id,
            name: U(c) ? h.getName(c[0]) : h.getName(c),
            selected: j(l) ? l : H({}, l)
          });
        }
    }));
  }
  function rB(r, e, t) {
    r.on("selectchanged", function(n) {
      var a = t.getModel();
      n.isFromClick ? (is("map", "selectchanged", e, a, n), is("pie", "selectchanged", e, a, n)) : n.fromAction === "select" ? (is("map", "selected", e, a, n), is("pie", "selected", e, a, n)) : n.fromAction === "unselect" && (is("map", "unselected", e, a, n), is("pie", "unselected", e, a, n));
    });
  }
  function Hi(r, e, t) {
    for (var n; r && !(e(r) && (n = r, t)); )
      r = r.__hostTarget || r.parent;
    return n;
  }
  var nB = Math.round(Math.random() * 9), aB = typeof Object.defineProperty == "function", iB = function() {
    function r() {
      this._id = "__ec_inner_" + nB++;
    }
    return r.prototype.get = function(e) {
      return this._guard(e)[this._id];
    }, r.prototype.set = function(e, t) {
      var n = this._guard(e);
      return aB ? Object.defineProperty(n, this._id, {
        value: t,
        enumerable: !1,
        configurable: !0
      }) : n[this._id] = t, this;
    }, r.prototype.delete = function(e) {
      return this.has(e) ? (delete this._guard(e)[this._id], !0) : !1;
    }, r.prototype.has = function(e) {
      return !!this._guard(e)[this._id];
    }, r.prototype._guard = function(e) {
      if (e !== Object(e))
        throw TypeError("Value of WeakMap is not a non-null object.");
      return e;
    }, r;
  }(), oB = Dt.extend({
    type: "triangle",
    shape: {
      cx: 0,
      cy: 0,
      width: 0,
      height: 0
    },
    buildPath: function(r, e) {
      var t = e.cx, n = e.cy, a = e.width / 2, i = e.height / 2;
      r.moveTo(t, n - i), r.lineTo(t + a, n + i), r.lineTo(t - a, n + i), r.closePath();
    }
  }), sB = Dt.extend({
    type: "diamond",
    shape: {
      cx: 0,
      cy: 0,
      width: 0,
      height: 0
    },
    buildPath: function(r, e) {
      var t = e.cx, n = e.cy, a = e.width / 2, i = e.height / 2;
      r.moveTo(t, n - i), r.lineTo(t + a, n), r.lineTo(t, n + i), r.lineTo(t - a, n), r.closePath();
    }
  }), lB = Dt.extend({
    type: "pin",
    shape: {
      // x, y on the cusp
      x: 0,
      y: 0,
      width: 0,
      height: 0
    },
    buildPath: function(r, e) {
      var t = e.x, n = e.y, a = e.width / 5 * 3, i = Math.max(a, e.height), o = a / 2, s = o * o / (i - o), l = n - i + o + s, u = Math.asin(s / o), f = Math.cos(u) * o, h = Math.sin(u), c = Math.cos(u), v = o * 0.6, d = o * 0.7;
      r.moveTo(t - f, l + s), r.arc(t, l, o, Math.PI - u, Math.PI * 2 + u), r.bezierCurveTo(t + f - h * v, l + s + c * v, t, n - d, t, n), r.bezierCurveTo(t, n - d, t - f + h * v, l + s + c * v, t - f, l + s), r.closePath();
    }
  }), uB = Dt.extend({
    type: "arrow",
    shape: {
      x: 0,
      y: 0,
      width: 0,
      height: 0
    },
    buildPath: function(r, e) {
      var t = e.height, n = e.width, a = e.x, i = e.y, o = n / 3 * 2;
      r.moveTo(a, i), r.lineTo(a + o, i + t), r.lineTo(a, i + t / 4 * 3), r.lineTo(a - o, i + t), r.lineTo(a, i), r.closePath();
    }
  }), fB = {
    line: Se,
    rect: Rt,
    roundRect: Rt,
    square: Rt,
    circle: Nr,
    diamond: sB,
    pin: lB,
    arrow: uB,
    triangle: oB
  }, hB = {
    line: function(r, e, t, n, a) {
      a.x1 = r, a.y1 = e + n / 2, a.x2 = r + t, a.y2 = e + n / 2;
    },
    rect: function(r, e, t, n, a) {
      a.x = r, a.y = e, a.width = t, a.height = n;
    },
    roundRect: function(r, e, t, n, a) {
      a.x = r, a.y = e, a.width = t, a.height = n, a.r = Math.min(t, n) / 4;
    },
    square: function(r, e, t, n, a) {
      var i = Math.min(t, n);
      a.x = r, a.y = e, a.width = i, a.height = i;
    },
    circle: function(r, e, t, n, a) {
      a.cx = r + t / 2, a.cy = e + n / 2, a.r = Math.min(t, n) / 2;
    },
    diamond: function(r, e, t, n, a) {
      a.cx = r + t / 2, a.cy = e + n / 2, a.width = t, a.height = n;
    },
    pin: function(r, e, t, n, a) {
      a.x = r + t / 2, a.y = e + n / 2, a.width = t, a.height = n;
    },
    arrow: function(r, e, t, n, a) {
      a.x = r + t / 2, a.y = e + n / 2, a.width = t, a.height = n;
    },
    triangle: function(r, e, t, n, a) {
      a.cx = r + t / 2, a.cy = e + n / 2, a.width = t, a.height = n;
    }
  }, kh = {};
  M(fB, function(r, e) {
    kh[e] = new r();
  });
  var cB = Dt.extend({
    type: "symbol",
    shape: {
      symbolType: "",
      x: 0,
      y: 0,
      width: 0,
      height: 0
    },
    calculateTextPosition: function(r, e, t) {
      var n = kf(r, e, t), a = this.shape;
      return a && a.symbolType === "pin" && e.position === "inside" && (n.y = t.y + t.height * 0.4), n;
    },
    buildPath: function(r, e, t) {
      var n = e.symbolType;
      if (n !== "none") {
        var a = kh[n];
        a || (n = "rect", a = kh[n]), hB[n](e.x, e.y, e.width, e.height, a.shape), a.buildPath(r, a.shape, t);
      }
    }
  });
  function vB(r, e) {
    if (this.type !== "image") {
      var t = this.style;
      this.__isEmptyBrush ? (t.stroke = r, t.fill = e || "#fff", t.lineWidth = 2) : this.shape.symbolType === "line" ? t.stroke = r : t.fill = r, this.markRedraw();
    }
  }
  function ve(r, e, t, n, a, i, o) {
    var s = r.indexOf("empty") === 0;
    s && (r = r.substr(5, 1).toLowerCase() + r.substr(6));
    var l;
    return r.indexOf("image://") === 0 ? l = wp(r.slice(8), new xt(e, t, n, a), o ? "center" : "cover") : r.indexOf("path://") === 0 ? l = El(r.slice(7), {}, new xt(e, t, n, a), o ? "center" : "cover") : l = new cB({
      shape: {
        symbolType: r,
        x: e,
        y: t,
        width: n,
        height: a
      }
    }), l.__isEmptyBrush = s, l.setColor = vB, i && l.setColor(i), l;
  }
  function Ql(r) {
    return U(r) || (r = [+r, +r]), [r[0] || 0, r[1] || 0];
  }
  function os(r, e) {
    if (r != null)
      return U(r) || (r = [r, r]), [Z(r[0], e[0]) || 0, Z(_t(r[1], r[0]), e[1]) || 0];
  }
  function Wi(r) {
    return isFinite(r);
  }
  function dB(r, e, t) {
    var n = e.x == null ? 0 : e.x, a = e.x2 == null ? 1 : e.x2, i = e.y == null ? 0 : e.y, o = e.y2 == null ? 0 : e.y2;
    e.global || (n = n * t.width + t.x, a = a * t.width + t.x, i = i * t.height + t.y, o = o * t.height + t.y), n = Wi(n) ? n : 0, a = Wi(a) ? a : 1, i = Wi(i) ? i : 0, o = Wi(o) ? o : 0;
    var s = r.createLinearGradient(n, i, a, o);
    return s;
  }
  function pB(r, e, t) {
    var n = t.width, a = t.height, i = Math.min(n, a), o = e.x == null ? 0.5 : e.x, s = e.y == null ? 0.5 : e.y, l = e.r == null ? 0.5 : e.r;
    e.global || (o = o * n + t.x, s = s * a + t.y, l = l * i), o = Wi(o) ? o : 0.5, s = Wi(s) ? s : 0.5, l = l >= 0 && Wi(l) ? l : 0.5;
    var u = r.createRadialGradient(o, s, 0, o, s, l);
    return u;
  }
  function pg(r, e, t) {
    for (var n = e.type === "radial" ? pB(r, e, t) : dB(r, e, t), a = e.colorStops, i = 0; i < a.length; i++)
      n.addColorStop(a[i].offset, a[i].color);
    return n;
  }
  function gB(r, e) {
    if (r === e || !r && !e)
      return !1;
    if (!r || !e || r.length !== e.length)
      return !0;
    for (var t = 0; t < r.length; t++)
      if (r[t] !== e[t])
        return !0;
    return !1;
  }
  function Oh(r) {
    return parseInt(r, 10);
  }
  function ss(r, e, t) {
    var n = ["width", "height"][e], a = ["clientWidth", "clientHeight"][e], i = ["paddingLeft", "paddingTop"][e], o = ["paddingRight", "paddingBottom"][e];
    if (t[n] != null && t[n] !== "auto")
      return parseFloat(t[n]);
    var s = document.defaultView.getComputedStyle(r);
    return (r[a] || Oh(s[n]) || Oh(r.style[n])) - (Oh(s[i]) || 0) - (Oh(s[o]) || 0) | 0;
  }
  function yB(r, e) {
    return !r || r === "solid" || !(e > 0) ? null : r === "dashed" ? [4 * e, 2 * e] : r === "dotted" ? [e] : Ot(r) ? [r] : U(r) ? r : null;
  }
  function gg(r) {
    var e = r.style, t = e.lineDash && e.lineWidth > 0 && yB(e.lineDash, e.lineWidth), n = e.lineDashOffset;
    if (t) {
      var a = e.strokeNoScale && r.getLineScale ? r.getLineScale() : 1;
      a && a !== 1 && (t = Y(t, function(i) {
        return i / a;
      }), n /= a);
    }
    return [t, n];
  }
  var mB = new An(!0);
  function Nh(r) {
    var e = r.stroke;
    return !(e == null || e === "none" || !(r.lineWidth > 0));
  }
  function xb(r) {
    return typeof r == "string" && r !== "none";
  }
  function Vh(r) {
    var e = r.fill;
    return e != null && e !== "none";
  }
  function wb(r, e) {
    if (e.fillOpacity != null && e.fillOpacity !== 1) {
      var t = r.globalAlpha;
      r.globalAlpha = e.fillOpacity * e.opacity, r.fill(), r.globalAlpha = t;
    } else
      r.fill();
  }
  function bb(r, e) {
    if (e.strokeOpacity != null && e.strokeOpacity !== 1) {
      var t = r.globalAlpha;
      r.globalAlpha = e.strokeOpacity * e.opacity, r.stroke(), r.globalAlpha = t;
    } else
      r.stroke();
  }
  function yg(r, e, t) {
    var n = Wd(e.image, e.__image, t);
    if (Ff(n)) {
      var a = r.createPattern(n, e.repeat || "repeat");
      if (typeof DOMMatrix == "function" && a && a.setTransform) {
        var i = new DOMMatrix();
        i.translateSelf(e.x || 0, e.y || 0), i.rotateSelf(0, 0, (e.rotation || 0) * Ys), i.scaleSelf(e.scaleX || 1, e.scaleY || 1), a.setTransform(i);
      }
      return a;
    }
  }
  function _B(r, e, t, n) {
    var a, i = Nh(t), o = Vh(t), s = t.strokePercent, l = s < 1, u = !e.path;
    (!e.silent || l) && u && e.createPathProxy();
    var f = e.path || mB, h = e.__dirty;
    if (!n) {
      var c = t.fill, v = t.stroke, d = o && !!c.colorStops, p = i && !!v.colorStops, g = o && !!c.image, y = i && !!v.image, m = void 0, _ = void 0, S = void 0, b = void 0, w = void 0;
      (d || p) && (w = e.getBoundingRect()), d && (m = h ? pg(r, c, w) : e.__canvasFillGradient, e.__canvasFillGradient = m), p && (_ = h ? pg(r, v, w) : e.__canvasStrokeGradient, e.__canvasStrokeGradient = _), g && (S = h || !e.__canvasFillPattern ? yg(r, c, e) : e.__canvasFillPattern, e.__canvasFillPattern = S), y && (b = h || !e.__canvasStrokePattern ? yg(r, v, e) : e.__canvasStrokePattern, e.__canvasStrokePattern = S), d ? r.fillStyle = m : g && (S ? r.fillStyle = S : o = !1), p ? r.strokeStyle = _ : y && (b ? r.strokeStyle = b : i = !1);
    }
    var T = e.getGlobalScale();
    f.setScale(T[0], T[1], e.segmentIgnoreThreshold);
    var C, I;
    r.setLineDash && t.lineDash && (a = gg(e), C = a[0], I = a[1]);
    var L = !0;
    (u || h & To) && (f.setDPR(r.dpr), l ? f.setContext(null) : (f.setContext(r), L = !1), f.reset(), e.buildPath(f, e.shape, n), f.toStatic(), e.pathUpdated()), L && f.rebuildPath(r, l ? s : 1), C && (r.setLineDash(C), r.lineDashOffset = I), n || (t.strokeFirst ? (i && bb(r, t), o && wb(r, t)) : (o && wb(r, t), i && bb(r, t))), C && r.setLineDash([]);
  }
  function SB(r, e, t) {
    var n = e.__image = Wd(t.image, e.__image, e, e.onload);
    if (!(!n || !Ff(n))) {
      var a = t.x || 0, i = t.y || 0, o = e.getWidth(), s = e.getHeight(), l = n.width / n.height;
      if (o == null && s != null ? o = s * l : s == null && o != null ? s = o / l : o == null && s == null && (o = n.width, s = n.height), t.sWidth && t.sHeight) {
        var u = t.sx || 0, f = t.sy || 0;
        r.drawImage(n, u, f, t.sWidth, t.sHeight, a, i, o, s);
      } else if (t.sx && t.sy) {
        var u = t.sx, f = t.sy, h = o - u, c = s - f;
        r.drawImage(n, u, f, h, c, a, i, o, s);
      } else
        r.drawImage(n, a, i, o, s);
    }
  }
  function xB(r, e, t) {
    var n, a = t.text;
    if (a != null && (a += ""), a) {
      r.font = t.font || Et, r.textAlign = t.textAlign, r.textBaseline = t.textBaseline;
      var i = void 0, o = void 0;
      r.setLineDash && t.lineDash && (n = gg(e), i = n[0], o = n[1]), i && (r.setLineDash(i), r.lineDashOffset = o), t.strokeFirst ? (Nh(t) && r.strokeText(a, t.x, t.y), Vh(t) && r.fillText(a, t.x, t.y)) : (Vh(t) && r.fillText(a, t.x, t.y), Nh(t) && r.strokeText(a, t.x, t.y)), i && r.setLineDash([]);
    }
  }
  var Tb = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"], Cb = [
    ["lineCap", "butt"],
    ["lineJoin", "miter"],
    ["miterLimit", 10]
  ];
  function Ab(r, e, t, n, a) {
    var i = !1;
    if (!n && (t = t || {}, e === t))
      return !1;
    if (n || e.opacity !== t.opacity) {
      fr(r, a), i = !0;
      var o = Math.max(Math.min(e.opacity, 1), 0);
      r.globalAlpha = isNaN(o) ? Si.opacity : o;
    }
    (n || e.blend !== t.blend) && (i || (fr(r, a), i = !0), r.globalCompositeOperation = e.blend || Si.blend);
    for (var s = 0; s < Tb.length; s++) {
      var l = Tb[s];
      (n || e[l] !== t[l]) && (i || (fr(r, a), i = !0), r[l] = r.dpr * (e[l] || 0));
    }
    return (n || e.shadowColor !== t.shadowColor) && (i || (fr(r, a), i = !0), r.shadowColor = e.shadowColor || Si.shadowColor), i;
  }
  function Db(r, e, t, n, a) {
    var i = tu(e, a.inHover), o = n ? null : t && tu(t, a.inHover) || {};
    if (i === o)
      return !1;
    var s = Ab(r, i, o, n, a);
    if ((n || i.fill !== o.fill) && (s || (fr(r, a), s = !0), xb(i.fill) && (r.fillStyle = i.fill)), (n || i.stroke !== o.stroke) && (s || (fr(r, a), s = !0), xb(i.stroke) && (r.strokeStyle = i.stroke)), (n || i.opacity !== o.opacity) && (s || (fr(r, a), s = !0), r.globalAlpha = i.opacity == null ? 1 : i.opacity), e.hasStroke()) {
      var l = i.lineWidth, u = l / (i.strokeNoScale && e.getLineScale ? e.getLineScale() : 1);
      r.lineWidth !== u && (s || (fr(r, a), s = !0), r.lineWidth = u);
    }
    for (var f = 0; f < Cb.length; f++) {
      var h = Cb[f], c = h[0];
      (n || i[c] !== o[c]) && (s || (fr(r, a), s = !0), r[c] = i[c] || h[1]);
    }
    return s;
  }
  function wB(r, e, t, n, a) {
    return Ab(r, tu(e, a.inHover), t && tu(t, a.inHover), n, a);
  }
  function Mb(r, e) {
    var t = e.transform, n = r.dpr || 1;
    t ? r.setTransform(n * t[0], n * t[1], n * t[2], n * t[3], n * t[4], n * t[5]) : r.setTransform(n, 0, 0, n, 0, 0);
  }
  function bB(r, e, t) {
    for (var n = !1, a = 0; a < r.length; a++) {
      var i = r[a];
      n = n || i.isZeroArea(), Mb(e, i), e.beginPath(), i.buildPath(e, i.shape), e.clip();
    }
    t.allClipped = n;
  }
  function TB(r, e) {
    return r && e ? r[0] !== e[0] || r[1] !== e[1] || r[2] !== e[2] || r[3] !== e[3] || r[4] !== e[4] || r[5] !== e[5] : !(!r && !e);
  }
  var Ib = 1, Lb = 2, Pb = 3, Eb = 4;
  function CB(r) {
    var e = Vh(r), t = Nh(r);
    return !(r.lineDash || !(+e ^ +t) || e && typeof r.fill != "string" || t && typeof r.stroke != "string" || r.strokePercent < 1 || r.strokeOpacity < 1 || r.fillOpacity < 1);
  }
  function fr(r, e) {
    e.batchFill && r.fill(), e.batchStroke && r.stroke(), e.batchFill = "", e.batchStroke = "";
  }
  function tu(r, e) {
    return e && r.__hoverStyle || r.style;
  }
  function mg(r, e) {
    Ui(r, e, { inHover: !1, viewWidth: 0, viewHeight: 0 }, !0);
  }
  function Ui(r, e, t, n) {
    var a = e.transform;
    if (!e.shouldBePainted(t.viewWidth, t.viewHeight, !1, !1)) {
      e.__dirty &= ~pr, e.__isRendered = !1;
      return;
    }
    var i = e.__clipPaths, o = t.prevElClipPaths, s = !1, l = !1;
    if ((!o || gB(i, o)) && (o && o.length && (fr(r, t), r.restore(), l = s = !0, t.prevElClipPaths = null, t.allClipped = !1, t.prevEl = null), i && i.length && (fr(r, t), r.save(), bB(i, r, t), s = !0), t.prevElClipPaths = i), t.allClipped) {
      e.__isRendered = !1;
      return;
    }
    e.beforeBrush && e.beforeBrush(), e.innerBeforeBrush();
    var u = t.prevEl;
    u || (l = s = !0);
    var f = e instanceof Dt && e.autoBatch && CB(e.style);
    s || TB(a, u.transform) ? (fr(r, t), Mb(r, e)) : f || fr(r, t);
    var h = tu(e, t.inHover);
    e instanceof Dt ? (t.lastDrawType !== Ib && (l = !0, t.lastDrawType = Ib), Db(r, e, u, l, t), (!f || !t.batchFill && !t.batchStroke) && r.beginPath(), _B(r, e, h, f), f && (t.batchFill = h.fill || "", t.batchStroke = h.stroke || "")) : e instanceof ko ? (t.lastDrawType !== Pb && (l = !0, t.lastDrawType = Pb), Db(r, e, u, l, t), xB(r, e, h)) : e instanceof Te ? (t.lastDrawType !== Lb && (l = !0, t.lastDrawType = Lb), wB(r, e, u, l, t), SB(r, e, h)) : e.getTemporalDisplayables && (t.lastDrawType !== Eb && (l = !0, t.lastDrawType = Eb), AB(r, e, t)), f && n && fr(r, t), e.innerAfterBrush(), e.afterBrush && e.afterBrush(), t.prevEl = e, e.__dirty = 0, e.__isRendered = !0;
  }
  function AB(r, e, t) {
    var n = e.getDisplayables(), a = e.getTemporalDisplayables();
    r.save();
    var i = {
      prevElClipPaths: null,
      prevEl: null,
      allClipped: !1,
      viewWidth: t.viewWidth,
      viewHeight: t.viewHeight,
      inHover: t.inHover
    }, o, s;
    for (o = e.getCursor(), s = n.length; o < s; o++) {
      var l = n[o];
      l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Ui(r, l, i, o === s - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
    }
    for (var u = 0, f = a.length; u < f; u++) {
      var l = a[u];
      l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Ui(r, l, i, u === f - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
    }
    e.clearTemporalDisplayables(), e.notClear = !0, r.restore();
  }
  var _g = new iB(), Rb = new nl(100), kb = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
  function ls(r, e) {
    if (r === "none")
      return null;
    var t = e.getDevicePixelRatio(), n = e.getZr(), a = n.painter.type === "svg";
    r.dirty && _g.delete(r);
    var i = _g.get(r);
    if (i)
      return i;
    var o = ot(r, {
      symbol: "rect",
      symbolSize: 1,
      symbolKeepAspect: !0,
      color: "rgba(0, 0, 0, 0.2)",
      backgroundColor: null,
      dashArrayX: 5,
      dashArrayY: 5,
      rotation: 0,
      maxTileWidth: 512,
      maxTileHeight: 512
    });
    o.backgroundColor === "none" && (o.backgroundColor = null);
    var s = {
      repeat: "repeat"
    };
    return l(s), s.rotation = o.rotation, s.scaleX = s.scaleY = a ? 1 : 1 / t, _g.set(r, s), r.dirty = !1, s;
    function l(u) {
      for (var f = [t], h = !0, c = 0; c < kb.length; ++c) {
        var v = o[kb[c]];
        if (v != null && !U(v) && !j(v) && !Ot(v) && typeof v != "boolean") {
          h = !1;
          break;
        }
        f.push(v);
      }
      var d;
      if (h) {
        d = f.join(",") + (a ? "-svg" : "");
        var p = Rb.get(d);
        p && (a ? u.svgElement = p : u.image = p);
      }
      var g = Nb(o.dashArrayX), y = DB(o.dashArrayY), m = Ob(o.symbol), _ = MB(g), S = Vb(y), b = !a && qt.createCanvas(), w = a && {
        tag: "g",
        attrs: {},
        key: "dcl",
        children: []
      }, T = I(), C;
      b && (b.width = T.width * t, b.height = T.height * t, C = b.getContext("2d")), L(), h && Rb.put(d, b || w), u.image = b, u.svgElement = w, u.svgWidth = T.width, u.svgHeight = T.height;
      function I() {
        for (var P = 1, E = 0, R = _.length; E < R; ++E)
          P = q1(P, _[E]);
        for (var k = 1, E = 0, R = m.length; E < R; ++E)
          k = q1(k, m[E].length);
        P *= k;
        var O = S * _.length * m.length;
        {
          var N = function(F) {
            console.warn("Calculated decal size is greater than " + F + " due to decal option settings so " + F + " is used for the decal size. Please consider changing the decal option to make a smaller decal or set " + F + " to be larger to avoid incontinuity.");
          };
          P > o.maxTileWidth && N("maxTileWidth"), O > o.maxTileHeight && N("maxTileHeight");
        }
        return {
          width: Math.max(1, Math.min(P, o.maxTileWidth)),
          height: Math.max(1, Math.min(O, o.maxTileHeight))
        };
      }
      function L() {
        C && (C.clearRect(0, 0, b.width, b.height), o.backgroundColor && (C.fillStyle = o.backgroundColor, C.fillRect(0, 0, b.width, b.height)));
        for (var P = 0, E = 0; E < y.length; ++E)
          P += y[E];
        if (P <= 0)
          return;
        for (var R = -S, k = 0, O = 0, N = 0; R < T.height; ) {
          if (k % 2 === 0) {
            for (var F = O / 2 % m.length, G = 0, W = 0, X = 0; G < T.width * 2; ) {
              for (var K = 0, E = 0; E < g[N].length; ++E)
                K += g[N][E];
              if (K <= 0)
                break;
              if (W % 2 === 0) {
                var et = (1 - o.symbolSize) * 0.5, lt = G + g[N][W] * et, ft = R + y[k] * et, It = g[N][W] * o.symbolSize, zt = y[k] * o.symbolSize, Mt = X / 2 % m[F].length;
                dt(lt, ft, It, zt, m[F][Mt]);
              }
              G += g[N][W], ++X, ++W, W === g[N].length && (W = 0);
            }
            ++N, N === g.length && (N = 0);
          }
          R += y[k], ++O, ++k, k === y.length && (k = 0);
        }
        function dt(Lt, Tt, at, wt, re) {
          var Bt = a ? 1 : t, fe = ve(re, Lt * Bt, Tt * Bt, at * Bt, wt * Bt, o.color, o.symbolKeepAspect);
          if (a) {
            var se = n.painter.renderOneToVNode(fe);
            se && w.children.push(se);
          } else
            mg(C, fe);
        }
      }
    }
  }
  function Ob(r) {
    if (!r || r.length === 0)
      return [["rect"]];
    if (j(r))
      return [[r]];
    for (var e = !0, t = 0; t < r.length; ++t)
      if (!j(r[t])) {
        e = !1;
        break;
      }
    if (e)
      return Ob([r]);
    for (var n = [], t = 0; t < r.length; ++t)
      j(r[t]) ? n.push([r[t]]) : n.push(r[t]);
    return n;
  }
  function Nb(r) {
    if (!r || r.length === 0)
      return [[0, 0]];
    if (Ot(r)) {
      var e = Math.ceil(r);
      return [[e, e]];
    }
    for (var t = !0, n = 0; n < r.length; ++n)
      if (!Ot(r[n])) {
        t = !1;
        break;
      }
    if (t)
      return Nb([r]);
    for (var a = [], n = 0; n < r.length; ++n)
      if (Ot(r[n])) {
        var e = Math.ceil(r[n]);
        a.push([e, e]);
      } else {
        var e = Y(r[n], function(s) {
          return Math.ceil(s);
        });
        e.length % 2 === 1 ? a.push(e.concat(e)) : a.push(e);
      }
    return a;
  }
  function DB(r) {
    if (!r || typeof r == "object" && r.length === 0)
      return [0, 0];
    if (Ot(r)) {
      var e = Math.ceil(r);
      return [e, e];
    }
    var t = Y(r, function(n) {
      return Math.ceil(n);
    });
    return r.length % 2 ? t.concat(t) : t;
  }
  function MB(r) {
    return Y(r, function(e) {
      return Vb(e);
    });
  }
  function Vb(r) {
    for (var e = 0, t = 0; t < r.length; ++t)
      e += r[t];
    return r.length % 2 === 1 ? e * 2 : e;
  }
  function IB(r, e) {
    r.eachRawSeries(function(t) {
      if (!r.isSeriesFiltered(t)) {
        var n = t.getData();
        n.hasItemVisual() && n.each(function(o) {
          var s = n.getItemVisual(o, "decal");
          if (s) {
            var l = n.ensureUniqueItemVisual(o, "style");
            l.decal = ls(s, e);
          }
        });
        var a = n.getVisual("decal");
        if (a) {
          var i = n.getVisual("style");
          i.decal = ls(a, e);
        }
      }
    });
  }
  var sn = new Ir(), Bh = {};
  function LB(r, e) {
    Bh[r] && Ee("Already has an implementation of " + r + "."), Bh[r] = e;
  }
  function Bb(r) {
    return Bh[r] || Ee("Implementation of " + r + " doesn't exists."), Bh[r];
  }
  var PB = "5.4.1", EB = {
    zrender: "5.4.1"
  }, RB = 1, kB = 800, OB = 900, NB = 1e3, VB = 2e3, BB = 5e3, zb = 1e3, zB = 1100, Sg = 2e3, Gb = 3e3, GB = 4e3, zh = 4500, FB = 4600, HB = 5e3, WB = 6e3, Fb = 7e3, Hb = {
    PROCESSOR: {
      FILTER: NB,
      SERIES_FILTER: kB,
      STATISTIC: BB
    },
    VISUAL: {
      LAYOUT: zb,
      PROGRESSIVE_LAYOUT: zB,
      GLOBAL: Sg,
      CHART: Gb,
      POST_CHART_LAYOUT: FB,
      COMPONENT: GB,
      BRUSH: HB,
      CHART_ITEM: zh,
      ARIA: WB,
      DECAL: Fb
    }
  }, We = "__flagInMainProcess", hr = "__pendingUpdate", xg = "__needsUpdateStatus", Wb = /^[a-zA-Z0-9_]+$/, wg = "__connectUpdateStatus", Ub = 0, UB = 1, YB = 2;
  function Yb(r) {
    return function() {
      for (var e = [], t = 0; t < arguments.length; t++)
        e[t] = arguments[t];
      if (this.isDisposed()) {
        Sr(this.id);
        return;
      }
      return Xb(this, r, e);
    };
  }
  function $b(r) {
    return function() {
      for (var e = [], t = 0; t < arguments.length; t++)
        e[t] = arguments[t];
      return Xb(this, r, e);
    };
  }
  function Xb(r, e, t) {
    return t[0] = t[0] && t[0].toLowerCase(), Ir.prototype[e].apply(r, t);
  }
  var Zb = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e;
    }(Ir)
  ), qb = Zb.prototype;
  qb.on = $b("on"), qb.off = $b("off");
  var us, bg, Gh, Na, Tg, Cg, Ag, eu, ru, Kb, jb, Dg, Jb, Fh, Qb, tT, Wr, eT, Hh = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this, new QV()) || this;
        i._chartsViews = [], i._chartsMap = {}, i._componentsViews = [], i._componentsMap = {}, i._pendingActions = [], a = a || {}, j(n) && (n = rT[n]), i._dom = t;
        var o = "canvas", s = "auto", l = !1;
        {
          var u = (
            /* eslint-disable-next-line */
            z.hasGlobalWindow ? window : global
          );
          o = u.__ECHARTS__DEFAULT__RENDERER__ || o, s = _t(u.__ECHARTS__DEFAULT__COARSE_POINTER, s);
          var f = u.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;
          l = f ?? l;
        }
        var h = i._zr = Ed(t, {
          renderer: a.renderer || o,
          devicePixelRatio: a.devicePixelRatio,
          width: a.width,
          height: a.height,
          ssr: a.ssr,
          useDirtyRect: _t(a.useDirtyRect, l),
          useCoarsePointer: _t(a.useCoarsePointer, s),
          pointerSize: a.pointerSize
        });
        i._ssr = a.ssr, i._throttledZrFlush = Lh(J(h.flush, h), 17), n = ht(n), n && mw(n, !0), i._theme = n, i._locale = sN(a.locale || Nx), i._coordSysMgr = new Bi();
        var c = i._api = Qb(i);
        function v(d, p) {
          return d.__prio - p.__prio;
        }
        return gf(Uh, v), gf(Ig, v), i._scheduler = new fb(i, c, Ig, Uh), i._messageCenter = new Zb(), i._initEvents(), i.resize = J(i.resize, i), h.animation.on("frame", i._onframe, i), Kb(h, i), jb(h, i), Hs(i), i;
      }
      return e.prototype._onframe = function() {
        if (!this._disposed) {
          eT(this);
          var t = this._scheduler;
          if (this[hr]) {
            var n = this[hr].silent;
            this[We] = !0;
            try {
              us(this), Na.update.call(this, null, this[hr].updateParams);
            } catch (l) {
              throw this[We] = !1, this[hr] = null, l;
            }
            this._zr.flush(), this[We] = !1, this[hr] = null, eu.call(this, n), ru.call(this, n);
          } else if (t.unfinished) {
            var a = RB, i = this._model, o = this._api;
            t.unfinished = !1;
            do {
              var s = +/* @__PURE__ */ new Date();
              t.performSeriesTasks(i), t.performDataProcessorTasks(i), Cg(this, i), t.performVisualTasks(i), Fh(this, this._model, o, "remain", {}), a -= +/* @__PURE__ */ new Date() - s;
            } while (a > 0 && t.unfinished);
            t.unfinished || this._zr.flush();
          }
        }
      }, e.prototype.getDom = function() {
        return this._dom;
      }, e.prototype.getId = function() {
        return this.id;
      }, e.prototype.getZr = function() {
        return this._zr;
      }, e.prototype.isSSR = function() {
        return this._ssr;
      }, e.prototype.setOption = function(t, n, a) {
        if (this[We]) {
          Ee("`setOption` should not be called during main process.");
          return;
        }
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        var i, o, s;
        if (it(n) && (a = n.lazyUpdate, i = n.silent, o = n.replaceMerge, s = n.transition, n = n.notMerge), this[We] = !0, !this._model || n) {
          var l = new NN(this._api), u = this._theme, f = this._model = new Kp();
          f.scheduler = this._scheduler, f.ssr = this._ssr, f.init(null, null, null, u, this._locale, l);
        }
        this._model.setOption(t, {
          replaceMerge: o
        }, Lg);
        var h = {
          seriesTransition: s,
          optionChanged: !0
        };
        if (a)
          this[hr] = {
            silent: i,
            updateParams: h
          }, this[We] = !1, this.getZr().wakeUp();
        else {
          try {
            us(this), Na.update.call(this, null, h);
          } catch (c) {
            throw this[hr] = null, this[We] = !1, c;
          }
          this._ssr || this._zr.flush(), this[hr] = null, this[We] = !1, eu.call(this, i), ru.call(this, i);
        }
      }, e.prototype.setTheme = function() {
        Rr("ECharts#setTheme() is DEPRECATED in ECharts 3.0");
      }, e.prototype.getModel = function() {
        return this._model;
      }, e.prototype.getOption = function() {
        return this._model && this._model.getOption();
      }, e.prototype.getWidth = function() {
        return this._zr.getWidth();
      }, e.prototype.getHeight = function() {
        return this._zr.getHeight();
      }, e.prototype.getDevicePixelRatio = function() {
        return this._zr.painter.dpr || z.hasGlobalWindow && window.devicePixelRatio || 1;
      }, e.prototype.getRenderedCanvas = function(t) {
        return ce("getRenderedCanvas", "renderToCanvas"), this.renderToCanvas(t);
      }, e.prototype.renderToCanvas = function(t) {
        t = t || {};
        var n = this._zr.painter;
        if (n.type !== "canvas")
          throw new Error("renderToCanvas can only be used in the canvas renderer.");
        return n.getRenderedCanvas({
          backgroundColor: t.backgroundColor || this._model.get("backgroundColor"),
          pixelRatio: t.pixelRatio || this.getDevicePixelRatio()
        });
      }, e.prototype.renderToSVGString = function(t) {
        t = t || {};
        var n = this._zr.painter;
        if (n.type !== "svg")
          throw new Error("renderToSVGString can only be used in the svg renderer.");
        return n.renderToString({
          useViewBox: t.useViewBox
        });
      }, e.prototype.getSvgDataURL = function() {
        if (z.svgSupported) {
          var t = this._zr, n = t.storage.getDisplayList();
          return M(n, function(a) {
            a.stopAnimation(null, !0);
          }), t.painter.toDataURL();
        }
      }, e.prototype.getDataURL = function(t) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        t = t || {};
        var n = t.excludeComponents, a = this._model, i = [], o = this;
        M(n, function(l) {
          a.eachComponent({
            mainType: l
          }, function(u) {
            var f = o._componentsMap[u.__viewId];
            f.group.ignore || (i.push(f), f.group.ignore = !0);
          });
        });
        var s = this._zr.painter.getType() === "svg" ? this.getSvgDataURL() : this.renderToCanvas(t).toDataURL("image/" + (t && t.type || "png"));
        return M(i, function(l) {
          l.group.ignore = !1;
        }), s;
      }, e.prototype.getConnectedDataURL = function(t) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        var n = t.type === "svg", a = this.group, i = Math.min, o = Math.max, s = 1 / 0;
        if (Yh[a]) {
          var l = s, u = s, f = -s, h = -s, c = [], v = t && t.pixelRatio || this.getDevicePixelRatio();
          M(Yi, function(_, S) {
            if (_.group === a) {
              var b = n ? _.getZr().painter.getSvgDom().innerHTML : _.renderToCanvas(ht(t)), w = _.getDom().getBoundingClientRect();
              l = i(w.left, l), u = i(w.top, u), f = o(w.right, f), h = o(w.bottom, h), c.push({
                dom: b,
                left: w.left,
                top: w.top
              });
            }
          }), l *= v, u *= v, f *= v, h *= v;
          var d = f - l, p = h - u, g = qt.createCanvas(), y = Ed(g, {
            renderer: n ? "svg" : "canvas"
          });
          if (y.resize({
            width: d,
            height: p
          }), n) {
            var m = "";
            return M(c, function(_) {
              var S = _.left - l, b = _.top - u;
              m += '<g transform="translate(' + S + "," + b + ')">' + _.dom + "</g>";
            }), y.painter.getSvgRoot().innerHTML = m, t.connectedBackgroundColor && y.painter.setBackgroundColor(t.connectedBackgroundColor), y.refreshImmediately(), y.painter.toDataURL();
          } else
            return t.connectedBackgroundColor && y.add(new Rt({
              shape: {
                x: 0,
                y: 0,
                width: d,
                height: p
              },
              style: {
                fill: t.connectedBackgroundColor
              }
            })), M(c, function(_) {
              var S = new Te({
                style: {
                  x: _.left * v - l,
                  y: _.top * v - u,
                  image: _.dom
                }
              });
              y.add(S);
            }), y.refreshImmediately(), g.toDataURL("image/" + (t && t.type || "png"));
        } else
          return this.getDataURL(t);
      }, e.prototype.convertToPixel = function(t, n) {
        return Tg(this, "convertToPixel", t, n);
      }, e.prototype.convertFromPixel = function(t, n) {
        return Tg(this, "convertFromPixel", t, n);
      }, e.prototype.containPixel = function(t, n) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        var a = this._model, i, o = ml(a, t);
        return M(o, function(s, l) {
          l.indexOf("Models") >= 0 && M(s, function(u) {
            var f = u.coordinateSystem;
            if (f && f.containPoint)
              i = i || !!f.containPoint(n);
            else if (l === "seriesModels") {
              var h = this._chartsMap[u.__viewId];
              h && h.containPoint ? i = i || h.containPoint(n, u) : ae(l + ": " + (h ? "The found component do not support containPoint." : "No view mapping to the found component."));
            } else
              ae(l + ": containPoint is not supported");
          }, this);
        }, this), !!i;
      }, e.prototype.getVisual = function(t, n) {
        var a = this._model, i = ml(a, t, {
          defaultMainType: "series"
        }), o = i.seriesModel;
        o || ae("There is no specified series model");
        var s = o.getData(), l = i.hasOwnProperty("dataIndexInside") ? i.dataIndexInside : i.hasOwnProperty("dataIndex") ? s.indexOfRawIndex(i.dataIndex) : null;
        return l != null ? dg(s, l, n) : Jl(s, n);
      }, e.prototype.getViewOfComponentModel = function(t) {
        return this._componentsMap[t.__viewId];
      }, e.prototype.getViewOfSeriesModel = function(t) {
        return this._chartsMap[t.__viewId];
      }, e.prototype._initEvents = function() {
        var t = this;
        M($B, function(n) {
          var a = function(i) {
            var o = t.getModel(), s = i.target, l, u = n === "globalout";
            if (u ? l = {} : s && Hi(s, function(d) {
              var p = gt(d);
              if (p && p.dataIndex != null) {
                var g = p.dataModel || o.getSeriesByIndex(p.seriesIndex);
                return l = g && g.getDataParams(p.dataIndex, p.dataType) || {}, !0;
              } else if (p.eventData)
                return l = H({}, p.eventData), !0;
            }, !0), l) {
              var f = l.componentType, h = l.componentIndex;
              (f === "markLine" || f === "markPoint" || f === "markArea") && (f = "series", h = l.seriesIndex);
              var c = f && h != null && o.getComponent(f, h), v = c && t[c.mainType === "series" ? "_chartsMap" : "_componentsMap"][c.__viewId];
              !u && !(c && v) && ae("model or view can not be found by params"), l.event = i, l.type = n, t._$eventProcessor.eventInfo = {
                targetEl: s,
                packedEvent: l,
                model: c,
                view: v
              }, t.trigger(n, l);
            }
          };
          a.zrEventfulCallAtLast = !0, t._zr.on(n, a, t);
        }), M(nu, function(n, a) {
          t._messageCenter.on(a, function(i) {
            this.trigger(a, i);
          }, t);
        }), M(["selectchanged"], function(n) {
          t._messageCenter.on(n, function(a) {
            this.trigger(n, a);
          }, t);
        }), rB(this._messageCenter, this, this._api);
      }, e.prototype.isDisposed = function() {
        return this._disposed;
      }, e.prototype.clear = function() {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        this.setOption({
          series: []
        }, !0);
      }, e.prototype.dispose = function() {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        this._disposed = !0;
        var t = this.getDom();
        t && iS(this.getDom(), Eg, "");
        var n = this, a = n._api, i = n._model;
        M(n._componentsViews, function(o) {
          o.dispose(i, a);
        }), M(n._chartsViews, function(o) {
          o.dispose(i, a);
        }), n._zr.dispose(), n._dom = n._model = n._chartsMap = n._componentsMap = n._chartsViews = n._componentsViews = n._scheduler = n._api = n._zr = n._throttledZrFlush = n._theme = n._coordSysMgr = n._messageCenter = null, delete Yi[n.id];
      }, e.prototype.resize = function(t) {
        if (this[We]) {
          Ee("`resize` should not be called during main process.");
          return;
        }
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        this._zr.resize(t);
        var n = this._model;
        if (this._loadingFX && this._loadingFX.resize(), !!n) {
          var a = n.resetOption("media"), i = t && t.silent;
          this[hr] && (i == null && (i = this[hr].silent), a = !0, this[hr] = null), this[We] = !0;
          try {
            a && us(this), Na.update.call(this, {
              type: "resize",
              animation: H({
                // Disable animation
                duration: 0
              }, t && t.animation)
            });
          } catch (o) {
            throw this[We] = !1, o;
          }
          this[We] = !1, eu.call(this, i), ru.call(this, i);
        }
      }, e.prototype.showLoading = function(t, n) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        if (it(t) && (n = t, t = ""), t = t || "default", this.hideLoading(), !Pg[t]) {
          ae("Loading effects " + t + " not exists.");
          return;
        }
        var a = Pg[t](this._api, n), i = this._zr;
        this._loadingFX = a, i.add(a);
      }, e.prototype.hideLoading = function() {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null;
      }, e.prototype.makeActionFromEvent = function(t) {
        var n = H({}, t);
        return n.type = nu[t.type], n;
      }, e.prototype.dispatchAction = function(t, n) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        if (it(n) || (n = {
          silent: !!n
        }), !!Wh[t.type] && this._model) {
          if (this[We]) {
            this._pendingActions.push(t);
            return;
          }
          var a = n.silent;
          Ag.call(this, t, a);
          var i = n.flush;
          i ? this._zr.flush() : i !== !1 && z.browser.weChat && this._throttledZrFlush(), eu.call(this, a), ru.call(this, a);
        }
      }, e.prototype.updateLabelLayout = function() {
        sn.trigger("series:layoutlabels", this._model, this._api, {
          // Not adding series labels.
          // TODO
          updatedSeries: []
        });
      }, e.prototype.appendData = function(t) {
        if (this._disposed) {
          Sr(this.id);
          return;
        }
        var n = t.seriesIndex, a = this.getModel(), i = a.getSeriesByIndex(n);
        st(t.data && i), i.appendData(t), this._scheduler.unfinished = !0, this.getZr().wakeUp();
      }, e.internalField = function() {
        us = function(h) {
          var c = h._scheduler;
          c.restorePipelines(h._model), c.prepareStageTasks(), bg(h, !0), bg(h, !1), c.plan();
        }, bg = function(h, c) {
          for (var v = h._model, d = h._scheduler, p = c ? h._componentsViews : h._chartsViews, g = c ? h._componentsMap : h._chartsMap, y = h._zr, m = h._api, _ = 0; _ < p.length; _++)
            p[_].__alive = !1;
          c ? v.eachComponent(function(w, T) {
            w !== "series" && S(T);
          }) : v.eachSeries(S);
          function S(w) {
            var T = w.__requireNewView;
            w.__requireNewView = !1;
            var C = "_ec_" + w.id + "_" + w.type, I = !T && g[C];
            if (!I) {
              var L = wn(w.type), P = c ? Jt.getClass(L.main, L.sub) : (
                // FIXME:TS
                // (ChartView as ChartViewConstructor).getClass('series', classType.sub)
                // For backward compat, still support a chart type declared as only subType
                // like "liquidfill", but recommend "series.liquidfill"
                // But need a base class to make a type series.
                $t.getClass(L.sub)
              );
              st(P, L.sub + " does not exist."), I = new P(), I.init(v, m), g[C] = I, p.push(I), y.add(I.group);
            }
            w.__viewId = I.__id = C, I.__alive = !0, I.__model = w, I.group.__ecComponentInfo = {
              mainType: w.mainType,
              index: w.componentIndex
            }, !c && d.prepareView(I, w, v, m);
          }
          for (var _ = 0; _ < p.length; ) {
            var b = p[_];
            b.__alive ? _++ : (!c && b.renderTask.dispose(), y.remove(b.group), b.dispose(v, m), p.splice(_, 1), g[b.__id] === b && delete g[b.__id], b.__id = b.group.__ecComponentInfo = null);
          }
        }, Gh = function(h, c, v, d, p) {
          var g = h._model;
          if (g.setUpdatePayload(v), !d) {
            M([].concat(h._componentsViews).concat(h._chartsViews), b);
            return;
          }
          var y = {};
          y[d + "Id"] = v[d + "Id"], y[d + "Index"] = v[d + "Index"], y[d + "Name"] = v[d + "Name"];
          var m = {
            mainType: d,
            query: y
          };
          p && (m.subType = p);
          var _ = v.excludeSeriesId, S;
          _ != null && (S = nt(), M(Xt(_), function(w) {
            var T = _e(w, null);
            T != null && S.set(T, !0);
          })), g && g.eachComponent(m, function(w) {
            var T = S && S.get(w.id) != null;
            if (!T)
              if (tx(v))
                if (w instanceof Zt)
                  v.type === Mi && !v.notBlur && !w.get(["emphasis", "disabled"]) && fO(w, v, h._api);
                else {
                  var C = cp(w.mainType, w.componentIndex, v.name, h._api), I = C.focusSelf, L = C.dispatchers;
                  v.type === Mi && I && !v.notBlur && hp(w.mainType, w.componentIndex, h._api), L && M(L, function(P) {
                    v.type === Mi ? jn(P) : Jn(P);
                  });
                }
              else
                dp(v) && w instanceof Zt && (vO(w, v, h._api), JS(w), Wr(h));
          }, h), g && g.eachComponent(m, function(w) {
            var T = S && S.get(w.id) != null;
            T || b(h[d === "series" ? "_chartsMap" : "_componentsMap"][w.__viewId]);
          }, h);
          function b(w) {
            w && w.__alive && w[c] && w[c](w.__model, g, h._api, v);
          }
        }, Na = {
          prepareAndUpdate: function(h) {
            us(this), Na.update.call(this, h, {
              // Needs to mark option changed if newOption is given.
              // It's from MagicType.
              // TODO If use a separate flag optionChanged in payload?
              optionChanged: h.newOption != null
            });
          },
          update: function(h, c) {
            var v = this._model, d = this._api, p = this._zr, g = this._coordSysMgr, y = this._scheduler;
            if (v) {
              v.setUpdatePayload(h), y.restoreData(v, h), y.performSeriesTasks(v), g.create(v, d), y.performDataProcessorTasks(v, h), Cg(this, v), g.update(v, d), t(v), y.performVisualTasks(v, h), Dg(this, v, d, h, c);
              var m = v.get("backgroundColor") || "transparent", _ = v.get("darkMode");
              p.setBackgroundColor(m), _ != null && _ !== "auto" && p.setDarkMode(_), sn.trigger("afterupdate", v, d);
            }
          },
          updateTransform: function(h) {
            var c = this, v = this._model, d = this._api;
            if (v) {
              v.setUpdatePayload(h);
              var p = [];
              v.eachComponent(function(y, m) {
                if (y !== "series") {
                  var _ = c.getViewOfComponentModel(m);
                  if (_ && _.__alive)
                    if (_.updateTransform) {
                      var S = _.updateTransform(m, v, d, h);
                      S && S.update && p.push(_);
                    } else
                      p.push(_);
                }
              });
              var g = nt();
              v.eachSeries(function(y) {
                var m = c._chartsMap[y.__viewId];
                if (m.updateTransform) {
                  var _ = m.updateTransform(y, v, d, h);
                  _ && _.update && g.set(y.uid, 1);
                } else
                  g.set(y.uid, 1);
              }), t(v), this._scheduler.performVisualTasks(v, h, {
                setDirty: !0,
                dirtyMap: g
              }), Fh(this, v, d, h, {}, g), sn.trigger("afterupdate", v, d);
            }
          },
          updateView: function(h) {
            var c = this._model;
            c && (c.setUpdatePayload(h), $t.markUpdateMethod(h, "updateView"), t(c), this._scheduler.performVisualTasks(c, h, {
              setDirty: !0
            }), Dg(this, c, this._api, h, {}), sn.trigger("afterupdate", c, this._api));
          },
          updateVisual: function(h) {
            var c = this, v = this._model;
            v && (v.setUpdatePayload(h), v.eachSeries(function(d) {
              d.getData().clearAllVisual();
            }), $t.markUpdateMethod(h, "updateVisual"), t(v), this._scheduler.performVisualTasks(v, h, {
              visualType: "visual",
              setDirty: !0
            }), v.eachComponent(function(d, p) {
              if (d !== "series") {
                var g = c.getViewOfComponentModel(p);
                g && g.__alive && g.updateVisual(p, v, c._api, h);
              }
            }), v.eachSeries(function(d) {
              var p = c._chartsMap[d.__viewId];
              p.updateVisual(d, v, c._api, h);
            }), sn.trigger("afterupdate", v, this._api));
          },
          updateLayout: function(h) {
            Na.update.call(this, h);
          }
        }, Tg = function(h, c, v, d) {
          if (h._disposed) {
            Sr(h.id);
            return;
          }
          for (var p = h._model, g = h._coordSysMgr.getCoordinateSystems(), y, m = ml(p, v), _ = 0; _ < g.length; _++) {
            var S = g[_];
            if (S[c] && (y = S[c](p, m, d)) != null)
              return y;
          }
          ae("No coordinate system that supports " + c + " found by the given finder.");
        }, Cg = function(h, c) {
          var v = h._chartsMap, d = h._scheduler;
          c.eachSeries(function(p) {
            d.updateStreamModes(p, v[p.__viewId]);
          });
        }, Ag = function(h, c) {
          var v = this, d = this.getModel(), p = h.type, g = h.escapeConnect, y = Wh[p], m = y.actionInfo, _ = (m.update || "update").split(":"), S = _.pop(), b = _[0] != null && wn(_[0]);
          this[We] = !0;
          var w = [h], T = !1;
          h.batch && (T = !0, w = Y(h.batch, function(k) {
            return k = ot(H({}, k), h), k.batch = null, k;
          }));
          var C = [], I, L = dp(h), P = tx(h);
          if (P && jS(this._api), M(w, function(k) {
            if (I = y.action(k, v._model, v._api), I = I || H({}, k), I.type = m.event || I.type, C.push(I), P) {
              var O = zd(h), N = O.queryOptionMap, F = O.mainTypeSpecified, G = F ? N.keys()[0] : "series";
              Gh(v, S, k, G), Wr(v);
            } else
              L ? (Gh(v, S, k, "series"), Wr(v)) : b && Gh(v, S, k, b.main, b.sub);
          }), S !== "none" && !P && !L && !b)
            try {
              this[hr] ? (us(this), Na.update.call(this, h), this[hr] = null) : Na[S].call(this, h);
            } catch (k) {
              throw this[We] = !1, k;
            }
          if (T ? I = {
            type: m.event || p,
            escapeConnect: g,
            batch: C
          } : I = C[0], this[We] = !1, !c) {
            var E = this._messageCenter;
            if (E.trigger(I.type, I), L) {
              var R = {
                type: "selectchanged",
                escapeConnect: g,
                selected: dO(d),
                isFromClick: h.isFromClick || !1,
                fromAction: h.type,
                fromActionPayload: h
              };
              E.trigger(R.type, R);
            }
          }
        }, eu = function(h) {
          for (var c = this._pendingActions; c.length; ) {
            var v = c.shift();
            Ag.call(this, v, h);
          }
        }, ru = function(h) {
          !h && this.trigger("updated");
        }, Kb = function(h, c) {
          h.on("rendered", function(v) {
            c.trigger("rendered", v), // Although zr is dirty if initial animation is not finished
            // and this checking is called on frame, we also check
            // animation finished for robustness.
            h.animation.isFinished() && !c[hr] && !c._scheduler.unfinished && !c._pendingActions.length && c.trigger("finished");
          });
        }, jb = function(h, c) {
          h.on("mouseover", function(v) {
            var d = v.target, p = Hi(d, Ma);
            p && (hO(p, v, c._api), Wr(c));
          }).on("mouseout", function(v) {
            var d = v.target, p = Hi(d, Ma);
            p && (cO(p, v, c._api), Wr(c));
          }).on("click", function(v) {
            var d = v.target, p = Hi(d, function(m) {
              return gt(m).dataIndex != null;
            }, !0);
            if (p) {
              var g = p.selected ? "unselect" : "select", y = gt(p);
              c._api.dispatchAction({
                type: g,
                dataType: y.dataType,
                dataIndexInside: y.dataIndex,
                seriesIndex: y.seriesIndex,
                isFromClick: !0
              });
            }
          });
        };
        function t(h) {
          h.clearColorPalette(), h.eachSeries(function(c) {
            c.clearColorPalette();
          });
        }
        function n(h) {
          var c = [], v = [], d = !1;
          if (h.eachComponent(function(m, _) {
            var S = _.get("zlevel") || 0, b = _.get("z") || 0, w = _.getZLevelKey();
            d = d || !!w, (m === "series" ? v : c).push({
              zlevel: S,
              z: b,
              idx: _.componentIndex,
              type: m,
              key: w
            });
          }), d) {
            var p = c.concat(v), g, y;
            gf(p, function(m, _) {
              return m.zlevel === _.zlevel ? m.z - _.z : m.zlevel - _.zlevel;
            }), M(p, function(m) {
              var _ = h.getComponent(m.type, m.idx), S = m.zlevel, b = m.key;
              g != null && (S = Math.max(g, S)), b ? (S === g && b !== y && S++, y = b) : y && (S === g && S++, y = ""), g = S, _.setZLevel(S);
            });
          }
        }
        Dg = function(h, c, v, d, p) {
          n(c), Jb(h, c, v, d, p), M(h._chartsViews, function(g) {
            g.__alive = !1;
          }), Fh(h, c, v, d, p), M(h._chartsViews, function(g) {
            g.__alive || g.remove(c, v);
          });
        }, Jb = function(h, c, v, d, p, g) {
          M(g || h._componentsViews, function(y) {
            var m = y.__model;
            u(m, y), y.render(m, c, v, d), s(m, y), f(m, y);
          });
        }, Fh = function(h, c, v, d, p, g) {
          var y = h._scheduler;
          p = H(p || {}, {
            updatedSeries: c.getSeries()
          }), sn.trigger("series:beforeupdate", c, v, p);
          var m = !1;
          c.eachSeries(function(_) {
            var S = h._chartsMap[_.__viewId];
            S.__alive = !0;
            var b = S.renderTask;
            y.updatePayload(b, d), u(_, S), g && g.get(_.uid) && b.dirty(), b.perform(y.getPerformArgs(b)) && (m = !0), S.group.silent = !!_.get("silent"), o(_, S), JS(_);
          }), y.unfinished = m || y.unfinished, sn.trigger("series:layoutlabels", c, v, p), sn.trigger("series:transition", c, v, p), c.eachSeries(function(_) {
            var S = h._chartsMap[_.__viewId];
            s(_, S), f(_, S);
          }), i(h, c), sn.trigger("series:afterupdate", c, v, p);
        }, Wr = function(h) {
          h[xg] = !0, h.getZr().wakeUp();
        }, eT = function(h) {
          h[xg] && (h.getZr().storage.traverse(function(c) {
            Uo(c) || a(c);
          }), h[xg] = !1);
        };
        function a(h) {
          for (var c = [], v = h.currentStates, d = 0; d < v.length; d++) {
            var p = v[d];
            p === "emphasis" || p === "blur" || p === "select" || c.push(p);
          }
          h.selected && h.states.select && c.push("select"), h.hoverState === Zf && h.states.emphasis ? c.push("emphasis") : h.hoverState === wl && h.states.blur && c.push("blur"), h.useStates(c);
        }
        function i(h, c) {
          var v = h._zr, d = v.storage, p = 0;
          d.traverse(function(g) {
            g.isGroup || p++;
          }), p > c.get("hoverLayerThreshold") && !z.node && !z.worker && c.eachSeries(function(g) {
            if (!g.preventUsingHoverLayer) {
              var y = h._chartsMap[g.__viewId];
              y.__alive && y.eachRendered(function(m) {
                m.states.emphasis && (m.states.emphasis.hoverLayer = !0);
              });
            }
          });
        }
        function o(h, c) {
          var v = h.get("blendMode") || null;
          c.eachRendered(function(d) {
            d.isGroup || (d.style.blend = v);
          });
        }
        function s(h, c) {
          if (!h.preventAutoZ) {
            var v = h.get("z") || 0, d = h.get("zlevel") || 0;
            c.eachRendered(function(p) {
              return l(p, v, d, -1 / 0), !0;
            });
          }
        }
        function l(h, c, v, d) {
          var p = h.getTextContent(), g = h.getTextGuideLine(), y = h.isGroup;
          if (y)
            for (var m = h.childrenRef(), _ = 0; _ < m.length; _++)
              d = Math.max(l(m[_], c, v, d), d);
          else
            h.z = c, h.zlevel = v, d = Math.max(h.z2, d);
          if (p && (p.z = c, p.zlevel = v, isFinite(d) && (p.z2 = d + 2)), g) {
            var S = h.textGuideLineConfig;
            g.z = c, g.zlevel = v, isFinite(d) && (g.z2 = d + (S && S.showAbove ? 1 : -1));
          }
          return d;
        }
        function u(h, c) {
          c.eachRendered(function(v) {
            if (!Uo(v)) {
              var d = v.getTextContent(), p = v.getTextGuideLine();
              v.stateTransition && (v.stateTransition = null), d && d.stateTransition && (d.stateTransition = null), p && p.stateTransition && (p.stateTransition = null), v.hasState() ? (v.prevStates = v.currentStates, v.clearStates()) : v.prevStates && (v.prevStates = null);
            }
          });
        }
        function f(h, c) {
          var v = h.getModel("stateAnimation"), d = h.isAnimationEnabled(), p = v.get("duration"), g = p > 0 ? {
            duration: p,
            delay: v.get("delay"),
            easing: v.get("easing")
            // additive: stateAnimationModel.get('additive')
          } : null;
          c.eachRendered(function(y) {
            if (y.states && y.states.emphasis) {
              if (Uo(y))
                return;
              if (y instanceof Dt && _O(y), y.__dirty) {
                var m = y.prevStates;
                m && y.useStates(m);
              }
              if (d) {
                y.stateTransition = g;
                var _ = y.getTextContent(), S = y.getTextGuideLine();
                _ && (_.stateTransition = g), S && (S.stateTransition = g);
              }
              y.__dirty && a(y);
            }
          });
        }
        Qb = function(h) {
          return new /** @class */
          (function(c) {
            A(v, c);
            function v() {
              return c !== null && c.apply(this, arguments) || this;
            }
            return v.prototype.getCoordinateSystems = function() {
              return h._coordSysMgr.getCoordinateSystems();
            }, v.prototype.getComponentByElement = function(d) {
              for (; d; ) {
                var p = d.__ecComponentInfo;
                if (p != null)
                  return h._model.getComponent(p.mainType, p.index);
                d = d.parent;
              }
            }, v.prototype.enterEmphasis = function(d, p) {
              jn(d, p), Wr(h);
            }, v.prototype.leaveEmphasis = function(d, p) {
              Jn(d, p), Wr(h);
            }, v.prototype.enterBlur = function(d) {
              XS(d), Wr(h);
            }, v.prototype.leaveBlur = function(d) {
              up(d), Wr(h);
            }, v.prototype.enterSelect = function(d) {
              ZS(d), Wr(h);
            }, v.prototype.leaveSelect = function(d) {
              qS(d), Wr(h);
            }, v.prototype.getModel = function() {
              return h.getModel();
            }, v.prototype.getViewOfComponentModel = function(d) {
              return h.getViewOfComponentModel(d);
            }, v.prototype.getViewOfSeriesModel = function(d) {
              return h.getViewOfSeriesModel(d);
            }, v;
          }(hw))(h);
        }, tT = function(h) {
          function c(v, d) {
            for (var p = 0; p < v.length; p++) {
              var g = v[p];
              g[wg] = d;
            }
          }
          M(nu, function(v, d) {
            h._messageCenter.on(d, function(p) {
              if (Yh[h.group] && h[wg] !== Ub) {
                if (p && p.escapeConnect)
                  return;
                var g = h.makeActionFromEvent(p), y = [];
                M(Yi, function(m) {
                  m !== h && m.group === h.group && y.push(m);
                }), c(y, Ub), M(y, function(m) {
                  m[wg] !== UB && m.dispatchAction(g);
                }), c(y, YB);
              }
            });
          });
        };
      }(), e;
    }(Ir)
  ), Mg = Hh.prototype;
  Mg.on = Yb("on"), Mg.off = Yb("off"), Mg.one = function(r, e, t) {
    var n = this;
    Rr("ECharts#one is deprecated.");
    function a() {
      for (var i = [], o = 0; o < arguments.length; o++)
        i[o] = arguments[o];
      e && e.apply && e.apply(this, i), n.off(r, a);
    }
    this.on.call(this, r, a, t);
  };
  var $B = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
  function Sr(r) {
    ae("Instance " + r + " has been disposed");
  }
  var Wh = {}, nu = {}, Ig = [], Lg = [], Uh = [], rT = {}, Pg = {}, Yi = {}, Yh = {}, XB = +/* @__PURE__ */ new Date() - 0, ZB = +/* @__PURE__ */ new Date() - 0, Eg = "_echarts_instance_";
  function qB(r, e, t) {
    var n = !(t && t.ssr);
    if (n) {
      if (!r)
        throw new Error("Initialize failed: invalid dom.");
      var a = Rg(r);
      if (a)
        return ae("There is a chart instance already initialized on the dom."), a;
      ii(r) && r.nodeName.toUpperCase() !== "CANVAS" && (!r.clientWidth && (!t || t.width == null) || !r.clientHeight && (!t || t.height == null)) && ae("Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.");
    }
    var i = new Hh(r, e, t);
    return i.id = "ec_" + XB++, Yi[i.id] = i, n && iS(r, Eg, i.id), tT(i), sn.trigger("afterinit", i), i;
  }
  function KB(r) {
    if (U(r)) {
      var e = r;
      r = null, M(e, function(t) {
        t.group != null && (r = t.group);
      }), r = r || "g_" + ZB++, M(e, function(t) {
        t.group = r;
      });
    }
    return Yh[r] = !0, r;
  }
  function nT(r) {
    Yh[r] = !1;
  }
  var jB = nT;
  function JB(r) {
    j(r) ? r = Yi[r] : r instanceof Hh || (r = Rg(r)), r instanceof Hh && !r.isDisposed() && r.dispose();
  }
  function Rg(r) {
    return Yi[lk(r, Eg)];
  }
  function QB(r) {
    return Yi[r];
  }
  function kg(r, e) {
    rT[r] = e;
  }
  function Og(r) {
    bt(Lg, r) < 0 && Lg.push(r);
  }
  function Ng(r, e) {
    Vg(Ig, r, e, VB);
  }
  function aT(r) {
    $h("afterinit", r);
  }
  function iT(r) {
    $h("afterupdate", r);
  }
  function $h(r, e) {
    sn.on(r, e);
  }
  function ln(r, e, t) {
    rt(e) && (t = e, e = "");
    var n = it(r) ? r.type : [r, r = {
      event: e
    }][0];
    r.event = (r.event || n).toLowerCase(), e = r.event, !nu[e] && (st(Wb.test(n) && Wb.test(e)), Wh[n] || (Wh[n] = {
      action: t,
      actionInfo: r
    }), nu[e] = n);
  }
  function oT(r, e) {
    Bi.register(r, e);
  }
  function tz(r) {
    var e = Bi.get(r);
    if (e)
      return e.getDimensionsInfo ? e.getDimensionsInfo() : e.dimensions.slice();
  }
  function sT(r, e) {
    Vg(Uh, r, e, zb, "layout");
  }
  function Va(r, e) {
    Vg(Uh, r, e, Gb, "visual");
  }
  var lT = [];
  function Vg(r, e, t, n, a) {
    (rt(e) || it(e)) && (t = e, e = n);
    {
      if (isNaN(e) || e == null)
        throw new Error("Illegal priority");
      M(r, function(o) {
        st(o.__raw !== t);
      });
    }
    if (!(bt(lT, t) >= 0)) {
      lT.push(t);
      var i = fb.wrapStageHandler(t, a);
      i.__prio = e, i.__raw = t, r.push(i);
    }
  }
  function Bg(r, e) {
    Pg[r] = e;
  }
  function ez(r) {
    Rr("setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead."), Tr({
      createCanvas: r
    });
  }
  function uT(r, e, t) {
    var n = Bb("registerMap");
    n && n(r, e, t);
  }
  function rz(r) {
    var e = Bb("getMap");
    return e && e(r);
  }
  var fT = dV;
  Va(Sg, zV), Va(zh, GV), Va(zh, FV), Va(Sg, tB), Va(zh, eB), Va(Fb, IB), Og(mw), Ng(OB, ZN), Bg("default", HV), ln({
    type: Mi,
    event: Mi,
    update: Mi
  }, ue), ln({
    type: qf,
    event: qf,
    update: qf
  }, ue), ln({
    type: Tl,
    event: Tl,
    update: Tl
  }, ue), ln({
    type: Kf,
    event: Kf,
    update: Kf
  }, ue), ln({
    type: Cl,
    event: Cl,
    update: Cl
  }, ue), kg("light", JV), kg("dark", yb);
  var nz = {}, hT = [], az = {
    registerPreprocessor: Og,
    registerProcessor: Ng,
    registerPostInit: aT,
    registerPostUpdate: iT,
    registerUpdateLifecycle: $h,
    registerAction: ln,
    registerCoordinateSystem: oT,
    registerLayout: sT,
    registerVisual: Va,
    registerTransform: fT,
    registerLoading: Bg,
    registerMap: uT,
    registerImpl: LB,
    PRIORITY: Hb,
    ComponentModel: Ct,
    ComponentView: Jt,
    SeriesModel: Zt,
    ChartView: $t,
    // TODO Use ComponentModel and SeriesModel instead of Constructor
    registerComponentModel: function(r) {
      Ct.registerClass(r);
    },
    registerComponentView: function(r) {
      Jt.registerClass(r);
    },
    registerSeriesModel: function(r) {
      Zt.registerClass(r);
    },
    registerChartView: function(r) {
      $t.registerClass(r);
    },
    registerSubTypeDefaulter: function(r, e) {
      Ct.registerSubTypeDefaulter(r, e);
    },
    registerPainter: function(r, e) {
      H1(r, e);
    }
  };
  function At(r) {
    if (U(r)) {
      M(r, function(e) {
        At(e);
      });
      return;
    }
    bt(hT, r) >= 0 || (hT.push(r), rt(r) && (r = {
      install: r
    }), r.install(az));
  }
  function au(r) {
    return r == null ? 0 : r.length || 1;
  }
  function cT(r) {
    return r;
  }
  var ea = (
    /** @class */
    function() {
      function r(e, t, n, a, i, o) {
        this._old = e, this._new = t, this._oldKeyGetter = n || cT, this._newKeyGetter = a || cT, this.context = i, this._diffModeMultiple = o === "multiple";
      }
      return r.prototype.add = function(e) {
        return this._add = e, this;
      }, r.prototype.update = function(e) {
        return this._update = e, this;
      }, r.prototype.updateManyToOne = function(e) {
        return this._updateManyToOne = e, this;
      }, r.prototype.updateOneToMany = function(e) {
        return this._updateOneToMany = e, this;
      }, r.prototype.updateManyToMany = function(e) {
        return this._updateManyToMany = e, this;
      }, r.prototype.remove = function(e) {
        return this._remove = e, this;
      }, r.prototype.execute = function() {
        this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
      }, r.prototype._executeOneToOne = function() {
        var e = this._old, t = this._new, n = {}, a = new Array(e.length), i = new Array(t.length);
        this._initIndexMap(e, null, a, "_oldKeyGetter"), this._initIndexMap(t, n, i, "_newKeyGetter");
        for (var o = 0; o < e.length; o++) {
          var s = a[o], l = n[s], u = au(l);
          if (u > 1) {
            var f = l.shift();
            l.length === 1 && (n[s] = l[0]), this._update && this._update(f, o);
          } else
            u === 1 ? (n[s] = null, this._update && this._update(l, o)) : this._remove && this._remove(o);
        }
        this._performRestAdd(i, n);
      }, r.prototype._executeMultiple = function() {
        var e = this._old, t = this._new, n = {}, a = {}, i = [], o = [];
        this._initIndexMap(e, n, i, "_oldKeyGetter"), this._initIndexMap(t, a, o, "_newKeyGetter");
        for (var s = 0; s < i.length; s++) {
          var l = i[s], u = n[l], f = a[l], h = au(u), c = au(f);
          if (h > 1 && c === 1)
            this._updateManyToOne && this._updateManyToOne(f, u), a[l] = null;
          else if (h === 1 && c > 1)
            this._updateOneToMany && this._updateOneToMany(f, u), a[l] = null;
          else if (h === 1 && c === 1)
            this._update && this._update(f, u), a[l] = null;
          else if (h > 1 && c > 1)
            this._updateManyToMany && this._updateManyToMany(f, u), a[l] = null;
          else if (h > 1)
            for (var v = 0; v < h; v++)
              this._remove && this._remove(u[v]);
          else
            this._remove && this._remove(u);
        }
        this._performRestAdd(o, a);
      }, r.prototype._performRestAdd = function(e, t) {
        for (var n = 0; n < e.length; n++) {
          var a = e[n], i = t[a], o = au(i);
          if (o > 1)
            for (var s = 0; s < o; s++)
              this._add && this._add(i[s]);
          else
            o === 1 && this._add && this._add(i);
          t[a] = null;
        }
      }, r.prototype._initIndexMap = function(e, t, n, a) {
        for (var i = this._diffModeMultiple, o = 0; o < e.length; o++) {
          var s = "_ec_" + this[a](e[o], o);
          if (i || (n[o] = s), !!t) {
            var l = t[s], u = au(l);
            u === 0 ? (t[s] = o, i && n.push(s)) : u === 1 ? t[s] = [l, o] : l.push(o);
          }
        }
      }, r;
    }()
  ), iz = (
    /** @class */
    function() {
      function r(e, t) {
        this._encode = e, this._schema = t;
      }
      return r.prototype.get = function() {
        return {
          // Do not generate full dimension name until fist used.
          fullDimensions: this._getFullDimensionNames(),
          encode: this._encode
        };
      }, r.prototype._getFullDimensionNames = function() {
        return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
      }, r;
    }()
  );
  function oz(r, e) {
    var t = {}, n = t.encode = {}, a = nt(), i = [], o = [], s = {};
    M(r.dimensions, function(c) {
      var v = r.getDimensionInfo(c), d = v.coordDim;
      if (d) {
        st(Wp.get(d) == null);
        var p = v.coordDimIndex;
        zg(n, d)[p] = c, v.isExtraCoord || (a.set(d, 1), sz(v.type) && (i[0] = c), zg(s, d)[p] = r.getDimensionIndex(v.name)), v.defaultTooltip && o.push(c);
      }
      Wp.each(function(g, y) {
        var m = zg(n, y), _ = v.otherDims[y];
        _ != null && _ !== !1 && (m[_] = v.name);
      });
    });
    var l = [], u = {};
    a.each(function(c, v) {
      var d = n[v];
      u[v] = d[0], l = l.concat(d);
    }), t.dataDimsOnCoord = l, t.dataDimIndicesOnCoord = Y(l, function(c) {
      return r.getDimensionInfo(c).storeDimIndex;
    }), t.encodeFirstDimNotExtra = u;
    var f = n.label;
    f && f.length && (i = f.slice());
    var h = n.tooltip;
    return h && h.length ? o = h.slice() : o.length || (o = i.slice()), n.defaultedLabel = i, n.defaultedTooltip = o, t.userOutput = new iz(s, e), t;
  }
  function zg(r, e) {
    return r.hasOwnProperty(e) || (r[e] = []), r[e];
  }
  function Xh(r) {
    return r === "category" ? "ordinal" : r === "time" ? "time" : "float";
  }
  function sz(r) {
    return !(r === "ordinal" || r === "time");
  }
  var Zh = (
    /** @class */
    function() {
      function r(e) {
        this.otherDims = {}, e != null && H(this, e);
      }
      return r;
    }()
  ), lz = Nt(), uz = {
    float: "f",
    int: "i",
    ordinal: "o",
    number: "n",
    time: "t"
  }, vT = (
    /** @class */
    function() {
      function r(e) {
        this.dimensions = e.dimensions, this._dimOmitted = e.dimensionOmitted, this.source = e.source, this._fullDimCount = e.fullDimensionCount, this._updateDimOmitted(e.dimensionOmitted);
      }
      return r.prototype.isDimensionOmitted = function() {
        return this._dimOmitted;
      }, r.prototype._updateDimOmitted = function(e) {
        this._dimOmitted = e, e && (this._dimNameMap || (this._dimNameMap = gT(this.source)));
      }, r.prototype.getSourceDimensionIndex = function(e) {
        return _t(this._dimNameMap.get(e), -1);
      }, r.prototype.getSourceDimension = function(e) {
        var t = this.source.dimensionsDefine;
        if (t)
          return t[e];
      }, r.prototype.makeStoreSchema = function() {
        for (var e = this._fullDimCount, t = ww(this.source), n = !yT(e), a = "", i = [], o = 0, s = 0; o < e; o++) {
          var l = void 0, u = void 0, f = void 0, h = this.dimensions[s];
          if (h && h.storeDimIndex === o)
            l = t ? h.name : null, u = h.type, f = h.ordinalMeta, s++;
          else {
            var c = this.getSourceDimension(o);
            c && (l = t ? c.name : null, u = c.type);
          }
          i.push({
            property: l,
            type: u,
            ordinalMeta: f
          }), t && l != null && (!h || !h.isCalculationCoord) && (a += n ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), a += "$", a += uz[u] || "f", f && (a += f.uid), a += "$";
        }
        var v = this.source, d = [v.seriesLayoutBy, v.startIndex, a].join("$$");
        return {
          dimensions: i,
          hash: d
        };
      }, r.prototype.makeOutputDimensionNames = function() {
        for (var e = [], t = 0, n = 0; t < this._fullDimCount; t++) {
          var a = void 0, i = this.dimensions[n];
          if (i && i.storeDimIndex === t)
            i.isCalculationCoord || (a = i.name), n++;
          else {
            var o = this.getSourceDimension(t);
            o && (a = o.name);
          }
          e.push(a);
        }
        return e;
      }, r.prototype.appendCalculationDimension = function(e) {
        this.dimensions.push(e), e.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
      }, r;
    }()
  );
  function dT(r) {
    return r instanceof vT;
  }
  function pT(r) {
    for (var e = nt(), t = 0; t < (r || []).length; t++) {
      var n = r[t], a = it(n) ? n.name : n;
      a != null && e.get(a) == null && e.set(a, t);
    }
    return e;
  }
  function gT(r) {
    var e = lz(r);
    return e.dimNameMap || (e.dimNameMap = pT(r.dimensionsDefine));
  }
  function yT(r) {
    return r > 30;
  }
  var iu = it, Ba = Y, fz = typeof Int32Array > "u" ? Array : Int32Array, hz = "e\0\0", mT = -1, cz = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"], vz = ["_approximateExtent"], _T, qh, ou, fs, Gg, Kh, Fg, Ue = (
    /** @class */
    function() {
      function r(e, t) {
        this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
        var n, a = !1;
        dT(e) ? (n = e.dimensions, this._dimOmitted = e.isDimensionOmitted(), this._schema = e) : (a = !0, n = e), n = n || ["x", "y"];
        for (var i = {}, o = [], s = {}, l = !1, u = {}, f = 0; f < n.length; f++) {
          var h = n[f], c = j(h) ? new Zh({
            name: h
          }) : h instanceof Zh ? h : new Zh(h), v = c.name;
          c.type = c.type || "float", c.coordDim || (c.coordDim = v, c.coordDimIndex = 0);
          var d = c.otherDims = c.otherDims || {};
          o.push(v), i[v] = c, u[v] != null && (l = !0), c.createInvertedIndices && (s[v] = []), d.itemName === 0 && (this._nameDimIdx = f), d.itemId === 0 && (this._idDimIdx = f), st(a || c.storeDimIndex >= 0), a && (c.storeDimIndex = f);
        }
        if (this.dimensions = o, this._dimInfos = i, this._initGetDimensionInfo(l), this.hostModel = t, this._invertedIndicesMap = s, this._dimOmitted) {
          var p = this._dimIdxToName = nt();
          M(o, function(g) {
            p.set(i[g].storeDimIndex, g);
          });
        }
      }
      return r.prototype.getDimension = function(e) {
        var t = this._recognizeDimIndex(e);
        if (t == null)
          return e;
        if (t = e, !this._dimOmitted)
          return this.dimensions[t];
        var n = this._dimIdxToName.get(t);
        if (n != null)
          return n;
        var a = this._schema.getSourceDimension(t);
        if (a)
          return a.name;
      }, r.prototype.getDimensionIndex = function(e) {
        var t = this._recognizeDimIndex(e);
        if (t != null)
          return t;
        if (e == null)
          return -1;
        var n = this._getDimInfo(e);
        return n ? n.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(e) : -1;
      }, r.prototype._recognizeDimIndex = function(e) {
        if (Ot(e) || e != null && !isNaN(e) && !this._getDimInfo(e) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(e) < 0))
          return +e;
      }, r.prototype._getStoreDimIndex = function(e) {
        var t = this.getDimensionIndex(e);
        if (t == null)
          throw new Error("Unknown dimension " + e);
        return t;
      }, r.prototype.getDimensionInfo = function(e) {
        return this._getDimInfo(this.getDimension(e));
      }, r.prototype._initGetDimensionInfo = function(e) {
        var t = this._dimInfos;
        this._getDimInfo = e ? function(n) {
          return t.hasOwnProperty(n) ? t[n] : void 0;
        } : function(n) {
          return t[n];
        };
      }, r.prototype.getDimensionsOnCoord = function() {
        return this._dimSummary.dataDimsOnCoord.slice();
      }, r.prototype.mapDimension = function(e, t) {
        var n = this._dimSummary;
        if (t == null)
          return n.encodeFirstDimNotExtra[e];
        var a = n.encode[e];
        return a ? a[t] : null;
      }, r.prototype.mapDimensionsAll = function(e) {
        var t = this._dimSummary, n = t.encode[e];
        return (n || []).slice();
      }, r.prototype.getStore = function() {
        return this._store;
      }, r.prototype.initData = function(e, t, n) {
        var a = this, i;
        if (e instanceof lg && (i = e), !i) {
          var o = this.dimensions, s = tg(e) || Pe(e) ? new Cw(e, o.length) : e;
          i = new lg();
          var l = Ba(o, function(u) {
            return {
              type: a._dimInfos[u].type,
              property: u
            };
          });
          i.initData(s, l, n);
        }
        this._store = i, this._nameList = (t || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = oz(this, this._schema), this.userOutput = this._dimSummary.userOutput;
      }, r.prototype.appendData = function(e) {
        var t = this._store.appendData(e);
        this._doInit(t[0], t[1]);
      }, r.prototype.appendValues = function(e, t) {
        var n = this._store.appendValues(e, t.length), a = n.start, i = n.end, o = this._shouldMakeIdFromName();
        if (this._updateOrdinalMeta(), t)
          for (var s = a; s < i; s++) {
            var l = s - a;
            this._nameList[s] = t[l], o && Fg(this, s);
          }
      }, r.prototype._updateOrdinalMeta = function() {
        for (var e = this._store, t = this.dimensions, n = 0; n < t.length; n++) {
          var a = this._dimInfos[t[n]];
          a.ordinalMeta && e.collectOrdinalMeta(a.storeDimIndex, a.ordinalMeta);
        }
      }, r.prototype._shouldMakeIdFromName = function() {
        var e = this._store.getProvider();
        return this._idDimIdx == null && e.getSource().sourceFormat !== Qn && !e.fillStorage;
      }, r.prototype._doInit = function(e, t) {
        if (!(e >= t)) {
          var n = this._store, a = n.getProvider();
          this._updateOrdinalMeta();
          var i = this._nameList, o = this._idList, s = a.getSource().sourceFormat, l = s === zr;
          if (l && !a.pure)
            for (var u = [], f = e; f < t; f++) {
              var h = a.getItem(f, u);
              if (!this.hasItemOption && qR(h) && (this.hasItemOption = !0), h) {
                var c = h.name;
                i[f] == null && c != null && (i[f] = _e(c, null));
                var v = h.id;
                o[f] == null && v != null && (o[f] = _e(v, null));
              }
            }
          if (this._shouldMakeIdFromName())
            for (var f = e; f < t; f++)
              Fg(this, f);
          _T(this);
        }
      }, r.prototype.getApproximateExtent = function(e) {
        return this._approximateExtent[e] || this._store.getDataExtent(this._getStoreDimIndex(e));
      }, r.prototype.setApproximateExtent = function(e, t) {
        t = this.getDimension(t), this._approximateExtent[t] = e.slice();
      }, r.prototype.getCalculationInfo = function(e) {
        return this._calculationInfo[e];
      }, r.prototype.setCalculationInfo = function(e, t) {
        iu(e) ? H(this._calculationInfo, e) : this._calculationInfo[e] = t;
      }, r.prototype.getName = function(e) {
        var t = this.getRawIndex(e), n = this._nameList[t];
        return n == null && this._nameDimIdx != null && (n = ou(this, this._nameDimIdx, t)), n == null && (n = ""), n;
      }, r.prototype._getCategory = function(e, t) {
        var n = this._store.get(e, t), a = this._store.getOrdinalMeta(e);
        return a ? a.categories[n] : n;
      }, r.prototype.getId = function(e) {
        return qh(this, this.getRawIndex(e));
      }, r.prototype.count = function() {
        return this._store.count();
      }, r.prototype.get = function(e, t) {
        var n = this._store, a = this._dimInfos[e];
        if (a)
          return n.get(a.storeDimIndex, t);
      }, r.prototype.getByRawIndex = function(e, t) {
        var n = this._store, a = this._dimInfos[e];
        if (a)
          return n.getByRawIndex(a.storeDimIndex, t);
      }, r.prototype.getIndices = function() {
        return this._store.getIndices();
      }, r.prototype.getDataExtent = function(e) {
        return this._store.getDataExtent(this._getStoreDimIndex(e));
      }, r.prototype.getSum = function(e) {
        return this._store.getSum(this._getStoreDimIndex(e));
      }, r.prototype.getMedian = function(e) {
        return this._store.getMedian(this._getStoreDimIndex(e));
      }, r.prototype.getValues = function(e, t) {
        var n = this, a = this._store;
        return U(e) ? a.getValues(Ba(e, function(i) {
          return n._getStoreDimIndex(i);
        }), t) : a.getValues(e);
      }, r.prototype.hasValue = function(e) {
        for (var t = this._dimSummary.dataDimIndicesOnCoord, n = 0, a = t.length; n < a; n++)
          if (isNaN(this._store.get(t[n], e)))
            return !1;
        return !0;
      }, r.prototype.indexOfName = function(e) {
        for (var t = 0, n = this._store.count(); t < n; t++)
          if (this.getName(t) === e)
            return t;
        return -1;
      }, r.prototype.getRawIndex = function(e) {
        return this._store.getRawIndex(e);
      }, r.prototype.indexOfRawIndex = function(e) {
        return this._store.indexOfRawIndex(e);
      }, r.prototype.rawIndexOf = function(e, t) {
        var n = e && this._invertedIndicesMap[e];
        if (!n)
          throw new Error("Do not supported yet");
        var a = n[t];
        return a == null || isNaN(a) ? mT : a;
      }, r.prototype.indicesOfNearest = function(e, t, n) {
        return this._store.indicesOfNearest(this._getStoreDimIndex(e), t, n);
      }, r.prototype.each = function(e, t, n) {
        rt(e) && (n = t, t = e, e = []);
        var a = n || this, i = Ba(fs(e), this._getStoreDimIndex, this);
        this._store.each(i, a ? J(t, a) : t);
      }, r.prototype.filterSelf = function(e, t, n) {
        rt(e) && (n = t, t = e, e = []);
        var a = n || this, i = Ba(fs(e), this._getStoreDimIndex, this);
        return this._store = this._store.filter(i, a ? J(t, a) : t), this;
      }, r.prototype.selectRange = function(e) {
        var t = this, n = {}, a = Pt(e);
        return M(a, function(i) {
          var o = t._getStoreDimIndex(i);
          n[o] = e[i];
        }), this._store = this._store.selectRange(n), this;
      }, r.prototype.mapArray = function(e, t, n) {
        rt(e) && (n = t, t = e, e = []), n = n || this;
        var a = [];
        return this.each(e, function() {
          a.push(t && t.apply(this, arguments));
        }, n), a;
      }, r.prototype.map = function(e, t, n, a) {
        var i = n || a || this, o = Ba(fs(e), this._getStoreDimIndex, this), s = Kh(this);
        return s._store = this._store.map(o, i ? J(t, i) : t), s;
      }, r.prototype.modify = function(e, t, n, a) {
        var i = this, o = n || a || this;
        M(fs(e), function(l) {
          var u = i.getDimensionInfo(l);
          u.isCalculationCoord || console.error("Danger: only stack dimension can be modified");
        });
        var s = Ba(fs(e), this._getStoreDimIndex, this);
        this._store.modify(s, o ? J(t, o) : t);
      }, r.prototype.downSample = function(e, t, n, a) {
        var i = Kh(this);
        return i._store = this._store.downSample(this._getStoreDimIndex(e), t, n, a), i;
      }, r.prototype.lttbDownSample = function(e, t) {
        var n = Kh(this);
        return n._store = this._store.lttbDownSample(this._getStoreDimIndex(e), t), n;
      }, r.prototype.getRawDataItem = function(e) {
        return this._store.getRawDataItem(e);
      }, r.prototype.getItemModel = function(e) {
        var t = this.hostModel, n = this.getRawDataItem(e);
        return new Gt(n, t, t && t.ecModel);
      }, r.prototype.diff = function(e) {
        var t = this;
        return new ea(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function(n) {
          return qh(e, n);
        }, function(n) {
          return qh(t, n);
        });
      }, r.prototype.getVisual = function(e) {
        var t = this._visual;
        return t && t[e];
      }, r.prototype.setVisual = function(e, t) {
        this._visual = this._visual || {}, iu(e) ? H(this._visual, e) : this._visual[e] = t;
      }, r.prototype.getItemVisual = function(e, t) {
        var n = this._itemVisuals[e], a = n && n[t];
        return a ?? this.getVisual(t);
      }, r.prototype.hasItemVisual = function() {
        return this._itemVisuals.length > 0;
      }, r.prototype.ensureUniqueItemVisual = function(e, t) {
        var n = this._itemVisuals, a = n[e];
        a || (a = n[e] = {});
        var i = a[t];
        return i == null && (i = this.getVisual(t), U(i) ? i = i.slice() : iu(i) && (i = H({}, i)), a[t] = i), i;
      }, r.prototype.setItemVisual = function(e, t, n) {
        var a = this._itemVisuals[e] || {};
        this._itemVisuals[e] = a, iu(t) ? H(a, t) : a[t] = n;
      }, r.prototype.clearAllVisual = function() {
        this._visual = {}, this._itemVisuals = [];
      }, r.prototype.setLayout = function(e, t) {
        iu(e) ? H(this._layout, e) : this._layout[e] = t;
      }, r.prototype.getLayout = function(e) {
        return this._layout[e];
      }, r.prototype.getItemLayout = function(e) {
        return this._itemLayouts[e];
      }, r.prototype.setItemLayout = function(e, t, n) {
        this._itemLayouts[e] = n ? H(this._itemLayouts[e] || {}, t) : t;
      }, r.prototype.clearItemLayouts = function() {
        this._itemLayouts.length = 0;
      }, r.prototype.setItemGraphicEl = function(e, t) {
        var n = this.hostModel && this.hostModel.seriesIndex;
        ap(n, this.dataType, e, t), this._graphicEls[e] = t;
      }, r.prototype.getItemGraphicEl = function(e) {
        return this._graphicEls[e];
      }, r.prototype.eachItemGraphicEl = function(e, t) {
        M(this._graphicEls, function(n, a) {
          n && e && e.call(t, n, a);
        });
      }, r.prototype.cloneShallow = function(e) {
        return e || (e = new r(this._schema ? this._schema : Ba(this.dimensions, this._getDimInfo, this), this.hostModel)), Gg(e, this), e._store = this._store, e;
      }, r.prototype.wrapMethod = function(e, t) {
        var n = this[e];
        rt(n) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(e), this[e] = function() {
          var a = n.apply(this, arguments);
          return t.apply(this, [a].concat(lf(arguments)));
        });
      }, r.internalField = function() {
        _T = function(e) {
          var t = e._invertedIndicesMap;
          M(t, function(n, a) {
            var i = e._dimInfos[a], o = i.ordinalMeta, s = e._store;
            if (o) {
              n = t[a] = new fz(o.categories.length);
              for (var l = 0; l < n.length; l++)
                n[l] = mT;
              for (var l = 0; l < s.count(); l++)
                n[s.get(i.storeDimIndex, l)] = l;
            }
          });
        }, ou = function(e, t, n) {
          return _e(e._getCategory(t, n), null);
        }, qh = function(e, t) {
          var n = e._idList[t];
          return n == null && e._idDimIdx != null && (n = ou(e, e._idDimIdx, t)), n == null && (n = hz + t), n;
        }, fs = function(e) {
          return U(e) || (e = e != null ? [e] : []), e;
        }, Kh = function(e) {
          var t = new r(e._schema ? e._schema : Ba(e.dimensions, e._getDimInfo, e), e.hostModel);
          return Gg(t, e), t;
        }, Gg = function(e, t) {
          M(cz.concat(t.__wrappedMethods || []), function(n) {
            t.hasOwnProperty(n) && (e[n] = t[n]);
          }), e.__wrappedMethods = t.__wrappedMethods, M(vz, function(n) {
            e[n] = ht(t[n]);
          }), e._calculationInfo = H({}, t._calculationInfo);
        }, Fg = function(e, t) {
          var n = e._nameList, a = e._idList, i = e._nameDimIdx, o = e._idDimIdx, s = n[t], l = a[t];
          if (s == null && i != null && (n[t] = s = ou(e, i, t)), l == null && o != null && (a[t] = l = ou(e, o, t)), l == null && s != null) {
            var u = e._nameRepeatCount, f = u[s] = (u[s] || 0) + 1;
            l = s, f > 1 && (l += "__ec__" + f), a[t] = l;
          }
        };
      }(), r;
    }()
  );
  function dz(r, e) {
    return hs(r, e).dimensions;
  }
  function hs(r, e) {
    tg(r) || (r = rg(r)), e = e || {};
    var t = e.coordDimensions || [], n = e.dimensionsDefine || r.dimensionsDefine || [], a = nt(), i = [], o = gz(r, t, n, e.dimensionsCount), s = e.canOmitUnusedDimensions && yT(o), l = n === r.dimensionsDefine, u = l ? gT(r) : pT(n), f = e.encodeDefine;
    !f && e.encodeDefaulter && (f = e.encodeDefaulter(r, o));
    for (var h = nt(f), c = new Vw(o), v = 0; v < c.length; v++)
      c[v] = -1;
    function d(I) {
      var L = c[I];
      if (L < 0) {
        var P = n[I], E = it(P) ? P : {
          name: P
        }, R = new Zh(), k = E.name;
        k != null && u.get(k) != null && (R.name = R.displayName = k), E.type != null && (R.type = E.type), E.displayName != null && (R.displayName = E.displayName);
        var O = i.length;
        return c[I] = O, R.storeDimIndex = I, i.push(R), R;
      }
      return i[L];
    }
    if (!s)
      for (var v = 0; v < o; v++)
        d(v);
    h.each(function(I, L) {
      var P = Xt(I).slice();
      if (P.length === 1 && !j(P[0]) && P[0] < 0) {
        h.set(L, !1);
        return;
      }
      var E = h.set(L, []);
      M(P, function(R, k) {
        var O = j(R) ? u.get(R) : R;
        O != null && O < o && (E[k] = O, g(d(O), L, k));
      });
    });
    var p = 0;
    M(t, function(I) {
      var L, P, E, R;
      if (j(I))
        L = I, R = {};
      else {
        R = I, L = R.name;
        var k = R.ordinalMeta;
        R.ordinalMeta = null, R = H({}, R), R.ordinalMeta = k, P = R.dimsDef, E = R.otherDims, R.name = R.coordDim = R.coordDimIndex = R.dimsDef = R.otherDims = null;
      }
      var O = h.get(L);
      if (O !== !1) {
        if (O = Xt(O), !O.length)
          for (var N = 0; N < (P && P.length || 1); N++) {
            for (; p < o && d(p).coordDim != null; )
              p++;
            p < o && O.push(p++);
          }
        M(O, function(F, G) {
          var W = d(F);
          if (l && R.type != null && (W.type = R.type), g(ot(W, R), L, G), W.name == null && P) {
            var X = P[G];
            !it(X) && (X = {
              name: X
            }), W.name = W.displayName = X.name, W.defaultTooltip = X.defaultTooltip;
          }
          E && ot(W.otherDims, E);
        });
      }
    });
    function g(I, L, P) {
      Wp.get(L) != null ? I.otherDims[L] = P : (I.coordDim = L, I.coordDimIndex = P, a.set(L, !0));
    }
    var y = e.generateCoord, m = e.generateCoordCount, _ = m != null;
    m = y ? m || 1 : 0;
    var S = y || "value";
    function b(I) {
      I.name == null && (I.name = I.coordDim);
    }
    if (s)
      M(i, function(I) {
        b(I);
      }), i.sort(function(I, L) {
        return I.storeDimIndex - L.storeDimIndex;
      });
    else
      for (var w = 0; w < o; w++) {
        var T = d(w), C = T.coordDim;
        C == null && (T.coordDim = yz(S, a, _), T.coordDimIndex = 0, (!y || m <= 0) && (T.isExtraCoord = !0), m--), b(T), T.type == null && (rw(r, w) === Oe.Must || T.isExtraCoord && (T.otherDims.itemName != null || T.otherDims.seriesName != null)) && (T.type = "ordinal");
      }
    return pz(i), new vT({
      source: r,
      dimensions: i,
      fullDimensionCount: o,
      dimensionOmitted: s
    });
  }
  function pz(r) {
    for (var e = nt(), t = 0; t < r.length; t++) {
      var n = r[t], a = n.name, i = e.get(a) || 0;
      i > 0 && (n.name = a + (i - 1)), i++, e.set(a, i);
    }
  }
  function gz(r, e, t, n) {
    var a = Math.max(r.dimensionsDetectedCount || 1, e.length, t.length, n || 0);
    return M(e, function(i) {
      var o;
      it(i) && (o = i.dimsDef) && (a = Math.max(a, o.length));
    }), a;
  }
  function yz(r, e, t) {
    if (t || e.hasKey(r)) {
      for (var n = 0; e.hasKey(r + n); )
        n++;
      r += n;
    }
    return e.set(r, !0), r;
  }
  var mz = (
    /** @class */
    function() {
      function r(e) {
        this.coordSysDims = [], this.axisMap = nt(), this.categoryAxisMap = nt(), this.coordSysName = e;
      }
      return r;
    }()
  );
  function _z(r) {
    var e = r.get("coordinateSystem"), t = new mz(e), n = Sz[e];
    if (n)
      return n(r, t, t.axisMap, t.categoryAxisMap), t;
  }
  var Sz = {
    cartesian2d: function(r, e, t, n) {
      var a = r.getReferringComponents("xAxis", ge).models[0], i = r.getReferringComponents("yAxis", ge).models[0];
      {
        if (!a)
          throw new Error('xAxis "' + he(r.get("xAxisIndex"), r.get("xAxisId"), 0) + '" not found');
        if (!i)
          throw new Error('yAxis "' + he(r.get("xAxisIndex"), r.get("yAxisId"), 0) + '" not found');
      }
      e.coordSysDims = ["x", "y"], t.set("x", a), t.set("y", i), cs(a) && (n.set("x", a), e.firstCategoryDimIndex = 0), cs(i) && (n.set("y", i), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
    },
    singleAxis: function(r, e, t, n) {
      var a = r.getReferringComponents("singleAxis", ge).models[0];
      if (!a)
        throw new Error("singleAxis should be specified.");
      e.coordSysDims = ["single"], t.set("single", a), cs(a) && (n.set("single", a), e.firstCategoryDimIndex = 0);
    },
    polar: function(r, e, t, n) {
      var a = r.getReferringComponents("polar", ge).models[0], i = a.findAxisModel("radiusAxis"), o = a.findAxisModel("angleAxis");
      {
        if (!o)
          throw new Error("angleAxis option not found");
        if (!i)
          throw new Error("radiusAxis option not found");
      }
      e.coordSysDims = ["radius", "angle"], t.set("radius", i), t.set("angle", o), cs(i) && (n.set("radius", i), e.firstCategoryDimIndex = 0), cs(o) && (n.set("angle", o), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
    },
    geo: function(r, e, t, n) {
      e.coordSysDims = ["lng", "lat"];
    },
    parallel: function(r, e, t, n) {
      var a = r.ecModel, i = a.getComponent("parallel", r.get("parallelIndex")), o = e.coordSysDims = i.dimensions.slice();
      M(i.parallelAxisIndex, function(s, l) {
        var u = a.getComponent("parallelAxis", s), f = o[l];
        t.set(f, u), cs(u) && (n.set(f, u), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = l));
      });
    }
  };
  function cs(r) {
    return r.get("type") === "category";
  }
  function ST(r, e, t) {
    t = t || {};
    var n = t.byIndex, a = t.stackedCoordDimension, i, o, s;
    xz(e) ? i = e : (o = e.schema, i = o.dimensions, s = e.store);
    var l = !!(r && r.get("stack")), u, f, h, c;
    if (M(i, function(m, _) {
      j(m) && (i[_] = m = {
        name: m
      }), l && !m.isExtraCoord && (!n && !u && m.ordinalMeta && (u = m), !f && m.type !== "ordinal" && m.type !== "time" && (!a || a === m.coordDim) && (f = m));
    }), f && !n && !u && (n = !0), f) {
      h = "__\0ecstackresult_" + r.id, c = "__\0ecstackedover_" + r.id, u && (u.createInvertedIndices = !0);
      var v = f.coordDim, d = f.type, p = 0;
      M(i, function(m) {
        m.coordDim === v && p++;
      });
      var g = {
        name: h,
        coordDim: v,
        coordDimIndex: p,
        type: d,
        isExtraCoord: !0,
        isCalculationCoord: !0,
        storeDimIndex: i.length
      }, y = {
        name: c,
        // This dimension contains stack base (generally, 0), so do not set it as
        // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
        coordDim: c,
        coordDimIndex: p + 1,
        type: d,
        isExtraCoord: !0,
        isCalculationCoord: !0,
        storeDimIndex: i.length + 1
      };
      o ? (s && (g.storeDimIndex = s.ensureCalculationDimension(c, d), y.storeDimIndex = s.ensureCalculationDimension(h, d)), o.appendCalculationDimension(g), o.appendCalculationDimension(y)) : (i.push(g), i.push(y));
    }
    return {
      stackedDimension: f && f.name,
      stackedByDimension: u && u.name,
      isStackedByIndex: n,
      stackedOverDimension: c,
      stackResultDimension: h
    };
  }
  function xz(r) {
    return !dT(r.schema);
  }
  function ra(r, e) {
    return !!e && e === r.getCalculationInfo("stackedDimension");
  }
  function Hg(r, e) {
    return ra(r, e) ? r.getCalculationInfo("stackResultDimension") : e;
  }
  function wz(r, e) {
    var t = r.get("coordinateSystem"), n = Bi.get(t), a;
    return e && e.coordSysDims && (a = Y(e.coordSysDims, function(i) {
      var o = {
        name: i
      }, s = e.axisMap.get(i);
      if (s) {
        var l = s.get("type");
        o.type = Xh(l);
      }
      return o;
    })), a || (a = n && (n.getDimensionsInfo ? n.getDimensionsInfo() : n.dimensions.slice()) || ["x", "y"]), a;
  }
  function bz(r, e, t) {
    var n, a;
    return t && M(r, function(i, o) {
      var s = i.coordDim, l = t.categoryAxisMap.get(s);
      l && (n == null && (n = o), i.ordinalMeta = l.getOrdinalMeta(), e && (i.createInvertedIndices = !0)), i.otherDims.itemName != null && (a = !0);
    }), !a && n != null && (r[n].otherDims.itemName = 0), n;
  }
  function Ln(r, e, t) {
    t = t || {};
    var n = e.getSourceManager(), a, i = !1;
    r ? (i = !0, a = rg(r)) : (a = n.getSource(), i = a.sourceFormat === zr);
    var o = _z(e), s = wz(e, o), l = t.useEncodeDefaulter, u = rt(l) ? l : l ? yt(ew, s, e) : null, f = {
      coordDimensions: s,
      generateCoord: t.generateCoord,
      encodeDefine: e.getEncode(),
      encodeDefaulter: u,
      canOmitUnusedDimensions: !i
    }, h = hs(a, f), c = bz(h.dimensions, t.createInvertedIndices, o), v = i ? null : n.getSharedDataStore(h), d = ST(e, {
      schema: h,
      store: v
    }), p = new Ue(h, e);
    p.setCalculationInfo(d);
    var g = c != null && Tz(a) ? function(y, m, _, S) {
      return S === c ? _ : this.defaultDimValueGetter(y, m, _, S);
    } : null;
    return p.hasItemOption = !1, p.initData(
      // Try to reuse the data store in sourceManager if using dataset.
      i ? a : v,
      null,
      g
    ), p;
  }
  function Tz(r) {
    if (r.sourceFormat === zr) {
      var e = Cz(r.data || []);
      return !U(Eo(e));
    }
  }
  function Cz(r) {
    for (var e = 0; e < r.length && r[e] == null; )
      e++;
    return r[e];
  }
  var Pn = (
    /** @class */
    function() {
      function r(e) {
        this._setting = e || {}, this._extent = [1 / 0, -1 / 0];
      }
      return r.prototype.getSetting = function(e) {
        return this._setting[e];
      }, r.prototype.unionExtent = function(e) {
        var t = this._extent;
        e[0] < t[0] && (t[0] = e[0]), e[1] > t[1] && (t[1] = e[1]);
      }, r.prototype.unionExtentFromData = function(e, t) {
        this.unionExtent(e.getApproximateExtent(t));
      }, r.prototype.getExtent = function() {
        return this._extent.slice();
      }, r.prototype.setExtent = function(e, t) {
        var n = this._extent;
        isNaN(e) || (n[0] = e), isNaN(t) || (n[1] = t);
      }, r.prototype.isInExtentRange = function(e) {
        return this._extent[0] <= e && this._extent[1] >= e;
      }, r.prototype.isBlank = function() {
        return this._isBlank;
      }, r.prototype.setBlank = function(e) {
        this._isBlank = e;
      }, r;
    }()
  );
  Gf(Pn);
  var Az = 0, Wg = (
    /** @class */
    function() {
      function r(e) {
        this.categories = e.categories || [], this._needCollect = e.needCollect, this._deduplication = e.deduplication, this.uid = ++Az;
      }
      return r.createByAxisModel = function(e) {
        var t = e.option, n = t.data, a = n && Y(n, Dz);
        return new r({
          categories: a,
          needCollect: !a,
          // deduplication is default in axis.
          deduplication: t.dedplication !== !1
        });
      }, r.prototype.getOrdinal = function(e) {
        return this._getOrCreateMap().get(e);
      }, r.prototype.parseAndCollect = function(e) {
        var t, n = this._needCollect;
        if (!j(e) && !n)
          return e;
        if (n && !this._deduplication)
          return t = this.categories.length, this.categories[t] = e, t;
        var a = this._getOrCreateMap();
        return t = a.get(e), t == null && (n ? (t = this.categories.length, this.categories[t] = e, a.set(e, t)) : t = NaN), t;
      }, r.prototype._getOrCreateMap = function() {
        return this._map || (this._map = nt(this.categories));
      }, r;
    }()
  );
  function Dz(r) {
    return it(r) && r.value != null ? r.value : r + "";
  }
  function Mz(r) {
    var e = Math.pow(10, gl(Math.abs(r))), t = Math.abs(r / e);
    return t === 0 || t === 1 || t === 2 || t === 3 || t === 5;
  }
  function Ug(r) {
    return r.type === "interval" || r.type === "log";
  }
  function Iz(r, e, t, n) {
    var a = {}, i = r[1] - r[0], o = a.interval = Nd(i / e, !0);
    t != null && o < t && (o = a.interval = t), n != null && o > n && (o = a.interval = n);
    var s = a.intervalPrecision = xT(o), l = a.niceTickExtent = [ie(Math.ceil(r[0] / o) * o, s), ie(Math.floor(r[1] / o) * o, s)];
    return Lz(l, r), a;
  }
  function Yg(r) {
    var e = Math.pow(10, gl(r)), t = r / e;
    return t ? t === 2 ? t = 3 : t === 3 ? t = 5 : t *= 2 : t = 1, ie(t * e);
  }
  function xT(r) {
    return rn(r) + 2;
  }
  function wT(r, e, t) {
    r[e] = Math.max(Math.min(r[e], t[1]), t[0]);
  }
  function Lz(r, e) {
    !isFinite(r[0]) && (r[0] = e[0]), !isFinite(r[1]) && (r[1] = e[1]), wT(r, 0, e), wT(r, 1, e), r[0] > r[1] && (r[0] = r[1]);
  }
  function jh(r, e) {
    return r >= e[0] && r <= e[1];
  }
  function Jh(r, e) {
    return e[1] === e[0] ? 0.5 : (r - e[0]) / (e[1] - e[0]);
  }
  function Qh(r, e) {
    return r * (e[1] - e[0]) + e[0];
  }
  var tc = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        n.type = "ordinal";
        var a = n.getSetting("ordinalMeta");
        return a || (a = new Wg({})), U(a) && (a = new Wg({
          categories: Y(a, function(i) {
            return it(i) ? i.value : i;
          })
        })), n._ordinalMeta = a, n._extent = n.getSetting("extent") || [0, a.categories.length - 1], n;
      }
      return e.prototype.parse = function(t) {
        return t == null ? NaN : j(t) ? this._ordinalMeta.getOrdinal(t) : Math.round(t);
      }, e.prototype.contain = function(t) {
        return t = this.parse(t), jh(t, this._extent) && this._ordinalMeta.categories[t] != null;
      }, e.prototype.normalize = function(t) {
        return t = this._getTickNumber(this.parse(t)), Jh(t, this._extent);
      }, e.prototype.scale = function(t) {
        return t = Math.round(Qh(t, this._extent)), this.getRawOrdinalNumber(t);
      }, e.prototype.getTicks = function() {
        for (var t = [], n = this._extent, a = n[0]; a <= n[1]; )
          t.push({
            value: a
          }), a++;
        return t;
      }, e.prototype.getMinorTicks = function(t) {
      }, e.prototype.setSortInfo = function(t) {
        if (t == null) {
          this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
          return;
        }
        for (var n = t.ordinalNumbers, a = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], o = 0, s = this._ordinalMeta.categories.length, l = Math.min(s, n.length); o < l; ++o) {
          var u = n[o];
          a[o] = u, i[u] = o;
        }
        for (var f = 0; o < s; ++o) {
          for (; i[f] != null; )
            f++;
          a.push(f), i[f] = o;
        }
      }, e.prototype._getTickNumber = function(t) {
        var n = this._ticksByOrdinalNumber;
        return n && t >= 0 && t < n.length ? n[t] : t;
      }, e.prototype.getRawOrdinalNumber = function(t) {
        var n = this._ordinalNumbersByTick;
        return n && t >= 0 && t < n.length ? n[t] : t;
      }, e.prototype.getLabel = function(t) {
        if (!this.isBlank()) {
          var n = this.getRawOrdinalNumber(t.value), a = this._ordinalMeta.categories[n];
          return a == null ? "" : a + "";
        }
      }, e.prototype.count = function() {
        return this._extent[1] - this._extent[0] + 1;
      }, e.prototype.unionExtentFromData = function(t, n) {
        this.unionExtent(t.getApproximateExtent(n));
      }, e.prototype.isInExtentRange = function(t) {
        return t = this._getTickNumber(t), this._extent[0] <= t && this._extent[1] >= t;
      }, e.prototype.getOrdinalMeta = function() {
        return this._ordinalMeta;
      }, e.prototype.calcNiceTicks = function() {
      }, e.prototype.calcNiceExtent = function() {
      }, e.type = "ordinal", e;
    }(Pn)
  );
  Pn.registerClass(tc);
  var $i = ie, na = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "interval", t._interval = 0, t._intervalPrecision = 2, t;
      }
      return e.prototype.parse = function(t) {
        return t;
      }, e.prototype.contain = function(t) {
        return jh(t, this._extent);
      }, e.prototype.normalize = function(t) {
        return Jh(t, this._extent);
      }, e.prototype.scale = function(t) {
        return Qh(t, this._extent);
      }, e.prototype.setExtent = function(t, n) {
        var a = this._extent;
        isNaN(t) || (a[0] = parseFloat(t)), isNaN(n) || (a[1] = parseFloat(n));
      }, e.prototype.unionExtent = function(t) {
        var n = this._extent;
        t[0] < n[0] && (n[0] = t[0]), t[1] > n[1] && (n[1] = t[1]), this.setExtent(n[0], n[1]);
      }, e.prototype.getInterval = function() {
        return this._interval;
      }, e.prototype.setInterval = function(t) {
        this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = xT(t);
      }, e.prototype.getTicks = function(t) {
        var n = this._interval, a = this._extent, i = this._niceExtent, o = this._intervalPrecision, s = [];
        if (!n)
          return s;
        var l = 1e4;
        a[0] < i[0] && (t ? s.push({
          value: $i(i[0] - n, o)
        }) : s.push({
          value: a[0]
        }));
        for (var u = i[0]; u <= i[1] && (s.push({
          value: u
        }), u = $i(u + n, o), u !== s[s.length - 1].value); )
          if (s.length > l)
            return [];
        var f = s.length ? s[s.length - 1].value : i[1];
        return a[1] > f && (t ? s.push({
          value: $i(f + n, o)
        }) : s.push({
          value: a[1]
        })), s;
      }, e.prototype.getMinorTicks = function(t) {
        for (var n = this.getTicks(!0), a = [], i = this.getExtent(), o = 1; o < n.length; o++) {
          for (var s = n[o], l = n[o - 1], u = 0, f = [], h = s.value - l.value, c = h / t; u < t - 1; ) {
            var v = $i(l.value + (u + 1) * c);
            v > i[0] && v < i[1] && f.push(v), u++;
          }
          a.push(f);
        }
        return a;
      }, e.prototype.getLabel = function(t, n) {
        if (t == null)
          return "";
        var a = n && n.precision;
        a == null ? a = rn(t.value) || 0 : a === "auto" && (a = this._intervalPrecision);
        var i = $i(t.value, a, !0);
        return Vp(i);
      }, e.prototype.calcNiceTicks = function(t, n, a) {
        t = t || 5;
        var i = this._extent, o = i[1] - i[0];
        if (isFinite(o)) {
          o < 0 && (o = -o, i.reverse());
          var s = Iz(i, t, n, a);
          this._intervalPrecision = s.intervalPrecision, this._interval = s.interval, this._niceExtent = s.niceTickExtent;
        }
      }, e.prototype.calcNiceExtent = function(t) {
        var n = this._extent;
        if (n[0] === n[1])
          if (n[0] !== 0) {
            var a = Math.abs(n[0]);
            t.fixMax || (n[1] += a / 2), n[0] -= a / 2;
          } else
            n[1] = 1;
        var i = n[1] - n[0];
        isFinite(i) || (n[0] = 0, n[1] = 1), this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
        var o = this._interval;
        t.fixMin || (n[0] = $i(Math.floor(n[0] / o) * o)), t.fixMax || (n[1] = $i(Math.ceil(n[1] / o) * o));
      }, e.prototype.setNiceExtent = function(t, n) {
        this._niceExtent = [t, n];
      }, e.type = "interval", e;
    }(Pn)
  );
  Pn.registerClass(na);
  var bT = typeof Float32Array < "u", Pz = bT ? Float32Array : Array;
  function En(r) {
    return U(r) ? bT ? new Float32Array(r) : r : new Pz(r);
  }
  var $g = "__ec_stack_";
  function Xg(r) {
    return r.get("stack") || $g + r.seriesIndex;
  }
  function Zg(r) {
    return r.dim + r.index;
  }
  function Ez(r) {
    var e = [], t = r.axis, n = "axis0";
    if (t.type === "category") {
      for (var a = t.getBandWidth(), i = 0; i < r.count; i++)
        e.push(ot({
          bandWidth: a,
          axisKey: n,
          stackId: $g + i
        }, r));
      for (var o = AT(e), s = [], i = 0; i < r.count; i++) {
        var l = o[n][$g + i];
        l.offsetCenter = l.offset + l.width / 2, s.push(l);
      }
      return s;
    }
  }
  function TT(r, e) {
    var t = [];
    return e.eachSeriesByType(r, function(n) {
      IT(n) && t.push(n);
    }), t;
  }
  function Rz(r) {
    var e = {};
    M(r, function(l) {
      var u = l.coordinateSystem, f = u.getBaseAxis();
      if (!(f.type !== "time" && f.type !== "value"))
        for (var h = l.getData(), c = f.dim + "_" + f.index, v = h.getDimensionIndex(h.mapDimension(f.dim)), d = h.getStore(), p = 0, g = d.count(); p < g; ++p) {
          var y = d.get(v, p);
          e[c] ? e[c].push(y) : e[c] = [y];
        }
    });
    var t = {};
    for (var n in e)
      if (e.hasOwnProperty(n)) {
        var a = e[n];
        if (a) {
          a.sort(function(l, u) {
            return l - u;
          });
          for (var i = null, o = 1; o < a.length; ++o) {
            var s = a[o] - a[o - 1];
            s > 0 && (i = i === null ? s : Math.min(i, s));
          }
          t[n] = i;
        }
      }
    return t;
  }
  function CT(r) {
    var e = Rz(r), t = [];
    return M(r, function(n) {
      var a = n.coordinateSystem, i = a.getBaseAxis(), o = i.getExtent(), s;
      if (i.type === "category")
        s = i.getBandWidth();
      else if (i.type === "value" || i.type === "time") {
        var l = i.dim + "_" + i.index, u = e[l], f = Math.abs(o[1] - o[0]), h = i.scale.getExtent(), c = Math.abs(h[1] - h[0]);
        s = u ? f / c * u : f;
      } else {
        var v = n.getData();
        s = Math.abs(o[1] - o[0]) / v.count();
      }
      var d = Z(n.get("barWidth"), s), p = Z(n.get("barMaxWidth"), s), g = Z(
        // barMinWidth by default is 0.5 / 1 in cartesian. Because in value axis,
        // the auto-calculated bar width might be less than 0.5 / 1.
        n.get("barMinWidth") || (LT(n) ? 0.5 : 1),
        s
      ), y = n.get("barGap"), m = n.get("barCategoryGap");
      t.push({
        bandWidth: s,
        barWidth: d,
        barMaxWidth: p,
        barMinWidth: g,
        barGap: y,
        barCategoryGap: m,
        axisKey: Zg(i),
        stackId: Xg(n)
      });
    }), AT(t);
  }
  function AT(r) {
    var e = {};
    M(r, function(n, a) {
      var i = n.axisKey, o = n.bandWidth, s = e[i] || {
        bandWidth: o,
        remainedWidth: o,
        autoWidthCount: 0,
        categoryGap: null,
        gap: "20%",
        stacks: {}
      }, l = s.stacks;
      e[i] = s;
      var u = n.stackId;
      l[u] || s.autoWidthCount++, l[u] = l[u] || {
        width: 0,
        maxWidth: 0
      };
      var f = n.barWidth;
      f && !l[u].width && (l[u].width = f, f = Math.min(s.remainedWidth, f), s.remainedWidth -= f);
      var h = n.barMaxWidth;
      h && (l[u].maxWidth = h);
      var c = n.barMinWidth;
      c && (l[u].minWidth = c);
      var v = n.barGap;
      v != null && (s.gap = v);
      var d = n.barCategoryGap;
      d != null && (s.categoryGap = d);
    });
    var t = {};
    return M(e, function(n, a) {
      t[a] = {};
      var i = n.stacks, o = n.bandWidth, s = n.categoryGap;
      if (s == null) {
        var l = Pt(i).length;
        s = Math.max(35 - l * 4, 15) + "%";
      }
      var u = Z(s, o), f = Z(n.gap, 1), h = n.remainedWidth, c = n.autoWidthCount, v = (h - u) / (c + (c - 1) * f);
      v = Math.max(v, 0), M(i, function(y) {
        var m = y.maxWidth, _ = y.minWidth;
        if (y.width) {
          var S = y.width;
          m && (S = Math.min(S, m)), _ && (S = Math.max(S, _)), y.width = S, h -= S + f * S, c--;
        } else {
          var S = v;
          m && m < S && (S = Math.min(m, h)), _ && _ > S && (S = _), S !== v && (y.width = S, h -= S + f * S, c--);
        }
      }), v = (h - u) / (c + (c - 1) * f), v = Math.max(v, 0);
      var d = 0, p;
      M(i, function(y, m) {
        y.width || (y.width = v), p = y, d += y.width * (1 + f);
      }), p && (d -= p.width * f);
      var g = -d / 2;
      M(i, function(y, m) {
        t[a][m] = t[a][m] || {
          bandWidth: o,
          offset: g,
          width: y.width
        }, g += y.width * (1 + f);
      });
    }), t;
  }
  function kz(r, e, t) {
    if (r && e) {
      var n = r[Zg(e)];
      return n != null && t != null ? n[Xg(t)] : n;
    }
  }
  function DT(r, e) {
    var t = TT(r, e), n = CT(t);
    M(t, function(a) {
      var i = a.getData(), o = a.coordinateSystem, s = o.getBaseAxis(), l = Xg(a), u = n[Zg(s)][l], f = u.offset, h = u.width;
      i.setLayout({
        bandWidth: u.bandWidth,
        offset: f,
        size: h
      });
    });
  }
  function MT(r) {
    return {
      seriesType: r,
      plan: ns(),
      reset: function(e) {
        if (IT(e)) {
          var t = e.getData(), n = e.coordinateSystem, a = n.getBaseAxis(), i = n.getOtherAxis(a), o = t.getDimensionIndex(t.mapDimension(i.dim)), s = t.getDimensionIndex(t.mapDimension(a.dim)), l = e.get("showBackground", !0), u = t.mapDimension(i.dim), f = t.getCalculationInfo("stackResultDimension"), h = ra(t, u) && !!t.getCalculationInfo("stackedOnSeries"), c = i.isHorizontal(), v = Oz(a, i), d = LT(e), p = e.get("barMinHeight") || 0, g = f && t.getDimensionIndex(f), y = t.getLayout("size"), m = t.getLayout("offset");
          return {
            progress: function(_, S) {
              for (var b = _.count, w = d && En(b * 3), T = d && l && En(b * 3), C = d && En(b), I = n.master.getRect(), L = c ? I.width : I.height, P, E = S.getStore(), R = 0; (P = _.next()) != null; ) {
                var k = E.get(h ? g : o, P), O = E.get(s, P), N = v, F = void 0;
                h && (F = +k - E.get(o, P));
                var G = void 0, W = void 0, X = void 0, K = void 0;
                if (c) {
                  var et = n.dataToPoint([k, O]);
                  if (h) {
                    var lt = n.dataToPoint([F, O]);
                    N = lt[0];
                  }
                  G = N, W = et[1] + m, X = et[0] - N, K = y, Math.abs(X) < p && (X = (X < 0 ? -1 : 1) * p);
                } else {
                  var et = n.dataToPoint([O, k]);
                  if (h) {
                    var lt = n.dataToPoint([O, F]);
                    N = lt[1];
                  }
                  G = et[0] + m, W = N, X = y, K = et[1] - N, Math.abs(K) < p && (K = (K <= 0 ? -1 : 1) * p);
                }
                d ? (w[R] = G, w[R + 1] = W, w[R + 2] = c ? X : K, T && (T[R] = c ? I.x : G, T[R + 1] = c ? W : I.y, T[R + 2] = L), C[P] = P) : S.setItemLayout(P, {
                  x: G,
                  y: W,
                  width: X,
                  height: K
                }), R += 3;
              }
              d && S.setLayout({
                largePoints: w,
                largeDataIndices: C,
                largeBackgroundPoints: T,
                valueAxisHorizontal: c
              });
            }
          };
        }
      }
    };
  }
  function IT(r) {
    return r.coordinateSystem && r.coordinateSystem.type === "cartesian2d";
  }
  function LT(r) {
    return r.pipelineContext && r.pipelineContext.large;
  }
  function Oz(r, e) {
    return e.toGlobalCoord(e.dataToCoord(e.type === "log" ? 1 : 0));
  }
  var Nz = function(r, e, t, n) {
    for (; t < n; ) {
      var a = t + n >>> 1;
      r[a][1] < e ? t = a + 1 : n = a;
    }
    return t;
  }, qg = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "time", n;
      }
      return e.prototype.getLabel = function(t) {
        var n = this.getSetting("useUTC");
        return zl(t.value, Bx[fN(Ko(this._minLevelUnit))] || Bx.second, n, this.getSetting("locale"));
      }, e.prototype.getFormattedLabel = function(t, n, a) {
        var i = this.getSetting("useUTC"), o = this.getSetting("locale");
        return hN(t, n, a, o, i);
      }, e.prototype.getTicks = function() {
        var t = this._interval, n = this._extent, a = [];
        if (!t)
          return a;
        a.push({
          value: n[0],
          level: 0
        });
        var i = this.getSetting("useUTC"), o = Wz(this._minLevelUnit, this._approxInterval, i, n);
        return a = a.concat(o), a.push({
          value: n[1],
          level: 0
        }), a;
      }, e.prototype.calcNiceExtent = function(t) {
        var n = this._extent;
        if (n[0] === n[1] && (n[0] -= Br, n[1] += Br), n[1] === -1 / 0 && n[0] === 1 / 0) {
          var a = /* @__PURE__ */ new Date();
          n[1] = +new Date(a.getFullYear(), a.getMonth(), a.getDate()), n[0] = n[1] - Br;
        }
        this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
      }, e.prototype.calcNiceTicks = function(t, n, a) {
        t = t || 10;
        var i = this._extent, o = i[1] - i[0];
        this._approxInterval = o / t, n != null && this._approxInterval < n && (this._approxInterval = n), a != null && this._approxInterval > a && (this._approxInterval = a);
        var s = ec.length, l = Math.min(Nz(ec, this._approxInterval, 0, s), s - 1);
        this._interval = ec[l][1], this._minLevelUnit = ec[Math.max(l - 1, 0)][0];
      }, e.prototype.parse = function(t) {
        return Ot(t) ? t : +mr(t);
      }, e.prototype.contain = function(t) {
        return jh(this.parse(t), this._extent);
      }, e.prototype.normalize = function(t) {
        return Jh(this.parse(t), this._extent);
      }, e.prototype.scale = function(t) {
        return Qh(t, this._extent);
      }, e.type = "time", e;
    }(na)
  ), ec = [
    // Format                           interval
    ["second", Rp],
    ["minute", kp],
    ["hour", Vl],
    ["quarter-day", Vl * 6],
    ["half-day", Vl * 12],
    ["day", Br * 1.2],
    ["half-week", Br * 3.5],
    ["week", Br * 7],
    ["month", Br * 31],
    ["quarter", Br * 95],
    ["half-year", Vx / 2],
    ["year", Vx]
    // 1Y
  ];
  function Vz(r, e, t, n) {
    var a = mr(e), i = mr(t), o = function(d) {
      return Fx(a, d, n) === Fx(i, d, n);
    }, s = function() {
      return o("year");
    }, l = function() {
      return s() && o("month");
    }, u = function() {
      return l() && o("day");
    }, f = function() {
      return u() && o("hour");
    }, h = function() {
      return f() && o("minute");
    }, c = function() {
      return h() && o("second");
    }, v = function() {
      return c() && o("millisecond");
    };
    switch (r) {
      case "year":
        return s();
      case "month":
        return l();
      case "day":
        return u();
      case "hour":
        return f();
      case "minute":
        return h();
      case "second":
        return c();
      case "millisecond":
        return v();
    }
  }
  function Bz(r, e) {
    return r /= Br, r > 16 ? 16 : r > 7.5 ? 7 : r > 3.5 ? 4 : r > 1.5 ? 2 : 1;
  }
  function zz(r) {
    var e = 30 * Br;
    return r /= e, r > 6 ? 6 : r > 3 ? 3 : r > 2 ? 2 : 1;
  }
  function Gz(r) {
    return r /= Vl, r > 12 ? 12 : r > 6 ? 6 : r > 3.5 ? 4 : r > 2 ? 2 : 1;
  }
  function PT(r, e) {
    return r /= e ? kp : Rp, r > 30 ? 30 : r > 20 ? 20 : r > 15 ? 15 : r > 10 ? 10 : r > 5 ? 5 : r > 2 ? 2 : 1;
  }
  function Fz(r) {
    return Nd(r, !0);
  }
  function Hz(r, e, t) {
    var n = new Date(r);
    switch (Ko(e)) {
      case "year":
      case "month":
        n[Hx(t)](0);
      case "day":
        n[Wx(t)](1);
      case "hour":
        n[Ux(t)](0);
      case "minute":
        n[Yx(t)](0);
      case "second":
        n[$x(t)](0), n[Xx(t)](0);
    }
    return n.getTime();
  }
  function Wz(r, e, t, n) {
    var a = 1e4, i = zx, o = 0;
    function s(L, P, E, R, k, O, N) {
      for (var F = new Date(P), G = P, W = F[R](); G < E && G <= n[1]; )
        N.push({
          value: G
        }), W += L, F[k](W), G = F.getTime();
      N.push({
        value: G,
        notAdd: !0
      });
    }
    function l(L, P, E) {
      var R = [], k = !P.length;
      if (!Vz(Ko(L), n[0], n[1], t)) {
        k && (P = [{
          // TODO Optimize. Not include so may ticks.
          value: Hz(new Date(n[0]), L, t)
        }, {
          value: n[1]
        }]);
        for (var O = 0; O < P.length - 1; O++) {
          var N = P[O].value, F = P[O + 1].value;
          if (N !== F) {
            var G = void 0, W = void 0, X = void 0, K = !1;
            switch (L) {
              case "year":
                G = Math.max(1, Math.round(e / Br / 365)), W = Np(t), X = cN(t);
                break;
              case "half-year":
              case "quarter":
              case "month":
                G = zz(e), W = jo(t), X = Hx(t);
                break;
              case "week":
              case "half-week":
              case "day":
                G = Bz(e), W = gh(t), X = Wx(t), K = !0;
                break;
              case "half-day":
              case "quarter-day":
              case "hour":
                G = Gz(e), W = Gl(t), X = Ux(t);
                break;
              case "minute":
                G = PT(e, !0), W = yh(t), X = Yx(t);
                break;
              case "second":
                G = PT(e, !1), W = mh(t), X = $x(t);
                break;
              case "millisecond":
                G = Fz(e), W = _h(t), X = Xx(t);
                break;
            }
            s(G, N, F, W, X, K, R), L === "year" && E.length > 1 && O === 0 && E.unshift({
              value: E[0].value - G
            });
          }
        }
        for (var O = 0; O < R.length; O++)
          E.push(R[O]);
        return R;
      }
    }
    for (var u = [], f = [], h = 0, c = 0, v = 0; v < i.length && o++ < a; ++v) {
      var d = Ko(i[v]);
      if (uN(i[v])) {
        l(i[v], u[u.length - 1] || [], f);
        var p = i[v + 1] ? Ko(i[v + 1]) : null;
        if (d !== p) {
          if (f.length) {
            c = h, f.sort(function(L, P) {
              return L.value - P.value;
            });
            for (var g = [], y = 0; y < f.length; ++y) {
              var m = f[y].value;
              (y === 0 || f[y - 1].value !== m) && (g.push(f[y]), m >= n[0] && m <= n[1] && h++);
            }
            var _ = (n[1] - n[0]) / e;
            if (h > _ * 1.5 && c > _ / 1.5 || (u.push(g), h > _ || r === i[v]))
              break;
          }
          f = [];
        }
      }
    }
    o >= a && ae("Exceed safe limit.");
    for (var S = Ht(Y(u, function(L) {
      return Ht(L, function(P) {
        return P.value >= n[0] && P.value <= n[1] && !P.notAdd;
      });
    }), function(L) {
      return L.length > 0;
    }), b = [], w = S.length - 1, v = 0; v < S.length; ++v)
      for (var T = S[v], C = 0; C < T.length; ++C)
        b.push({
          value: T[C].value,
          level: w - v
        });
    b.sort(function(L, P) {
      return L.value - P.value;
    });
    for (var I = [], v = 0; v < b.length; ++v)
      (v === 0 || b[v].value !== b[v - 1].value) && I.push(b[v]);
    return I;
  }
  Pn.registerClass(qg);
  var ET = Pn.prototype, su = na.prototype, Uz = ie, Yz = Math.floor, $z = Math.ceil, rc = Math.pow, un = Math.log, Kg = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "log", t.base = 10, t._originalScale = new na(), t._interval = 0, t;
      }
      return e.prototype.getTicks = function(t) {
        var n = this._originalScale, a = this._extent, i = n.getExtent(), o = su.getTicks.call(this, t);
        return Y(o, function(s) {
          var l = s.value, u = ie(rc(this.base, l));
          return u = l === a[0] && this._fixMin ? nc(u, i[0]) : u, u = l === a[1] && this._fixMax ? nc(u, i[1]) : u, {
            value: u
          };
        }, this);
      }, e.prototype.setExtent = function(t, n) {
        var a = un(this.base);
        t = un(Math.max(0, t)) / a, n = un(Math.max(0, n)) / a, su.setExtent.call(this, t, n);
      }, e.prototype.getExtent = function() {
        var t = this.base, n = ET.getExtent.call(this);
        n[0] = rc(t, n[0]), n[1] = rc(t, n[1]);
        var a = this._originalScale, i = a.getExtent();
        return this._fixMin && (n[0] = nc(n[0], i[0])), this._fixMax && (n[1] = nc(n[1], i[1])), n;
      }, e.prototype.unionExtent = function(t) {
        this._originalScale.unionExtent(t);
        var n = this.base;
        t[0] = un(t[0]) / un(n), t[1] = un(t[1]) / un(n), ET.unionExtent.call(this, t);
      }, e.prototype.unionExtentFromData = function(t, n) {
        this.unionExtent(t.getApproximateExtent(n));
      }, e.prototype.calcNiceTicks = function(t) {
        t = t || 10;
        var n = this._extent, a = n[1] - n[0];
        if (!(a === 1 / 0 || a <= 0)) {
          var i = $1(a), o = t / a * i;
          for (o <= 0.5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0; )
            i *= 10;
          var s = [ie($z(n[0] / i) * i), ie(Yz(n[1] / i) * i)];
          this._interval = i, this._niceExtent = s;
        }
      }, e.prototype.calcNiceExtent = function(t) {
        su.calcNiceExtent.call(this, t), this._fixMin = t.fixMin, this._fixMax = t.fixMax;
      }, e.prototype.parse = function(t) {
        return t;
      }, e.prototype.contain = function(t) {
        return t = un(t) / un(this.base), jh(t, this._extent);
      }, e.prototype.normalize = function(t) {
        return t = un(t) / un(this.base), Jh(t, this._extent);
      }, e.prototype.scale = function(t) {
        return t = Qh(t, this._extent), rc(this.base, t);
      }, e.type = "log", e;
    }(Pn)
  ), RT = Kg.prototype;
  RT.getMinorTicks = su.getMinorTicks, RT.getLabel = su.getLabel;
  function nc(r, e) {
    return Uz(r, rn(e));
  }
  Pn.registerClass(Kg);
  var Xz = (
    /** @class */
    function() {
      function r(e, t, n) {
        this._prepareParams(e, t, n);
      }
      return r.prototype._prepareParams = function(e, t, n) {
        n[1] < n[0] && (n = [NaN, NaN]), this._dataMin = n[0], this._dataMax = n[1];
        var a = this._isOrdinal = e.type === "ordinal";
        this._needCrossZero = e.type === "interval" && t.getNeedCrossZero && t.getNeedCrossZero();
        var i = this._modelMinRaw = t.get("min", !0);
        rt(i) ? this._modelMinNum = ac(e, i({
          min: n[0],
          max: n[1]
        })) : i !== "dataMin" && (this._modelMinNum = ac(e, i));
        var o = this._modelMaxRaw = t.get("max", !0);
        if (rt(o) ? this._modelMaxNum = ac(e, o({
          min: n[0],
          max: n[1]
        })) : o !== "dataMax" && (this._modelMaxNum = ac(e, o)), a)
          this._axisDataLen = t.getCategories().length;
        else {
          var s = t.get("boundaryGap"), l = U(s) ? s : [s || 0, s || 0];
          typeof l[0] == "boolean" || typeof l[1] == "boolean" ? (console.warn('Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.'), this._boundaryGapInner = [0, 0]) : this._boundaryGapInner = [en(l[0], 1), en(l[1], 1)];
        }
      }, r.prototype.calculate = function() {
        var e = this._isOrdinal, t = this._dataMin, n = this._dataMax, a = this._axisDataLen, i = this._boundaryGapInner, o = e ? null : n - t || Math.abs(t), s = this._modelMinRaw === "dataMin" ? t : this._modelMinNum, l = this._modelMaxRaw === "dataMax" ? n : this._modelMaxNum, u = s != null, f = l != null;
        s == null && (s = e ? a ? 0 : NaN : t - i[0] * o), l == null && (l = e ? a ? a - 1 : NaN : n + i[1] * o), (s == null || !isFinite(s)) && (s = NaN), (l == null || !isFinite(l)) && (l = NaN);
        var h = ca(s) || ca(l) || e && !a;
        this._needCrossZero && (s > 0 && l > 0 && !u && (s = 0), s < 0 && l < 0 && !f && (l = 0));
        var c = this._determinedMin, v = this._determinedMax;
        return c != null && (s = c, u = !0), v != null && (l = v, f = !0), {
          min: s,
          max: l,
          minFixed: u,
          maxFixed: f,
          isBlank: h
        };
      }, r.prototype.modifyDataMinMax = function(e, t) {
        st(!this.frozen), this[qz[e]] = t;
      }, r.prototype.setDeterminedMinMax = function(e, t) {
        var n = Zz[e];
        st(!this.frozen && this[n] == null), this[n] = t;
      }, r.prototype.freeze = function() {
        this.frozen = !0;
      }, r;
    }()
  ), Zz = {
    min: "_determinedMin",
    max: "_determinedMax"
  }, qz = {
    min: "_dataMin",
    max: "_dataMax"
  };
  function kT(r, e, t) {
    var n = r.rawExtentInfo;
    return n || (n = new Xz(r, e, t), r.rawExtentInfo = n, n);
  }
  function ac(r, e) {
    return e == null ? null : ca(e) ? NaN : r.parse(e);
  }
  function OT(r, e) {
    var t = r.type, n = kT(r, e, r.getExtent()).calculate();
    r.setBlank(n.isBlank);
    var a = n.min, i = n.max, o = e.ecModel;
    if (o && t === "time") {
      var s = TT("bar", o), l = !1;
      if (M(s, function(h) {
        l = l || h.getBaseAxis() === e.axis;
      }), l) {
        var u = CT(s), f = Kz(a, i, e, u);
        a = f.min, i = f.max;
      }
    }
    return {
      extent: [a, i],
      // "fix" means "fixed", the value should not be
      // changed in the subsequent steps.
      fixMin: n.minFixed,
      fixMax: n.maxFixed
    };
  }
  function Kz(r, e, t, n) {
    var a = t.axis.getExtent(), i = a[1] - a[0], o = kz(n, t.axis);
    if (o === void 0)
      return {
        min: r,
        max: e
      };
    var s = 1 / 0;
    M(o, function(v) {
      s = Math.min(v.offset, s);
    });
    var l = -1 / 0;
    M(o, function(v) {
      l = Math.max(v.offset + v.width, l);
    }), s = Math.abs(s), l = Math.abs(l);
    var u = s + l, f = e - r, h = 1 - (s + l) / i, c = f / h - f;
    return e += c * (l / u), r -= c * (s / u), {
      min: r,
      max: e
    };
  }
  function Xi(r, e) {
    var t = e, n = OT(r, t), a = n.extent, i = t.get("splitNumber");
    r instanceof Kg && (r.base = t.get("logBase"));
    var o = r.type, s = t.get("interval"), l = o === "interval" || o === "time";
    r.setExtent(a[0], a[1]), r.calcNiceExtent({
      splitNumber: i,
      fixMin: n.fixMin,
      fixMax: n.fixMax,
      minInterval: l ? t.get("minInterval") : null,
      maxInterval: l ? t.get("maxInterval") : null
    }), s != null && r.setInterval && r.setInterval(s);
  }
  function lu(r, e) {
    if (e = e || r.get("type"), e)
      switch (e) {
        case "category":
          return new tc({
            ordinalMeta: r.getOrdinalMeta ? r.getOrdinalMeta() : r.getCategories(),
            extent: [1 / 0, -1 / 0]
          });
        case "time":
          return new qg({
            locale: r.ecModel.getLocaleModel(),
            useUTC: r.ecModel.get("useUTC")
          });
        default:
          return new (Pn.getClass(e) || na)();
      }
  }
  function jz(r) {
    var e = r.scale.getExtent(), t = e[0], n = e[1];
    return !(t > 0 && n > 0 || t < 0 && n < 0);
  }
  function uu(r) {
    var e = r.getLabelModel().get("formatter"), t = r.type === "category" ? r.scale.getExtent()[0] : null;
    return r.scale.type === "time" ? function(n) {
      return function(a, i) {
        return r.scale.getFormattedLabel(a, i, n);
      };
    }(e) : j(e) ? function(n) {
      return function(a) {
        var i = r.scale.getLabel(a), o = n.replace("{value}", i ?? "");
        return o;
      };
    }(e) : rt(e) ? function(n) {
      return function(a, i) {
        return t != null && (i = a.value - t), n(jg(r, a), i, a.level != null ? {
          level: a.level
        } : null);
      };
    }(e) : function(n) {
      return r.scale.getLabel(n);
    };
  }
  function jg(r, e) {
    return r.type === "category" ? r.scale.getLabel(e) : e.value;
  }
  function Jz(r) {
    var e = r.model, t = r.scale;
    if (!(!e.get(["axisLabel", "show"]) || t.isBlank())) {
      var n, a, i = t.getExtent();
      t instanceof tc ? a = t.count() : (n = t.getTicks(), a = n.length);
      var o = r.getLabelModel(), s = uu(r), l, u = 1;
      a > 40 && (u = Math.ceil(a / 40));
      for (var f = 0; f < a; f += u) {
        var h = n ? n[f] : {
          value: i[0] + f
        }, c = s(h, f), v = o.getTextRect(c), d = Qz(v, o.get("rotate") || 0);
        l ? l.union(d) : l = d;
      }
      return l;
    }
  }
  function Qz(r, e) {
    var t = e * Math.PI / 180, n = r.width, a = r.height, i = n * Math.abs(Math.cos(t)) + Math.abs(a * Math.sin(t)), o = n * Math.abs(Math.sin(t)) + Math.abs(a * Math.cos(t)), s = new xt(r.x, r.y, i, o);
    return s;
  }
  function Jg(r) {
    var e = r.get("interval");
    return e ?? "auto";
  }
  function NT(r) {
    return r.type === "category" && Jg(r.getLabelModel()) === 0;
  }
  function ic(r, e) {
    var t = {};
    return M(r.mapDimensionsAll(e), function(n) {
      t[Hg(r, n)] = !0;
    }), Pt(t);
  }
  function t5(r, e, t) {
    e && M(ic(e, t), function(n) {
      var a = e.getApproximateExtent(n);
      a[0] < r[0] && (r[0] = a[0]), a[1] > r[1] && (r[1] = a[1]);
    });
  }
  var vs = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getNeedCrossZero = function() {
        var e = this.option;
        return !e.scale;
      }, r.prototype.getCoordSysModel = function() {
      }, r;
    }()
  );
  function e5(r) {
    return Ln(null, r);
  }
  var r5 = {
    isDimensionStacked: ra,
    enableDataStack: ST,
    getStackedDimension: Hg
  };
  function n5(r, e) {
    var t = e;
    e instanceof Gt || (t = new Gt(e));
    var n = lu(t);
    return n.setExtent(r[0], r[1]), Xi(n, t), n;
  }
  function a5(r) {
    le(r, vs);
  }
  function i5(r, e) {
    return e = e || {}, jt(r, null, null, e.state !== "normal");
  }
  var o5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    createList: e5,
    getLayoutRect: ye,
    dataStack: r5,
    createScale: n5,
    mixinAxisModelCommonMethods: a5,
    getECData: gt,
    createTextStyle: i5,
    createDimensions: dz,
    createSymbol: ve,
    enableHoverEmphasis: Da
  }), s5 = 1e-8;
  function VT(r, e) {
    return Math.abs(r - e) < s5;
  }
  function Zi(r, e, t) {
    var n = 0, a = r[0];
    if (!a)
      return !1;
    for (var i = 1; i < r.length; i++) {
      var o = r[i];
      n += qn(a[0], a[1], o[0], o[1], e, t), a = o;
    }
    var s = r[0];
    return (!VT(a[0], s[0]) || !VT(a[1], s[1])) && (n += qn(a[0], a[1], s[0], s[1], e, t)), n !== 0;
  }
  var l5 = [];
  function Qg(r, e) {
    for (var t = 0; t < r.length; t++)
      Ie(r[t], r[t], e);
  }
  function BT(r, e, t, n) {
    for (var a = 0; a < r.length; a++) {
      var i = r[a];
      n && (i = n.project(i)), i && isFinite(i[0]) && isFinite(i[1]) && (Wn(e, e, i), Un(t, t, i));
    }
  }
  function u5(r) {
    for (var e = 0, t = 0, n = 0, a = r.length, i = r[a - 1][0], o = r[a - 1][1], s = 0; s < a; s++) {
      var l = r[s][0], u = r[s][1], f = i * u - l * o;
      e += f, t += (i + l) * f, n += (o + u) * f, i = l, o = u;
    }
    return e ? [t / e / 3, n / e / 3, e] : [r[0][0] || 0, r[0][1] || 0];
  }
  var zT = (
    /** @class */
    function() {
      function r(e) {
        this.name = e;
      }
      return r.prototype.setCenter = function(e) {
        this._center = e;
      }, r.prototype.getCenter = function() {
        var e = this._center;
        return e || (e = this._center = this.calcCenter()), e;
      }, r;
    }()
  ), GT = (
    /** @class */
    function() {
      function r(e, t) {
        this.type = "polygon", this.exterior = e, this.interiors = t;
      }
      return r;
    }()
  ), FT = (
    /** @class */
    function() {
      function r(e) {
        this.type = "linestring", this.points = e;
      }
      return r;
    }()
  ), HT = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this, t) || this;
        return i.type = "geoJSON", i.geometries = n, i._center = a && [a[0], a[1]], i;
      }
      return e.prototype.calcCenter = function() {
        for (var t = this.geometries, n, a = 0, i = 0; i < t.length; i++) {
          var o = t[i], s = o.exterior, l = s && s.length;
          l > a && (n = o, a = l);
        }
        if (n)
          return u5(n.exterior);
        var u = this.getBoundingRect();
        return [u.x + u.width / 2, u.y + u.height / 2];
      }, e.prototype.getBoundingRect = function(t) {
        var n = this._rect;
        if (n && !t)
          return n;
        var a = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0], o = this.geometries;
        return M(o, function(s) {
          s.type === "polygon" ? BT(s.exterior, a, i, t) : M(s.points, function(l) {
            BT(l, a, i, t);
          });
        }), isFinite(a[0]) && isFinite(a[1]) && isFinite(i[0]) && isFinite(i[1]) || (a[0] = a[1] = i[0] = i[1] = 0), n = new xt(a[0], a[1], i[0] - a[0], i[1] - a[1]), t || (this._rect = n), n;
      }, e.prototype.contain = function(t) {
        var n = this.getBoundingRect(), a = this.geometries;
        if (!n.contain(t[0], t[1]))
          return !1;
        t:
          for (var i = 0, o = a.length; i < o; i++) {
            var s = a[i];
            if (s.type === "polygon") {
              var l = s.exterior, u = s.interiors;
              if (Zi(l, t[0], t[1])) {
                for (var f = 0; f < (u ? u.length : 0); f++)
                  if (Zi(u[f], t[0], t[1]))
                    continue t;
                return !0;
              }
            }
          }
        return !1;
      }, e.prototype.transformTo = function(t, n, a, i) {
        var o = this.getBoundingRect(), s = o.width / o.height;
        a ? i || (i = a / s) : a = s * i;
        for (var l = new xt(t, n, a, i), u = o.calculateTransform(l), f = this.geometries, h = 0; h < f.length; h++) {
          var c = f[h];
          c.type === "polygon" ? (Qg(c.exterior, u), M(c.interiors, function(v) {
            Qg(v, u);
          })) : M(c.points, function(v) {
            Qg(v, u);
          });
        }
        o = this._rect, o.copy(l), this._center = [o.x + o.width / 2, o.y + o.height / 2];
      }, e.prototype.cloneShallow = function(t) {
        t == null && (t = this.name);
        var n = new e(t, this.geometries, this._center);
        return n._rect = this._rect, n.transformTo = null, n;
      }, e;
    }(zT)
  ), f5 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n) {
        var a = r.call(this, t) || this;
        return a.type = "geoSVG", a._elOnlyForCalculate = n, a;
      }
      return e.prototype.calcCenter = function() {
        for (var t = this._elOnlyForCalculate, n = t.getBoundingRect(), a = [n.x + n.width / 2, n.y + n.height / 2], i = qs(l5), o = t; o && !o.isGeoSVGGraphicRoot; )
          mn(i, o.getLocalTransform(), i), o = o.parent;
        return si(i, i), Ie(a, a, i), a;
      }, e;
    }(zT)
  );
  function h5(r) {
    if (!r.UTF8Encoding)
      return r;
    var e = r, t = e.UTF8Scale;
    t == null && (t = 1024);
    var n = e.features;
    return M(n, function(a) {
      var i = a.geometry, o = i.encodeOffsets, s = i.coordinates;
      if (o)
        switch (i.type) {
          case "LineString":
            i.coordinates = WT(s, o, t);
            break;
          case "Polygon":
            ty(s, o, t);
            break;
          case "MultiLineString":
            ty(s, o, t);
            break;
          case "MultiPolygon":
            M(s, function(l, u) {
              return ty(l, o[u], t);
            });
        }
    }), e.UTF8Encoding = !1, e;
  }
  function ty(r, e, t) {
    for (var n = 0; n < r.length; n++)
      r[n] = WT(r[n], e[n], t);
  }
  function WT(r, e, t) {
    for (var n = [], a = e[0], i = e[1], o = 0; o < r.length; o += 2) {
      var s = r.charCodeAt(o) - 64, l = r.charCodeAt(o + 1) - 64;
      s = s >> 1 ^ -(s & 1), l = l >> 1 ^ -(l & 1), s += a, l += i, a = s, i = l, n.push([s / t, l / t]);
    }
    return n;
  }
  function ey(r, e) {
    return r = h5(r), Y(Ht(r.features, function(t) {
      return t.geometry && t.properties && t.geometry.coordinates.length > 0;
    }), function(t) {
      var n = t.properties, a = t.geometry, i = [];
      switch (a.type) {
        case "Polygon":
          var o = a.coordinates;
          i.push(new GT(o[0], o.slice(1)));
          break;
        case "MultiPolygon":
          M(a.coordinates, function(l) {
            l[0] && i.push(new GT(l[0], l.slice(1)));
          });
          break;
        case "LineString":
          i.push(new FT([a.coordinates]));
          break;
        case "MultiLineString":
          i.push(new FT(a.coordinates));
      }
      var s = new HT(n[e || "name"], i, n.cp);
      return s.properties = n, s;
    });
  }
  var c5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    linearMap: Wt,
    round: ie,
    asc: yr,
    getPrecision: rn,
    getPrecisionSafe: Nf,
    getPixelPrecision: Rd,
    getPercentWithPrecision: WR,
    MAX_SAFE_INTEGER: kd,
    remRadian: Od,
    isRadianAroundZero: pl,
    parseDate: mr,
    quantity: $1,
    quantityExponent: gl,
    nice: Nd,
    quantile: Vf,
    reformIntervals: Vd,
    isNumeric: Bf,
    numericToNumber: xn
  }), v5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    parse: mr,
    format: zl
  }), d5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    extendShape: mx,
    extendPath: _x,
    makePath: El,
    makeImage: wp,
    mergePath: _r,
    resizePath: bp,
    createIcon: $o,
    updateProps: Vt,
    initProps: te,
    getTransform: La,
    clipPointsByRect: Tp,
    clipRectByRect: bx,
    registerShape: Vr,
    getShapeClass: lh,
    Group: ct,
    Image: Te,
    Text: kt,
    Circle: Nr,
    Ellipse: Dl,
    Sector: Be,
    Ring: Go,
    Polygon: ze,
    Polyline: Ge,
    Rect: Rt,
    Line: Se,
    BezierCurve: Fo,
    Arc: Ll,
    IncrementalDisplayable: px,
    CompoundPath: rh,
    LinearGradient: Ho,
    RadialGradient: _p,
    BoundingRect: xt
  }), p5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    addCommas: Vp,
    toCamelCase: Bp,
    normalizeCssArray: ki,
    encodeHTML: Ze,
    formatTpl: Fp,
    getTooltipMarker: qx,
    formatTime: pN,
    capitalFirst: gN,
    truncateText: fS,
    getTextRect: vN
  }), g5 = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    map: Y,
    each: M,
    indexOf: bt,
    inherits: Bv,
    reduce: Ar,
    filter: Ht,
    bind: J,
    curry: yt,
    isArray: U,
    isString: j,
    isObject: it,
    isFunction: rt,
    extend: H,
    defaults: ot,
    clone: ht,
    merge: mt
  }), fu = Nt();
  function y5(r) {
    return r.type === "category" ? _5(r) : x5(r);
  }
  function m5(r, e) {
    return r.type === "category" ? S5(r, e) : {
      ticks: Y(r.scale.getTicks(), function(t) {
        return t.value;
      })
    };
  }
  function _5(r) {
    var e = r.getLabelModel(), t = UT(r, e);
    return !e.get("show") || r.scale.isBlank() ? {
      labels: [],
      labelCategoryInterval: t.labelCategoryInterval
    } : t;
  }
  function UT(r, e) {
    var t = YT(r, "labels"), n = Jg(e), a = $T(t, n);
    if (a)
      return a;
    var i, o;
    return rt(n) ? i = qT(r, n) : (o = n === "auto" ? w5(r) : n, i = ZT(r, o)), XT(t, n, {
      labels: i,
      labelCategoryInterval: o
    });
  }
  function S5(r, e) {
    var t = YT(r, "ticks"), n = Jg(e), a = $T(t, n);
    if (a)
      return a;
    var i, o;
    if ((!e.get("show") || r.scale.isBlank()) && (i = []), rt(n))
      i = qT(r, n, !0);
    else if (n === "auto") {
      var s = UT(r, r.getLabelModel());
      o = s.labelCategoryInterval, i = Y(s.labels, function(l) {
        return l.tickValue;
      });
    } else
      o = n, i = ZT(r, o, !0);
    return XT(t, n, {
      ticks: i,
      tickCategoryInterval: o
    });
  }
  function x5(r) {
    var e = r.scale.getTicks(), t = uu(r);
    return {
      labels: Y(e, function(n, a) {
        return {
          level: n.level,
          formattedLabel: t(n, a),
          rawLabel: r.scale.getLabel(n),
          tickValue: n.value
        };
      })
    };
  }
  function YT(r, e) {
    return fu(r)[e] || (fu(r)[e] = []);
  }
  function $T(r, e) {
    for (var t = 0; t < r.length; t++)
      if (r[t].key === e)
        return r[t].value;
  }
  function XT(r, e, t) {
    return r.push({
      key: e,
      value: t
    }), t;
  }
  function w5(r) {
    var e = fu(r).autoInterval;
    return e ?? (fu(r).autoInterval = r.calculateCategoryInterval());
  }
  function b5(r) {
    var e = T5(r), t = uu(r), n = (e.axisRotate - e.labelRotate) / 180 * Math.PI, a = r.scale, i = a.getExtent(), o = a.count();
    if (i[1] - i[0] < 1)
      return 0;
    var s = 1;
    o > 40 && (s = Math.max(1, Math.floor(o / 40)));
    for (var l = i[0], u = r.dataToCoord(l + 1) - r.dataToCoord(l), f = Math.abs(u * Math.cos(n)), h = Math.abs(u * Math.sin(n)), c = 0, v = 0; l <= i[1]; l += s) {
      var d = 0, p = 0, g = cl(t({
        value: l
      }), e.font, "center", "top");
      d = g.width * 1.3, p = g.height * 1.3, c = Math.max(c, d, 7), v = Math.max(v, p, 7);
    }
    var y = c / f, m = v / h;
    isNaN(y) && (y = 1 / 0), isNaN(m) && (m = 1 / 0);
    var _ = Math.max(0, Math.floor(Math.min(y, m))), S = fu(r.model), b = r.getExtent(), w = S.lastAutoInterval, T = S.lastTickCount;
    return w != null && T != null && Math.abs(w - _) <= 1 && Math.abs(T - o) <= 1 && w > _ && S.axisExtent0 === b[0] && S.axisExtent1 === b[1] ? _ = w : (S.lastTickCount = o, S.lastAutoInterval = _, S.axisExtent0 = b[0], S.axisExtent1 = b[1]), _;
  }
  function T5(r) {
    var e = r.getLabelModel();
    return {
      axisRotate: r.getRotate ? r.getRotate() : r.isHorizontal && !r.isHorizontal() ? 90 : 0,
      labelRotate: e.get("rotate") || 0,
      font: e.getFont()
    };
  }
  function ZT(r, e, t) {
    var n = uu(r), a = r.scale, i = a.getExtent(), o = r.getLabelModel(), s = [], l = Math.max((e || 0) + 1, 1), u = i[0], f = a.count();
    u !== 0 && l > 1 && f / l > 2 && (u = Math.round(Math.ceil(u / l) * l));
    var h = NT(r), c = o.get("showMinLabel") || h, v = o.get("showMaxLabel") || h;
    c && u !== i[0] && p(i[0]);
    for (var d = u; d <= i[1]; d += l)
      p(d);
    v && d - l !== i[1] && p(i[1]);
    function p(g) {
      var y = {
        value: g
      };
      s.push(t ? g : {
        formattedLabel: n(y),
        rawLabel: a.getLabel(y),
        tickValue: g
      });
    }
    return s;
  }
  function qT(r, e, t) {
    var n = r.scale, a = uu(r), i = [];
    return M(n.getTicks(), function(o) {
      var s = n.getLabel(o), l = o.value;
      e(o.value, s) && i.push(t ? l : {
        formattedLabel: a(o),
        rawLabel: s,
        tickValue: l
      });
    }), i;
  }
  var KT = [0, 1], Ur = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.onBand = !1, this.inverse = !1, this.dim = e, this.scale = t, this._extent = n || [0, 0];
      }
      return r.prototype.contain = function(e) {
        var t = this._extent, n = Math.min(t[0], t[1]), a = Math.max(t[0], t[1]);
        return e >= n && e <= a;
      }, r.prototype.containData = function(e) {
        return this.scale.contain(e);
      }, r.prototype.getExtent = function() {
        return this._extent.slice();
      }, r.prototype.getPixelPrecision = function(e) {
        return Rd(e || this.scale.getExtent(), this._extent);
      }, r.prototype.setExtent = function(e, t) {
        var n = this._extent;
        n[0] = e, n[1] = t;
      }, r.prototype.dataToCoord = function(e, t) {
        var n = this._extent, a = this.scale;
        return e = a.normalize(e), this.onBand && a.type === "ordinal" && (n = n.slice(), jT(n, a.count())), Wt(e, KT, n, t);
      }, r.prototype.coordToData = function(e, t) {
        var n = this._extent, a = this.scale;
        this.onBand && a.type === "ordinal" && (n = n.slice(), jT(n, a.count()));
        var i = Wt(e, n, KT, t);
        return this.scale.scale(i);
      }, r.prototype.pointToData = function(e, t) {
      }, r.prototype.getTicksCoords = function(e) {
        e = e || {};
        var t = e.tickModel || this.getTickModel(), n = m5(this, t), a = n.ticks, i = Y(a, function(s) {
          return {
            coord: this.dataToCoord(this.scale.type === "ordinal" ? this.scale.getRawOrdinalNumber(s) : s),
            tickValue: s
          };
        }, this), o = t.get("alignWithLabel");
        return C5(this, i, o, e.clamp), i;
      }, r.prototype.getMinorTicksCoords = function() {
        if (this.scale.type === "ordinal")
          return [];
        var e = this.model.getModel("minorTick"), t = e.get("splitNumber");
        t > 0 && t < 100 || (t = 5);
        var n = this.scale.getMinorTicks(t), a = Y(n, function(i) {
          return Y(i, function(o) {
            return {
              coord: this.dataToCoord(o),
              tickValue: o
            };
          }, this);
        }, this);
        return a;
      }, r.prototype.getViewLabels = function() {
        return y5(this).labels;
      }, r.prototype.getLabelModel = function() {
        return this.model.getModel("axisLabel");
      }, r.prototype.getTickModel = function() {
        return this.model.getModel("axisTick");
      }, r.prototype.getBandWidth = function() {
        var e = this._extent, t = this.scale.getExtent(), n = t[1] - t[0] + (this.onBand ? 1 : 0);
        n === 0 && (n = 1);
        var a = Math.abs(e[1] - e[0]);
        return Math.abs(a) / n;
      }, r.prototype.calculateCategoryInterval = function() {
        return b5(this);
      }, r;
    }()
  );
  function jT(r, e) {
    var t = r[1] - r[0], n = e, a = t / n / 2;
    r[0] += a, r[1] -= a;
  }
  function C5(r, e, t, n) {
    var a = e.length;
    if (!r.onBand || t || !a)
      return;
    var i = r.getExtent(), o, s;
    if (a === 1)
      e[0].coord = i[0], o = e[1] = {
        coord: i[0]
      };
    else {
      var l = e[a - 1].tickValue - e[0].tickValue, u = (e[a - 1].coord - e[0].coord) / l;
      M(e, function(v) {
        v.coord -= u / 2;
      });
      var f = r.scale.getExtent();
      s = 1 + f[1] - e[a - 1].tickValue, o = {
        coord: e[a - 1].coord + u * s
      }, e.push(o);
    }
    var h = i[0] > i[1];
    c(e[0].coord, i[0]) && (n ? e[0].coord = i[0] : e.shift()), n && c(i[0], e[0].coord) && e.unshift({
      coord: i[0]
    }), c(i[1], o.coord) && (n ? o.coord = i[1] : e.pop()), n && c(o.coord, i[1]) && e.push({
      coord: i[1]
    });
    function c(v, d) {
      return v = ie(v), d = ie(d), h ? v > d : v < d;
    }
  }
  function A5(r) {
    var e = Ct.extend(r);
    return Ct.registerClass(e), e;
  }
  function D5(r) {
    var e = Jt.extend(r);
    return Jt.registerClass(e), e;
  }
  function M5(r) {
    var e = Zt.extend(r);
    return Zt.registerClass(e), e;
  }
  function I5(r) {
    var e = $t.extend(r);
    return $t.registerClass(e), e;
  }
  var hu = Math.PI * 2, qi = An.CMD, L5 = ["top", "right", "bottom", "left"];
  function P5(r, e, t, n, a) {
    var i = t.width, o = t.height;
    switch (r) {
      case "top":
        n.set(t.x + i / 2, t.y - e), a.set(0, -1);
        break;
      case "bottom":
        n.set(t.x + i / 2, t.y + o + e), a.set(0, 1);
        break;
      case "left":
        n.set(t.x - e, t.y + o / 2), a.set(-1, 0);
        break;
      case "right":
        n.set(t.x + i + e, t.y + o / 2), a.set(1, 0);
        break;
    }
  }
  function E5(r, e, t, n, a, i, o, s, l) {
    o -= r, s -= e;
    var u = Math.sqrt(o * o + s * s);
    o /= u, s /= u;
    var f = o * t + r, h = s * t + e;
    if (Math.abs(n - a) % hu < 1e-4)
      return l[0] = f, l[1] = h, u - t;
    if (i) {
      var c = n;
      n = Ca(a), a = Ca(c);
    } else
      n = Ca(n), a = Ca(a);
    n > a && (a += hu);
    var v = Math.atan2(s, o);
    if (v < 0 && (v += hu), v >= n && v <= a || v + hu >= n && v + hu <= a)
      return l[0] = f, l[1] = h, u - t;
    var d = t * Math.cos(n) + r, p = t * Math.sin(n) + e, g = t * Math.cos(a) + r, y = t * Math.sin(a) + e, m = (d - o) * (d - o) + (p - s) * (p - s), _ = (g - o) * (g - o) + (y - s) * (y - s);
    return m < _ ? (l[0] = d, l[1] = p, Math.sqrt(m)) : (l[0] = g, l[1] = y, Math.sqrt(_));
  }
  function oc(r, e, t, n, a, i, o, s) {
    var l = a - r, u = i - e, f = t - r, h = n - e, c = Math.sqrt(f * f + h * h);
    f /= c, h /= c;
    var v = l * f + u * h, d = v / c;
    s && (d = Math.min(Math.max(d, 0), 1)), d *= c;
    var p = o[0] = r + d * f, g = o[1] = e + d * h;
    return Math.sqrt((p - a) * (p - a) + (g - i) * (g - i));
  }
  function JT(r, e, t, n, a, i, o) {
    t < 0 && (r = r + t, t = -t), n < 0 && (e = e + n, n = -n);
    var s = r + t, l = e + n, u = o[0] = Math.min(Math.max(a, r), s), f = o[1] = Math.min(Math.max(i, e), l);
    return Math.sqrt((u - a) * (u - a) + (f - i) * (f - i));
  }
  var fn = [];
  function R5(r, e, t) {
    var n = JT(e.x, e.y, e.width, e.height, r.x, r.y, fn);
    return t.set(fn[0], fn[1]), n;
  }
  function k5(r, e, t) {
    for (var n = 0, a = 0, i = 0, o = 0, s, l, u = 1 / 0, f = e.data, h = r.x, c = r.y, v = 0; v < f.length; ) {
      var d = f[v++];
      v === 1 && (n = f[v], a = f[v + 1], i = n, o = a);
      var p = u;
      switch (d) {
        case qi.M:
          i = f[v++], o = f[v++], n = i, a = o;
          break;
        case qi.L:
          p = oc(n, a, f[v], f[v + 1], h, c, fn, !0), n = f[v++], a = f[v++];
          break;
        case qi.C:
          p = d1(n, a, f[v++], f[v++], f[v++], f[v++], f[v], f[v + 1], h, c, fn), n = f[v++], a = f[v++];
          break;
        case qi.Q:
          p = g1(n, a, f[v++], f[v++], f[v], f[v + 1], h, c, fn), n = f[v++], a = f[v++];
          break;
        case qi.A:
          var g = f[v++], y = f[v++], m = f[v++], _ = f[v++], S = f[v++], b = f[v++];
          v += 1;
          var w = !!(1 - f[v++]);
          s = Math.cos(S) * m + g, l = Math.sin(S) * _ + y, v <= 1 && (i = s, o = l);
          var T = (h - g) * _ / m + g;
          p = E5(g, y, _, S, S + b, w, T, c, fn), n = Math.cos(S + b) * m + g, a = Math.sin(S + b) * _ + y;
          break;
        case qi.R:
          i = n = f[v++], o = a = f[v++];
          var C = f[v++], I = f[v++];
          p = JT(i, o, C, I, h, c, fn);
          break;
        case qi.Z:
          p = oc(n, a, i, o, h, c, fn, !0), n = i, a = o;
          break;
      }
      p < u && (u = p, t.set(fn[0], fn[1]));
    }
    return u;
  }
  var hn = new St(), Qt = new St(), de = new St(), Rn = new St(), kn = new St();
  function QT(r, e) {
    if (r) {
      var t = r.getTextGuideLine(), n = r.getTextContent();
      if (n && t) {
        var a = r.textGuideLineConfig || {}, i = [[0, 0], [0, 0], [0, 0]], o = a.candidates || L5, s = n.getBoundingRect().clone();
        s.applyTransform(n.getComputedTransform());
        var l = 1 / 0, u = a.anchor, f = r.getComputedTransform(), h = f && si([], f), c = e.get("length2") || 0;
        u && de.copy(u);
        for (var v = 0; v < o.length; v++) {
          var d = o[v];
          P5(d, 0, s, hn, Rn), St.scaleAndAdd(Qt, hn, Rn, c), Qt.transform(h);
          var p = r.getBoundingRect(), g = u ? u.distance(Qt) : r instanceof Dt ? k5(Qt, r.path, de) : R5(Qt, p, de);
          g < l && (l = g, Qt.transform(f), de.transform(f), de.toArray(i[0]), Qt.toArray(i[1]), hn.toArray(i[2]));
        }
        tC(i, e.get("minTurnAngle")), t.setShape({
          points: i
        });
      }
    }
  }
  var sc = [], tr = new St();
  function tC(r, e) {
    if (e <= 180 && e > 0) {
      e = e / 180 * Math.PI, hn.fromArray(r[0]), Qt.fromArray(r[1]), de.fromArray(r[2]), St.sub(Rn, hn, Qt), St.sub(kn, de, Qt);
      var t = Rn.len(), n = kn.len();
      if (!(t < 1e-3 || n < 1e-3)) {
        Rn.scale(1 / t), kn.scale(1 / n);
        var a = Rn.dot(kn), i = Math.cos(e);
        if (i < a) {
          var o = oc(Qt.x, Qt.y, de.x, de.y, hn.x, hn.y, sc, !1);
          tr.fromArray(sc), tr.scaleAndAdd(kn, o / Math.tan(Math.PI - e));
          var s = de.x !== Qt.x ? (tr.x - Qt.x) / (de.x - Qt.x) : (tr.y - Qt.y) / (de.y - Qt.y);
          if (isNaN(s))
            return;
          s < 0 ? St.copy(tr, Qt) : s > 1 && St.copy(tr, de), tr.toArray(r[1]);
        }
      }
    }
  }
  function O5(r, e, t) {
    if (t <= 180 && t > 0) {
      t = t / 180 * Math.PI, hn.fromArray(r[0]), Qt.fromArray(r[1]), de.fromArray(r[2]), St.sub(Rn, Qt, hn), St.sub(kn, de, Qt);
      var n = Rn.len(), a = kn.len();
      if (!(n < 1e-3 || a < 1e-3)) {
        Rn.scale(1 / n), kn.scale(1 / a);
        var i = Rn.dot(e), o = Math.cos(t);
        if (i < o) {
          var s = oc(Qt.x, Qt.y, de.x, de.y, hn.x, hn.y, sc, !1);
          tr.fromArray(sc);
          var l = Math.PI / 2, u = Math.acos(kn.dot(e)), f = l + u - t;
          if (f >= l)
            St.copy(tr, de);
          else {
            tr.scaleAndAdd(kn, s / Math.tan(Math.PI / 2 - f));
            var h = de.x !== Qt.x ? (tr.x - Qt.x) / (de.x - Qt.x) : (tr.y - Qt.y) / (de.y - Qt.y);
            if (isNaN(h))
              return;
            h < 0 ? St.copy(tr, Qt) : h > 1 && St.copy(tr, de);
          }
          tr.toArray(r[1]);
        }
      }
    }
  }
  function eC(r, e, t, n) {
    var a = t === "normal", i = a ? r : r.ensureState(t);
    i.ignore = e;
    var o = n.get("smooth");
    o && o === !0 && (o = 0.3), i.shape = i.shape || {}, o > 0 && (i.shape.smooth = o);
    var s = n.getModel("lineStyle").getLineStyle();
    a ? r.useStyle(s) : i.style = s;
  }
  function N5(r, e) {
    var t = e.smooth, n = e.points;
    if (n)
      if (r.moveTo(n[0][0], n[0][1]), t > 0 && n.length >= 3) {
        var a = Hn(n[0], n[1]), i = Hn(n[1], n[2]);
        if (!a || !i) {
          r.lineTo(n[1][0], n[1][1]), r.lineTo(n[2][0], n[2][1]);
          return;
        }
        var o = Math.min(a, i) * t, s = Zs([], n[1], n[0], o / a), l = Zs([], n[1], n[2], o / i), u = Zs([], s, l, 0.5);
        r.bezierCurveTo(s[0], s[1], s[0], s[1], u[0], u[1]), r.bezierCurveTo(l[0], l[1], l[0], l[1], n[2][0], n[2][1]);
      } else
        for (var f = 1; f < n.length; f++)
          r.lineTo(n[f][0], n[f][1]);
  }
  function ry(r, e, t) {
    var n = r.getTextGuideLine(), a = r.getTextContent();
    if (!a) {
      n && r.removeTextGuideLine();
      return;
    }
    for (var i = e.normal, o = i.get("show"), s = a.ignore, l = 0; l < bl.length; l++) {
      var u = bl[l], f = e[u], h = u === "normal";
      if (f) {
        var c = f.get("show"), v = h ? s : _t(a.states[u] && a.states[u].ignore, s);
        if (v || !_t(c, o)) {
          var d = h ? n : n && n.states[u];
          d && (d.ignore = !0);
          continue;
        }
        n || (n = new Ge(), r.setTextGuideLine(n), !h && (s || !o) && eC(n, !0, "normal", e.normal), r.stateProxy && (n.stateProxy = r.stateProxy)), eC(n, !1, u, f);
      }
    }
    if (n) {
      ot(n.style, t), n.style.fill = null;
      var p = i.get("showAbove"), g = r.textGuideLineConfig = r.textGuideLineConfig || {};
      g.showAbove = p || !1, n.buildPath = N5;
    }
  }
  function ny(r, e) {
    e = e || "labelLine";
    for (var t = {
      normal: r.getModel(e)
    }, n = 0; n < Je.length; n++) {
      var a = Je[n];
      t[a] = r.getModel([a, e]);
    }
    return t;
  }
  function rC(r) {
    for (var e = [], t = 0; t < r.length; t++) {
      var n = r[t];
      if (!n.defaultAttr.ignore) {
        var a = n.label, i = a.getComputedTransform(), o = a.getBoundingRect(), s = !i || i[1] < 1e-5 && i[2] < 1e-5, l = a.style.margin || 0, u = o.clone();
        u.applyTransform(i), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
        var f = s ? new ih(o, i) : null;
        e.push({
          label: a,
          labelLine: n.labelLine,
          rect: u,
          localRect: o,
          obb: f,
          priority: n.priority,
          defaultAttr: n.defaultAttr,
          layoutOption: n.computedLayoutOption,
          axisAligned: s,
          transform: i
        });
      }
    }
    return e;
  }
  function nC(r, e, t, n, a, i) {
    var o = r.length;
    if (o < 2)
      return;
    r.sort(function(C, I) {
      return C.rect[e] - I.rect[e];
    });
    for (var s = 0, l, u = !1, f = 0, h = 0; h < o; h++) {
      var c = r[h], v = c.rect;
      l = v[e] - s, l < 0 && (v[e] -= l, c.label[e] -= l, u = !0);
      var d = Math.max(-l, 0);
      f += d, s = v[e] + v[t];
    }
    f > 0 && i && b(-f / o, 0, o);
    var p = r[0], g = r[o - 1], y, m;
    _(), y < 0 && w(-y, 0.8), m < 0 && w(m, 0.8), _(), S(y, m, 1), S(m, y, -1), _(), y < 0 && T(-y), m < 0 && T(m);
    function _() {
      y = p.rect[e] - n, m = a - g.rect[e] - g.rect[t];
    }
    function S(C, I, L) {
      if (C < 0) {
        var P = Math.min(I, -C);
        if (P > 0) {
          b(P * L, 0, o);
          var E = P + C;
          E < 0 && w(-E * L, 1);
        } else
          w(-C * L, 1);
      }
    }
    function b(C, I, L) {
      C !== 0 && (u = !0);
      for (var P = I; P < L; P++) {
        var E = r[P], R = E.rect;
        R[e] += C, E.label[e] += C;
      }
    }
    function w(C, I) {
      for (var L = [], P = 0, E = 1; E < o; E++) {
        var R = r[E - 1].rect, k = Math.max(r[E].rect[e] - R[e] - R[t], 0);
        L.push(k), P += k;
      }
      if (P) {
        var O = Math.min(Math.abs(C) / P, I);
        if (C > 0)
          for (var E = 0; E < o - 1; E++) {
            var N = L[E] * O;
            b(N, 0, E + 1);
          }
        else
          for (var E = o - 1; E > 0; E--) {
            var N = L[E - 1] * O;
            b(-N, E, o);
          }
      }
    }
    function T(C) {
      var I = C < 0 ? -1 : 1;
      C = Math.abs(C);
      for (var L = Math.ceil(C / (o - 1)), P = 0; P < o - 1; P++)
        if (I > 0 ? b(L, 0, P + 1) : b(-L, o - P - 1, o), C -= L, C <= 0)
          return;
    }
    return u;
  }
  function V5(r, e, t, n) {
    return nC(r, "x", "width", e, t, n);
  }
  function aC(r, e, t, n) {
    return nC(r, "y", "height", e, t, n);
  }
  function iC(r) {
    var e = [];
    r.sort(function(p, g) {
      return g.priority - p.priority;
    });
    var t = new xt(0, 0, 0, 0);
    function n(p) {
      if (!p.ignore) {
        var g = p.ensureState("emphasis");
        g.ignore == null && (g.ignore = !1);
      }
      p.ignore = !0;
    }
    for (var a = 0; a < r.length; a++) {
      var i = r[a], o = i.axisAligned, s = i.localRect, l = i.transform, u = i.label, f = i.labelLine;
      t.copy(i.rect), t.width -= 0.1, t.height -= 0.1, t.x += 0.05, t.y += 0.05;
      for (var h = i.obb, c = !1, v = 0; v < e.length; v++) {
        var d = e[v];
        if (t.intersect(d.rect)) {
          if (o && d.axisAligned) {
            c = !0;
            break;
          }
          if (d.obb || (d.obb = new ih(d.localRect, d.transform)), h || (h = new ih(s, l)), h.intersect(d.obb)) {
            c = !0;
            break;
          }
        }
      }
      c ? (n(u), f && n(f)) : (u.attr("ignore", i.defaultAttr.ignore), f && f.attr("ignore", i.defaultAttr.labelGuideIgnore), e.push(i));
    }
  }
  function B5(r) {
    if (r) {
      for (var e = [], t = 0; t < r.length; t++)
        e.push(r[t].slice());
      return e;
    }
  }
  function z5(r, e) {
    var t = r.label, n = e && e.getTextGuideLine();
    return {
      dataIndex: r.dataIndex,
      dataType: r.dataType,
      seriesIndex: r.seriesModel.seriesIndex,
      text: r.label.style.text,
      rect: r.hostRect,
      labelRect: r.rect,
      // x: labelAttr.x,
      // y: labelAttr.y,
      align: t.style.align,
      verticalAlign: t.style.verticalAlign,
      labelLinePoints: B5(n && n.shape.points)
    };
  }
  var oC = ["align", "verticalAlign", "width", "height", "fontSize"], xr = new Xn(), ay = Nt(), G5 = Nt();
  function lc(r, e, t) {
    for (var n = 0; n < t.length; n++) {
      var a = t[n];
      e[a] != null && (r[a] = e[a]);
    }
  }
  var uc = ["x", "y", "rotation"], F5 = (
    /** @class */
    function() {
      function r() {
        this._labelList = [], this._chartViewList = [];
      }
      return r.prototype.clearLabels = function() {
        this._labelList = [], this._chartViewList = [];
      }, r.prototype._addLabel = function(e, t, n, a, i) {
        var o = a.style, s = a.__hostTarget, l = s.textConfig || {}, u = a.getComputedTransform(), f = a.getBoundingRect().plain();
        xt.applyTransform(f, f, u), u ? xr.setLocalTransform(u) : (xr.x = xr.y = xr.rotation = xr.originX = xr.originY = 0, xr.scaleX = xr.scaleY = 1);
        var h = a.__hostTarget, c;
        if (h) {
          c = h.getBoundingRect().plain();
          var v = h.getComputedTransform();
          xt.applyTransform(c, c, v);
        }
        var d = c && h.getTextGuideLine();
        this._labelList.push({
          label: a,
          labelLine: d,
          seriesModel: n,
          dataIndex: e,
          dataType: t,
          layoutOption: i,
          computedLayoutOption: null,
          rect: f,
          hostRect: c,
          // Label with lower priority will be hidden when overlapped
          // Use rect size as default priority
          priority: c ? c.width * c.height : 0,
          // Save default label attributes.
          // For restore if developers want get back to default value in callback.
          defaultAttr: {
            ignore: a.ignore,
            labelGuideIgnore: d && d.ignore,
            x: xr.x,
            y: xr.y,
            scaleX: xr.scaleX,
            scaleY: xr.scaleY,
            rotation: xr.rotation,
            style: {
              x: o.x,
              y: o.y,
              align: o.align,
              verticalAlign: o.verticalAlign,
              width: o.width,
              height: o.height,
              fontSize: o.fontSize
            },
            cursor: a.cursor,
            attachedPos: l.position,
            attachedRot: l.rotation
          }
        });
      }, r.prototype.addLabelsOfSeries = function(e) {
        var t = this;
        this._chartViewList.push(e);
        var n = e.__model, a = n.get("labelLayout");
        (rt(a) || Pt(a).length) && e.group.traverse(function(i) {
          if (i.ignore)
            return !0;
          var o = i.getTextContent(), s = gt(i);
          o && !o.disableLabelLayout && t._addLabel(s.dataIndex, s.dataType, n, o, a);
        });
      }, r.prototype.updateLayoutConfig = function(e) {
        var t = e.getWidth(), n = e.getHeight();
        function a(_, S) {
          return function() {
            QT(_, S);
          };
        }
        for (var i = 0; i < this._labelList.length; i++) {
          var o = this._labelList[i], s = o.label, l = s.__hostTarget, u = o.defaultAttr, f = void 0;
          rt(o.layoutOption) ? f = o.layoutOption(z5(o, l)) : f = o.layoutOption, f = f || {}, o.computedLayoutOption = f;
          var h = Math.PI / 180;
          l && l.setTextConfig({
            // Force to set local false.
            local: !1,
            // Ignore position and rotation config on the host el if x or y is changed.
            position: f.x != null || f.y != null ? null : u.attachedPos,
            // Ignore rotation config on the host el if rotation is changed.
            rotation: f.rotate != null ? f.rotate * h : u.attachedRot,
            offset: [f.dx || 0, f.dy || 0]
          });
          var c = !1;
          if (f.x != null ? (s.x = Z(f.x, t), s.setStyle("x", 0), c = !0) : (s.x = u.x, s.setStyle("x", u.style.x)), f.y != null ? (s.y = Z(f.y, n), s.setStyle("y", 0), c = !0) : (s.y = u.y, s.setStyle("y", u.style.y)), f.labelLinePoints) {
            var v = l.getTextGuideLine();
            v && (v.setShape({
              points: f.labelLinePoints
            }), c = !1);
          }
          var d = ay(s);
          d.needsUpdateLabelLine = c, s.rotation = f.rotate != null ? f.rotate * h : u.rotation, s.scaleX = u.scaleX, s.scaleY = u.scaleY;
          for (var p = 0; p < oC.length; p++) {
            var g = oC[p];
            s.setStyle(g, f[g] != null ? f[g] : u.style[g]);
          }
          if (f.draggable) {
            if (s.draggable = !0, s.cursor = "move", l) {
              var y = o.seriesModel;
              if (o.dataIndex != null) {
                var m = o.seriesModel.getData(o.dataType);
                y = m.getItemModel(o.dataIndex);
              }
              s.on("drag", a(l, y.getModel("labelLine")));
            }
          } else
            s.off("drag"), s.cursor = u.cursor;
        }
      }, r.prototype.layout = function(e) {
        var t = e.getWidth(), n = e.getHeight(), a = rC(this._labelList), i = Ht(a, function(l) {
          return l.layoutOption.moveOverlap === "shiftX";
        }), o = Ht(a, function(l) {
          return l.layoutOption.moveOverlap === "shiftY";
        });
        V5(i, 0, t), aC(o, 0, n);
        var s = Ht(a, function(l) {
          return l.layoutOption.hideOverlap;
        });
        iC(s);
      }, r.prototype.processLabelsOverall = function() {
        var e = this;
        M(this._chartViewList, function(t) {
          var n = t.__model, a = t.ignoreLabelLineUpdate, i = n.isAnimationEnabled();
          t.group.traverse(function(o) {
            if (o.ignore && !o.forceLabelAnimation)
              return !0;
            var s = !a, l = o.getTextContent();
            !s && l && (s = ay(l).needsUpdateLabelLine), s && e._updateLabelLine(o, n), i && e._animateLabels(o, n);
          });
        });
      }, r.prototype._updateLabelLine = function(e, t) {
        var n = e.getTextContent(), a = gt(e), i = a.dataIndex;
        if (n && i != null) {
          var o = t.getData(a.dataType), s = o.getItemModel(i), l = {}, u = o.getItemVisual(i, "style"), f = o.getVisual("drawType");
          l.stroke = u[f];
          var h = s.getModel("labelLine");
          ry(e, ny(s), l), QT(e, h);
        }
      }, r.prototype._animateLabels = function(e, t) {
        var n = e.getTextContent(), a = e.getTextGuideLine();
        if (n && (e.forceLabelAnimation || !n.ignore && !n.invisible && !e.disableLabelAnimation && !Uo(e))) {
          var i = ay(n), o = i.oldLayout, s = gt(e), l = s.dataIndex, u = {
            x: n.x,
            y: n.y,
            rotation: n.rotation
          }, f = t.getData(s.dataType);
          if (o) {
            n.attr(o);
            var c = e.prevStates;
            c && (bt(c, "select") >= 0 && n.attr(i.oldLayoutSelect), bt(c, "emphasis") >= 0 && n.attr(i.oldLayoutEmphasis)), Vt(n, u, t, l);
          } else if (n.attr(u), !Zo(n).valueAnimation) {
            var h = _t(n.style.opacity, 1);
            n.style.opacity = 0, te(n, {
              style: {
                opacity: h
              }
            }, t, l);
          }
          if (i.oldLayout = u, n.states.select) {
            var v = i.oldLayoutSelect = {};
            lc(v, u, uc), lc(v, n.states.select, uc);
          }
          if (n.states.emphasis) {
            var d = i.oldLayoutEmphasis = {};
            lc(d, u, uc), lc(d, n.states.emphasis, uc);
          }
          Rx(n, l, f, t, t);
        }
        if (a && !a.ignore && !a.invisible) {
          var i = G5(a), o = i.oldLayout, p = {
            points: a.shape.points
          };
          o ? (a.attr({
            shape: o
          }), Vt(a, {
            shape: p
          }, t)) : (a.setShape(p), a.style.strokePercent = 0, te(a, {
            style: {
              strokePercent: 1
            }
          }, t)), i.oldLayout = p;
        }
      }, r;
    }()
  ), iy = Nt();
  function H5(r) {
    r.registerUpdateLifecycle("series:beforeupdate", function(e, t, n) {
      var a = iy(t).labelManager;
      a || (a = iy(t).labelManager = new F5()), a.clearLabels();
    }), r.registerUpdateLifecycle("series:layoutlabels", function(e, t, n) {
      var a = iy(t).labelManager;
      n.updatedSeries.forEach(function(i) {
        a.addLabelsOfSeries(t.getViewOfSeriesModel(i));
      }), a.updateLayoutConfig(t), a.layout(t), a.processLabelsOverall();
    });
  }
  var oy = Math.sin, sy = Math.cos, sC = Math.PI, Ki = Math.PI * 2, W5 = 180 / sC, lC = function() {
    function r() {
    }
    return r.prototype.reset = function(e) {
      this._start = !0, this._d = [], this._str = "", this._p = Math.pow(10, e || 4);
    }, r.prototype.moveTo = function(e, t) {
      this._add("M", e, t);
    }, r.prototype.lineTo = function(e, t) {
      this._add("L", e, t);
    }, r.prototype.bezierCurveTo = function(e, t, n, a, i, o) {
      this._add("C", e, t, n, a, i, o);
    }, r.prototype.quadraticCurveTo = function(e, t, n, a) {
      this._add("Q", e, t, n, a);
    }, r.prototype.arc = function(e, t, n, a, i, o) {
      this.ellipse(e, t, n, n, 0, a, i, o);
    }, r.prototype.ellipse = function(e, t, n, a, i, o, s, l) {
      var u = s - o, f = !l, h = Math.abs(u), c = xa(h - Ki) || (f ? u >= Ki : -u >= Ki), v = u > 0 ? u % Ki : u % Ki + Ki, d = !1;
      c ? d = !0 : xa(h) ? d = !1 : d = v >= sC == !!f;
      var p = e + n * sy(o), g = t + a * oy(o);
      this._start && this._add("M", p, g);
      var y = Math.round(i * W5);
      if (c) {
        var m = 1 / this._p, _ = (f ? 1 : -1) * (Ki - m);
        this._add("A", n, a, y, 1, +f, e + n * sy(o + _), t + a * oy(o + _)), m > 0.01 && this._add("A", n, a, y, 0, +f, p, g);
      } else {
        var S = e + n * sy(s), b = t + a * oy(s);
        this._add("A", n, a, y, +d, +f, S, b);
      }
    }, r.prototype.rect = function(e, t, n, a) {
      this._add("M", e, t), this._add("l", n, 0), this._add("l", 0, a), this._add("l", -n, 0), this._add("Z");
    }, r.prototype.closePath = function() {
      this._d.length > 0 && this._add("Z");
    }, r.prototype._add = function(e, t, n, a, i, o, s, l, u) {
      for (var f = [], h = this._p, c = 1; c < arguments.length; c++) {
        var v = arguments[c];
        if (isNaN(v)) {
          this._invalid = !0;
          return;
        }
        f.push(Math.round(v * h) / h);
      }
      this._d.push(e + f.join(" ")), this._start = e === "Z";
    }, r.prototype.generateStr = function() {
      this._str = this._invalid ? "" : this._d.join(""), this._d = [];
    }, r.prototype.getStr = function() {
      return this._str;
    }, r;
  }(), cu = "none", U5 = Math.round;
  function Y5(r) {
    var e = r.fill;
    return e != null && e !== cu;
  }
  function $5(r) {
    var e = r.stroke;
    return e != null && e !== cu;
  }
  var ly = ["lineCap", "miterLimit", "lineJoin"], X5 = Y(ly, function(r) {
    return "stroke-" + r.toLowerCase();
  });
  function Z5(r, e, t, n) {
    var a = e.opacity == null ? 1 : e.opacity;
    if (t instanceof Te) {
      r("opacity", a);
      return;
    }
    if (Y5(e)) {
      var i = ll(e.fill);
      r("fill", i.color);
      var o = e.fillOpacity != null ? e.fillOpacity * i.opacity * a : i.opacity * a;
      (n || o < 1) && r("fill-opacity", o);
    } else
      r("fill", cu);
    if ($5(e)) {
      var s = ll(e.stroke);
      r("stroke", s.color);
      var l = e.strokeNoScale ? t.getLineScale() : 1, u = l ? (e.lineWidth || 0) / l : 0, f = e.strokeOpacity != null ? e.strokeOpacity * s.opacity * a : s.opacity * a, h = e.strokeFirst;
      if ((n || u !== 1) && r("stroke-width", u), (n || h) && r("paint-order", h ? "stroke" : "fill"), (n || f < 1) && r("stroke-opacity", f), e.lineDash) {
        var c = gg(t), v = c[0], d = c[1];
        v && (d = U5(d || 0), r("stroke-dasharray", v.join(",")), (d || n) && r("stroke-dashoffset", d));
      } else
        n && r("stroke-dasharray", cu);
      for (var p = 0; p < ly.length; p++) {
        var g = ly[p];
        if (n || e[g] !== Xf[g]) {
          var y = e[g] || Xf[g];
          y && r(X5[p], y);
        }
      }
    } else
      n && r("stroke", cu);
  }
  var uC = "http://www.w3.org/2000/svg", fC = "http://www.w3.org/1999/xlink", q5 = "http://www.w3.org/2000/xmlns/", K5 = "http://www.w3.org/XML/1998/namespace";
  function hC(r) {
    return document.createElementNS(uC, r);
  }
  function De(r, e, t, n, a) {
    return {
      tag: r,
      attrs: t || {},
      children: n,
      text: a,
      key: e
    };
  }
  function j5(r, e) {
    var t = [];
    if (e)
      for (var n in e) {
        var a = e[n], i = n;
        a !== !1 && (a !== !0 && a != null && (i += '="' + a + '"'), t.push(i));
      }
    return "<" + r + " " + t.join(" ") + ">";
  }
  function J5(r) {
    return "</" + r + ">";
  }
  function uy(r, e) {
    e = e || {};
    var t = e.newline ? `
` : "";
    function n(a) {
      var i = a.children, o = a.tag, s = a.attrs;
      return j5(o, s) + Ze(a.text) + (i ? "" + t + Y(i, function(l) {
        return n(l);
      }).join(t) + t : "") + J5(o);
    }
    return n(r);
  }
  function Q5(r, e, t) {
    t = t || {};
    var n = t.newline ? `
` : "", a = " {" + n, i = n + "}", o = Y(Pt(r), function(l) {
      return l + a + Y(Pt(r[l]), function(u) {
        return u + ":" + r[l][u] + ";";
      }).join(n) + i;
    }).join(n), s = Y(Pt(e), function(l) {
      return "@keyframes " + l + a + Y(Pt(e[l]), function(u) {
        return u + a + Y(Pt(e[l][u]), function(f) {
          var h = e[l][u][f];
          return f === "d" && (h = 'path("' + h + '")'), f + ":" + h + ";";
        }).join(n) + i;
      }).join(n) + i;
    }).join(n);
    return !o && !s ? "" : ["<![CDATA[", o, s, "]]>"].join(n);
  }
  function fy(r) {
    return {
      zrId: r,
      shadowCache: {},
      patternCache: {},
      gradientCache: {},
      clipPathCache: {},
      defs: {},
      cssNodes: {},
      cssAnims: {},
      cssClassIdx: 0,
      cssAnimIdx: 0,
      shadowIdx: 0,
      gradientIdx: 0,
      patternIdx: 0,
      clipPathIdx: 0
    };
  }
  function cC(r, e, t, n) {
    return De("svg", "root", {
      width: r,
      height: e,
      xmlns: uC,
      "xmlns:xlink": fC,
      version: "1.1",
      baseProfile: "full",
      viewBox: n ? "0 0 " + r + " " + e : !1
    }, t);
  }
  var vC = {
    cubicIn: "0.32,0,0.67,0",
    cubicOut: "0.33,1,0.68,1",
    cubicInOut: "0.65,0,0.35,1",
    quadraticIn: "0.11,0,0.5,0",
    quadraticOut: "0.5,1,0.89,1",
    quadraticInOut: "0.45,0,0.55,1",
    quarticIn: "0.5,0,0.75,0",
    quarticOut: "0.25,1,0.5,1",
    quarticInOut: "0.76,0,0.24,1",
    quinticIn: "0.64,0,0.78,0",
    quinticOut: "0.22,1,0.36,1",
    quinticInOut: "0.83,0,0.17,1",
    sinusoidalIn: "0.12,0,0.39,0",
    sinusoidalOut: "0.61,1,0.88,1",
    sinusoidalInOut: "0.37,0,0.63,1",
    exponentialIn: "0.7,0,0.84,0",
    exponentialOut: "0.16,1,0.3,1",
    exponentialInOut: "0.87,0,0.13,1",
    circularIn: "0.55,0,1,0.45",
    circularOut: "0,0.55,0.45,1",
    circularInOut: "0.85,0,0.15,1"
  }, ji = "transform-origin";
  function tG(r, e, t) {
    var n = H({}, r.shape);
    H(n, e), r.buildPath(t, n);
    var a = new lC();
    return a.reset(C1(r)), t.rebuildPath(a, 1), a.generateStr(), a.getStr();
  }
  function eG(r, e) {
    var t = e.originX, n = e.originY;
    (t || n) && (r[ji] = t + "px " + n + "px");
  }
  var rG = {
    fill: "fill",
    opacity: "opacity",
    lineWidth: "stroke-width",
    lineDashOffset: "stroke-dashoffset"
  };
  function dC(r, e) {
    var t = e.zrId + "-ani-" + e.cssAnimIdx++;
    return e.cssAnims[t] = r, t;
  }
  function nG(r, e, t) {
    var n = r.shape.paths, a = {}, i, o;
    if (M(n, function(l) {
      var u = fy(t.zrId);
      u.animation = !0, fc(l, {}, u, !0);
      var f = u.cssAnims, h = u.cssNodes, c = Pt(f), v = c.length;
      if (v) {
        o = c[v - 1];
        var d = f[o];
        for (var p in d) {
          var g = d[p];
          a[p] = a[p] || { d: "" }, a[p].d += g.d || "";
        }
        for (var y in h) {
          var m = h[y].animation;
          m.indexOf(o) >= 0 && (i = m);
        }
      }
    }), !!i) {
      e.d = !1;
      var s = dC(a, t);
      return i.replace(o, s);
    }
  }
  function pC(r) {
    return j(r) ? vC[r] ? "cubic-bezier(" + vC[r] + ")" : ad(r) ? r : "" : "";
  }
  function fc(r, e, t, n) {
    var a = r.animators, i = a.length, o = [];
    if (r instanceof rh) {
      var s = nG(r, e, t);
      if (s)
        o.push(s);
      else if (!i)
        return;
    } else if (!i)
      return;
    for (var l = {}, u = 0; u < i; u++) {
      var f = a[u], h = [f.getMaxTime() / 1e3 + "s"], c = pC(f.getClip().easing), v = f.getDelay();
      c ? h.push(c) : h.push("linear"), v && h.push(v / 1e3 + "s"), f.getLoop() && h.push("infinite");
      var d = h.join(" ");
      l[d] = l[d] || [d, []], l[d][1].push(f);
    }
    function p(m) {
      var _ = m[1], S = _.length, b = {}, w = {}, T = {}, C = "animation-timing-function";
      function I(dt, Lt, Tt) {
        for (var at = dt.getTracks(), wt = dt.getMaxTime(), re = 0; re < at.length; re++) {
          var Bt = at[re];
          if (Bt.needsAnimate()) {
            var fe = Bt.keyframes, se = Bt.propName;
            if (Tt && (se = Tt(se)), se)
              for (var Ye = 0; Ye < fe.length; Ye++) {
                var fa = fe[Ye], cr = Math.round(fa.time / wt * 100) + "%", pv = pC(fa.easing), Ka = fa.rawValue;
                (j(Ka) || Ot(Ka)) && (Lt[cr] = Lt[cr] || {}, Lt[cr][se] = fa.rawValue, pv && (Lt[cr][C] = pv));
              }
          }
        }
      }
      for (var L = 0; L < S; L++) {
        var P = _[L], E = P.targetName;
        E ? E === "shape" && I(P, w) : !n && I(P, b);
      }
      for (var R in b) {
        var k = {};
        B1(k, r), H(k, b[R]);
        var O = A1(k), N = b[R][C];
        T[R] = O ? {
          transform: O
        } : {}, eG(T[R], k), N && (T[R][C] = N);
      }
      var F, G = !0;
      for (var R in w) {
        T[R] = T[R] || {};
        var W = !F, N = w[R][C];
        W && (F = new An());
        var X = F.len();
        F.reset(), T[R].d = tG(r, w[R], F);
        var K = F.len();
        if (!W && X !== K) {
          G = !1;
          break;
        }
        N && (T[R][C] = N);
      }
      if (!G)
        for (var R in T)
          delete T[R].d;
      if (!n)
        for (var L = 0; L < S; L++) {
          var P = _[L], E = P.targetName;
          E === "style" && I(P, T, function(at) {
            return rG[at];
          });
        }
      for (var et = Pt(T), lt = !0, ft, L = 1; L < et.length; L++) {
        var It = et[L - 1], zt = et[L];
        if (T[It][ji] !== T[zt][ji]) {
          lt = !1;
          break;
        }
        ft = T[It][ji];
      }
      if (lt && ft) {
        for (var R in T)
          T[R][ji] && delete T[R][ji];
        e[ji] = ft;
      }
      if (Ht(et, function(dt) {
        return Pt(T[dt]).length > 0;
      }).length) {
        var Mt = dC(T, t);
        return Mt + " " + m[0] + " both";
      }
    }
    for (var g in l) {
      var s = p(l[g]);
      s && o.push(s);
    }
    if (o.length) {
      var y = t.zrId + "-cls-" + t.cssClassIdx++;
      t.cssNodes["." + y] = {
        animation: o.join(",")
      }, e.class = y;
    }
  }
  var vu = Math.round;
  function gC(r) {
    return r && j(r.src);
  }
  function yC(r) {
    return r && rt(r.toDataURL);
  }
  function hy(r, e, t, n) {
    Z5(function(a, i) {
      var o = a === "fill" || a === "stroke";
      o && T1(i) ? bC(e, r, a, n) : o && hd(i) ? TC(t, r, a, n) : r[a] = i;
    }, e, t, !1), fG(t, r, n);
  }
  function mC(r) {
    return xa(r[0] - 1) && xa(r[1]) && xa(r[2]) && xa(r[3] - 1);
  }
  function aG(r) {
    return xa(r[4]) && xa(r[5]);
  }
  function cy(r, e, t) {
    if (e && !(aG(e) && mC(e))) {
      var n = t ? 10 : 1e4;
      r.transform = mC(e) ? "translate(" + vu(e[4] * n) / n + " " + vu(e[5] * n) / n + ")" : sR(e);
    }
  }
  function _C(r, e, t) {
    for (var n = r.points, a = [], i = 0; i < n.length; i++)
      a.push(vu(n[i][0] * t) / t), a.push(vu(n[i][1] * t) / t);
    e.points = a.join(" ");
  }
  function SC(r) {
    return !r.smooth;
  }
  function iG(r) {
    var e = Y(r, function(t) {
      return typeof t == "string" ? [t, t] : t;
    });
    return function(t, n, a) {
      for (var i = 0; i < e.length; i++) {
        var o = e[i], s = t[o[0]];
        s != null && (n[o[1]] = vu(s * a) / a);
      }
    };
  }
  var oG = {
    circle: [iG(["cx", "cy", "r"])],
    polyline: [_C, SC],
    polygon: [_C, SC]
  };
  function sG(r) {
    for (var e = r.animators, t = 0; t < e.length; t++)
      if (e[t].targetName === "shape")
        return !0;
    return !1;
  }
  function xC(r, e) {
    var t = r.style, n = r.shape, a = oG[r.type], i = {}, o = e.animation, s = "path", l = r.style.strokePercent, u = e.compress && C1(r) || 4;
    if (a && !e.willUpdate && !(a[1] && !a[1](n)) && !(o && sG(r)) && !(l < 1)) {
      s = r.type;
      var f = Math.pow(10, u);
      a[0](n, i, f);
    } else {
      var h = !r.path || r.shapeChanged();
      r.path || r.createPathProxy();
      var c = r.path;
      h && (c.beginPath(), r.buildPath(c, r.shape), r.pathUpdated());
      var v = c.getVersion(), d = r, p = d.__svgPathBuilder;
      (d.__svgPathVersion !== v || !p || l !== d.__svgPathStrokePercent) && (p || (p = d.__svgPathBuilder = new lC()), p.reset(u), c.rebuildPath(p, l), p.generateStr(), d.__svgPathVersion = v, d.__svgPathStrokePercent = l), i.d = p.getStr();
    }
    return cy(i, r.transform), hy(i, t, r, e), e.animation && fc(r, i, e), De(s, r.id + "", i);
  }
  function lG(r, e) {
    var t = r.style, n = t.image;
    if (n && !j(n) && (gC(n) ? n = n.src : yC(n) && (n = n.toDataURL())), !!n) {
      var a = t.x || 0, i = t.y || 0, o = t.width, s = t.height, l = {
        href: n,
        width: o,
        height: s
      };
      return a && (l.x = a), i && (l.y = i), cy(l, r.transform), hy(l, t, r, e), e.animation && fc(r, l, e), De("image", r.id + "", l);
    }
  }
  function uG(r, e) {
    var t = r.style, n = t.text;
    if (n != null && (n += ""), !(!n || isNaN(t.x) || isNaN(t.y))) {
      var a = t.font || Et, i = t.x || 0, o = uR(t.y || 0, Rf(a), t.textBaseline), s = lR[t.textAlign] || t.textAlign, l = {
        "dominant-baseline": "central",
        "text-anchor": s
      };
      if (LS(t)) {
        var u = "", f = t.fontStyle, h = MS(t.fontSize);
        if (!parseFloat(h))
          return;
        var c = t.fontFamily || ut, v = t.fontWeight;
        u += "font-size:" + h + ";font-family:" + c + ";", f && f !== "normal" && (u += "font-style:" + f + ";"), v && v !== "normal" && (u += "font-weight:" + v + ";"), l.style = u;
      } else
        l.style = "font: " + a;
      return n.match(/\s/) && (l["xml:space"] = "preserve"), i && (l.x = i), o && (l.y = o), cy(l, r.transform), hy(l, t, r, e), e.animation && fc(r, l, e), De("text", r.id + "", l, void 0, n);
    }
  }
  function wC(r, e) {
    if (r instanceof Dt)
      return xC(r, e);
    if (r instanceof Te)
      return lG(r, e);
    if (r instanceof ko)
      return uG(r, e);
  }
  function fG(r, e, t) {
    var n = r.style;
    if (fR(n)) {
      var a = hR(r), i = t.shadowCache, o = i[a];
      if (!o) {
        var s = r.getGlobalScale(), l = s[0], u = s[1];
        if (!l || !u)
          return;
        var f = n.shadowOffsetX || 0, h = n.shadowOffsetY || 0, c = n.shadowBlur, v = ll(n.shadowColor), d = v.opacity, p = v.color, g = c / 2 / l, y = c / 2 / u, m = g + " " + y;
        o = t.zrId + "-s" + t.shadowIdx++, t.defs[o] = De("filter", o, {
          id: o,
          x: "-100%",
          y: "-100%",
          width: "300%",
          height: "300%"
        }, [
          De("feDropShadow", "", {
            dx: f / l,
            dy: h / u,
            stdDeviation: m,
            "flood-color": p,
            "flood-opacity": d
          })
        ]), i[a] = o;
      }
      e.filter = Cf(o);
    }
  }
  function bC(r, e, t, n) {
    var a = r[t], i, o = {
      gradientUnits: a.global ? "userSpaceOnUse" : "objectBoundingBox"
    };
    if (w1(a))
      i = "linearGradient", o.x1 = a.x, o.y1 = a.y, o.x2 = a.x2, o.y2 = a.y2;
    else if (b1(a))
      i = "radialGradient", o.cx = _t(a.x, 0.5), o.cy = _t(a.y, 0.5), o.r = _t(a.r, 0.5);
    else {
      Cr("Illegal gradient type.");
      return;
    }
    for (var s = a.colorStops, l = [], u = 0, f = s.length; u < f; ++u) {
      var h = fd(s[u].offset) * 100 + "%", c = s[u].color, v = ll(c), d = v.color, p = v.opacity, g = {
        offset: h
      };
      g["stop-color"] = d, p < 1 && (g["stop-opacity"] = p), l.push(De("stop", u + "", g));
    }
    var y = De(i, "", o, l), m = uy(y), _ = n.gradientCache, S = _[m];
    S || (S = n.zrId + "-g" + n.gradientIdx++, _[m] = S, o.id = S, n.defs[S] = De(i, S, o, l)), e[t] = Cf(S);
  }
  function TC(r, e, t, n) {
    var a = r.style[t], i = r.getBoundingRect(), o = {}, s = a.repeat, l = s === "no-repeat", u = s === "repeat-x", f = s === "repeat-y", h;
    if (x1(a)) {
      var c = a.imageWidth, v = a.imageHeight, d = void 0, p = a.image;
      if (j(p) ? d = p : gC(p) ? d = p.src : yC(p) && (d = p.toDataURL()), typeof Image > "u") {
        var g = "Image width/height must been given explictly in svg-ssr renderer.";
        st(c, g), st(v, g);
      } else if (c == null || v == null) {
        var y = function(L, P) {
          if (L) {
            var E = L.elm, R = c || P.width, k = v || P.height;
            L.tag === "pattern" && (u ? (k = 1, R /= i.width) : f && (R = 1, k /= i.height)), L.attrs.width = R, L.attrs.height = k, E && (E.setAttribute("width", R), E.setAttribute("height", k));
          }
        }, m = Wd(d, null, r, function(L) {
          l || y(w, L), y(h, L);
        });
        m && m.width && m.height && (c = c || m.width, v = v || m.height);
      }
      h = De("image", "img", {
        href: d,
        width: c,
        height: v
      }), o.width = c, o.height = v;
    } else
      a.svgElement && (h = ht(a.svgElement), o.width = a.svgWidth, o.height = a.svgHeight);
    if (h) {
      var _, S;
      l ? _ = S = 1 : u ? (S = 1, _ = o.width / i.width) : f ? (_ = 1, S = o.height / i.height) : o.patternUnits = "userSpaceOnUse", _ != null && !isNaN(_) && (o.width = _), S != null && !isNaN(S) && (o.height = S);
      var b = A1(a);
      b && (o.patternTransform = b);
      var w = De("pattern", "", o, [h]), T = uy(w), C = n.patternCache, I = C[T];
      I || (I = n.zrId + "-p" + n.patternIdx++, C[T] = I, o.id = I, w = n.defs[I] = De("pattern", I, o, [h])), e[t] = Cf(I);
    }
  }
  function hG(r, e, t) {
    var n = t.clipPathCache, a = t.defs, i = n[r.id];
    if (!i) {
      i = t.zrId + "-c" + t.clipPathIdx++;
      var o = {
        id: i
      };
      n[r.id] = i, a[i] = De("clipPath", i, o, [xC(r, t)]);
    }
    e["clip-path"] = Cf(i);
  }
  function CC(r) {
    return document.createTextNode(r);
  }
  function Ji(r, e, t) {
    r.insertBefore(e, t);
  }
  function AC(r, e) {
    r.removeChild(e);
  }
  function DC(r, e) {
    r.appendChild(e);
  }
  function MC(r) {
    return r.parentNode;
  }
  function IC(r) {
    return r.nextSibling;
  }
  function vy(r, e) {
    r.textContent = e;
  }
  var LC = 58, cG = 120, vG = De("", "");
  function dy(r) {
    return r === void 0;
  }
  function On(r) {
    return r !== void 0;
  }
  function dG(r, e, t) {
    for (var n = {}, a = e; a <= t; ++a) {
      var i = r[a].key;
      i !== void 0 && (n[i] != null && console.error("Duplicate key " + i), n[i] = a);
    }
    return n;
  }
  function du(r, e) {
    var t = r.key === e.key, n = r.tag === e.tag;
    return n && t;
  }
  function pu(r) {
    var e, t = r.children, n = r.tag;
    if (On(n)) {
      var a = r.elm = hC(n);
      if (py(vG, r), U(t))
        for (e = 0; e < t.length; ++e) {
          var i = t[e];
          i != null && DC(a, pu(i));
        }
      else
        On(r.text) && !it(r.text) && DC(a, CC(r.text));
    } else
      r.elm = CC(r.text);
    return r.elm;
  }
  function PC(r, e, t, n, a) {
    for (; n <= a; ++n) {
      var i = t[n];
      i != null && Ji(r, pu(i), e);
    }
  }
  function hc(r, e, t, n) {
    for (; t <= n; ++t) {
      var a = e[t];
      if (a != null)
        if (On(a.tag)) {
          var i = MC(a.elm);
          AC(i, a.elm);
        } else
          AC(r, a.elm);
    }
  }
  function py(r, e) {
    var t, n = e.elm, a = r && r.attrs || {}, i = e.attrs || {};
    if (a !== i) {
      for (t in i) {
        var o = i[t], s = a[t];
        s !== o && (o === !0 ? n.setAttribute(t, "") : o === !1 ? n.removeAttribute(t) : t.charCodeAt(0) !== cG ? n.setAttribute(t, o) : t === "xmlns:xlink" || t === "xmlns" ? n.setAttributeNS(q5, t, o) : t.charCodeAt(3) === LC ? n.setAttributeNS(K5, t, o) : t.charCodeAt(5) === LC ? n.setAttributeNS(fC, t, o) : n.setAttribute(t, o));
      }
      for (t in a)
        t in i || n.removeAttribute(t);
    }
  }
  function pG(r, e, t) {
    for (var n = 0, a = 0, i = e.length - 1, o = e[0], s = e[i], l = t.length - 1, u = t[0], f = t[l], h, c, v, d; n <= i && a <= l; )
      o == null ? o = e[++n] : s == null ? s = e[--i] : u == null ? u = t[++a] : f == null ? f = t[--l] : du(o, u) ? (ds(o, u), o = e[++n], u = t[++a]) : du(s, f) ? (ds(s, f), s = e[--i], f = t[--l]) : du(o, f) ? (ds(o, f), Ji(r, o.elm, IC(s.elm)), o = e[++n], f = t[--l]) : du(s, u) ? (ds(s, u), Ji(r, s.elm, o.elm), s = e[--i], u = t[++a]) : (dy(h) && (h = dG(e, n, i)), c = h[u.key], dy(c) ? Ji(r, pu(u), o.elm) : (v = e[c], v.tag !== u.tag ? Ji(r, pu(u), o.elm) : (ds(v, u), e[c] = void 0, Ji(r, v.elm, o.elm))), u = t[++a]);
    (n <= i || a <= l) && (n > i ? (d = t[l + 1] == null ? null : t[l + 1].elm, PC(r, d, t, a, l)) : hc(r, e, n, i));
  }
  function ds(r, e) {
    var t = e.elm = r.elm, n = r.children, a = e.children;
    r !== e && (py(r, e), dy(e.text) ? On(n) && On(a) ? n !== a && pG(t, n, a) : On(a) ? (On(r.text) && vy(t, ""), PC(t, null, a, 0, a.length - 1)) : On(n) ? hc(t, n, 0, n.length - 1) : On(r.text) && vy(t, "") : r.text !== e.text && (On(n) && hc(t, n, 0, n.length - 1), vy(t, e.text)));
  }
  function gG(r, e) {
    if (du(r, e))
      ds(r, e);
    else {
      var t = r.elm, n = MC(t);
      pu(e), n !== null && (Ji(n, e.elm, IC(t)), hc(n, [r], 0, 0));
    }
    return e;
  }
  var yG = 0, mG = function() {
    function r(e, t, n) {
      if (this.type = "svg", this.refreshHover = EC("refreshHover"), this.configLayer = EC("configLayer"), this.storage = t, this._opts = n = H({}, n), this.root = e, this._id = "zr" + yG++, this._oldVNode = cC(n.width, n.height), e && !n.ssr) {
        var a = this._viewport = document.createElement("div");
        a.style.cssText = "position:relative;overflow:hidden";
        var i = this._svgDom = this._oldVNode.elm = hC("svg");
        py(null, this._oldVNode), a.appendChild(i), e.appendChild(a);
      }
      this.resize(n.width, n.height);
    }
    return r.prototype.getType = function() {
      return this.type;
    }, r.prototype.getViewportRoot = function() {
      return this._viewport;
    }, r.prototype.getViewportRootOffset = function() {
      var e = this.getViewportRoot();
      if (e)
        return {
          offsetLeft: e.offsetLeft || 0,
          offsetTop: e.offsetTop || 0
        };
    }, r.prototype.getSvgDom = function() {
      return this._svgDom;
    }, r.prototype.refresh = function() {
      if (this.root) {
        var e = this.renderToVNode({
          willUpdate: !0
        });
        e.attrs.style = "position:absolute;left:0;top:0;user-select:none", gG(this._oldVNode, e), this._oldVNode = e;
      }
    }, r.prototype.renderOneToVNode = function(e) {
      return wC(e, fy(this._id));
    }, r.prototype.renderToVNode = function(e) {
      e = e || {};
      var t = this.storage.getDisplayList(!0), n = this._width, a = this._height, i = fy(this._id);
      i.animation = e.animation, i.willUpdate = e.willUpdate, i.compress = e.compress;
      var o = [], s = this._bgVNode = _G(n, a, this._backgroundColor, i);
      s && o.push(s);
      var l = e.compress ? null : this._mainVNode = De("g", "main", {}, []);
      this._paintList(t, i, l ? l.children : o), l && o.push(l);
      var u = Y(Pt(i.defs), function(c) {
        return i.defs[c];
      });
      if (u.length && o.push(De("defs", "defs", {}, u)), e.animation) {
        var f = Q5(i.cssNodes, i.cssAnims, { newline: !0 });
        if (f) {
          var h = De("style", "stl", {}, [], f);
          o.push(h);
        }
      }
      return cC(n, a, o, e.useViewBox);
    }, r.prototype.renderToString = function(e) {
      return e = e || {}, uy(this.renderToVNode({
        animation: _t(e.cssAnimation, !0),
        willUpdate: !1,
        compress: !0,
        useViewBox: _t(e.useViewBox, !0)
      }), { newline: !0 });
    }, r.prototype.setBackgroundColor = function(e) {
      this._backgroundColor = e;
    }, r.prototype.getSvgRoot = function() {
      return this._mainVNode && this._mainVNode.elm;
    }, r.prototype._paintList = function(e, t, n) {
      for (var a = e.length, i = [], o = 0, s, l, u = 0, f = 0; f < a; f++) {
        var h = e[f];
        if (!h.invisible) {
          var c = h.__clipPaths, v = c && c.length || 0, d = l && l.length || 0, p = void 0;
          for (p = Math.max(v - 1, d - 1); p >= 0 && !(c && l && c[p] === l[p]); p--)
            ;
          for (var g = d - 1; g > p; g--)
            o--, s = i[o - 1];
          for (var y = p + 1; y < v; y++) {
            var m = {};
            hG(c[y], m, t);
            var _ = De("g", "clip-g-" + u++, m, []);
            (s ? s.children : n).push(_), i[o++] = _, s = _;
          }
          l = c;
          var S = wC(h, t);
          S && (s ? s.children : n).push(S);
        }
      }
    }, r.prototype.resize = function(e, t) {
      var n = this._opts, a = this.root, i = this._viewport;
      if (e != null && (n.width = e), t != null && (n.height = t), a && i && (i.style.display = "none", e = ss(a, 0, n), t = ss(a, 1, n), i.style.display = ""), this._width !== e || this._height !== t) {
        if (this._width = e, this._height = t, i) {
          var o = i.style;
          o.width = e + "px", o.height = t + "px";
        }
        if (hd(this._backgroundColor))
          this.refresh();
        else {
          var s = this._svgDom;
          s && (s.setAttribute("width", e), s.setAttribute("height", t));
          var l = this._bgVNode && this._bgVNode.elm;
          l && (l.setAttribute("width", e), l.setAttribute("height", t));
        }
      }
    }, r.prototype.getWidth = function() {
      return this._width;
    }, r.prototype.getHeight = function() {
      return this._height;
    }, r.prototype.dispose = function() {
      this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;
    }, r.prototype.clear = function() {
      this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null;
    }, r.prototype.toDataURL = function(e) {
      var t = this.renderToString(), n = "data:image/svg+xml;";
      return e ? (t = vR(t), t && n + "base64," + t) : n + "charset=UTF-8," + encodeURIComponent(t);
    }, r;
  }();
  function EC(r) {
    return function() {
      Cr('In SVG mode painter not support method "' + r + '"');
    };
  }
  function _G(r, e, t, n) {
    var a;
    if (t && t !== "none")
      if (a = De("rect", "bg", {
        width: r,
        height: e,
        x: "0",
        y: "0",
        id: "0"
      }), T1(t))
        bC({ fill: t }, a.attrs, "fill", n);
      else if (hd(t))
        TC({
          style: {
            fill: t
          },
          dirty: ue,
          getBoundingRect: function() {
            return { width: r, height: e };
          }
        }, a.attrs, "fill", n);
      else {
        var i = ll(t), o = i.color, s = i.opacity;
        a.attrs.fill = o, s < 1 && (a.attrs["fill-opacity"] = s);
      }
    return a;
  }
  function SG(r) {
    r.registerPainter("svg", mG);
  }
  function RC(r, e, t) {
    var n = qt.createCanvas(), a = e.getWidth(), i = e.getHeight(), o = n.style;
    return o && (o.position = "absolute", o.left = "0", o.top = "0", o.width = a + "px", o.height = i + "px", n.setAttribute("data-zr-dom-id", r)), n.width = a * t, n.height = i * t, n;
  }
  var gy = function(r) {
    A(e, r);
    function e(t, n, a) {
      var i = r.call(this) || this;
      i.motionBlur = !1, i.lastFrameAlpha = 0.7, i.dpr = 1, i.virtual = !1, i.config = {}, i.incremental = !1, i.zlevel = 0, i.maxRepaintRectCount = 5, i.__dirty = !0, i.__firstTimePaint = !0, i.__used = !1, i.__drawIndex = 0, i.__startIndex = 0, i.__endIndex = 0, i.__prevStartIndex = null, i.__prevEndIndex = null;
      var o;
      a = a || Ef, typeof t == "string" ? o = RC(t, n, a) : it(t) && (o = t, t = o.id), i.id = t, i.dom = o;
      var s = o.style;
      return s && (Fv(o), o.onselectstart = function() {
        return !1;
      }, s.padding = "0", s.margin = "0", s.borderWidth = "0"), i.painter = n, i.dpr = a, i;
    }
    return e.prototype.getElementCount = function() {
      return this.__endIndex - this.__startIndex;
    }, e.prototype.afterBrush = function() {
      this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
    }, e.prototype.initContext = function() {
      this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
    }, e.prototype.setUnpainted = function() {
      this.__firstTimePaint = !0;
    }, e.prototype.createBackBuffer = function() {
      var t = this.dpr;
      this.domBack = RC("back-" + this.id, this.painter, t), this.ctxBack = this.domBack.getContext("2d"), t !== 1 && this.ctxBack.scale(t, t);
    }, e.prototype.createRepaintRects = function(t, n, a, i) {
      if (this.__firstTimePaint)
        return this.__firstTimePaint = !1, null;
      var o = [], s = this.maxRepaintRectCount, l = !1, u = new xt(0, 0, 0, 0);
      function f(m) {
        if (!(!m.isFinite() || m.isZero()))
          if (o.length === 0) {
            var _ = new xt(0, 0, 0, 0);
            _.copy(m), o.push(_);
          } else {
            for (var S = !1, b = 1 / 0, w = 0, T = 0; T < o.length; ++T) {
              var C = o[T];
              if (C.intersect(m)) {
                var I = new xt(0, 0, 0, 0);
                I.copy(C), I.union(m), o[T] = I, S = !0;
                break;
              } else if (l) {
                u.copy(m), u.union(C);
                var L = m.width * m.height, P = C.width * C.height, E = u.width * u.height, R = E - L - P;
                R < b && (b = R, w = T);
              }
            }
            if (l && (o[w].union(m), S = !0), !S) {
              var _ = new xt(0, 0, 0, 0);
              _.copy(m), o.push(_);
            }
            l || (l = o.length >= s);
          }
      }
      for (var h = this.__startIndex; h < this.__endIndex; ++h) {
        var c = t[h];
        if (c) {
          var v = c.shouldBePainted(a, i, !0, !0), d = c.__isRendered && (c.__dirty & pr || !v) ? c.getPrevPaintRect() : null;
          d && f(d);
          var p = v && (c.__dirty & pr || !c.__isRendered) ? c.getPaintRect() : null;
          p && f(p);
        }
      }
      for (var h = this.__prevStartIndex; h < this.__prevEndIndex; ++h) {
        var c = n[h], v = c.shouldBePainted(a, i, !0, !0);
        if (c && (!v || !c.__zr) && c.__isRendered) {
          var d = c.getPrevPaintRect();
          d && f(d);
        }
      }
      var g;
      do {
        g = !1;
        for (var h = 0; h < o.length; ) {
          if (o[h].isZero()) {
            o.splice(h, 1);
            continue;
          }
          for (var y = h + 1; y < o.length; )
            o[h].intersect(o[y]) ? (g = !0, o[h].union(o[y]), o.splice(y, 1)) : y++;
          h++;
        }
      } while (g);
      return this._paintRects = o, o;
    }, e.prototype.debugGetPaintRects = function() {
      return (this._paintRects || []).slice();
    }, e.prototype.resize = function(t, n) {
      var a = this.dpr, i = this.dom, o = i.style, s = this.domBack;
      o && (o.width = t + "px", o.height = n + "px"), i.width = t * a, i.height = n * a, s && (s.width = t * a, s.height = n * a, a !== 1 && this.ctxBack.scale(a, a));
    }, e.prototype.clear = function(t, n, a) {
      var i = this.dom, o = this.ctx, s = i.width, l = i.height;
      n = n || this.clearColor;
      var u = this.motionBlur && !t, f = this.lastFrameAlpha, h = this.dpr, c = this;
      u && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(i, 0, 0, s / h, l / h));
      var v = this.domBack;
      function d(p, g, y, m) {
        if (o.clearRect(p, g, y, m), n && n !== "transparent") {
          var _ = void 0;
          if (Fs(n)) {
            var S = n.global || n.__width === y && n.__height === m;
            _ = S && n.__canvasGradient || pg(o, n, {
              x: 0,
              y: 0,
              width: y,
              height: m
            }), n.__canvasGradient = _, n.__width = y, n.__height = m;
          } else
            G_(n) && (n.scaleX = n.scaleX || h, n.scaleY = n.scaleY || h, _ = yg(o, n, {
              dirty: function() {
                c.setUnpainted(), c.__painter.refresh();
              }
            }));
          o.save(), o.fillStyle = _ || n, o.fillRect(p, g, y, m), o.restore();
        }
        u && (o.save(), o.globalAlpha = f, o.drawImage(v, p, g, y, m), o.restore());
      }
      !a || u ? d(0, 0, s, l) : a.length && M(a, function(p) {
        d(p.x * h, p.y * h, p.width * h, p.height * h);
      });
    }, e;
  }(Ir), kC = 1e5, Qi = 314159, cc = 0.01, xG = 1e-3;
  function wG(r) {
    return r ? r.__builtin__ ? !0 : !(typeof r.resize != "function" || typeof r.refresh != "function") : !1;
  }
  function bG(r, e) {
    var t = document.createElement("div");
    return t.style.cssText = [
      "position:relative",
      "width:" + r + "px",
      "height:" + e + "px",
      "padding:0",
      "margin:0",
      "border-width:0"
    ].join(";") + ";", t;
  }
  var TG = function() {
    function r(e, t, n, a) {
      this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
      var i = !e.nodeName || e.nodeName.toUpperCase() === "CANVAS";
      this._opts = n = H({}, n || {}), this.dpr = n.devicePixelRatio || Ef, this._singleCanvas = i, this.root = e;
      var o = e.style;
      o && (Fv(e), e.innerHTML = ""), this.storage = t;
      var s = this._zlevelList;
      this._prevDisplayList = [];
      var l = this._layers;
      if (i) {
        var f = e, h = f.width, c = f.height;
        n.width != null && (h = n.width), n.height != null && (c = n.height), this.dpr = n.devicePixelRatio || 1, f.width = h * this.dpr, f.height = c * this.dpr, this._width = h, this._height = c;
        var v = new gy(f, this, this.dpr);
        v.__builtin__ = !0, v.initContext(), l[Qi] = v, v.zlevel = Qi, s.push(Qi), this._domRoot = e;
      } else {
        this._width = ss(e, 0, n), this._height = ss(e, 1, n);
        var u = this._domRoot = bG(this._width, this._height);
        e.appendChild(u);
      }
    }
    return r.prototype.getType = function() {
      return "canvas";
    }, r.prototype.isSingleCanvas = function() {
      return this._singleCanvas;
    }, r.prototype.getViewportRoot = function() {
      return this._domRoot;
    }, r.prototype.getViewportRootOffset = function() {
      var e = this.getViewportRoot();
      if (e)
        return {
          offsetLeft: e.offsetLeft || 0,
          offsetTop: e.offsetTop || 0
        };
    }, r.prototype.refresh = function(e) {
      var t = this.storage.getDisplayList(!0), n = this._prevDisplayList, a = this._zlevelList;
      this._redrawId = Math.random(), this._paintList(t, n, e, this._redrawId);
      for (var i = 0; i < a.length; i++) {
        var o = a[i], s = this._layers[o];
        if (!s.__builtin__ && s.refresh) {
          var l = i === 0 ? this._backgroundColor : null;
          s.refresh(l);
        }
      }
      return this._opts.useDirtyRect && (this._prevDisplayList = t.slice()), this;
    }, r.prototype.refreshHover = function() {
      this._paintHoverList(this.storage.getDisplayList(!1));
    }, r.prototype._paintHoverList = function(e) {
      var t = e.length, n = this._hoverlayer;
      if (n && n.clear(), !!t) {
        for (var a = {
          inHover: !0,
          viewWidth: this._width,
          viewHeight: this._height
        }, i, o = 0; o < t; o++) {
          var s = e[o];
          s.__inHover && (n || (n = this._hoverlayer = this.getLayer(kC)), i || (i = n.ctx, i.save()), Ui(i, s, a, o === t - 1));
        }
        i && i.restore();
      }
    }, r.prototype.getHoverLayer = function() {
      return this.getLayer(kC);
    }, r.prototype.paintOne = function(e, t) {
      mg(e, t);
    }, r.prototype._paintList = function(e, t, n, a) {
      if (this._redrawId === a) {
        n = n || !1, this._updateLayerStatus(e);
        var i = this._doPaintList(e, t, n), o = i.finished, s = i.needsRefreshHover;
        if (this._needsManuallyCompositing && this._compositeManually(), s && this._paintHoverList(e), o)
          this.eachLayer(function(u) {
            u.afterBrush && u.afterBrush();
          });
        else {
          var l = this;
          rd(function() {
            l._paintList(e, t, n, a);
          });
        }
      }
    }, r.prototype._compositeManually = function() {
      var e = this.getLayer(Qi).ctx, t = this._domRoot.width, n = this._domRoot.height;
      e.clearRect(0, 0, t, n), this.eachBuiltinLayer(function(a) {
        a.virtual && e.drawImage(a.dom, 0, 0, t, n);
      });
    }, r.prototype._doPaintList = function(e, t, n) {
      for (var a = this, i = [], o = this._opts.useDirtyRect, s = 0; s < this._zlevelList.length; s++) {
        var l = this._zlevelList[s], u = this._layers[l];
        u.__builtin__ && u !== this._hoverlayer && (u.__dirty || n) && i.push(u);
      }
      for (var f = !0, h = !1, c = function(p) {
        var g = i[p], y = g.ctx, m = o && g.createRepaintRects(e, t, v._width, v._height), _ = n ? g.__startIndex : g.__drawIndex, S = !n && g.incremental && Date.now, b = S && Date.now(), w = g.zlevel === v._zlevelList[0] ? v._backgroundColor : null;
        if (g.__startIndex === g.__endIndex)
          g.clear(!1, w, m);
        else if (_ === g.__startIndex) {
          var T = e[_];
          (!T.incremental || !T.notClear || n) && g.clear(!1, w, m);
        }
        _ === -1 && (console.error("For some unknown reason. drawIndex is -1"), _ = g.__startIndex);
        var C, I = function(R) {
          var k = {
            inHover: !1,
            allClipped: !1,
            prevEl: null,
            viewWidth: a._width,
            viewHeight: a._height
          };
          for (C = _; C < g.__endIndex; C++) {
            var O = e[C];
            if (O.__inHover && (h = !0), a._doPaintEl(O, g, o, R, k, C === g.__endIndex - 1), S) {
              var N = Date.now() - b;
              if (N > 15)
                break;
            }
          }
          k.prevElClipPaths && y.restore();
        };
        if (m)
          if (m.length === 0)
            C = g.__endIndex;
          else
            for (var L = v.dpr, P = 0; P < m.length; ++P) {
              var E = m[P];
              y.save(), y.beginPath(), y.rect(E.x * L, E.y * L, E.width * L, E.height * L), y.clip(), I(E), y.restore();
            }
        else
          y.save(), I(), y.restore();
        g.__drawIndex = C, g.__drawIndex < g.__endIndex && (f = !1);
      }, v = this, d = 0; d < i.length; d++)
        c(d);
      return z.wxa && M(this._layers, function(p) {
        p && p.ctx && p.ctx.draw && p.ctx.draw();
      }), {
        finished: f,
        needsRefreshHover: h
      };
    }, r.prototype._doPaintEl = function(e, t, n, a, i, o) {
      var s = t.ctx;
      if (n) {
        var l = e.getPaintRect();
        (!a || l && l.intersect(a)) && (Ui(s, e, i, o), e.setPrevPaintRect(l));
      } else
        Ui(s, e, i, o);
    }, r.prototype.getLayer = function(e, t) {
      this._singleCanvas && !this._needsManuallyCompositing && (e = Qi);
      var n = this._layers[e];
      return n || (n = new gy("zr_" + e, this, this.dpr), n.zlevel = e, n.__builtin__ = !0, this._layerConfig[e] ? mt(n, this._layerConfig[e], !0) : this._layerConfig[e - cc] && mt(n, this._layerConfig[e - cc], !0), t && (n.virtual = t), this.insertLayer(e, n), n.initContext()), n;
    }, r.prototype.insertLayer = function(e, t) {
      var n = this._layers, a = this._zlevelList, i = a.length, o = this._domRoot, s = null, l = -1;
      if (n[e]) {
        Cr("ZLevel " + e + " has been used already");
        return;
      }
      if (!wG(t)) {
        Cr("Layer of zlevel " + e + " is not valid");
        return;
      }
      if (i > 0 && e > a[0]) {
        for (l = 0; l < i - 1 && !(a[l] < e && a[l + 1] > e); l++)
          ;
        s = n[a[l]];
      }
      if (a.splice(l + 1, 0, e), n[e] = t, !t.virtual)
        if (s) {
          var u = s.dom;
          u.nextSibling ? o.insertBefore(t.dom, u.nextSibling) : o.appendChild(t.dom);
        } else
          o.firstChild ? o.insertBefore(t.dom, o.firstChild) : o.appendChild(t.dom);
      t.__painter = this;
    }, r.prototype.eachLayer = function(e, t) {
      for (var n = this._zlevelList, a = 0; a < n.length; a++) {
        var i = n[a];
        e.call(t, this._layers[i], i);
      }
    }, r.prototype.eachBuiltinLayer = function(e, t) {
      for (var n = this._zlevelList, a = 0; a < n.length; a++) {
        var i = n[a], o = this._layers[i];
        o.__builtin__ && e.call(t, o, i);
      }
    }, r.prototype.eachOtherLayer = function(e, t) {
      for (var n = this._zlevelList, a = 0; a < n.length; a++) {
        var i = n[a], o = this._layers[i];
        o.__builtin__ || e.call(t, o, i);
      }
    }, r.prototype.getLayers = function() {
      return this._layers;
    }, r.prototype._updateLayerStatus = function(e) {
      this.eachBuiltinLayer(function(h, c) {
        h.__dirty = h.__used = !1;
      });
      function t(h) {
        i && (i.__endIndex !== h && (i.__dirty = !0), i.__endIndex = h);
      }
      if (this._singleCanvas)
        for (var n = 1; n < e.length; n++) {
          var a = e[n];
          if (a.zlevel !== e[n - 1].zlevel || a.incremental) {
            this._needsManuallyCompositing = !0;
            break;
          }
        }
      var i = null, o = 0, s, l;
      for (l = 0; l < e.length; l++) {
        var a = e[l], u = a.zlevel, f = void 0;
        s !== u && (s = u, o = 0), a.incremental ? (f = this.getLayer(u + xG, this._needsManuallyCompositing), f.incremental = !0, o = 1) : f = this.getLayer(u + (o > 0 ? cc : 0), this._needsManuallyCompositing), f.__builtin__ || Cr("ZLevel " + u + " has been used by unkown layer " + f.id), f !== i && (f.__used = !0, f.__startIndex !== l && (f.__dirty = !0), f.__startIndex = l, f.incremental ? f.__drawIndex = -1 : f.__drawIndex = l, t(l), i = f), a.__dirty & pr && !a.__inHover && (f.__dirty = !0, f.incremental && f.__drawIndex < 0 && (f.__drawIndex = l));
      }
      t(l), this.eachBuiltinLayer(function(h, c) {
        !h.__used && h.getElementCount() > 0 && (h.__dirty = !0, h.__startIndex = h.__endIndex = h.__drawIndex = 0), h.__dirty && h.__drawIndex < 0 && (h.__drawIndex = h.__startIndex);
      });
    }, r.prototype.clear = function() {
      return this.eachBuiltinLayer(this._clearLayer), this;
    }, r.prototype._clearLayer = function(e) {
      e.clear();
    }, r.prototype.setBackgroundColor = function(e) {
      this._backgroundColor = e, M(this._layers, function(t) {
        t.setUnpainted();
      });
    }, r.prototype.configLayer = function(e, t) {
      if (t) {
        var n = this._layerConfig;
        n[e] ? mt(n[e], t, !0) : n[e] = t;
        for (var a = 0; a < this._zlevelList.length; a++) {
          var i = this._zlevelList[a];
          if (i === e || i === e + cc) {
            var o = this._layers[i];
            mt(o, n[e], !0);
          }
        }
      }
    }, r.prototype.delLayer = function(e) {
      var t = this._layers, n = this._zlevelList, a = t[e];
      a && (a.dom.parentNode.removeChild(a.dom), delete t[e], n.splice(bt(n, e), 1));
    }, r.prototype.resize = function(e, t) {
      if (this._domRoot.style) {
        var n = this._domRoot;
        n.style.display = "none";
        var a = this._opts, i = this.root;
        if (e != null && (a.width = e), t != null && (a.height = t), e = ss(i, 0, a), t = ss(i, 1, a), n.style.display = "", this._width !== e || t !== this._height) {
          n.style.width = e + "px", n.style.height = t + "px";
          for (var o in this._layers)
            this._layers.hasOwnProperty(o) && this._layers[o].resize(e, t);
          this.refresh(!0);
        }
        this._width = e, this._height = t;
      } else {
        if (e == null || t == null)
          return;
        this._width = e, this._height = t, this.getLayer(Qi).resize(e, t);
      }
      return this;
    }, r.prototype.clearLayer = function(e) {
      var t = this._layers[e];
      t && t.clear();
    }, r.prototype.dispose = function() {
      this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
    }, r.prototype.getRenderedCanvas = function(e) {
      if (e = e || {}, this._singleCanvas && !this._compositeManually)
        return this._layers[Qi].dom;
      var t = new gy("image", this, e.pixelRatio || this.dpr);
      t.initContext(), t.clear(!1, e.backgroundColor || this._backgroundColor);
      var n = t.ctx;
      if (e.pixelRatio <= this.dpr) {
        this.refresh();
        var a = t.dom.width, i = t.dom.height;
        this.eachLayer(function(h) {
          h.__builtin__ ? n.drawImage(h.dom, 0, 0, a, i) : h.renderToCanvas && (n.save(), h.renderToCanvas(n), n.restore());
        });
      } else
        for (var o = {
          inHover: !1,
          viewWidth: this._width,
          viewHeight: this._height
        }, s = this.storage.getDisplayList(!0), l = 0, u = s.length; l < u; l++) {
          var f = s[l];
          Ui(n, f, o, l === u - 1);
        }
      return t.dom;
    }, r.prototype.getWidth = function() {
      return this._width;
    }, r.prototype.getHeight = function() {
      return this._height;
    }, r;
  }();
  function CG(r) {
    r.registerPainter("canvas", TG);
  }
  var AG = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t;
      }
      return e.prototype.getInitialData = function(t) {
        {
          var n = t.coordinateSystem;
          if (n !== "polar" && n !== "cartesian2d")
            throw new Error("Line not support coordinateSystem besides cartesian and polar");
        }
        return Ln(null, this, {
          useEncodeDefaulter: !0
        });
      }, e.prototype.getLegendIcon = function(t) {
        var n = new ct(), a = ve("line", 0, t.itemHeight / 2, t.itemWidth, 0, t.lineStyle.stroke, !1);
        n.add(a), a.setStyle(t.lineStyle);
        var i = this.getData().getVisual("symbol"), o = this.getData().getVisual("symbolRotate"), s = i === "none" ? "circle" : i, l = t.itemHeight * 0.8, u = ve(s, (t.itemWidth - l) / 2, (t.itemHeight - l) / 2, l, l, t.itemStyle.fill);
        n.add(u), u.setStyle(t.itemStyle);
        var f = t.iconRotate === "inherit" ? o : t.iconRotate || 0;
        return u.rotation = f * Math.PI / 180, u.setOrigin([t.itemWidth / 2, t.itemHeight / 2]), s.indexOf("empty") > -1 && (u.style.stroke = u.style.fill, u.style.fill = "#fff", u.style.lineWidth = 2), n;
      }, e.type = "series.line", e.dependencies = ["grid", "polar"], e.defaultOption = {
        // zlevel: 0,
        z: 3,
        coordinateSystem: "cartesian2d",
        legendHoverLink: !0,
        clip: !0,
        label: {
          position: "top"
        },
        // itemStyle: {
        // },
        endLabel: {
          show: !1,
          valueAnimation: !0,
          distance: 8
        },
        lineStyle: {
          width: 2,
          type: "solid"
        },
        emphasis: {
          scale: !0
        },
        // areaStyle: {
        // origin of areaStyle. Valid values:
        // `'auto'/null/undefined`: from axisLine to data
        // `'start'`: from min to data
        // `'end'`: from data to max
        // origin: 'auto'
        // },
        // false, 'start', 'end', 'middle'
        step: !1,
        // Disabled if step is true
        smooth: !1,
        smoothMonotone: null,
        symbol: "emptyCircle",
        symbolSize: 4,
        symbolRotate: null,
        showSymbol: !0,
        // `false`: follow the label interval strategy.
        // `true`: show all symbols.
        // `'auto'`: If possible, show all symbols, otherwise
        //           follow the label interval strategy.
        showAllSymbol: "auto",
        // Whether to connect break point.
        connectNulls: !1,
        // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.
        sampling: "none",
        animationEasing: "linear",
        // Disable progressive
        progressive: 0,
        hoverLayerThreshold: 1 / 0,
        universalTransition: {
          divideShape: "clone"
        },
        triggerLineEvent: !1
      }, e;
    }(Zt)
  );
  function ps(r, e) {
    var t = r.mapDimensionsAll("defaultedLabel"), n = t.length;
    if (n === 1) {
      var a = es(r, e, t[0]);
      return a != null ? a + "" : null;
    } else if (n) {
      for (var i = [], o = 0; o < t.length; o++)
        i.push(es(r, e, t[o]));
      return i.join(" ");
    }
  }
  function OC(r, e) {
    var t = r.mapDimensionsAll("defaultedLabel");
    if (!U(e))
      return e + "";
    for (var n = [], a = 0; a < t.length; a++) {
      var i = r.getDimensionIndex(t[a]);
      i >= 0 && n.push(e[i]);
    }
    return n.join(" ");
  }
  var gu = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i) {
        var o = r.call(this) || this;
        return o.updateData(t, n, a, i), o;
      }
      return e.prototype._createSymbol = function(t, n, a, i, o) {
        this.removeAll();
        var s = ve(t, -1, -1, 2, 2, null, o);
        s.attr({
          z2: 100,
          culling: !0,
          scaleX: i[0] / 2,
          scaleY: i[1] / 2
        }), s.drift = DG, this._symbolType = t, this.add(s);
      }, e.prototype.stopSymbolAnimation = function(t) {
        this.childAt(0).stopAnimation(null, t);
      }, e.prototype.getSymbolType = function() {
        return this._symbolType;
      }, e.prototype.getSymbolPath = function() {
        return this.childAt(0);
      }, e.prototype.highlight = function() {
        jn(this.childAt(0));
      }, e.prototype.downplay = function() {
        Jn(this.childAt(0));
      }, e.prototype.setZ = function(t, n) {
        var a = this.childAt(0);
        a.zlevel = t, a.z = n;
      }, e.prototype.setDraggable = function(t, n) {
        var a = this.childAt(0);
        a.draggable = t, a.cursor = !n && t ? "move" : a.cursor;
      }, e.prototype.updateData = function(t, n, a, i) {
        this.silent = !1;
        var o = t.getItemVisual(n, "symbol") || "circle", s = t.hostModel, l = e.getSymbolSize(t, n), u = o !== this._symbolType, f = i && i.disableAnimation;
        if (u) {
          var h = t.getItemVisual(n, "symbolKeepAspect");
          this._createSymbol(o, t, n, l, h);
        } else {
          var c = this.childAt(0);
          c.silent = !1;
          var v = {
            scaleX: l[0] / 2,
            scaleY: l[1] / 2
          };
          f ? c.attr(v) : Vt(c, v, s, n), an(c);
        }
        if (this._updateCommon(t, n, l, a, i), u) {
          var c = this.childAt(0);
          if (!f) {
            var v = {
              scaleX: this._sizeX,
              scaleY: this._sizeY,
              style: {
                // Always fadeIn. Because it has fadeOut animation when symbol is removed..
                opacity: c.style.opacity
              }
            };
            c.scaleX = c.scaleY = 0, c.style.opacity = 0, te(c, v, s, n);
          }
        }
        f && this.childAt(0).stopAnimation("leave");
      }, e.prototype._updateCommon = function(t, n, a, i, o) {
        var s = this.childAt(0), l = t.hostModel, u, f, h, c, v, d, p, g, y;
        if (i && (u = i.emphasisItemStyle, f = i.blurItemStyle, h = i.selectItemStyle, c = i.focus, v = i.blurScope, p = i.labelStatesModels, g = i.hoverScale, y = i.cursorStyle, d = i.emphasisDisabled), !i || t.hasItemOption) {
          var m = i && i.itemModel ? i.itemModel : t.getItemModel(n), _ = m.getModel("emphasis");
          u = _.getModel("itemStyle").getItemStyle(), h = m.getModel(["select", "itemStyle"]).getItemStyle(), f = m.getModel(["blur", "itemStyle"]).getItemStyle(), c = _.get("focus"), v = _.get("blurScope"), d = _.get("disabled"), p = Ce(m), g = _.getShallow("scale"), y = m.getShallow("cursor");
        }
        var S = t.getItemVisual(n, "symbolRotate");
        s.attr("rotation", (S || 0) * Math.PI / 180 || 0);
        var b = os(t.getItemVisual(n, "symbolOffset"), a);
        b && (s.x = b[0], s.y = b[1]), y && s.attr("cursor", y);
        var w = t.getItemVisual(n, "style"), T = w.fill;
        if (s instanceof Te) {
          var C = s.style;
          s.useStyle(H({
            // TODO other properties like x, y ?
            image: C.image,
            x: C.x,
            y: C.y,
            width: C.width,
            height: C.height
          }, w));
        } else
          s.__isEmptyBrush ? s.useStyle(H({}, w)) : s.useStyle(w), s.style.decal = null, s.setColor(T, o && o.symbolInnerColor), s.style.strokeNoScale = !0;
        var I = t.getItemVisual(n, "liftZ"), L = this._z2;
        I != null ? L == null && (this._z2 = s.z2, s.z2 += I) : L != null && (s.z2 = L, this._z2 = null);
        var P = o && o.useNameLabel;
        ke(s, p, {
          labelFetcher: l,
          labelDataIndex: n,
          defaultText: E,
          inheritColor: T,
          defaultOpacity: w.opacity
        });
        function E(O) {
          return P ? t.getName(O) : ps(t, O);
        }
        this._sizeX = a[0] / 2, this._sizeY = a[1] / 2;
        var R = s.ensureState("emphasis");
        R.style = u, s.ensureState("select").style = h, s.ensureState("blur").style = f;
        var k = g == null || g === !0 ? Math.max(1.1, 3 / this._sizeY) : isFinite(g) && g > 0 ? +g : 1;
        R.scaleX = this._sizeX * k, R.scaleY = this._sizeY * k, this.setSymbolScale(1), oe(this, c, v, d);
      }, e.prototype.setSymbolScale = function(t) {
        this.scaleX = this.scaleY = t;
      }, e.prototype.fadeOut = function(t, n, a) {
        var i = this.childAt(0), o = gt(this).dataIndex, s = a && a.animation;
        if (this.silent = i.silent = !0, a && a.fadeLabel) {
          var l = i.getTextContent();
          l && Ia(l, {
            style: {
              opacity: 0
            }
          }, n, {
            dataIndex: o,
            removeOpt: s,
            cb: function() {
              i.removeTextContent();
            }
          });
        } else
          i.removeTextContent();
        Ia(i, {
          style: {
            opacity: 0
          },
          scaleX: 0,
          scaleY: 0
        }, n, {
          dataIndex: o,
          cb: t,
          removeOpt: s
        });
      }, e.getSymbolSize = function(t, n) {
        return Ql(t.getItemVisual(n, "symbolSize"));
      }, e;
    }(ct)
  );
  function DG(r, e) {
    this.parent.drift(r, e);
  }
  function yy(r, e, t, n) {
    return e && !isNaN(e[0]) && !isNaN(e[1]) && !(n.isIgnore && n.isIgnore(t)) && !(n.clipShape && !n.clipShape.contain(e[0], e[1])) && r.getItemVisual(t, "symbol") !== "none";
  }
  function NC(r) {
    return r != null && !it(r) && (r = {
      isIgnore: r
    }), r || {};
  }
  function VC(r) {
    var e = r.hostModel, t = e.getModel("emphasis");
    return {
      emphasisItemStyle: t.getModel("itemStyle").getItemStyle(),
      blurItemStyle: e.getModel(["blur", "itemStyle"]).getItemStyle(),
      selectItemStyle: e.getModel(["select", "itemStyle"]).getItemStyle(),
      focus: t.get("focus"),
      blurScope: t.get("blurScope"),
      emphasisDisabled: t.get("disabled"),
      hoverScale: t.get("scale"),
      labelStatesModels: Ce(e),
      cursorStyle: e.get("cursor")
    };
  }
  var yu = (
    /** @class */
    function() {
      function r(e) {
        this.group = new ct(), this._SymbolCtor = e || gu;
      }
      return r.prototype.updateData = function(e, t) {
        this._progressiveEls = null, t = NC(t);
        var n = this.group, a = e.hostModel, i = this._data, o = this._SymbolCtor, s = t.disableAnimation, l = VC(e), u = {
          disableAnimation: s
        }, f = t.getSymbolPoint || function(h) {
          return e.getItemLayout(h);
        };
        i || n.removeAll(), e.diff(i).add(function(h) {
          var c = f(h);
          if (yy(e, c, h, t)) {
            var v = new o(e, h, l, u);
            v.setPosition(c), e.setItemGraphicEl(h, v), n.add(v);
          }
        }).update(function(h, c) {
          var v = i.getItemGraphicEl(c), d = f(h);
          if (!yy(e, d, h, t)) {
            n.remove(v);
            return;
          }
          var p = e.getItemVisual(h, "symbol") || "circle", g = v && v.getSymbolType && v.getSymbolType();
          if (!v || g && g !== p)
            n.remove(v), v = new o(e, h, l, u), v.setPosition(d);
          else {
            v.updateData(e, h, l, u);
            var y = {
              x: d[0],
              y: d[1]
            };
            s ? v.attr(y) : Vt(v, y, a);
          }
          n.add(v), e.setItemGraphicEl(h, v);
        }).remove(function(h) {
          var c = i.getItemGraphicEl(h);
          c && c.fadeOut(function() {
            n.remove(c);
          }, a);
        }).execute(), this._getSymbolPoint = f, this._data = e;
      }, r.prototype.updateLayout = function() {
        var e = this, t = this._data;
        t && t.eachItemGraphicEl(function(n, a) {
          var i = e._getSymbolPoint(a);
          n.setPosition(i), n.markRedraw();
        });
      }, r.prototype.incrementalPrepareUpdate = function(e) {
        this._seriesScope = VC(e), this._data = null, this.group.removeAll();
      }, r.prototype.incrementalUpdate = function(e, t, n) {
        this._progressiveEls = [], n = NC(n);
        function a(l) {
          l.isGroup || (l.incremental = !0, l.ensureState("emphasis").hoverLayer = !0);
        }
        for (var i = e.start; i < e.end; i++) {
          var o = t.getItemLayout(i);
          if (yy(t, o, i, n)) {
            var s = new this._SymbolCtor(t, i, this._seriesScope);
            s.traverse(a), s.setPosition(o), this.group.add(s), t.setItemGraphicEl(i, s), this._progressiveEls.push(s);
          }
        }
      }, r.prototype.eachRendered = function(e) {
        Pa(this._progressiveEls || this.group, e);
      }, r.prototype.remove = function(e) {
        var t = this.group, n = this._data;
        n && e ? n.eachItemGraphicEl(function(a) {
          a.fadeOut(function() {
            t.remove(a);
          }, n.hostModel);
        }) : t.removeAll();
      }, r;
    }()
  );
  function BC(r, e, t) {
    var n = r.getBaseAxis(), a = r.getOtherAxis(n), i = MG(a, t), o = n.dim, s = a.dim, l = e.mapDimension(s), u = e.mapDimension(o), f = s === "x" || s === "radius" ? 1 : 0, h = Y(r.dimensions, function(d) {
      return e.mapDimension(d);
    }), c = !1, v = e.getCalculationInfo("stackResultDimension");
    return ra(
      e,
      h[0]
      /* , dims[1] */
    ) && (c = !0, h[0] = v), ra(
      e,
      h[1]
      /* , dims[0] */
    ) && (c = !0, h[1] = v), {
      dataDimsForPoint: h,
      valueStart: i,
      valueAxisDim: s,
      baseAxisDim: o,
      stacked: !!c,
      valueDim: l,
      baseDim: u,
      baseDataOffset: f,
      stackedOverDimension: e.getCalculationInfo("stackedOverDimension")
    };
  }
  function MG(r, e) {
    var t = 0, n = r.scale.getExtent();
    return e === "start" ? t = n[0] : e === "end" ? t = n[1] : Ot(e) && !isNaN(e) ? t = e : n[0] > 0 ? t = n[0] : n[1] < 0 && (t = n[1]), t;
  }
  function zC(r, e, t, n) {
    var a = NaN;
    r.stacked && (a = t.get(t.getCalculationInfo("stackedOverDimension"), n)), isNaN(a) && (a = r.valueStart);
    var i = r.baseDataOffset, o = [];
    return o[i] = t.get(r.baseDim, n), o[1 - i] = a, e.dataToPoint(o);
  }
  function IG(r, e) {
    var t = [];
    return e.diff(r).add(function(n) {
      t.push({
        cmd: "+",
        idx: n
      });
    }).update(function(n, a) {
      t.push({
        cmd: "=",
        idx: a,
        idx1: n
      });
    }).remove(function(n) {
      t.push({
        cmd: "-",
        idx: n
      });
    }).execute(), t;
  }
  function LG(r, e, t, n, a, i, o, s) {
    for (var l = IG(r, e), u = [], f = [], h = [], c = [], v = [], d = [], p = [], g = BC(a, e, o), y = r.getLayout("points") || [], m = e.getLayout("points") || [], _ = 0; _ < l.length; _++) {
      var S = l[_], b = !0, w = void 0, T = void 0;
      switch (S.cmd) {
        case "=":
          w = S.idx * 2, T = S.idx1 * 2;
          var C = y[w], I = y[w + 1], L = m[T], P = m[T + 1];
          (isNaN(C) || isNaN(I)) && (C = L, I = P), u.push(C, I), f.push(L, P), h.push(t[w], t[w + 1]), c.push(n[T], n[T + 1]), p.push(e.getRawIndex(S.idx1));
          break;
        case "+":
          var E = S.idx, R = g.dataDimsForPoint, k = a.dataToPoint([e.get(R[0], E), e.get(R[1], E)]);
          T = E * 2, u.push(k[0], k[1]), f.push(m[T], m[T + 1]);
          var O = zC(g, a, e, E);
          h.push(O[0], O[1]), c.push(n[T], n[T + 1]), p.push(e.getRawIndex(E));
          break;
        case "-":
          b = !1;
      }
      b && (v.push(S), d.push(d.length));
    }
    d.sort(function(It, zt) {
      return p[It] - p[zt];
    });
    for (var N = u.length, F = En(N), G = En(N), W = En(N), X = En(N), K = [], _ = 0; _ < d.length; _++) {
      var et = d[_], lt = _ * 2, ft = et * 2;
      F[lt] = u[ft], F[lt + 1] = u[ft + 1], G[lt] = f[ft], G[lt + 1] = f[ft + 1], W[lt] = h[ft], W[lt + 1] = h[ft + 1], X[lt] = c[ft], X[lt + 1] = c[ft + 1], K[_] = v[et];
    }
    return {
      current: F,
      next: G,
      stackedOnCurrent: W,
      stackedOnNext: X,
      status: K
    };
  }
  var za = Math.min, Ga = Math.max;
  function to(r, e) {
    return isNaN(r) || isNaN(e);
  }
  function _y(r, e, t, n, a, i, o, s, l) {
    for (var u, f, h, c, v, d, p = t, g = 0; g < n; g++) {
      var y = e[p * 2], m = e[p * 2 + 1];
      if (p >= a || p < 0)
        break;
      if (to(y, m)) {
        if (l) {
          p += i;
          continue;
        }
        break;
      }
      if (p === t)
        r[i > 0 ? "moveTo" : "lineTo"](y, m), h = y, c = m;
      else {
        var _ = y - u, S = m - f;
        if (_ * _ + S * S < 0.5) {
          p += i;
          continue;
        }
        if (o > 0) {
          for (var b = p + i, w = e[b * 2], T = e[b * 2 + 1]; w === y && T === m && g < n; )
            g++, b += i, p += i, w = e[b * 2], T = e[b * 2 + 1], y = e[p * 2], m = e[p * 2 + 1], _ = y - u, S = m - f;
          var C = g + 1;
          if (l)
            for (; to(w, T) && C < n; )
              C++, b += i, w = e[b * 2], T = e[b * 2 + 1];
          var I = 0.5, L = 0, P = 0, E = void 0, R = void 0;
          if (C >= n || to(w, T))
            v = y, d = m;
          else {
            L = w - u, P = T - f;
            var k = y - u, O = w - y, N = m - f, F = T - m, G = void 0, W = void 0;
            if (s === "x") {
              G = Math.abs(k), W = Math.abs(O);
              var X = L > 0 ? 1 : -1;
              v = y - X * G * o, d = m, E = y + X * W * o, R = m;
            } else if (s === "y") {
              G = Math.abs(N), W = Math.abs(F);
              var K = P > 0 ? 1 : -1;
              v = y, d = m - K * G * o, E = y, R = m + K * W * o;
            } else
              G = Math.sqrt(k * k + N * N), W = Math.sqrt(O * O + F * F), I = W / (W + G), v = y - L * o * (1 - I), d = m - P * o * (1 - I), E = y + L * o * I, R = m + P * o * I, E = za(E, Ga(w, y)), R = za(R, Ga(T, m)), E = Ga(E, za(w, y)), R = Ga(R, za(T, m)), L = E - y, P = R - m, v = y - L * G / W, d = m - P * G / W, v = za(v, Ga(u, y)), d = za(d, Ga(f, m)), v = Ga(v, za(u, y)), d = Ga(d, za(f, m)), L = y - v, P = m - d, E = y + L * W / G, R = m + P * W / G;
          }
          r.bezierCurveTo(h, c, v, d, y, m), h = E, c = R;
        } else
          r.lineTo(y, m);
      }
      u = y, f = m, p += i;
    }
    return g;
  }
  var GC = (
    /** @class */
    function() {
      function r() {
        this.smooth = 0, this.smoothConstraint = !0;
      }
      return r;
    }()
  ), PG = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "ec-polyline", n;
      }
      return e.prototype.getDefaultStyle = function() {
        return {
          stroke: "#000",
          fill: null
        };
      }, e.prototype.getDefaultShape = function() {
        return new GC();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.points, i = 0, o = a.length / 2;
        if (n.connectNulls) {
          for (; o > 0 && to(a[o * 2 - 2], a[o * 2 - 1]); o--)
            ;
          for (; i < o && to(a[i * 2], a[i * 2 + 1]); i++)
            ;
        }
        for (; i < o; )
          i += _y(t, a, i, o, o, 1, n.smooth, n.smoothMonotone, n.connectNulls) + 1;
      }, e.prototype.getPointOn = function(t, n) {
        this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
        for (var a = this.path, i = a.data, o = An.CMD, s, l, u = n === "x", f = [], h = 0; h < i.length; ) {
          var c = i[h++], v = void 0, d = void 0, p = void 0, g = void 0, y = void 0, m = void 0, _ = void 0;
          switch (c) {
            case o.M:
              s = i[h++], l = i[h++];
              break;
            case o.L:
              if (v = i[h++], d = i[h++], _ = u ? (t - s) / (v - s) : (t - l) / (d - l), _ <= 1 && _ >= 0) {
                var S = u ? (d - l) * _ + l : (v - s) * _ + s;
                return u ? [t, S] : [S, t];
              }
              s = v, l = d;
              break;
            case o.C:
              v = i[h++], d = i[h++], p = i[h++], g = i[h++], y = i[h++], m = i[h++];
              var b = u ? Sf(s, v, p, y, t, f) : Sf(l, d, g, m, t, f);
              if (b > 0)
                for (var w = 0; w < b; w++) {
                  var T = f[w];
                  if (T <= 1 && T >= 0) {
                    var S = u ? be(l, d, g, m, T) : be(s, v, p, y, T);
                    return u ? [t, S] : [S, t];
                  }
                }
              s = y, l = m;
              break;
          }
        }
      }, e;
    }(Dt)
  ), EG = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e;
    }(GC)
  ), FC = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "ec-polygon", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new EG();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.points, i = n.stackedOnPoints, o = 0, s = a.length / 2, l = n.smoothMonotone;
        if (n.connectNulls) {
          for (; s > 0 && to(a[s * 2 - 2], a[s * 2 - 1]); s--)
            ;
          for (; o < s && to(a[o * 2], a[o * 2 + 1]); o++)
            ;
        }
        for (; o < s; ) {
          var u = _y(t, a, o, s, s, 1, n.smooth, l, n.connectNulls);
          _y(t, i, o + u - 1, u, s, -1, n.stackedOnSmooth, l, n.connectNulls), o += u + 1, t.closePath();
        }
      }, e;
    }(Dt)
  );
  function HC(r, e, t, n, a) {
    var i = r.getArea(), o = i.x, s = i.y, l = i.width, u = i.height, f = t.get(["lineStyle", "width"]) || 2;
    o -= f / 2, s -= f / 2, l += f, u += f, o = Math.floor(o), l = Math.round(l);
    var h = new Rt({
      shape: {
        x: o,
        y: s,
        width: l,
        height: u
      }
    });
    if (e) {
      var c = r.getBaseAxis(), v = c.isHorizontal(), d = c.inverse;
      v ? (d && (h.shape.x += l), h.shape.width = 0) : (d || (h.shape.y += u), h.shape.height = 0);
      var p = rt(a) ? function(g) {
        a(g, h);
      } : null;
      te(h, {
        shape: {
          width: l,
          height: u,
          x: o,
          y: s
        }
      }, t, null, n, p);
    }
    return h;
  }
  function WC(r, e, t) {
    var n = r.getArea(), a = ie(n.r0, 1), i = ie(n.r, 1), o = new Be({
      shape: {
        cx: ie(r.cx, 1),
        cy: ie(r.cy, 1),
        r0: a,
        r: i,
        startAngle: n.startAngle,
        endAngle: n.endAngle,
        clockwise: n.clockwise
      }
    });
    if (e) {
      var s = r.getBaseAxis().dim === "angle";
      s ? o.shape.endAngle = n.startAngle : o.shape.r = a, te(o, {
        shape: {
          endAngle: n.endAngle,
          r: i
        }
      }, t);
    }
    return o;
  }
  function vc(r, e, t, n, a) {
    if (r) {
      if (r.type === "polar")
        return WC(r, e, t);
      if (r.type === "cartesian2d")
        return HC(r, e, t, n, a);
    } else
      return null;
    return null;
  }
  function eo(r, e) {
    return r.type === e;
  }
  function UC(r, e) {
    if (r.length === e.length) {
      for (var t = 0; t < r.length; t++)
        if (r[t] !== e[t])
          return;
      return !0;
    }
  }
  function YC(r) {
    for (var e = 1 / 0, t = 1 / 0, n = -1 / 0, a = -1 / 0, i = 0; i < r.length; ) {
      var o = r[i++], s = r[i++];
      isNaN(o) || (e = Math.min(o, e), n = Math.max(o, n)), isNaN(s) || (t = Math.min(s, t), a = Math.max(s, a));
    }
    return [[e, t], [n, a]];
  }
  function $C(r, e) {
    var t = YC(r), n = t[0], a = t[1], i = YC(e), o = i[0], s = i[1];
    return Math.max(Math.abs(n[0] - o[0]), Math.abs(n[1] - o[1]), Math.abs(a[0] - s[0]), Math.abs(a[1] - s[1]));
  }
  function XC(r) {
    return Ot(r) ? r : r ? 0.5 : 0;
  }
  function RG(r, e, t) {
    if (!t.valueDim)
      return [];
    for (var n = e.count(), a = En(n * 2), i = 0; i < n; i++) {
      var o = zC(t, r, e, i);
      a[i * 2] = o[0], a[i * 2 + 1] = o[1];
    }
    return a;
  }
  function Fa(r, e, t, n) {
    var a = e.getBaseAxis(), i = a.dim === "x" || a.dim === "radius" ? 0 : 1, o = [], s = 0, l = [], u = [], f = [], h = [];
    if (n) {
      for (s = 0; s < r.length; s += 2)
        !isNaN(r[s]) && !isNaN(r[s + 1]) && h.push(r[s], r[s + 1]);
      r = h;
    }
    for (s = 0; s < r.length - 2; s += 2)
      switch (f[0] = r[s + 2], f[1] = r[s + 3], u[0] = r[s], u[1] = r[s + 1], o.push(u[0], u[1]), t) {
        case "end":
          l[i] = f[i], l[1 - i] = u[1 - i], o.push(l[0], l[1]);
          break;
        case "middle":
          var c = (u[i] + f[i]) / 2, v = [];
          l[i] = v[i] = c, l[1 - i] = u[1 - i], v[1 - i] = f[1 - i], o.push(l[0], l[1]), o.push(v[0], v[1]);
          break;
        default:
          l[i] = u[i], l[1 - i] = f[1 - i], o.push(l[0], l[1]);
      }
    return o.push(r[s++], r[s++]), o;
  }
  function kG(r, e) {
    var t = [], n = r.length, a, i;
    function o(f, h, c) {
      var v = f.coord, d = (c - v) / (h.coord - v), p = ud(d, [f.color, h.color]);
      return {
        coord: c,
        color: p
      };
    }
    for (var s = 0; s < n; s++) {
      var l = r[s], u = l.coord;
      if (u < 0)
        a = l;
      else if (u > e) {
        i ? t.push(o(i, l, e)) : a && t.push(o(a, l, 0), o(a, l, e));
        break;
      } else
        a && (t.push(o(a, l, 0)), a = null), t.push(l), i = l;
    }
    return t;
  }
  function OG(r, e, t) {
    var n = r.getVisual("visualMeta");
    if (!(!n || !n.length || !r.count())) {
      if (e.type !== "cartesian2d") {
        console.warn("Visual map on line style is only supported on cartesian2d.");
        return;
      }
      for (var a, i, o = n.length - 1; o >= 0; o--) {
        var s = r.getDimensionInfo(n[o].dimension);
        if (a = s && s.coordDim, a === "x" || a === "y") {
          i = n[o];
          break;
        }
      }
      if (!i) {
        console.warn("Visual map on line style only support x or y dimension.");
        return;
      }
      var l = e.getAxis(a), u = Y(i.stops, function(_) {
        return {
          coord: l.toGlobalCoord(l.dataToCoord(_.value)),
          color: _.color
        };
      }), f = u.length, h = i.outerColors.slice();
      f && u[0].coord > u[f - 1].coord && (u.reverse(), h.reverse());
      var c = kG(u, a === "x" ? t.getWidth() : t.getHeight()), v = c.length;
      if (!v && f)
        return u[0].coord < 0 ? h[1] ? h[1] : u[f - 1].color : h[0] ? h[0] : u[0].color;
      var d = 10, p = c[0].coord - d, g = c[v - 1].coord + d, y = g - p;
      if (y < 1e-3)
        return "transparent";
      M(c, function(_) {
        _.offset = (_.coord - p) / y;
      }), c.push({
        // NOTE: inRangeStopLen may still be 0 if stoplen is zero.
        offset: v ? c[v - 1].offset : 0.5,
        color: h[1] || "transparent"
      }), c.unshift({
        offset: v ? c[0].offset : 0.5,
        color: h[0] || "transparent"
      });
      var m = new Ho(0, 0, 0, 0, c, !0);
      return m[a] = p, m[a + "2"] = g, m;
    }
  }
  function NG(r, e, t) {
    var n = r.get("showAllSymbol"), a = n === "auto";
    if (!(n && !a)) {
      var i = t.getAxesByScale("ordinal")[0];
      if (i && !(a && VG(i, e))) {
        var o = e.mapDimension(i.dim), s = {};
        return M(i.getViewLabels(), function(l) {
          var u = i.scale.getRawOrdinalNumber(l.tickValue);
          s[u] = 1;
        }), function(l) {
          return !s.hasOwnProperty(e.get(o, l));
        };
      }
    }
  }
  function VG(r, e) {
    var t = r.getExtent(), n = Math.abs(t[1] - t[0]) / r.scale.count();
    isNaN(n) && (n = 0);
    for (var a = e.count(), i = Math.max(1, Math.round(a / 5)), o = 0; o < a; o += i)
      if (gu.getSymbolSize(
        e,
        o
        // Only for cartesian, where `isHorizontal` exists.
      )[r.isHorizontal() ? 1 : 0] * 1.5 > n)
        return !1;
    return !0;
  }
  function BG(r, e) {
    return isNaN(r) || isNaN(e);
  }
  function zG(r) {
    for (var e = r.length / 2; e > 0 && BG(r[e * 2 - 2], r[e * 2 - 1]); e--)
      ;
    return e - 1;
  }
  function ZC(r, e) {
    return [r[e * 2], r[e * 2 + 1]];
  }
  function GG(r, e, t) {
    for (var n = r.length / 2, a = t === "x" ? 0 : 1, i, o, s = 0, l = -1, u = 0; u < n; u++)
      if (o = r[u * 2 + a], !(isNaN(o) || isNaN(r[u * 2 + 1 - a]))) {
        if (u === 0) {
          i = o;
          continue;
        }
        if (i <= e && o >= e || i >= e && o <= e) {
          l = u;
          break;
        }
        s = u, i = o;
      }
    return {
      range: [s, l],
      t: (e - i) / (o - i)
    };
  }
  function qC(r) {
    if (r.get(["endLabel", "show"]))
      return !0;
    for (var e = 0; e < Je.length; e++)
      if (r.get([Je[e], "endLabel", "show"]))
        return !0;
    return !1;
  }
  function Sy(r, e, t, n) {
    if (eo(e, "cartesian2d")) {
      var a = n.getModel("endLabel"), i = a.get("valueAnimation"), o = n.getData(), s = {
        lastFrameIndex: 0
      }, l = qC(n) ? function(v, d) {
        r._endLabelOnDuring(v, d, o, s, i, a, e);
      } : null, u = e.getBaseAxis().isHorizontal(), f = HC(e, t, n, function() {
        var v = r._endLabel;
        v && t && s.originalX != null && v.attr({
          x: s.originalX,
          y: s.originalY
        });
      }, l);
      if (!n.get("clip", !0)) {
        var h = f.shape, c = Math.max(h.width, h.height);
        u ? (h.y -= c, h.height += c * 2) : (h.x -= c, h.width += c * 2);
      }
      return l && l(1, f), f;
    } else
      return n.get(["endLabel", "show"]) && console.warn("endLabel is not supported for lines in polar systems."), WC(e, t, n);
  }
  function FG(r, e) {
    var t = e.getBaseAxis(), n = t.isHorizontal(), a = t.inverse, i = n ? a ? "right" : "left" : "center", o = n ? "middle" : a ? "top" : "bottom";
    return {
      normal: {
        align: r.get("align") || i,
        verticalAlign: r.get("verticalAlign") || o
      }
    };
  }
  var HG = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.init = function() {
        var t = new ct(), n = new yu();
        this.group.add(n.group), this._symbolDraw = n, this._lineGroup = t;
      }, e.prototype.render = function(t, n, a) {
        var i = this, o = t.coordinateSystem, s = this.group, l = t.getData(), u = t.getModel("lineStyle"), f = t.getModel("areaStyle"), h = l.getLayout("points") || [], c = o.type === "polar", v = this._coordSys, d = this._symbolDraw, p = this._polyline, g = this._polygon, y = this._lineGroup, m = t.get("animation"), _ = !f.isEmpty(), S = f.get("origin"), b = BC(o, l, S), w = _ && RG(o, l, b), T = t.get("showSymbol"), C = t.get("connectNulls"), I = T && !c && NG(t, l, o), L = this._data;
        L && L.eachItemGraphicEl(function(zt, Mt) {
          zt.__temp && (s.remove(zt), L.setItemGraphicEl(Mt, null));
        }), T || d.remove(), s.add(y);
        var P = c ? !1 : t.get("step"), E;
        o && o.getArea && t.get("clip", !0) && (E = o.getArea(), E.width != null ? (E.x -= 0.1, E.y -= 0.1, E.width += 0.2, E.height += 0.2) : E.r0 && (E.r0 -= 0.5, E.r += 0.5)), this._clipShapeForSymbol = E;
        var R = OG(l, o, a) || l.getVisual("style")[l.getVisual("drawType")];
        if (!(p && v.type === o.type && P === this._step))
          T && d.updateData(l, {
            isIgnore: I,
            clipShape: E,
            disableAnimation: !0,
            getSymbolPoint: function(zt) {
              return [h[zt * 2], h[zt * 2 + 1]];
            }
          }), m && this._initSymbolLabelAnimation(l, o, E), P && (h = Fa(h, o, P, C), w && (w = Fa(w, o, P, C))), p = this._newPolyline(h), _ ? g = this._newPolygon(h, w) : g && (y.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(t, o, Oi(R)), y.setClipPath(Sy(this, o, !0, t));
        else {
          _ && !g ? g = this._newPolygon(h, w) : g && !_ && (y.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(t, o, Oi(R));
          var k = y.getClipPath();
          if (k) {
            var O = Sy(this, o, !1, t);
            te(k, {
              shape: O.shape
            }, t);
          } else
            y.setClipPath(Sy(this, o, !0, t));
          T && d.updateData(l, {
            isIgnore: I,
            clipShape: E,
            disableAnimation: !0,
            getSymbolPoint: function(zt) {
              return [h[zt * 2], h[zt * 2 + 1]];
            }
          }), (!UC(this._stackedOnPoints, w) || !UC(this._points, h)) && (m ? this._doUpdateAnimation(l, w, o, a, P, S, C) : (P && (h = Fa(h, o, P, C), w && (w = Fa(w, o, P, C))), p.setShape({
            points: h
          }), g && g.setShape({
            points: h,
            stackedOnPoints: w
          })));
        }
        var N = t.getModel("emphasis"), F = N.get("focus"), G = N.get("blurScope"), W = N.get("disabled");
        if (p.useStyle(ot(
          // Use color in lineStyle first
          u.getLineStyle(),
          {
            fill: "none",
            stroke: R,
            lineJoin: "bevel"
          }
        )), Re(p, t, "lineStyle"), p.style.lineWidth > 0 && t.get(["emphasis", "lineStyle", "width"]) === "bolder") {
          var X = p.getState("emphasis").style;
          X.lineWidth = +p.style.lineWidth + 1;
        }
        gt(p).seriesIndex = t.seriesIndex, oe(p, F, G, W);
        var K = XC(t.get("smooth")), et = t.get("smoothMonotone");
        if (p.setShape({
          smooth: K,
          smoothMonotone: et,
          connectNulls: C
        }), g) {
          var lt = l.getCalculationInfo("stackedOnSeries"), ft = 0;
          g.useStyle(ot(f.getAreaStyle(), {
            fill: R,
            opacity: 0.7,
            lineJoin: "bevel",
            decal: l.getVisual("style").decal
          })), lt && (ft = XC(lt.get("smooth"))), g.setShape({
            smooth: K,
            stackedOnSmooth: ft,
            smoothMonotone: et,
            connectNulls: C
          }), Re(g, t, "areaStyle"), gt(g).seriesIndex = t.seriesIndex, oe(g, F, G, W);
        }
        var It = function(zt) {
          i._changePolyState(zt);
        };
        l.eachItemGraphicEl(function(zt) {
          zt && (zt.onHoverStateChange = It);
        }), this._polyline.onHoverStateChange = It, this._data = l, this._coordSys = o, this._stackedOnPoints = w, this._points = h, this._step = P, this._valueOrigin = S, t.get("triggerLineEvent") && (this.packEventData(t, p), g && this.packEventData(t, g));
      }, e.prototype.packEventData = function(t, n) {
        gt(n).eventData = {
          componentType: "series",
          componentSubType: "line",
          componentIndex: t.componentIndex,
          seriesIndex: t.seriesIndex,
          seriesName: t.name,
          seriesType: "line"
        };
      }, e.prototype.highlight = function(t, n, a, i) {
        var o = t.getData(), s = yi(o, i);
        if (this._changePolyState("emphasis"), !(s instanceof Array) && s != null && s >= 0) {
          var l = o.getLayout("points"), u = o.getItemGraphicEl(s);
          if (!u) {
            var f = l[s * 2], h = l[s * 2 + 1];
            if (isNaN(f) || isNaN(h) || this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(f, h))
              return;
            var c = t.get("zlevel") || 0, v = t.get("z") || 0;
            u = new gu(o, s), u.x = f, u.y = h, u.setZ(c, v);
            var d = u.getSymbolPath().getTextContent();
            d && (d.zlevel = c, d.z = v, d.z2 = this._polyline.z2 + 1), u.__temp = !0, o.setItemGraphicEl(s, u), u.stopSymbolAnimation(!0), this.group.add(u);
          }
          u.highlight();
        } else
          $t.prototype.highlight.call(this, t, n, a, i);
      }, e.prototype.downplay = function(t, n, a, i) {
        var o = t.getData(), s = yi(o, i);
        if (this._changePolyState("normal"), s != null && s >= 0) {
          var l = o.getItemGraphicEl(s);
          l && (l.__temp ? (o.setItemGraphicEl(s, null), this.group.remove(l)) : l.downplay());
        } else
          $t.prototype.downplay.call(this, t, n, a, i);
      }, e.prototype._changePolyState = function(t) {
        var n = this._polygon;
        Jf(this._polyline, t), n && Jf(n, t);
      }, e.prototype._newPolyline = function(t) {
        var n = this._polyline;
        return n && this._lineGroup.remove(n), n = new PG({
          shape: {
            points: t
          },
          segmentIgnoreThreshold: 2,
          z2: 10
        }), this._lineGroup.add(n), this._polyline = n, n;
      }, e.prototype._newPolygon = function(t, n) {
        var a = this._polygon;
        return a && this._lineGroup.remove(a), a = new FC({
          shape: {
            points: t,
            stackedOnPoints: n
          },
          segmentIgnoreThreshold: 2
        }), this._lineGroup.add(a), this._polygon = a, a;
      }, e.prototype._initSymbolLabelAnimation = function(t, n, a) {
        var i, o, s = n.getBaseAxis(), l = s.inverse;
        n.type === "cartesian2d" ? (i = s.isHorizontal(), o = !1) : n.type === "polar" && (i = s.dim === "angle", o = !0);
        var u = t.hostModel, f = u.get("animationDuration");
        rt(f) && (f = f(null));
        var h = u.get("animationDelay") || 0, c = rt(h) ? h(null) : h;
        t.eachItemGraphicEl(function(v, d) {
          var p = v;
          if (p) {
            var g = [v.x, v.y], y = void 0, m = void 0, _ = void 0;
            if (a)
              if (o) {
                var S = a, b = n.pointToCoord(g);
                i ? (y = S.startAngle, m = S.endAngle, _ = -b[1] / 180 * Math.PI) : (y = S.r0, m = S.r, _ = b[0]);
              } else {
                var w = a;
                i ? (y = w.x, m = w.x + w.width, _ = v.x) : (y = w.y + w.height, m = w.y, _ = v.y);
              }
            var T = m === y ? 0 : (_ - y) / (m - y);
            l && (T = 1 - T);
            var C = rt(h) ? h(d) : f * T + c, I = p.getSymbolPath(), L = I.getTextContent();
            p.attr({
              scaleX: 0,
              scaleY: 0
            }), p.animateTo({
              scaleX: 1,
              scaleY: 1
            }, {
              duration: 200,
              setToFinal: !0,
              delay: C
            }), L && L.animateFrom({
              style: {
                opacity: 0
              }
            }, {
              duration: 300,
              delay: C
            }), I.disableLabelAnimation = !0;
          }
        });
      }, e.prototype._initOrUpdateEndLabel = function(t, n, a) {
        var i = t.getModel("endLabel");
        if (qC(t)) {
          var o = t.getData(), s = this._polyline, l = o.getLayout("points");
          if (!l) {
            s.removeTextContent(), this._endLabel = null;
            return;
          }
          var u = this._endLabel;
          u || (u = this._endLabel = new kt({
            z2: 200
            // should be higher than item symbol
          }), u.ignoreClip = !0, s.setTextContent(this._endLabel), s.disableLabelAnimation = !0);
          var f = zG(l);
          f >= 0 && (ke(s, Ce(t, "endLabel"), {
            inheritColor: a,
            labelFetcher: t,
            labelDataIndex: f,
            defaultText: function(h, c, v) {
              return v != null ? OC(o, v) : ps(o, h);
            },
            enableTextSetter: !0
          }, FG(i, n)), s.textConfig.position = null);
        } else
          this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
      }, e.prototype._endLabelOnDuring = function(t, n, a, i, o, s, l) {
        var u = this._endLabel, f = this._polyline;
        if (u) {
          t < 1 && i.originalX == null && (i.originalX = u.x, i.originalY = u.y);
          var h = a.getLayout("points"), c = a.hostModel, v = c.get("connectNulls"), d = s.get("precision"), p = s.get("distance") || 0, g = l.getBaseAxis(), y = g.isHorizontal(), m = g.inverse, _ = n.shape, S = m ? y ? _.x : _.y + _.height : y ? _.x + _.width : _.y, b = (y ? p : 0) * (m ? -1 : 1), w = (y ? 0 : -p) * (m ? -1 : 1), T = y ? "x" : "y", C = GG(h, S, T), I = C.range, L = I[1] - I[0], P = void 0;
          if (L >= 1) {
            if (L > 1 && !v) {
              var E = ZC(h, I[0]);
              u.attr({
                x: E[0] + b,
                y: E[1] + w
              }), o && (P = c.getRawValue(I[0]));
            } else {
              var E = f.getPointOn(S, T);
              E && u.attr({
                x: E[0] + b,
                y: E[1] + w
              });
              var R = c.getRawValue(I[0]), k = c.getRawValue(I[1]);
              o && (P = oS(a, d, R, k, C.t));
            }
            i.lastFrameIndex = I[0];
          } else {
            var O = t === 1 || i.lastFrameIndex > 0 ? I[0] : 0, E = ZC(h, O);
            o && (P = c.getRawValue(O)), u.attr({
              x: E[0] + b,
              y: E[1] + w
            });
          }
          o && Zo(u).setLabelText(P);
        }
      }, e.prototype._doUpdateAnimation = function(t, n, a, i, o, s, l) {
        var u = this._polyline, f = this._polygon, h = t.hostModel, c = LG(this._data, t, this._stackedOnPoints, n, this._coordSys, a, this._valueOrigin), v = c.current, d = c.stackedOnCurrent, p = c.next, g = c.stackedOnNext;
        if (o && (v = Fa(c.current, a, o, l), d = Fa(c.stackedOnCurrent, a, o, l), p = Fa(c.next, a, o, l), g = Fa(c.stackedOnNext, a, o, l)), $C(v, p) > 3e3 || f && $C(d, g) > 3e3) {
          u.stopAnimation(), u.setShape({
            points: p
          }), f && (f.stopAnimation(), f.setShape({
            points: p,
            stackedOnPoints: g
          }));
          return;
        }
        u.shape.__points = c.current, u.shape.points = v;
        var y = {
          shape: {
            points: p
          }
        };
        c.current !== v && (y.shape.__points = c.next), u.stopAnimation(), Vt(u, y, h), f && (f.setShape({
          // Reuse the points with polyline.
          points: v,
          stackedOnPoints: d
        }), f.stopAnimation(), Vt(f, {
          shape: {
            stackedOnPoints: g
          }
        }, h), u.shape.points !== f.shape.points && (f.shape.points = u.shape.points));
        for (var m = [], _ = c.status, S = 0; S < _.length; S++) {
          var b = _[S].cmd;
          if (b === "=") {
            var w = t.getItemGraphicEl(_[S].idx1);
            w && m.push({
              el: w,
              ptIdx: S
              // Index of points
            });
          }
        }
        u.animators && u.animators.length && u.animators[0].during(function() {
          f && f.dirtyShape();
          for (var T = u.shape.__points, C = 0; C < m.length; C++) {
            var I = m[C].el, L = m[C].ptIdx * 2;
            I.x = T[L], I.y = T[L + 1], I.markRedraw();
          }
        });
      }, e.prototype.remove = function(t) {
        var n = this.group, a = this._data;
        this._lineGroup.removeAll(), this._symbolDraw.remove(!0), a && a.eachItemGraphicEl(function(i, o) {
          i.__temp && (n.remove(i), a.setItemGraphicEl(o, null));
        }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
      }, e.type = "line", e;
    }($t)
  );
  function mu(r, e) {
    return {
      seriesType: r,
      plan: ns(),
      reset: function(t) {
        var n = t.getData(), a = t.coordinateSystem, i = t.pipelineContext, o = e || i.large;
        if (a) {
          var s = Y(a.dimensions, function(v) {
            return n.mapDimension(v);
          }).slice(0, 2), l = s.length, u = n.getCalculationInfo("stackResultDimension");
          ra(n, s[0]) && (s[0] = u), ra(n, s[1]) && (s[1] = u);
          var f = n.getStore(), h = n.getDimensionIndex(s[0]), c = n.getDimensionIndex(s[1]);
          return l && {
            progress: function(v, d) {
              for (var p = v.end - v.start, g = o && En(p * l), y = [], m = [], _ = v.start, S = 0; _ < v.end; _++) {
                var b = void 0;
                if (l === 1) {
                  var w = f.get(h, _);
                  b = a.dataToPoint(w, null, m);
                } else
                  y[0] = f.get(h, _), y[1] = f.get(c, _), b = a.dataToPoint(y, null, m);
                o ? (g[S++] = b[0], g[S++] = b[1]) : d.setItemLayout(_, b.slice());
              }
              o && d.setLayout("points", g);
            }
          };
        }
      }
    };
  }
  var WG = {
    average: function(r) {
      for (var e = 0, t = 0, n = 0; n < r.length; n++)
        isNaN(r[n]) || (e += r[n], t++);
      return t === 0 ? NaN : e / t;
    },
    sum: function(r) {
      for (var e = 0, t = 0; t < r.length; t++)
        e += r[t] || 0;
      return e;
    },
    max: function(r) {
      for (var e = -1 / 0, t = 0; t < r.length; t++)
        r[t] > e && (e = r[t]);
      return isFinite(e) ? e : NaN;
    },
    min: function(r) {
      for (var e = 1 / 0, t = 0; t < r.length; t++)
        r[t] < e && (e = r[t]);
      return isFinite(e) ? e : NaN;
    },
    // TODO
    // Median
    nearest: function(r) {
      return r[0];
    }
  }, UG = function(r) {
    return Math.round(r.length / 2);
  };
  function KC(r) {
    return {
      seriesType: r,
      // FIXME:TS never used, so comment it
      // modifyOutputEnd: true,
      reset: function(e, t, n) {
        var a = e.getData(), i = e.get("sampling"), o = e.coordinateSystem, s = a.count();
        if (s > 10 && o.type === "cartesian2d" && i) {
          var l = o.getBaseAxis(), u = o.getOtherAxis(l), f = l.getExtent(), h = n.getDevicePixelRatio(), c = Math.abs(f[1] - f[0]) * (h || 1), v = Math.round(s / c);
          if (isFinite(v) && v > 1) {
            i === "lttb" && e.setData(a.lttbDownSample(a.mapDimension(u.dim), 1 / v));
            var d = void 0;
            j(i) ? d = WG[i] : rt(i) && (d = i), d && e.setData(a.downSample(a.mapDimension(u.dim), 1 / v, d, UG));
          }
        }
      }
    };
  }
  function YG(r) {
    r.registerChartView(HG), r.registerSeriesModel(AG), r.registerLayout(mu("line", !0)), r.registerVisual({
      seriesType: "line",
      reset: function(e) {
        var t = e.getData(), n = e.getModel("lineStyle").getLineStyle();
        n && !n.stroke && (n.stroke = t.getVisual("style").fill), t.setVisual("legendLineStyle", n);
      }
    }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, KC("line"));
  }
  var _u = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return Ln(null, this, {
          useEncodeDefaulter: !0
        });
      }, e.prototype.getMarkerPosition = function(t, n, a) {
        var i = this.coordinateSystem;
        if (i && i.clampData) {
          var o = i.dataToPoint(i.clampData(t));
          if (a)
            M(i.getAxes(), function(h, c) {
              if (h.type === "category") {
                var v = h.getTicksCoords(), d = i.clampData(t)[c];
                n && (n[c] === "x1" || n[c] === "y1") && (d += 1), d > v.length - 1 && (d = v.length - 1), d < 0 && (d = 0), v[d] && (o[c] = h.toGlobalCoord(v[d].coord));
              }
            });
          else {
            var s = this.getData(), l = s.getLayout("offset"), u = s.getLayout("size"), f = i.getBaseAxis().isHorizontal() ? 0 : 1;
            o[f] += l + u / 2;
          }
          return o;
        }
        return [NaN, NaN];
      }, e.type = "series.__base_bar__", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "cartesian2d",
        legendHoverLink: !0,
        // stack: null
        // Cartesian coordinate system
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        barMinHeight: 0,
        barMinAngle: 0,
        // cursor: null,
        large: !1,
        largeThreshold: 400,
        progressive: 3e3,
        progressiveChunkMode: "mod"
      }, e;
    }(Zt)
  );
  Zt.registerClass(_u);
  var $G = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.getInitialData = function() {
        return Ln(null, this, {
          useEncodeDefaulter: !0,
          createInvertedIndices: !!this.get("realtimeSort", !0) || null
        });
      }, e.prototype.getProgressive = function() {
        return this.get("large") ? this.get("progressive") : !1;
      }, e.prototype.getProgressiveThreshold = function() {
        var t = this.get("progressiveThreshold"), n = this.get("largeThreshold");
        return n > t && (t = n), t;
      }, e.prototype.brushSelector = function(t, n, a) {
        return a.rect(n.getItemLayout(t));
      }, e.type = "series.bar", e.dependencies = ["grid", "polar"], e.defaultOption = Ea(_u.defaultOption, {
        // If clipped
        // Only available on cartesian2d
        clip: !0,
        roundCap: !1,
        showBackground: !1,
        backgroundStyle: {
          color: "rgba(180, 180, 180, 0.2)",
          borderColor: null,
          borderWidth: 0,
          borderType: "solid",
          borderRadius: 0,
          shadowBlur: 0,
          shadowColor: null,
          shadowOffsetX: 0,
          shadowOffsetY: 0,
          opacity: 1
        },
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        },
        realtimeSort: !1
      }), e;
    }(_u)
  ), XG = (
    /** @class */
    function() {
      function r() {
        this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
      }
      return r;
    }()
  ), dc = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "sausage", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new XG();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.cx, i = n.cy, o = Math.max(n.r0 || 0, 0), s = Math.max(n.r, 0), l = (s - o) * 0.5, u = o + l, f = n.startAngle, h = n.endAngle, c = n.clockwise, v = Math.PI * 2, d = c ? h - f < v : f - h < v;
        d || (f = h - (c ? v : -v));
        var p = Math.cos(f), g = Math.sin(f), y = Math.cos(h), m = Math.sin(h);
        d ? (t.moveTo(p * o + a, g * o + i), t.arc(p * u + a, g * u + i, l, -Math.PI + f, f, !c)) : t.moveTo(p * s + a, g * s + i), t.arc(a, i, s, f, h, !c), t.arc(y * u + a, m * u + i, l, h - Math.PI * 2, h - Math.PI, !c), o !== 0 && t.arc(a, i, o, h, f, c);
      }, e;
    }(Dt)
  );
  function ZG(r, e) {
    e = e || {};
    var t = e.isRoundCap;
    return function(n, a, i) {
      var o = a.position;
      if (!o || o instanceof Array)
        return kf(n, a, i);
      var s = r(o), l = a.distance != null ? a.distance : 5, u = this.shape, f = u.cx, h = u.cy, c = u.r, v = u.r0, d = (c + v) / 2, p = u.startAngle, g = u.endAngle, y = (p + g) / 2, m = t ? Math.abs(c - v) / 2 : 0, _ = Math.cos, S = Math.sin, b = f + c * _(p), w = h + c * S(p), T = "left", C = "top";
      switch (s) {
        case "startArc":
          b = f + (v - l) * _(y), w = h + (v - l) * S(y), T = "center", C = "top";
          break;
        case "insideStartArc":
          b = f + (v + l) * _(y), w = h + (v + l) * S(y), T = "center", C = "bottom";
          break;
        case "startAngle":
          b = f + d * _(p) + pc(p, l + m, !1), w = h + d * S(p) + gc(p, l + m, !1), T = "right", C = "middle";
          break;
        case "insideStartAngle":
          b = f + d * _(p) + pc(p, -l + m, !1), w = h + d * S(p) + gc(p, -l + m, !1), T = "left", C = "middle";
          break;
        case "middle":
          b = f + d * _(y), w = h + d * S(y), T = "center", C = "middle";
          break;
        case "endArc":
          b = f + (c + l) * _(y), w = h + (c + l) * S(y), T = "center", C = "bottom";
          break;
        case "insideEndArc":
          b = f + (c - l) * _(y), w = h + (c - l) * S(y), T = "center", C = "top";
          break;
        case "endAngle":
          b = f + d * _(g) + pc(g, l + m, !0), w = h + d * S(g) + gc(g, l + m, !0), T = "left", C = "middle";
          break;
        case "insideEndAngle":
          b = f + d * _(g) + pc(g, -l + m, !0), w = h + d * S(g) + gc(g, -l + m, !0), T = "right", C = "middle";
          break;
        default:
          return kf(n, a, i);
      }
      return n = n || {}, n.x = b, n.y = w, n.align = T, n.verticalAlign = C, n;
    };
  }
  function qG(r, e, t, n) {
    if (Ot(n)) {
      r.setTextConfig({
        rotation: n
      });
      return;
    } else if (U(e)) {
      r.setTextConfig({
        rotation: 0
      });
      return;
    }
    var a = r.shape, i = a.clockwise ? a.startAngle : a.endAngle, o = a.clockwise ? a.endAngle : a.startAngle, s = (i + o) / 2, l, u = t(e);
    switch (u) {
      case "startArc":
      case "insideStartArc":
      case "middle":
      case "insideEndArc":
      case "endArc":
        l = s;
        break;
      case "startAngle":
      case "insideStartAngle":
        l = i;
        break;
      case "endAngle":
      case "insideEndAngle":
        l = o;
        break;
      default:
        r.setTextConfig({
          rotation: 0
        });
        return;
    }
    var f = Math.PI * 1.5 - l;
    u === "middle" && f > Math.PI / 2 && f < Math.PI * 1.5 && (f -= Math.PI), r.setTextConfig({
      rotation: f
    });
  }
  function pc(r, e, t) {
    return e * Math.sin(r) * (t ? -1 : 1);
  }
  function gc(r, e, t) {
    return e * Math.cos(r) * (t ? 1 : -1);
  }
  var xy = Math.max, wy = Math.min;
  function KG(r, e) {
    var t = r.getArea && r.getArea();
    if (eo(r, "cartesian2d")) {
      var n = r.getBaseAxis();
      if (n.type !== "category" || !n.onBand) {
        var a = e.getLayout("bandWidth");
        n.isHorizontal() ? (t.x -= a, t.width += a * 2) : (t.y -= a, t.height += a * 2);
      }
    }
    return t;
  }
  var jG = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r.call(this) || this;
        return t.type = e.type, t._isFirstFrame = !0, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        this._model = t, this._removeOnRenderedListener(a), this._updateDrawMode(t);
        var o = t.get("coordinateSystem");
        o === "cartesian2d" || o === "polar" ? (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(t, n, a) : this._renderNormal(t, n, a, i)) : ae("Only cartesian2d and polar supported for bar.");
      }, e.prototype.incrementalPrepareRender = function(t) {
        this._clear(), this._updateDrawMode(t), this._updateLargeClip(t);
      }, e.prototype.incrementalRender = function(t, n) {
        this._progressiveEls = [], this._incrementalRenderLarge(t, n);
      }, e.prototype.eachRendered = function(t) {
        Pa(this._progressiveEls || this.group, t);
      }, e.prototype._updateDrawMode = function(t) {
        var n = t.pipelineContext.large;
        (this._isLargeDraw == null || n !== this._isLargeDraw) && (this._isLargeDraw = n, this._clear());
      }, e.prototype._renderNormal = function(t, n, a, i) {
        var o = this.group, s = t.getData(), l = this._data, u = t.coordinateSystem, f = u.getBaseAxis(), h;
        u.type === "cartesian2d" ? h = f.isHorizontal() : u.type === "polar" && (h = f.dim === "angle");
        var c = t.isAnimationEnabled() ? t : null, v = JG(t, u);
        v && this._enableRealtimeSort(v, s, a);
        var d = t.get("clip", !0) || v, p = KG(u, s);
        o.removeClipPath();
        var g = t.get("roundCap", !0), y = t.get("showBackground", !0), m = t.getModel("backgroundStyle"), _ = m.get("borderRadius") || 0, S = [], b = this._backgroundEls, w = i && i.isInitSort, T = i && i.type === "changeAxisOrder";
        function C(P) {
          var E = yc[u.type](s, P), R = iF(u, h, E);
          return R.useStyle(m.getItemStyle()), u.type === "cartesian2d" && R.setShape("r", _), S[P] = R, R;
        }
        s.diff(l).add(function(P) {
          var E = s.getItemModel(P), R = yc[u.type](s, P, E);
          if (y && C(P), !(!s.hasValue(P) || !eA[u.type](R))) {
            var k = !1;
            d && (k = jC[u.type](p, R));
            var O = JC[u.type](t, s, P, R, h, c, f.model, !1, g);
            v && (O.forceLabelAnimation = !0), nA(O, s, P, E, R, t, h, u.type === "polar"), w ? O.attr({
              shape: R
            }) : v ? QC(v, c, O, R, P, h, !1, !1) : te(O, {
              shape: R
            }, t, P), s.setItemGraphicEl(P, O), o.add(O), O.ignore = k;
          }
        }).update(function(P, E) {
          var R = s.getItemModel(P), k = yc[u.type](s, P, R);
          if (y) {
            var O = void 0;
            b.length === 0 ? O = C(E) : (O = b[E], O.useStyle(m.getItemStyle()), u.type === "cartesian2d" && O.setShape("r", _), S[P] = O);
            var N = yc[u.type](s, P), F = sA(h, N, u);
            Vt(O, {
              shape: F
            }, c, P);
          }
          var G = l.getItemGraphicEl(E);
          if (!s.hasValue(P) || !eA[u.type](k)) {
            o.remove(G);
            return;
          }
          var W = !1;
          if (d && (W = jC[u.type](p, k), W && o.remove(G)), G ? an(G) : G = JC[u.type](t, s, P, k, h, c, f.model, !!G, g), v && (G.forceLabelAnimation = !0), T) {
            var X = G.getTextContent();
            if (X) {
              var K = Zo(X);
              K.prevValue != null && (K.prevValue = K.value);
            }
          } else
            nA(G, s, P, R, k, t, h, u.type === "polar");
          w ? G.attr({
            shape: k
          }) : v ? QC(v, c, G, k, P, h, !0, T) : Vt(G, {
            shape: k
          }, t, P, null), s.setItemGraphicEl(P, G), G.ignore = W, o.add(G);
        }).remove(function(P) {
          var E = l.getItemGraphicEl(P);
          E && Pl(E, t, P);
        }).execute();
        var I = this._backgroundGroup || (this._backgroundGroup = new ct());
        I.removeAll();
        for (var L = 0; L < S.length; ++L)
          I.add(S[L]);
        o.add(I), this._backgroundEls = S, this._data = s;
      }, e.prototype._renderLarge = function(t, n, a) {
        this._clear(), iA(t, this.group), this._updateLargeClip(t);
      }, e.prototype._incrementalRenderLarge = function(t, n) {
        this._removeBackground(), iA(n, this.group, this._progressiveEls, !0);
      }, e.prototype._updateLargeClip = function(t) {
        var n = t.get("clip", !0) && vc(t.coordinateSystem, !1, t), a = this.group;
        n ? a.setClipPath(n) : a.removeClipPath();
      }, e.prototype._enableRealtimeSort = function(t, n, a) {
        var i = this;
        if (n.count()) {
          var o = t.baseAxis;
          if (this._isFirstFrame)
            this._dispatchInitSort(n, t, a), this._isFirstFrame = !1;
          else {
            var s = function(l) {
              var u = n.getItemGraphicEl(l), f = u && u.shape;
              return f && // The result should be consistent with the initial sort by data value.
              // Do not support the case that both positive and negative exist.
              Math.abs(o.isHorizontal() ? f.height : f.width) || 0;
            };
            this._onRendered = function() {
              i._updateSortWithinSameData(n, s, o, a);
            }, a.getZr().on("rendered", this._onRendered);
          }
        }
      }, e.prototype._dataSort = function(t, n, a) {
        var i = [];
        return t.each(t.mapDimension(n.dim), function(o, s) {
          var l = a(s);
          l = l ?? NaN, i.push({
            dataIndex: s,
            mappedValue: l,
            ordinalNumber: o
          });
        }), i.sort(function(o, s) {
          return s.mappedValue - o.mappedValue;
        }), {
          ordinalNumbers: Y(i, function(o) {
            return o.ordinalNumber;
          })
        };
      }, e.prototype._isOrderChangedWithinSameData = function(t, n, a) {
        for (var i = a.scale, o = t.mapDimension(a.dim), s = Number.MAX_VALUE, l = 0, u = i.getOrdinalMeta().categories.length; l < u; ++l) {
          var f = t.rawIndexOf(o, i.getRawOrdinalNumber(l)), h = f < 0 ? Number.MIN_VALUE : n(t.indexOfRawIndex(f));
          if (h > s)
            return !0;
          s = h;
        }
        return !1;
      }, e.prototype._isOrderDifferentInView = function(t, n) {
        for (var a = n.scale, i = a.getExtent(), o = Math.max(0, i[0]), s = Math.min(i[1], a.getOrdinalMeta().categories.length - 1); o <= s; ++o)
          if (t.ordinalNumbers[o] !== a.getRawOrdinalNumber(o))
            return !0;
      }, e.prototype._updateSortWithinSameData = function(t, n, a, i) {
        if (this._isOrderChangedWithinSameData(t, n, a)) {
          var o = this._dataSort(t, a, n);
          this._isOrderDifferentInView(o, a) && (this._removeOnRenderedListener(i), i.dispatchAction({
            type: "changeAxisOrder",
            componentType: a.dim + "Axis",
            axisId: a.index,
            sortInfo: o
          }));
        }
      }, e.prototype._dispatchInitSort = function(t, n, a) {
        var i = n.baseAxis, o = this._dataSort(t, i, function(s) {
          return t.get(t.mapDimension(n.otherAxis.dim), s);
        });
        a.dispatchAction({
          type: "changeAxisOrder",
          componentType: i.dim + "Axis",
          isInitSort: !0,
          axisId: i.index,
          sortInfo: o
        });
      }, e.prototype.remove = function(t, n) {
        this._clear(this._model), this._removeOnRenderedListener(n);
      }, e.prototype.dispose = function(t, n) {
        this._removeOnRenderedListener(n);
      }, e.prototype._removeOnRenderedListener = function(t) {
        this._onRendered && (t.getZr().off("rendered", this._onRendered), this._onRendered = null);
      }, e.prototype._clear = function(t) {
        var n = this.group, a = this._data;
        t && t.isAnimationEnabled() && a && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], a.eachItemGraphicEl(function(i) {
          Pl(i, t, gt(i).dataIndex);
        })) : n.removeAll(), this._data = null, this._isFirstFrame = !0;
      }, e.prototype._removeBackground = function() {
        this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
      }, e.type = "bar", e;
    }($t)
  ), jC = {
    cartesian2d: function(r, e) {
      var t = e.width < 0 ? -1 : 1, n = e.height < 0 ? -1 : 1;
      t < 0 && (e.x += e.width, e.width = -e.width), n < 0 && (e.y += e.height, e.height = -e.height);
      var a = r.x + r.width, i = r.y + r.height, o = xy(e.x, r.x), s = wy(e.x + e.width, a), l = xy(e.y, r.y), u = wy(e.y + e.height, i), f = s < o, h = u < l;
      return e.x = f && o > a ? s : o, e.y = h && l > i ? u : l, e.width = f ? 0 : s - o, e.height = h ? 0 : u - l, t < 0 && (e.x += e.width, e.width = -e.width), n < 0 && (e.y += e.height, e.height = -e.height), f || h;
    },
    polar: function(r, e) {
      var t = e.r0 <= e.r ? 1 : -1;
      if (t < 0) {
        var n = e.r;
        e.r = e.r0, e.r0 = n;
      }
      var a = wy(e.r, r.r), i = xy(e.r0, r.r0);
      e.r = a, e.r0 = i;
      var o = a - i < 0;
      if (t < 0) {
        var n = e.r;
        e.r = e.r0, e.r0 = n;
      }
      return o;
    }
  }, JC = {
    cartesian2d: function(r, e, t, n, a, i, o, s, l) {
      var u = new Rt({
        shape: H({}, n),
        z2: 1
      });
      if (u.__dataIndex = t, u.name = "item", i) {
        var f = u.shape, h = a ? "height" : "width";
        f[h] = 0;
      }
      return u;
    },
    polar: function(r, e, t, n, a, i, o, s, l) {
      var u = !a && l ? dc : Be, f = new u({
        shape: n,
        z2: 1
      });
      f.name = "item";
      var h = rA(a);
      if (f.calculateTextPosition = ZG(h, {
        isRoundCap: u === dc
      }), i) {
        var c = f.shape, v = a ? "r" : "endAngle", d = {};
        c[v] = a ? 0 : n.startAngle, d[v] = n[v], (s ? Vt : te)(f, {
          shape: d
          // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue
        }, i);
      }
      return f;
    }
  };
  function JG(r, e) {
    var t = r.get("realtimeSort", !0), n = e.getBaseAxis();
    if (t && (n.type !== "category" && ae("`realtimeSort` will not work because this bar series is not based on a category axis."), e.type !== "cartesian2d" && ae("`realtimeSort` will not work because this bar series is not on cartesian2d.")), t && n.type === "category" && e.type === "cartesian2d")
      return {
        baseAxis: n,
        otherAxis: e.getOtherAxis(n)
      };
  }
  function QC(r, e, t, n, a, i, o, s) {
    var l, u;
    i ? (u = {
      x: n.x,
      width: n.width
    }, l = {
      y: n.y,
      height: n.height
    }) : (u = {
      y: n.y,
      height: n.height
    }, l = {
      x: n.x,
      width: n.width
    }), s || (o ? Vt : te)(t, {
      shape: l
    }, e, a, null);
    var f = e ? r.baseAxis.model : null;
    (o ? Vt : te)(t, {
      shape: u
    }, f, a);
  }
  function tA(r, e) {
    for (var t = 0; t < e.length; t++)
      if (!isFinite(r[e[t]]))
        return !0;
    return !1;
  }
  var QG = ["x", "y", "width", "height"], tF = ["cx", "cy", "r", "startAngle", "endAngle"], eA = {
    cartesian2d: function(r) {
      return !tA(r, QG);
    },
    polar: function(r) {
      return !tA(r, tF);
    }
  }, yc = {
    // itemModel is only used to get borderWidth, which is not needed
    // when calculating bar background layout.
    cartesian2d: function(r, e, t) {
      var n = r.getItemLayout(e), a = t ? rF(t, n) : 0, i = n.width > 0 ? 1 : -1, o = n.height > 0 ? 1 : -1;
      return {
        x: n.x + i * a / 2,
        y: n.y + o * a / 2,
        width: n.width - i * a,
        height: n.height - o * a
      };
    },
    polar: function(r, e, t) {
      var n = r.getItemLayout(e);
      return {
        cx: n.cx,
        cy: n.cy,
        r0: n.r0,
        r: n.r,
        startAngle: n.startAngle,
        endAngle: n.endAngle,
        clockwise: n.clockwise
      };
    }
  };
  function eF(r) {
    return r.startAngle != null && r.endAngle != null && r.startAngle === r.endAngle;
  }
  function rA(r) {
    return function(e) {
      var t = e ? "Arc" : "Angle";
      return function(n) {
        switch (n) {
          case "start":
          case "insideStart":
          case "end":
          case "insideEnd":
            return n + t;
          default:
            return n;
        }
      };
    }(r);
  }
  function nA(r, e, t, n, a, i, o, s) {
    var l = e.getItemVisual(t, "style");
    s || r.setShape("r", n.get(["itemStyle", "borderRadius"]) || 0), r.useStyle(l);
    var u = n.getShallow("cursor");
    u && r.attr("cursor", u);
    var f = s ? o ? a.r >= a.r0 ? "endArc" : "startArc" : a.endAngle >= a.startAngle ? "endAngle" : "startAngle" : o ? a.height >= 0 ? "bottom" : "top" : a.width >= 0 ? "right" : "left", h = Ce(n);
    ke(r, h, {
      labelFetcher: i,
      labelDataIndex: t,
      defaultText: ps(i.getData(), t),
      inheritColor: l.fill,
      defaultOpacity: l.opacity,
      defaultOutsidePosition: f
    });
    var c = r.getTextContent();
    if (s && c) {
      var v = n.get(["label", "position"]);
      r.textConfig.inside = v === "middle" ? !0 : null, qG(r, v === "outside" ? f : v, rA(o), n.get(["label", "rotate"]));
    }
    Ex(c, h, i.getRawValue(t), function(p) {
      return OC(e, p);
    });
    var d = n.getModel(["emphasis"]);
    oe(r, d.get("focus"), d.get("blurScope"), d.get("disabled")), Re(r, n), eF(a) && (r.style.fill = "none", r.style.stroke = "none", M(r.states, function(p) {
      p.style && (p.style.fill = p.style.stroke = "none");
    }));
  }
  function rF(r, e) {
    var t = r.get(["itemStyle", "borderColor"]);
    if (!t || t === "none")
      return 0;
    var n = r.get(["itemStyle", "borderWidth"]) || 0, a = isNaN(e.width) ? Number.MAX_VALUE : Math.abs(e.width), i = isNaN(e.height) ? Number.MAX_VALUE : Math.abs(e.height);
    return Math.min(n, a, i);
  }
  var nF = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), aA = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "largeBar", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new nF();
      }, e.prototype.buildPath = function(t, n) {
        for (var a = n.points, i = this.baseDimIdx, o = 1 - this.baseDimIdx, s = [], l = [], u = this.barWidth, f = 0; f < a.length; f += 3)
          l[i] = u, l[o] = a[f + 2], s[i] = a[f + i], s[o] = a[f + o], t.rect(s[0], s[1], l[0], l[1]);
      }, e;
    }(Dt)
  );
  function iA(r, e, t, n) {
    var a = r.getData(), i = a.getLayout("valueAxisHorizontal") ? 1 : 0, o = a.getLayout("largeDataIndices"), s = a.getLayout("size"), l = r.getModel("backgroundStyle"), u = a.getLayout("largeBackgroundPoints");
    if (u) {
      var f = new aA({
        shape: {
          points: u
        },
        incremental: !!n,
        silent: !0,
        z2: 0
      });
      f.baseDimIdx = i, f.largeDataIndices = o, f.barWidth = s, f.useStyle(l.getItemStyle()), e.add(f), t && t.push(f);
    }
    var h = new aA({
      shape: {
        points: a.getLayout("largePoints")
      },
      incremental: !!n,
      ignoreCoarsePointer: !0,
      z2: 1
    });
    h.baseDimIdx = i, h.largeDataIndices = o, h.barWidth = s, e.add(h), h.useStyle(a.getVisual("style")), gt(h).seriesIndex = r.seriesIndex, r.get("silent") || (h.on("mousedown", oA), h.on("mousemove", oA)), t && t.push(h);
  }
  var oA = Lh(function(r) {
    var e = this, t = aF(e, r.offsetX, r.offsetY);
    gt(e).dataIndex = t >= 0 ? t : null;
  }, 30, !1);
  function aF(r, e, t) {
    for (var n = r.baseDimIdx, a = 1 - n, i = r.shape.points, o = r.largeDataIndices, s = [], l = [], u = r.barWidth, f = 0, h = i.length / 3; f < h; f++) {
      var c = f * 3;
      if (l[n] = u, l[a] = i[c + 2], s[n] = i[c + n], s[a] = i[c + a], l[a] < 0 && (s[a] += l[a], l[a] = -l[a]), e >= s[0] && e <= s[0] + l[0] && t >= s[1] && t <= s[1] + l[1])
        return o[f];
    }
    return -1;
  }
  function sA(r, e, t) {
    if (eo(t, "cartesian2d")) {
      var n = e, a = t.getArea();
      return {
        x: r ? n.x : a.x,
        y: r ? a.y : n.y,
        width: r ? n.width : a.width,
        height: r ? a.height : n.height
      };
    } else {
      var a = t.getArea(), i = e;
      return {
        cx: a.cx,
        cy: a.cy,
        r0: r ? a.r0 : i.r0,
        r: r ? a.r : i.r,
        startAngle: r ? i.startAngle : 0,
        endAngle: r ? i.endAngle : Math.PI * 2
      };
    }
  }
  function iF(r, e, t) {
    var n = r.type === "polar" ? Be : Rt;
    return new n({
      shape: sA(e, t, r),
      silent: !0,
      z2: 0
    });
  }
  function oF(r) {
    r.registerChartView(jG), r.registerSeriesModel($G), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, yt(DT, "bar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, MT("bar")), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, KC("bar")), r.registerAction({
      type: "changeAxisOrder",
      event: "changeAxisOrder",
      update: "update"
    }, function(e, t) {
      var n = e.componentType || "series";
      t.eachComponent({
        mainType: n,
        query: e
      }, function(a) {
        e.sortInfo && a.axis.setCategorySortInfo(e.sortInfo);
      });
    });
  }
  var mc = Math.PI * 2, lA = Math.PI / 180;
  function uA(r, e) {
    return ye(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function fA(r, e) {
    var t = uA(r, e), n = r.get("center"), a = r.get("radius");
    U(a) || (a = [0, a]);
    var i = Z(t.width, e.getWidth()), o = Z(t.height, e.getHeight()), s = Math.min(i, o), l = Z(a[0], s / 2), u = Z(a[1], s / 2), f, h, c = r.coordinateSystem;
    if (c) {
      var v = c.dataToPoint(n);
      f = v[0] || 0, h = v[1] || 0;
    } else
      U(n) || (n = [n, n]), f = Z(n[0], i) + t.x, h = Z(n[1], o) + t.y;
    return {
      cx: f,
      cy: h,
      r0: l,
      r: u
    };
  }
  function sF(r, e, t) {
    e.eachSeriesByType(r, function(n) {
      var a = n.getData(), i = a.mapDimension("value"), o = uA(n, t), s = fA(n, t), l = s.cx, u = s.cy, f = s.r, h = s.r0, c = -n.get("startAngle") * lA, v = n.get("minAngle") * lA, d = 0;
      a.each(i, function(L) {
        !isNaN(L) && d++;
      });
      var p = a.getSum(i), g = Math.PI / (p || d) * 2, y = n.get("clockwise"), m = n.get("roseType"), _ = n.get("stillShowZeroSum"), S = a.getDataExtent(i);
      S[0] = 0;
      var b = mc, w = 0, T = c, C = y ? 1 : -1;
      if (a.setLayout({
        viewRect: o,
        r: f
      }), a.each(i, function(L, P) {
        var E;
        if (isNaN(L)) {
          a.setItemLayout(P, {
            angle: NaN,
            startAngle: NaN,
            endAngle: NaN,
            clockwise: y,
            cx: l,
            cy: u,
            r0: h,
            r: m ? NaN : f
          });
          return;
        }
        m !== "area" ? E = p === 0 && _ ? g : L * g : E = mc / d, E < v ? (E = v, b -= v) : w += L;
        var R = T + C * E;
        a.setItemLayout(P, {
          angle: E,
          startAngle: T,
          endAngle: R,
          clockwise: y,
          cx: l,
          cy: u,
          r0: h,
          r: m ? Wt(L, S, [h, f]) : f
        }), T = R;
      }), b < mc && d)
        if (b <= 1e-3) {
          var I = mc / d;
          a.each(i, function(L, P) {
            if (!isNaN(L)) {
              var E = a.getItemLayout(P);
              E.angle = I, E.startAngle = c + C * P * I, E.endAngle = c + C * (P + 1) * I;
            }
          });
        } else
          g = b / w, T = c, a.each(i, function(L, P) {
            if (!isNaN(L)) {
              var E = a.getItemLayout(P), R = E.angle === v ? v : L * g;
              E.startAngle = T, E.endAngle = T + C * R, T += C * R;
            }
          });
    });
  }
  function Su(r) {
    return {
      seriesType: r,
      reset: function(e, t) {
        var n = t.findComponents({
          mainType: "legend"
        });
        if (!(!n || !n.length)) {
          var a = e.getData();
          a.filterSelf(function(i) {
            for (var o = a.getName(i), s = 0; s < n.length; s++)
              if (!n[s].isSelected(o))
                return !1;
            return !0;
          });
        }
      }
    };
  }
  var lF = Math.PI / 180;
  function hA(r, e, t, n, a, i, o, s, l, u) {
    if (r.length < 2)
      return;
    function f(p) {
      for (var g = p.rB, y = g * g, m = 0; m < p.list.length; m++) {
        var _ = p.list[m], S = Math.abs(_.label.y - t), b = n + _.len, w = b * b, T = Math.sqrt((1 - Math.abs(S * S / y)) * w), C = e + (T + _.len2) * a, I = C - _.label.x, L = _.targetTextWidth - I * a;
        cA(_, L, !0), _.label.x = C;
      }
    }
    function h(p) {
      for (var g = {
        list: [],
        maxY: 0
      }, y = {
        list: [],
        maxY: 0
      }, m = 0; m < p.length; m++)
        if (p[m].labelAlignTo === "none") {
          var _ = p[m], S = _.label.y > t ? y : g, b = Math.abs(_.label.y - t);
          if (b >= S.maxY) {
            var w = _.label.x - e - _.len2 * a, T = n + _.len, C = Math.abs(w) < T ? Math.sqrt(b * b / (1 - w * w / T / T)) : T;
            S.rB = C, S.maxY = b;
          }
          S.list.push(_);
        }
      f(g), f(y);
    }
    for (var c = r.length, v = 0; v < c; v++)
      if (r[v].position === "outer" && r[v].labelAlignTo === "labelLine") {
        var d = r[v].label.x - u;
        r[v].linePoints[1][0] += d, r[v].label.x = u;
      }
    aC(r, l, l + o) && h(r);
  }
  function uF(r, e, t, n, a, i, o, s) {
    for (var l = [], u = [], f = Number.MAX_VALUE, h = -Number.MAX_VALUE, c = 0; c < r.length; c++) {
      var v = r[c].label;
      by(r[c]) || (v.x < e ? (f = Math.min(f, v.x), l.push(r[c])) : (h = Math.max(h, v.x), u.push(r[c])));
    }
    for (var c = 0; c < r.length; c++) {
      var d = r[c];
      if (!by(d) && d.linePoints) {
        if (d.labelStyleWidth != null)
          continue;
        var v = d.label, p = d.linePoints, g = void 0;
        d.labelAlignTo === "edge" ? v.x < e ? g = p[2][0] - d.labelDistance - o - d.edgeDistance : g = o + a - d.edgeDistance - p[2][0] - d.labelDistance : d.labelAlignTo === "labelLine" ? v.x < e ? g = f - o - d.bleedMargin : g = o + a - h - d.bleedMargin : v.x < e ? g = v.x - o - d.bleedMargin : g = o + a - v.x - d.bleedMargin, d.targetTextWidth = g, cA(d, g);
      }
    }
    hA(u, e, t, n, 1, a, i, o, s, h), hA(l, e, t, n, -1, a, i, o, s, f);
    for (var c = 0; c < r.length; c++) {
      var d = r[c];
      if (!by(d) && d.linePoints) {
        var v = d.label, p = d.linePoints, y = d.labelAlignTo === "edge", m = v.style.padding, _ = m ? m[1] + m[3] : 0, S = v.style.backgroundColor ? 0 : _, b = d.rect.width + S, w = p[1][0] - p[2][0];
        y ? v.x < e ? p[2][0] = o + d.edgeDistance + b + d.labelDistance : p[2][0] = o + a - d.edgeDistance - b - d.labelDistance : (v.x < e ? p[2][0] = v.x + d.labelDistance : p[2][0] = v.x - d.labelDistance, p[1][0] = p[2][0] + w), p[1][1] = p[2][1] = v.y;
      }
    }
  }
  function cA(r, e, t) {
    if (t === void 0 && (t = !1), r.labelStyleWidth == null) {
      var n = r.label, a = n.style, i = r.rect, o = a.backgroundColor, s = a.padding, l = s ? s[1] + s[3] : 0, u = a.overflow, f = i.width + (o ? 0 : l);
      if (e < f || t) {
        var h = i.height;
        if (u && u.match("break")) {
          n.setStyle("backgroundColor", null), n.setStyle("width", e - l);
          var c = n.getBoundingRect();
          n.setStyle("width", Math.ceil(c.width)), n.setStyle("backgroundColor", o);
        } else {
          var v = e - l, d = e < f ? v : (
            // Current available width is enough, but the text may have
            // already been wrapped with a smaller available width.
            t ? v > r.unconstrainedWidth ? null : v : (
              // Current available width is enough, so no need to
              // constrain.
              null
            )
          );
          n.setStyle("width", d);
        }
        var p = n.getBoundingRect();
        i.width = p.width;
        var g = (n.style.margin || 0) + 2.1;
        i.height = p.height + g, i.y -= (i.height - h) / 2;
      }
    }
  }
  function by(r) {
    return r.position === "center";
  }
  function fF(r) {
    var e = r.getData(), t = [], n, a, i = !1, o = (r.get("minShowLabelAngle") || 0) * lF, s = e.getLayout("viewRect"), l = e.getLayout("r"), u = s.width, f = s.x, h = s.y, c = s.height;
    function v(w) {
      w.ignore = !0;
    }
    function d(w) {
      if (!w.ignore)
        return !0;
      for (var T in w.states)
        if (w.states[T].ignore === !1)
          return !0;
      return !1;
    }
    e.each(function(w) {
      var T = e.getItemGraphicEl(w), C = T.shape, I = T.getTextContent(), L = T.getTextGuideLine(), P = e.getItemModel(w), E = P.getModel("label"), R = E.get("position") || P.get(["emphasis", "label", "position"]), k = E.get("distanceToLabelLine"), O = E.get("alignTo"), N = Z(E.get("edgeDistance"), u), F = E.get("bleedMargin"), G = P.getModel("labelLine"), W = G.get("length");
      W = Z(W, u);
      var X = G.get("length2");
      if (X = Z(X, u), Math.abs(C.endAngle - C.startAngle) < o) {
        M(I.states, v), I.ignore = !0, L && (M(L.states, v), L.ignore = !0);
        return;
      }
      if (d(I)) {
        var K = (C.startAngle + C.endAngle) / 2, et = Math.cos(K), lt = Math.sin(K), ft, It, zt, Mt;
        n = C.cx, a = C.cy;
        var dt = R === "inside" || R === "inner";
        if (R === "center")
          ft = C.cx, It = C.cy, Mt = "center";
        else {
          var Lt = (dt ? (C.r + C.r0) / 2 * et : C.r * et) + n, Tt = (dt ? (C.r + C.r0) / 2 * lt : C.r * lt) + a;
          if (ft = Lt + et * 3, It = Tt + lt * 3, !dt) {
            var at = Lt + et * (W + l - C.r), wt = Tt + lt * (W + l - C.r), re = at + (et < 0 ? -1 : 1) * X, Bt = wt;
            O === "edge" ? ft = et < 0 ? f + N : f + u - N : ft = re + (et < 0 ? -k : k), It = Bt, zt = [[Lt, Tt], [at, wt], [re, Bt]];
          }
          Mt = dt ? "center" : O === "edge" ? et > 0 ? "right" : "left" : et > 0 ? "left" : "right";
        }
        var fe = Math.PI, se = 0, Ye = E.get("rotate");
        if (Ot(Ye))
          se = Ye * (fe / 180);
        else if (R === "center")
          se = 0;
        else if (Ye === "radial" || Ye === !0) {
          var fa = et < 0 ? -K + fe : -K;
          se = fa;
        } else if (Ye === "tangential" && R !== "outside" && R !== "outer") {
          var cr = Math.atan2(et, lt);
          cr < 0 && (cr = fe * 2 + cr);
          var pv = lt > 0;
          pv && (cr = fe + cr), se = cr - fe;
        }
        if (i = !!se, I.x = ft, I.y = It, I.rotation = se, I.setStyle({
          verticalAlign: "middle"
        }), dt) {
          I.setStyle({
            align: Mt
          });
          var u_ = I.states.select;
          u_ && (u_.x += I.x, u_.y += I.y);
        } else {
          var Ka = I.getBoundingRect().clone();
          Ka.applyTransform(I.getComputedTransform());
          var pP = (I.style.margin || 0) + 2.1;
          Ka.y -= pP / 2, Ka.height += pP, t.push({
            label: I,
            labelLine: L,
            position: R,
            len: W,
            len2: X,
            minTurnAngle: G.get("minTurnAngle"),
            maxSurfaceAngle: G.get("maxSurfaceAngle"),
            surfaceNormal: new St(et, lt),
            linePoints: zt,
            textAlign: Mt,
            labelDistance: k,
            labelAlignTo: O,
            edgeDistance: N,
            bleedMargin: F,
            rect: Ka,
            unconstrainedWidth: Ka.width,
            labelStyleWidth: I.style.width
          });
        }
        T.setTextConfig({
          inside: dt
        });
      }
    }), !i && r.get("avoidLabelOverlap") && uF(t, n, a, l, u, c, f, h);
    for (var p = 0; p < t.length; p++) {
      var g = t[p], y = g.label, m = g.labelLine, _ = isNaN(y.x) || isNaN(y.y);
      if (y) {
        y.setStyle({
          align: g.textAlign
        }), _ && (M(y.states, v), y.ignore = !0);
        var S = y.states.select;
        S && (S.x += y.x, S.y += y.y);
      }
      if (m) {
        var b = g.linePoints;
        _ || !b ? (M(m.states, v), m.ignore = !0) : (tC(b, g.minTurnAngle), O5(b, g.surfaceNormal, g.maxSurfaceAngle), m.setShape({
          points: b
        }), y.__hostTarget.textGuideLineConfig = {
          anchor: new St(b[0][0], b[0][1])
        });
      }
    }
  }
  function gs(r, e, t) {
    var n = r.get("borderRadius");
    if (n == null)
      return t ? {
        cornerRadius: 0
      } : null;
    U(n) || (n = [n, n, n, n]);
    var a = Math.abs(e.r || 0 - e.r0 || 0);
    return {
      cornerRadius: Y(n, function(i) {
        return en(i, a);
      })
    };
  }
  var hF = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this) || this;
        i.z2 = 2;
        var o = new kt();
        return i.setTextContent(o), i.updateData(t, n, a, !0), i;
      }
      return e.prototype.updateData = function(t, n, a, i) {
        var o = this, s = t.hostModel, l = t.getItemModel(n), u = l.getModel("emphasis"), f = t.getItemLayout(n), h = H(gs(l.getModel("itemStyle"), f, !0), f);
        if (isNaN(h.startAngle)) {
          o.setShape(h);
          return;
        }
        if (i) {
          o.setShape(h);
          var c = s.getShallow("animationType");
          s.ecModel.ssr ? (te(o, {
            scaleX: 0,
            scaleY: 0
          }, s, {
            dataIndex: n,
            isFrom: !0
          }), o.originX = h.cx, o.originY = h.cy) : c === "scale" ? (o.shape.r = f.r0, te(o, {
            shape: {
              r: f.r
            }
          }, s, n)) : a != null ? (o.setShape({
            startAngle: a,
            endAngle: a
          }), te(o, {
            shape: {
              startAngle: f.startAngle,
              endAngle: f.endAngle
            }
          }, s, n)) : (o.shape.endAngle = f.startAngle, Vt(o, {
            shape: {
              endAngle: f.endAngle
            }
          }, s, n));
        } else
          an(o), Vt(o, {
            shape: h
          }, s, n);
        o.useStyle(t.getItemVisual(n, "style")), Re(o, l);
        var v = (f.startAngle + f.endAngle) / 2, d = s.get("selectedOffset"), p = Math.cos(v) * d, g = Math.sin(v) * d, y = l.getShallow("cursor");
        y && o.attr("cursor", y), this._updateLabel(s, t, n), o.ensureState("emphasis").shape = H({
          r: f.r + (u.get("scale") && u.get("scaleSize") || 0)
        }, gs(u.getModel("itemStyle"), f)), H(o.ensureState("select"), {
          x: p,
          y: g,
          shape: gs(l.getModel(["select", "itemStyle"]), f)
        }), H(o.ensureState("blur"), {
          shape: gs(l.getModel(["blur", "itemStyle"]), f)
        });
        var m = o.getTextGuideLine(), _ = o.getTextContent();
        m && H(m.ensureState("select"), {
          x: p,
          y: g
        }), H(_.ensureState("select"), {
          x: p,
          y: g
        }), oe(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
      }, e.prototype._updateLabel = function(t, n, a) {
        var i = this, o = n.getItemModel(a), s = o.getModel("labelLine"), l = n.getItemVisual(a, "style"), u = l && l.fill, f = l && l.opacity;
        ke(i, Ce(o), {
          labelFetcher: n.hostModel,
          labelDataIndex: a,
          inheritColor: u,
          defaultOpacity: f,
          defaultText: t.getFormattedLabel(a, "normal") || n.getName(a)
        });
        var h = i.getTextContent();
        i.setTextConfig({
          // reset position, rotation
          position: null,
          rotation: null
        }), h.attr({
          z2: 10
        });
        var c = t.get(["label", "position"]);
        if (c !== "outside" && c !== "outer")
          i.removeTextGuideLine();
        else {
          var v = this.getTextGuideLine();
          v || (v = new Ge(), this.setTextGuideLine(v)), ry(this, ny(o), {
            stroke: u,
            opacity: Dr(s.get(["lineStyle", "opacity"]), f, 1)
          });
        }
      }, e;
    }(Be)
  ), cF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.ignoreLabelLineUpdate = !0, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        var o = t.getData(), s = this._data, l = this.group, u;
        if (!s && o.count() > 0) {
          for (var f = o.getItemLayout(0), h = 1; isNaN(f && f.startAngle) && h < o.count(); ++h)
            f = o.getItemLayout(h);
          f && (u = f.startAngle);
        }
        if (this._emptyCircleSector && l.remove(this._emptyCircleSector), o.count() === 0 && t.get("showEmptyCircle")) {
          var c = new Be({
            shape: fA(t, a)
          });
          c.useStyle(t.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = c, l.add(c);
        }
        o.diff(s).add(function(v) {
          var d = new hF(o, v, u);
          o.setItemGraphicEl(v, d), l.add(d);
        }).update(function(v, d) {
          var p = s.getItemGraphicEl(d);
          p.updateData(o, v, u), p.off("click"), l.add(p), o.setItemGraphicEl(v, p);
        }).remove(function(v) {
          var d = s.getItemGraphicEl(v);
          Pl(d, t, v);
        }).execute(), fF(t), t.get("animationTypeUpdate") !== "expansion" && (this._data = o);
      }, e.prototype.dispose = function() {
      }, e.prototype.containPoint = function(t, n) {
        var a = n.getData(), i = a.getItemLayout(0);
        if (i) {
          var o = t[0] - i.cx, s = t[1] - i.cy, l = Math.sqrt(o * o + s * s);
          return l <= i.r && l >= i.r0;
        }
      }, e.type = "pie", e;
    }($t)
  );
  function ys(r, e, t) {
    e = U(e) && {
      coordDimensions: e
    } || H({
      encodeDefine: r.getEncode()
    }, e);
    var n = r.getSource(), a = hs(n, e).dimensions, i = new Ue(a, r);
    return i.initData(n, t), i;
  }
  var xu = (
    /** @class */
    function() {
      function r(e, t) {
        this._getDataWithEncodedVisual = e, this._getRawData = t;
      }
      return r.prototype.getAllNames = function() {
        var e = this._getRawData();
        return e.mapArray(e.getName);
      }, r.prototype.containName = function(e) {
        var t = this._getRawData();
        return t.indexOfName(e) >= 0;
      }, r.prototype.indexOfName = function(e) {
        var t = this._getDataWithEncodedVisual();
        return t.indexOfName(e);
      }, r.prototype.getItemVisual = function(e, t) {
        var n = this._getDataWithEncodedVisual();
        return n.getItemVisual(e, t);
      }, r;
    }()
  ), vF = Nt(), dF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.init = function(t) {
        r.prototype.init.apply(this, arguments), this.legendVisualProvider = new xu(J(this.getData, this), J(this.getRawData, this)), this._defaultLabelLine(t);
      }, e.prototype.mergeOption = function() {
        r.prototype.mergeOption.apply(this, arguments);
      }, e.prototype.getInitialData = function() {
        return ys(this, {
          coordDimensions: ["value"],
          encodeDefaulter: yt(Up, this)
        });
      }, e.prototype.getDataParams = function(t) {
        var n = this.getData(), a = vF(n), i = a.seats;
        if (!i) {
          var o = [];
          n.each(n.mapDimension("value"), function(l) {
            o.push(l);
          }), i = a.seats = Y1(o, n.hostModel.get("percentPrecision"));
        }
        var s = r.prototype.getDataParams.call(this, t);
        return s.percent = i[t] || 0, s.$vars.push("percent"), s;
      }, e.prototype._defaultLabelLine = function(t) {
        gi(t, "labelLine", ["show"]);
        var n = t.labelLine, a = t.emphasis.labelLine;
        n.show = n.show && t.label.show, a.show = a.show && t.emphasis.label.show;
      }, e.type = "series.pie", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        colorBy: "data",
        // 默认全局居中
        center: ["50%", "50%"],
        radius: [0, "75%"],
        // 默认顺时针
        clockwise: !0,
        startAngle: 90,
        // 最小角度改为0
        minAngle: 0,
        // If the angle of a sector less than `minShowLabelAngle`,
        // the label will not be displayed.
        minShowLabelAngle: 0,
        // 选中时扇区偏移量
        selectedOffset: 10,
        // 选择模式，默认关闭，可选single，multiple
        // selectedMode: false,
        // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
        // roseType: null,
        percentPrecision: 2,
        // If still show when all data zero.
        stillShowZeroSum: !0,
        // cursor: null,
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        width: null,
        height: null,
        label: {
          // color: 'inherit',
          // If rotate around circle
          rotate: 0,
          show: !0,
          overflow: "truncate",
          // 'outer', 'inside', 'center'
          position: "outer",
          // 'none', 'labelLine', 'edge'. Works only when position is 'outer'
          alignTo: "none",
          // Closest distance between label and chart edge.
          // Works only position is 'outer' and alignTo is 'edge'.
          edgeDistance: "25%",
          // Works only position is 'outer' and alignTo is not 'edge'.
          bleedMargin: 10,
          // Distance between text and label line.
          distanceToLabelLine: 5
          // formatter: 标签文本格式器，同 tooltip.formatter，不支持异步回调
          // 默认使用全局文本样式，详见 textStyle
          // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数
        },
        // Enabled when label.normal.position is 'outer'
        labelLine: {
          show: !0,
          // 引导线两段中的第一段长度
          length: 15,
          // 引导线两段中的第二段长度
          length2: 15,
          smooth: !1,
          minTurnAngle: 90,
          maxSurfaceAngle: 90,
          lineStyle: {
            // color: 各异,
            width: 1,
            type: "solid"
          }
        },
        itemStyle: {
          borderWidth: 1,
          borderJoin: "round"
        },
        showEmptyCircle: !0,
        emptyCircleStyle: {
          color: "lightgray",
          opacity: 1
        },
        labelLayout: {
          // Hide the overlapped label.
          hideOverlap: !0
        },
        emphasis: {
          scale: !0,
          scaleSize: 5
        },
        // If use strategy to avoid label overlapping
        avoidLabelOverlap: !0,
        // Animation type. Valid values: expansion, scale
        animationType: "expansion",
        animationDuration: 1e3,
        // Animation type when update. Valid values: transition, expansion
        animationTypeUpdate: "transition",
        animationEasingUpdate: "cubicInOut",
        animationDurationUpdate: 500,
        animationEasing: "cubicInOut"
      }, e;
    }(Zt)
  );
  function pF(r) {
    return {
      seriesType: r,
      reset: function(e, t) {
        var n = e.getData();
        n.filterSelf(function(a) {
          var i = n.mapDimension("value"), o = n.get(i, a);
          return !(Ot(o) && !isNaN(o) && o < 0);
        });
      }
    };
  }
  function gF(r) {
    r.registerChartView(cF), r.registerSeriesModel(dF), Sb("pie", r.registerAction), r.registerLayout(yt(sF, "pie")), r.registerProcessor(Su("pie")), r.registerProcessor(pF("pie"));
  }
  var yF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return Ln(null, this, {
          useEncodeDefaulter: !0
        });
      }, e.prototype.getProgressive = function() {
        var t = this.option.progressive;
        return t ?? (this.option.large ? 5e3 : this.get("progressive"));
      }, e.prototype.getProgressiveThreshold = function() {
        var t = this.option.progressiveThreshold;
        return t ?? (this.option.large ? 1e4 : this.get("progressiveThreshold"));
      }, e.prototype.brushSelector = function(t, n, a) {
        return a.point(n.getItemLayout(t));
      }, e.prototype.getZLevelKey = function() {
        return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
      }, e.type = "series.scatter", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
        coordinateSystem: "cartesian2d",
        // zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        symbolSize: 10,
        // symbolRotate: null,  // 图形旋转控制
        large: !1,
        // Available when large is true
        largeThreshold: 2e3,
        // cursor: null,
        itemStyle: {
          opacity: 0.8
          // color: 各异
        },
        emphasis: {
          scale: !0
        },
        // If clip the overflow graphics
        // Works on cartesian / polar series
        clip: !0,
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        },
        universalTransition: {
          divideShape: "clone"
        }
        // progressive: null
      }, e;
    }(Zt)
  ), vA = 4, mF = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), _F = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n._off = 0, n.hoverDataIdx = -1, n;
      }
      return e.prototype.getDefaultShape = function() {
        return new mF();
      }, e.prototype.reset = function() {
        this.notClear = !1, this._off = 0;
      }, e.prototype.buildPath = function(t, n) {
        var a = n.points, i = n.size, o = this.symbolProxy, s = o.shape, l = t.getContext ? t.getContext() : t, u = l && i[0] < vA, f = this.softClipShape, h;
        if (u) {
          this._ctx = l;
          return;
        }
        for (this._ctx = null, h = this._off; h < a.length; ) {
          var c = a[h++], v = a[h++];
          isNaN(c) || isNaN(v) || f && !f.contain(c, v) || (s.x = c - i[0] / 2, s.y = v - i[1] / 2, s.width = i[0], s.height = i[1], o.buildPath(t, s, !0));
        }
        this.incremental && (this._off = h, this.notClear = !0);
      }, e.prototype.afterBrush = function() {
        var t = this.shape, n = t.points, a = t.size, i = this._ctx, o = this.softClipShape, s;
        if (i) {
          for (s = this._off; s < n.length; ) {
            var l = n[s++], u = n[s++];
            isNaN(l) || isNaN(u) || o && !o.contain(l, u) || i.fillRect(l - a[0] / 2, u - a[1] / 2, a[0], a[1]);
          }
          this.incremental && (this._off = s, this.notClear = !0);
        }
      }, e.prototype.findDataIndex = function(t, n) {
        for (var a = this.shape, i = a.points, o = a.size, s = Math.max(o[0], 4), l = Math.max(o[1], 4), u = i.length / 2 - 1; u >= 0; u--) {
          var f = u * 2, h = i[f] - s / 2, c = i[f + 1] - l / 2;
          if (t >= h && n >= c && t <= h + s && n <= c + l)
            return u;
        }
        return -1;
      }, e.prototype.contain = function(t, n) {
        var a = this.transformCoordToLocal(t, n), i = this.getBoundingRect();
        if (t = a[0], n = a[1], i.contain(t, n)) {
          var o = this.hoverDataIdx = this.findDataIndex(t, n);
          return o >= 0;
        }
        return this.hoverDataIdx = -1, !1;
      }, e.prototype.getBoundingRect = function() {
        var t = this._rect;
        if (!t) {
          for (var n = this.shape, a = n.points, i = n.size, o = i[0], s = i[1], l = 1 / 0, u = 1 / 0, f = -1 / 0, h = -1 / 0, c = 0; c < a.length; ) {
            var v = a[c++], d = a[c++];
            l = Math.min(v, l), f = Math.max(v, f), u = Math.min(d, u), h = Math.max(d, h);
          }
          t = this._rect = new xt(l - o / 2, u - s / 2, f - l + o, h - u + s);
        }
        return t;
      }, e;
    }(Dt)
  ), SF = (
    /** @class */
    function() {
      function r() {
        this.group = new ct();
      }
      return r.prototype.updateData = function(e, t) {
        this._clear();
        var n = this._create();
        n.setShape({
          points: e.getLayout("points")
        }), this._setCommon(n, e, t);
      }, r.prototype.updateLayout = function(e) {
        var t = e.getLayout("points");
        this.group.eachChild(function(n) {
          if (n.startIndex != null) {
            var a = (n.endIndex - n.startIndex) * 2, i = n.startIndex * 4 * 2;
            t = new Float32Array(t.buffer, i, a);
          }
          n.setShape("points", t), n.reset();
        });
      }, r.prototype.incrementalPrepareUpdate = function(e) {
        this._clear();
      }, r.prototype.incrementalUpdate = function(e, t, n) {
        var a = this._newAdded[0], i = t.getLayout("points"), o = a && a.shape.points;
        if (o && o.length < 2e4) {
          var s = o.length, l = new Float32Array(s + i.length);
          l.set(o), l.set(i, s), a.endIndex = e.end, a.setShape({
            points: l
          });
        } else {
          this._newAdded = [];
          var u = this._create();
          u.startIndex = e.start, u.endIndex = e.end, u.incremental = !0, u.setShape({
            points: i
          }), this._setCommon(u, t, n);
        }
      }, r.prototype.eachRendered = function(e) {
        this._newAdded[0] && e(this._newAdded[0]);
      }, r.prototype._create = function() {
        var e = new _F({
          cursor: "default"
        });
        return e.ignoreCoarsePointer = !0, this.group.add(e), this._newAdded.push(e), e;
      }, r.prototype._setCommon = function(e, t, n) {
        var a = t.hostModel;
        n = n || {};
        var i = t.getVisual("symbolSize");
        e.setShape("size", i instanceof Array ? i : [i, i]), e.softClipShape = n.clipShape || null, e.symbolProxy = ve(t.getVisual("symbol"), 0, 0, 0, 0), e.setColor = e.symbolProxy.setColor;
        var o = e.shape.size[0] < vA;
        e.useStyle(
          // Draw shadow when doing fillRect is extremely slow.
          a.getModel("itemStyle").getItemStyle(o ? ["color", "shadowBlur", "shadowColor"] : ["color"])
        );
        var s = t.getVisual("style"), l = s && s.fill;
        l && e.setColor(l);
        var u = gt(e);
        u.seriesIndex = a.seriesIndex, e.on("mousemove", function(f) {
          u.dataIndex = null;
          var h = e.hoverDataIdx;
          h >= 0 && (u.dataIndex = h + (e.startIndex || 0));
        });
      }, r.prototype.remove = function() {
        this._clear();
      }, r.prototype._clear = function() {
        this._newAdded = [], this.group.removeAll();
      }, r;
    }()
  ), xF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this._updateSymbolDraw(i, t);
        o.updateData(i, {
          // TODO
          // If this parameter should be a shape or a bounding volume
          // shape will be more general.
          // But bounding volume like bounding rect will be much faster in the contain calculation
          clipShape: this._getClipShape(t)
        }), this._finished = !0;
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        var i = t.getData(), o = this._updateSymbolDraw(i, t);
        o.incrementalPrepareUpdate(i), this._finished = !1;
      }, e.prototype.incrementalRender = function(t, n, a) {
        this._symbolDraw.incrementalUpdate(t, n.getData(), {
          clipShape: this._getClipShape(n)
        }), this._finished = t.end === n.getData().count();
      }, e.prototype.updateTransform = function(t, n, a) {
        var i = t.getData();
        if (this.group.dirty(), !this._finished || i.count() > 1e4)
          return {
            update: !0
          };
        var o = mu("").reset(t, n, a);
        o.progress && o.progress({
          start: 0,
          end: i.count(),
          count: i.count()
        }, i), this._symbolDraw.updateLayout(i);
      }, e.prototype.eachRendered = function(t) {
        this._symbolDraw && this._symbolDraw.eachRendered(t);
      }, e.prototype._getClipShape = function(t) {
        var n = t.coordinateSystem, a = n && n.getArea && n.getArea();
        return t.get("clip", !0) ? a : null;
      }, e.prototype._updateSymbolDraw = function(t, n) {
        var a = this._symbolDraw, i = n.pipelineContext, o = i.large;
        return (!a || o !== this._isLargeDraw) && (a && a.remove(), a = this._symbolDraw = o ? new SF() : new yu(), this._isLargeDraw = o, this.group.removeAll()), this.group.add(a.group), a;
      }, e.prototype.remove = function(t, n) {
        this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null;
      }, e.prototype.dispose = function() {
      }, e.type = "scatter", e;
    }($t)
  ), wF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.type = "grid", e.dependencies = ["xAxis", "yAxis"], e.layoutMode = "box", e.defaultOption = {
        show: !1,
        // zlevel: 0,
        z: 0,
        left: "10%",
        top: 60,
        right: "10%",
        bottom: 70,
        // If grid size contain label
        containLabel: !1,
        // width: {totalWidth} - left - right,
        // height: {totalHeight} - top - bottom,
        backgroundColor: "rgba(0,0,0,0)",
        borderWidth: 1,
        borderColor: "#ccc"
      }, e;
    }(Ct)
  ), Ty = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.getCoordSysModel = function() {
        return this.getReferringComponents("grid", ge).models[0];
      }, e.type = "cartesian2dAxis", e;
    }(Ct)
  );
  le(Ty, vs);
  var dA = {
    show: !0,
    // zlevel: 0,
    z: 0,
    // Inverse the axis.
    inverse: !1,
    // Axis name displayed.
    name: "",
    // 'start' | 'middle' | 'end'
    nameLocation: "end",
    // By degree. By default auto rotate by nameLocation.
    nameRotate: null,
    nameTruncate: {
      maxWidth: null,
      ellipsis: "...",
      placeholder: "."
    },
    // Use global text style by default.
    nameTextStyle: {},
    // The gap between axisName and axisLine.
    nameGap: 15,
    // Default `false` to support tooltip.
    silent: !1,
    // Default `false` to avoid legacy user event listener fail.
    triggerEvent: !1,
    tooltip: {
      show: !1
    },
    axisPointer: {},
    axisLine: {
      show: !0,
      onZero: !0,
      onZeroAxisIndex: null,
      lineStyle: {
        color: "#6E7079",
        width: 1,
        type: "solid"
      },
      // The arrow at both ends the the axis.
      symbol: ["none", "none"],
      symbolSize: [10, 15]
    },
    axisTick: {
      show: !0,
      // Whether axisTick is inside the grid or outside the grid.
      inside: !1,
      // The length of axisTick.
      length: 5,
      lineStyle: {
        width: 1
      }
    },
    axisLabel: {
      show: !0,
      // Whether axisLabel is inside the grid or outside the grid.
      inside: !1,
      rotate: 0,
      // true | false | null/undefined (auto)
      showMinLabel: null,
      // true | false | null/undefined (auto)
      showMaxLabel: null,
      margin: 8,
      // formatter: null,
      fontSize: 12
    },
    splitLine: {
      show: !0,
      lineStyle: {
        color: ["#E0E6F1"],
        width: 1,
        type: "solid"
      }
    },
    splitArea: {
      show: !1,
      areaStyle: {
        color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
      }
    }
  }, bF = mt({
    // The gap at both ends of the axis. For categoryAxis, boolean.
    boundaryGap: !0,
    // Set false to faster category collection.
    deduplication: null,
    // splitArea: {
    // show: false
    // },
    splitLine: {
      show: !1
    },
    axisTick: {
      // If tick is align with label when boundaryGap is true
      alignWithLabel: !1,
      interval: "auto"
    },
    axisLabel: {
      interval: "auto"
    }
  }, dA), Cy = mt({
    boundaryGap: [0, 0],
    axisLine: {
      // Not shown when other axis is categoryAxis in cartesian
      show: "auto"
    },
    axisTick: {
      // Not shown when other axis is categoryAxis in cartesian
      show: "auto"
    },
    // TODO
    // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
    splitNumber: 5,
    minorTick: {
      // Minor tick, not available for cateogry axis.
      show: !1,
      // Split number of minor ticks. The value should be in range of (0, 100)
      splitNumber: 5,
      // Length of minor tick
      length: 3,
      // Line style
      lineStyle: {
        // Default to be same with axisTick
      }
    },
    minorSplitLine: {
      show: !1,
      lineStyle: {
        color: "#F4F7FD",
        width: 1
      }
    }
  }, dA), TF = mt({
    splitNumber: 6,
    axisLabel: {
      // To eliminate labels that are not nice
      showMinLabel: !1,
      showMaxLabel: !1,
      rich: {
        primary: {
          fontWeight: "bold"
        }
      }
    },
    splitLine: {
      show: !1
    }
  }, Cy), CF = ot({
    logBase: 10
  }, Cy), pA = {
    category: bF,
    value: Cy,
    time: TF,
    log: CF
  }, AF = {
    value: 1,
    category: 1,
    time: 1,
    log: 1
  };
  function ms(r, e, t, n) {
    M(AF, function(a, i) {
      var o = mt(mt({}, pA[i], !0), n, !0), s = (
        /** @class */
        function(l) {
          A(u, l);
          function u() {
            var f = l !== null && l.apply(this, arguments) || this;
            return f.type = e + "Axis." + i, f;
          }
          return u.prototype.mergeDefaultAndTheme = function(f, h) {
            var c = Fl(this), v = c ? Jo(f) : {}, d = h.getTheme();
            mt(f, d.get(i + "Axis")), mt(f, this.getDefaultOption()), f.type = gA(f), c && Ra(f, v, c);
          }, u.prototype.optionUpdated = function() {
            var f = this.option;
            f.type === "category" && (this.__ordinalMeta = Wg.createByAxisModel(this));
          }, u.prototype.getCategories = function(f) {
            var h = this.option;
            if (h.type === "category")
              return f ? h.data : this.__ordinalMeta.categories;
          }, u.prototype.getOrdinalMeta = function() {
            return this.__ordinalMeta;
          }, u.type = e + "Axis." + i, u.defaultOption = o, u;
        }(t)
      );
      r.registerComponentModel(s);
    }), r.registerSubTypeDefaulter(e + "Axis", gA);
  }
  function gA(r) {
    return r.type || (r.data ? "category" : "value");
  }
  var DF = (
    /** @class */
    function() {
      function r(e) {
        this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = e || "";
      }
      return r.prototype.getAxis = function(e) {
        return this._axes[e];
      }, r.prototype.getAxes = function() {
        return Y(this._dimList, function(e) {
          return this._axes[e];
        }, this);
      }, r.prototype.getAxesByScale = function(e) {
        return e = e.toLowerCase(), Ht(this.getAxes(), function(t) {
          return t.scale.type === e;
        });
      }, r.prototype.addAxis = function(e) {
        var t = e.dim;
        this._axes[t] = e, this._dimList.push(t);
      }, r;
    }()
  ), Ay = ["x", "y"];
  function yA(r) {
    return r.type === "interval" || r.type === "time";
  }
  var MF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "cartesian2d", t.dimensions = Ay, t;
      }
      return e.prototype.calcAffineTransform = function() {
        this._transform = this._invTransform = null;
        var t = this.getAxis("x").scale, n = this.getAxis("y").scale;
        if (!(!yA(t) || !yA(n))) {
          var a = t.getExtent(), i = n.getExtent(), o = this.dataToPoint([a[0], i[0]]), s = this.dataToPoint([a[1], i[1]]), l = a[1] - a[0], u = i[1] - i[0];
          if (!(!l || !u)) {
            var f = (s[0] - o[0]) / l, h = (s[1] - o[1]) / u, c = o[0] - a[0] * f, v = o[1] - i[0] * h, d = this._transform = [f, 0, 0, h, c, v];
            this._invTransform = si([], d);
          }
        }
      }, e.prototype.getBaseAxis = function() {
        return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
      }, e.prototype.containPoint = function(t) {
        var n = this.getAxis("x"), a = this.getAxis("y");
        return n.contain(n.toLocalCoord(t[0])) && a.contain(a.toLocalCoord(t[1]));
      }, e.prototype.containData = function(t) {
        return this.getAxis("x").containData(t[0]) && this.getAxis("y").containData(t[1]);
      }, e.prototype.containZone = function(t, n) {
        var a = this.dataToPoint(t), i = this.dataToPoint(n), o = this.getArea(), s = new xt(a[0], a[1], i[0] - a[0], i[1] - a[1]);
        return o.intersect(s);
      }, e.prototype.dataToPoint = function(t, n, a) {
        a = a || [];
        var i = t[0], o = t[1];
        if (this._transform && i != null && isFinite(i) && o != null && isFinite(o))
          return Ie(a, t, this._transform);
        var s = this.getAxis("x"), l = this.getAxis("y");
        return a[0] = s.toGlobalCoord(s.dataToCoord(i, n)), a[1] = l.toGlobalCoord(l.dataToCoord(o, n)), a;
      }, e.prototype.clampData = function(t, n) {
        var a = this.getAxis("x").scale, i = this.getAxis("y").scale, o = a.getExtent(), s = i.getExtent(), l = a.parse(t[0]), u = i.parse(t[1]);
        return n = n || [], n[0] = Math.min(Math.max(Math.min(o[0], o[1]), l), Math.max(o[0], o[1])), n[1] = Math.min(Math.max(Math.min(s[0], s[1]), u), Math.max(s[0], s[1])), n;
      }, e.prototype.pointToData = function(t, n) {
        var a = [];
        if (this._invTransform)
          return Ie(a, t, this._invTransform);
        var i = this.getAxis("x"), o = this.getAxis("y");
        return a[0] = i.coordToData(i.toLocalCoord(t[0]), n), a[1] = o.coordToData(o.toLocalCoord(t[1]), n), a;
      }, e.prototype.getOtherAxis = function(t) {
        return this.getAxis(t.dim === "x" ? "y" : "x");
      }, e.prototype.getArea = function() {
        var t = this.getAxis("x").getGlobalExtent(), n = this.getAxis("y").getGlobalExtent(), a = Math.min(t[0], t[1]), i = Math.min(n[0], n[1]), o = Math.max(t[0], t[1]) - a, s = Math.max(n[0], n[1]) - i;
        return new xt(a, i, o, s);
      }, e;
    }(DF)
  ), IF = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i, o) {
        var s = r.call(this, t, n, a) || this;
        return s.index = 0, s.type = i || "value", s.position = o || "bottom", s;
      }
      return e.prototype.isHorizontal = function() {
        var t = this.position;
        return t === "top" || t === "bottom";
      }, e.prototype.getGlobalExtent = function(t) {
        var n = this.getExtent();
        return n[0] = this.toGlobalCoord(n[0]), n[1] = this.toGlobalCoord(n[1]), t && n[0] > n[1] && n.reverse(), n;
      }, e.prototype.pointToData = function(t, n) {
        return this.coordToData(this.toLocalCoord(t[this.dim === "x" ? 0 : 1]), n);
      }, e.prototype.setCategorySortInfo = function(t) {
        if (this.type !== "category")
          return !1;
        this.model.option.categorySortInfo = t, this.scale.setSortInfo(t);
      }, e;
    }(Ur)
  );
  function Dy(r, e, t) {
    t = t || {};
    var n = r.coordinateSystem, a = e.axis, i = {}, o = a.getAxesOnZeroOf()[0], s = a.position, l = o ? "onZero" : s, u = a.dim, f = n.getRect(), h = [f.x, f.x + f.width, f.y, f.y + f.height], c = {
      left: 0,
      right: 1,
      top: 0,
      bottom: 1,
      onZero: 2
    }, v = e.get("offset") || 0, d = u === "x" ? [h[2] - v, h[3] + v] : [h[0] - v, h[1] + v];
    if (o) {
      var p = o.toGlobalCoord(o.dataToCoord(0));
      d[c.onZero] = Math.max(Math.min(p, d[1]), d[0]);
    }
    i.position = [u === "y" ? d[c[l]] : h[0], u === "x" ? d[c[l]] : h[3]], i.rotation = Math.PI / 2 * (u === "x" ? 0 : 1);
    var g = {
      top: -1,
      bottom: 1,
      left: -1,
      right: 1
    };
    i.labelDirection = i.tickDirection = i.nameDirection = g[s], i.labelOffset = o ? d[c[s]] - d[c.onZero] : 0, e.get(["axisTick", "inside"]) && (i.tickDirection = -i.tickDirection), he(t.labelInside, e.get(["axisLabel", "inside"])) && (i.labelDirection = -i.labelDirection);
    var y = e.get(["axisLabel", "rotate"]);
    return i.labelRotate = l === "top" ? -y : y, i.z2 = 1, i;
  }
  function mA(r) {
    return r.get("coordinateSystem") === "cartesian2d";
  }
  function _A(r) {
    var e = {
      xAxisModel: null,
      yAxisModel: null
    };
    return M(e, function(t, n) {
      var a = n.replace(/Model$/, ""), i = r.getReferringComponents(a, ge).models[0];
      if (!i)
        throw new Error(a + ' "' + Dr(r.get(a + "Index"), r.get(a + "Id"), 0) + '" not found');
      e[n] = i;
    }), e;
  }
  var My = Math.log;
  function SA(r, e, t) {
    var n = na.prototype, a = n.getTicks.call(t), i = n.getTicks.call(t, !0), o = a.length - 1, s = n.getInterval.call(t), l = OT(r, e), u = l.extent, f = l.fixMin, h = l.fixMax;
    if (r.type === "log") {
      var c = My(r.base);
      u = [My(u[0]) / c, My(u[1]) / c];
    }
    r.setExtent(u[0], u[1]), r.calcNiceExtent({
      splitNumber: o,
      fixMin: f,
      fixMax: h
    });
    var v = n.getExtent.call(r);
    f && (u[0] = v[0]), h && (u[1] = v[1]);
    var d = n.getInterval.call(r), p = u[0], g = u[1];
    if (f && h)
      d = (g - p) / o;
    else if (f)
      for (g = u[0] + d * o; g < u[1] && isFinite(g) && isFinite(u[1]); )
        d = Yg(d), g = u[0] + d * o;
    else if (h)
      for (p = u[1] - d * o; p > u[0] && isFinite(p) && isFinite(u[0]); )
        d = Yg(d), p = u[1] - d * o;
    else {
      var y = r.getTicks().length - 1;
      y > o && (d = Yg(d));
      var m = d * o;
      g = Math.ceil(u[1] / d) * d, p = ie(g - m), p < 0 && u[0] >= 0 ? (p = 0, g = ie(m)) : g > 0 && u[1] <= 0 && (g = 0, p = -ie(m));
    }
    var _ = (a[0].value - i[0].value) / s, S = (a[o].value - i[o].value) / s;
    n.setExtent.call(r, p + d * _, g + d * S), n.setInterval.call(r, d), (_ || S) && n.setNiceExtent.call(r, p + d, g - d);
    {
      var b = n.getTicks.call(r);
      b[1] && (!Mz(d) || Nf(b[1].value) > Nf(d)) && ae(
        // eslint-disable-next-line
        "The ticks may be not readable when set min: " + e.get("min") + ", max: " + e.get("max") + " and alignTicks: true"
      );
    }
  }
  var LF = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = Ay, this._initCartesian(e, t, n), this.model = e;
      }
      return r.prototype.getRect = function() {
        return this._rect;
      }, r.prototype.update = function(e, t) {
        var n = this._axesMap;
        this._updateScale(e, this.model);
        function a(o) {
          var s, l = Pt(o), u = l.length;
          if (u) {
            for (var f = [], h = u - 1; h >= 0; h--) {
              var c = +l[h], v = o[c], d = v.model, p = v.scale;
              // Only value and log axis without interval support alignTicks.
              Ug(p) && d.get("alignTicks") && d.get("interval") == null ? f.push(v) : (Xi(p, d), Ug(p) && (s = v));
            }
            f.length && (s || (s = f.pop(), Xi(s.scale, s.model)), M(f, function(g) {
              SA(g.scale, g.model, s.scale);
            }));
          }
        }
        a(n.x), a(n.y);
        var i = {};
        M(n.x, function(o) {
          xA(n, "y", o, i);
        }), M(n.y, function(o) {
          xA(n, "x", o, i);
        }), this.resize(this.model, t);
      }, r.prototype.resize = function(e, t, n) {
        var a = e.getBoxLayoutParams(), i = !n && e.get("containLabel"), o = ye(a, {
          width: t.getWidth(),
          height: t.getHeight()
        });
        this._rect = o;
        var s = this._axesList;
        l(), i && (M(s, function(u) {
          if (!u.model.get(["axisLabel", "inside"])) {
            var f = Jz(u);
            if (f) {
              var h = u.isHorizontal() ? "height" : "width", c = u.model.get(["axisLabel", "margin"]);
              o[h] -= f[h] + c, u.position === "top" ? o.y += f.height + c : u.position === "left" && (o.x += f.width + c);
            }
          }
        }), l()), M(this._coordsList, function(u) {
          u.calcAffineTransform();
        });
        function l() {
          M(s, function(u) {
            var f = u.isHorizontal(), h = f ? [0, o.width] : [0, o.height], c = u.inverse ? 1 : 0;
            u.setExtent(h[c], h[1 - c]), PF(u, f ? o.x : o.y);
          });
        }
      }, r.prototype.getAxis = function(e, t) {
        var n = this._axesMap[e];
        if (n != null)
          return n[t || 0];
      }, r.prototype.getAxes = function() {
        return this._axesList.slice();
      }, r.prototype.getCartesian = function(e, t) {
        if (e != null && t != null) {
          var n = "x" + e + "y" + t;
          return this._coordsMap[n];
        }
        it(e) && (t = e.yAxisIndex, e = e.xAxisIndex);
        for (var a = 0, i = this._coordsList; a < i.length; a++)
          if (i[a].getAxis("x").index === e || i[a].getAxis("y").index === t)
            return i[a];
      }, r.prototype.getCartesians = function() {
        return this._coordsList.slice();
      }, r.prototype.convertToPixel = function(e, t, n) {
        var a = this._findConvertTarget(t);
        return a.cartesian ? a.cartesian.dataToPoint(n) : a.axis ? a.axis.toGlobalCoord(a.axis.dataToCoord(n)) : null;
      }, r.prototype.convertFromPixel = function(e, t, n) {
        var a = this._findConvertTarget(t);
        return a.cartesian ? a.cartesian.pointToData(n) : a.axis ? a.axis.coordToData(a.axis.toLocalCoord(n)) : null;
      }, r.prototype._findConvertTarget = function(e) {
        var t = e.seriesModel, n = e.xAxisModel || t && t.getReferringComponents("xAxis", ge).models[0], a = e.yAxisModel || t && t.getReferringComponents("yAxis", ge).models[0], i = e.gridModel, o = this._coordsList, s, l;
        if (t)
          s = t.coordinateSystem, bt(o, s) < 0 && (s = null);
        else if (n && a)
          s = this.getCartesian(n.componentIndex, a.componentIndex);
        else if (n)
          l = this.getAxis("x", n.componentIndex);
        else if (a)
          l = this.getAxis("y", a.componentIndex);
        else if (i) {
          var u = i.coordinateSystem;
          u === this && (s = this._coordsList[0]);
        }
        return {
          cartesian: s,
          axis: l
        };
      }, r.prototype.containPoint = function(e) {
        var t = this._coordsList[0];
        if (t)
          return t.containPoint(e);
      }, r.prototype._initCartesian = function(e, t, n) {
        var a = this, i = this, o = {
          left: !1,
          right: !1,
          top: !1,
          bottom: !1
        }, s = {
          x: {},
          y: {}
        }, l = {
          x: 0,
          y: 0
        };
        if (t.eachComponent("xAxis", u("x"), this), t.eachComponent("yAxis", u("y"), this), !l.x || !l.y) {
          this._axesMap = {}, this._axesList = [];
          return;
        }
        this._axesMap = s, M(s.x, function(f, h) {
          M(s.y, function(c, v) {
            var d = "x" + h + "y" + v, p = new MF(d);
            p.master = a, p.model = e, a._coordsMap[d] = p, a._coordsList.push(p), p.addAxis(f), p.addAxis(c);
          });
        });
        function u(f) {
          return function(h, c) {
            if (Iy(h, e)) {
              var v = h.get("position");
              f === "x" ? v !== "top" && v !== "bottom" && (v = o.bottom ? "top" : "bottom") : v !== "left" && v !== "right" && (v = o.left ? "right" : "left"), o[v] = !0;
              var d = new IF(f, lu(h), [0, 0], h.get("type"), v), p = d.type === "category";
              d.onBand = p && h.get("boundaryGap"), d.inverse = h.get("inverse"), h.axis = d, d.model = h, d.grid = i, d.index = c, i._axesList.push(d), s[f][c] = d, l[f]++;
            }
          };
        }
      }, r.prototype._updateScale = function(e, t) {
        M(this._axesList, function(a) {
          if (a.scale.setExtent(1 / 0, -1 / 0), a.type === "category") {
            var i = a.model.get("categorySortInfo");
            a.scale.setSortInfo(i);
          }
        }), e.eachSeries(function(a) {
          if (mA(a)) {
            var i = _A(a), o = i.xAxisModel, s = i.yAxisModel;
            if (!Iy(o, t) || !Iy(s, t))
              return;
            var l = this.getCartesian(o.componentIndex, s.componentIndex), u = a.getData(), f = l.getAxis("x"), h = l.getAxis("y");
            n(u, f), n(u, h);
          }
        }, this);
        function n(a, i) {
          M(ic(a, i.dim), function(o) {
            i.scale.unionExtentFromData(a, o);
          });
        }
      }, r.prototype.getTooltipAxes = function(e) {
        var t = [], n = [];
        return M(this.getCartesians(), function(a) {
          var i = e != null && e !== "auto" ? a.getAxis(e) : a.getBaseAxis(), o = a.getOtherAxis(i);
          bt(t, i) < 0 && t.push(i), bt(n, o) < 0 && n.push(o);
        }), {
          baseAxes: t,
          otherAxes: n
        };
      }, r.create = function(e, t) {
        var n = [];
        return e.eachComponent("grid", function(a, i) {
          var o = new r(a, e, t);
          o.name = "grid_" + i, o.resize(a, t, !0), a.coordinateSystem = o, n.push(o);
        }), e.eachSeries(function(a) {
          if (mA(a)) {
            var i = _A(a), o = i.xAxisModel, s = i.yAxisModel, l = o.getCoordSysModel();
            {
              if (!l)
                throw new Error('Grid "' + Dr(o.get("gridIndex"), o.get("gridId"), 0) + '" not found');
              if (o.getCoordSysModel() !== s.getCoordSysModel())
                throw new Error("xAxis and yAxis must use the same grid");
            }
            var u = l.coordinateSystem;
            a.coordinateSystem = u.getCartesian(o.componentIndex, s.componentIndex);
          }
        }), n;
      }, r.dimensions = Ay, r;
    }()
  );
  function Iy(r, e) {
    return r.getCoordSysModel() === e;
  }
  function xA(r, e, t, n) {
    t.getAxesOnZeroOf = function() {
      return i ? [i] : [];
    };
    var a = r[e], i, o = t.model, s = o.get(["axisLine", "onZero"]), l = o.get(["axisLine", "onZeroAxisIndex"]);
    if (!s)
      return;
    if (l != null)
      wA(a[l]) && (i = a[l]);
    else
      for (var u in a)
        if (a.hasOwnProperty(u) && wA(a[u]) && !n[f(a[u])]) {
          i = a[u];
          break;
        }
    i && (n[f(i)] = !0);
    function f(h) {
      return h.dim + "_" + h.index;
    }
  }
  function wA(r) {
    return r && r.type !== "category" && r.type !== "time" && jz(r);
  }
  function PF(r, e) {
    var t = r.getExtent(), n = t[0] + t[1];
    r.toGlobalCoord = r.dim === "x" ? function(a) {
      return a + e;
    } : function(a) {
      return n - a + e;
    }, r.toLocalCoord = r.dim === "x" ? function(a) {
      return a - e;
    } : function(a) {
      return n - a + e;
    };
  }
  var Ha = Math.PI, er = (
    /** @class */
    function() {
      function r(e, t) {
        this.group = new ct(), this.opt = t, this.axisModel = e, ot(t, {
          labelOffset: 0,
          nameDirection: 1,
          tickDirection: 1,
          labelDirection: 1,
          silent: !0,
          handleAutoShown: function() {
            return !0;
          }
        });
        var n = new ct({
          x: t.position[0],
          y: t.position[1],
          rotation: t.rotation
        });
        n.updateTransform(), this._transformGroup = n;
      }
      return r.prototype.hasBuilder = function(e) {
        return !!bA[e];
      }, r.prototype.add = function(e) {
        bA[e](this.opt, this.axisModel, this.group, this._transformGroup);
      }, r.prototype.getGroup = function() {
        return this.group;
      }, r.innerTextLayout = function(e, t, n) {
        var a = Od(t - e), i, o;
        return pl(a) ? (o = n > 0 ? "top" : "bottom", i = "center") : pl(a - Ha) ? (o = n > 0 ? "bottom" : "top", i = "center") : (o = "middle", a > 0 && a < Ha ? i = n > 0 ? "right" : "left" : i = n > 0 ? "left" : "right"), {
          rotation: a,
          textAlign: i,
          textVerticalAlign: o
        };
      }, r.makeAxisEventDataBase = function(e) {
        var t = {
          componentType: e.mainType,
          componentIndex: e.componentIndex
        };
        return t[e.mainType + "Index"] = e.componentIndex, t;
      }, r.isLabelSilent = function(e) {
        var t = e.get("tooltip");
        return e.get("silent") || !(e.get("triggerEvent") || t && t.show);
      }, r;
    }()
  ), bA = {
    axisLine: function(r, e, t, n) {
      var a = e.get(["axisLine", "show"]);
      if (a === "auto" && r.handleAutoShown && (a = r.handleAutoShown("axisLine")), !!a) {
        var i = e.axis.getExtent(), o = n.transform, s = [i[0], 0], l = [i[1], 0], u = s[0] > l[0];
        o && (Ie(s, s, o), Ie(l, l, o));
        var f = H({
          lineCap: "round"
        }, e.getModel(["axisLine", "lineStyle"]).getLineStyle()), h = new Se({
          shape: {
            x1: s[0],
            y1: s[1],
            x2: l[0],
            y2: l[1]
          },
          style: f,
          strokeContainThreshold: r.strokeContainThreshold || 5,
          silent: !0,
          z2: 1
        });
        Yo(h.shape, h.style.lineWidth), h.anid = "line", t.add(h);
        var c = e.get(["axisLine", "symbol"]);
        if (c != null) {
          var v = e.get(["axisLine", "symbolSize"]);
          j(c) && (c = [c, c]), (j(v) || Ot(v)) && (v = [v, v]);
          var d = os(e.get(["axisLine", "symbolOffset"]) || 0, v), p = v[0], g = v[1];
          M([{
            rotate: r.rotation + Math.PI / 2,
            offset: d[0],
            r: 0
          }, {
            rotate: r.rotation - Math.PI / 2,
            offset: d[1],
            r: Math.sqrt((s[0] - l[0]) * (s[0] - l[0]) + (s[1] - l[1]) * (s[1] - l[1]))
          }], function(y, m) {
            if (c[m] !== "none" && c[m] != null) {
              var _ = ve(c[m], -p / 2, -g / 2, p, g, f.stroke, !0), S = y.r + y.offset, b = u ? l : s;
              _.attr({
                rotation: y.rotate,
                x: b[0] + S * Math.cos(r.rotation),
                y: b[1] - S * Math.sin(r.rotation),
                silent: !0,
                z2: 11
              }), t.add(_);
            }
          });
        }
      }
    },
    axisTickLabel: function(r, e, t, n) {
      var a = kF(t, n, e, r), i = NF(t, n, e, r);
      if (RF(e, i, a), OF(t, n, e, r.tickDirection), e.get(["axisLabel", "hideOverlap"])) {
        var o = rC(Y(i, function(s) {
          return {
            label: s,
            priority: s.z2,
            defaultAttr: {
              ignore: s.ignore
            }
          };
        }));
        iC(o);
      }
    },
    axisName: function(r, e, t, n) {
      var a = he(r.axisName, e.get("name"));
      if (a) {
        var i = e.get("nameLocation"), o = r.nameDirection, s = e.getModel("nameTextStyle"), l = e.get("nameGap") || 0, u = e.axis.getExtent(), f = u[0] > u[1] ? -1 : 1, h = [
          i === "start" ? u[0] - f * l : i === "end" ? u[1] + f * l : (u[0] + u[1]) / 2,
          // Reuse labelOffset.
          CA(i) ? r.labelOffset + o * l : 0
        ], c, v = e.get("nameRotate");
        v != null && (v = v * Ha / 180);
        var d;
        CA(i) ? c = er.innerTextLayout(
          r.rotation,
          v ?? r.rotation,
          // Adapt to axis.
          o
        ) : (c = EF(r.rotation, i, v || 0, u), d = r.axisNameAvailableWidth, d != null && (d = Math.abs(d / Math.sin(c.rotation)), !isFinite(d) && (d = null)));
        var p = s.getFont(), g = e.get("nameTruncate", !0) || {}, y = g.ellipsis, m = he(r.nameTruncateMaxWidth, g.maxWidth, d), _ = new kt({
          x: h[0],
          y: h[1],
          rotation: c.rotation,
          silent: er.isLabelSilent(e),
          style: jt(s, {
            text: a,
            font: p,
            overflow: "truncate",
            width: m,
            ellipsis: y,
            fill: s.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
            align: s.get("align") || c.textAlign,
            verticalAlign: s.get("verticalAlign") || c.textVerticalAlign
          }),
          z2: 1
        });
        if (Xo({
          el: _,
          componentModel: e,
          itemName: a
        }), _.__fullText = a, _.anid = "name", e.get("triggerEvent")) {
          var S = er.makeAxisEventDataBase(e);
          S.targetType = "axisName", S.name = a, gt(_).eventData = S;
        }
        n.add(_), _.updateTransform(), t.add(_), _.decomposeTransform();
      }
    }
  };
  function EF(r, e, t, n) {
    var a = Od(t - r), i, o, s = n[0] > n[1], l = e === "start" && !s || e !== "start" && s;
    return pl(a - Ha / 2) ? (o = l ? "bottom" : "top", i = "center") : pl(a - Ha * 1.5) ? (o = l ? "top" : "bottom", i = "center") : (o = "middle", a < Ha * 1.5 && a > Ha / 2 ? i = l ? "left" : "right" : i = l ? "right" : "left"), {
      rotation: a,
      textAlign: i,
      textVerticalAlign: o
    };
  }
  function RF(r, e, t) {
    if (!NT(r.axis)) {
      var n = r.get(["axisLabel", "showMinLabel"]), a = r.get(["axisLabel", "showMaxLabel"]);
      e = e || [], t = t || [];
      var i = e[0], o = e[1], s = e[e.length - 1], l = e[e.length - 2], u = t[0], f = t[1], h = t[t.length - 1], c = t[t.length - 2];
      n === !1 ? (Yr(i), Yr(u)) : TA(i, o) && (n ? (Yr(o), Yr(f)) : (Yr(i), Yr(u))), a === !1 ? (Yr(s), Yr(h)) : TA(l, s) && (a ? (Yr(l), Yr(c)) : (Yr(s), Yr(h)));
    }
  }
  function Yr(r) {
    r && (r.ignore = !0);
  }
  function TA(r, e) {
    var t = r && r.getBoundingRect().clone(), n = e && e.getBoundingRect().clone();
    if (!(!t || !n)) {
      var a = qs([]);
      return ga(a, a, -r.rotation), t.applyTransform(mn([], a, r.getLocalTransform())), n.applyTransform(mn([], a, e.getLocalTransform())), t.intersect(n);
    }
  }
  function CA(r) {
    return r === "middle" || r === "center";
  }
  function AA(r, e, t, n, a) {
    for (var i = [], o = [], s = [], l = 0; l < r.length; l++) {
      var u = r[l].coord;
      o[0] = u, o[1] = 0, s[0] = u, s[1] = t, e && (Ie(o, o, e), Ie(s, s, e));
      var f = new Se({
        shape: {
          x1: o[0],
          y1: o[1],
          x2: s[0],
          y2: s[1]
        },
        style: n,
        z2: 2,
        autoBatch: !0,
        silent: !0
      });
      Yo(f.shape, f.style.lineWidth), f.anid = a + "_" + r[l].tickValue, i.push(f);
    }
    return i;
  }
  function kF(r, e, t, n) {
    var a = t.axis, i = t.getModel("axisTick"), o = i.get("show");
    if (o === "auto" && n.handleAutoShown && (o = n.handleAutoShown("axisTick")), !(!o || a.scale.isBlank())) {
      for (var s = i.getModel("lineStyle"), l = n.tickDirection * i.get("length"), u = a.getTicksCoords(), f = AA(u, e.transform, l, ot(s.getLineStyle(), {
        stroke: t.get(["axisLine", "lineStyle", "color"])
      }), "ticks"), h = 0; h < f.length; h++)
        r.add(f[h]);
      return f;
    }
  }
  function OF(r, e, t, n) {
    var a = t.axis, i = t.getModel("minorTick");
    if (!(!i.get("show") || a.scale.isBlank())) {
      var o = a.getMinorTicksCoords();
      if (o.length)
        for (var s = i.getModel("lineStyle"), l = n * i.get("length"), u = ot(s.getLineStyle(), ot(t.getModel("axisTick").getLineStyle(), {
          stroke: t.get(["axisLine", "lineStyle", "color"])
        })), f = 0; f < o.length; f++)
          for (var h = AA(o[f], e.transform, l, u, "minorticks_" + f), c = 0; c < h.length; c++)
            r.add(h[c]);
    }
  }
  function NF(r, e, t, n) {
    var a = t.axis, i = he(n.axisLabelShow, t.get(["axisLabel", "show"]));
    if (!(!i || a.scale.isBlank())) {
      var o = t.getModel("axisLabel"), s = o.get("margin"), l = a.getViewLabels(), u = (he(n.labelRotate, o.get("rotate")) || 0) * Ha / 180, f = er.innerTextLayout(n.rotation, u, n.labelDirection), h = t.getCategories && t.getCategories(!0), c = [], v = er.isLabelSilent(t), d = t.get("triggerEvent");
      return M(l, function(p, g) {
        var y = a.scale.type === "ordinal" ? a.scale.getRawOrdinalNumber(p.tickValue) : p.tickValue, m = p.formattedLabel, _ = p.rawLabel, S = o;
        if (h && h[y]) {
          var b = h[y];
          it(b) && b.textStyle && (S = new Gt(b.textStyle, o, t.ecModel));
        }
        var w = S.getTextColor() || t.get(["axisLine", "lineStyle", "color"]), T = a.dataToCoord(y), C = new kt({
          x: T,
          y: n.labelOffset + n.labelDirection * s,
          rotation: f.rotation,
          silent: v,
          z2: 10 + (p.level || 0),
          style: jt(S, {
            text: m,
            align: S.getShallow("align", !0) || f.textAlign,
            verticalAlign: S.getShallow("verticalAlign", !0) || S.getShallow("baseline", !0) || f.textVerticalAlign,
            fill: rt(w) ? w(
              // (1) In category axis with data zoom, tick is not the original
              // index of axis.data. So tick should not be exposed to user
              // in category axis.
              // (2) Compatible with previous version, which always use formatted label as
              // input. But in interval scale the formatted label is like '223,445', which
              // maked user repalce ','. So we modify it to return original val but remain
              // it as 'string' to avoid error in replacing.
              a.type === "category" ? _ : a.type === "value" ? y + "" : y,
              g
            ) : w
          })
        });
        if (C.anid = "label_" + y, d) {
          var I = er.makeAxisEventDataBase(t);
          I.targetType = "axisLabel", I.value = _, I.tickIndex = g, a.type === "category" && (I.dataIndex = y), gt(C).eventData = I;
        }
        e.add(C), C.updateTransform(), c.push(C), r.add(C), C.decomposeTransform();
      }), c;
    }
  }
  function VF(r, e) {
    var t = {
      /**
       * key: makeKey(axis.model)
       * value: {
       *      axis,
       *      coordSys,
       *      axisPointerModel,
       *      triggerTooltip,
       *      involveSeries,
       *      snap,
       *      seriesModels,
       *      seriesDataCount
       * }
       */
      axesInfo: {},
      seriesInvolved: !1,
      /**
       * key: makeKey(coordSys.model)
       * value: Object: key makeKey(axis.model), value: axisInfo
       */
      coordSysAxesInfo: {},
      coordSysMap: {}
    };
    return BF(t, r, e), t.seriesInvolved && GF(t, r), t;
  }
  function BF(r, e, t) {
    var n = e.getComponent("tooltip"), a = e.getComponent("axisPointer"), i = a.get("link", !0) || [], o = [];
    M(t.getCoordinateSystems(), function(s) {
      if (!s.axisPointerEnabled)
        return;
      var l = wu(s.model), u = r.coordSysAxesInfo[l] = {};
      r.coordSysMap[l] = s;
      var f = s.model, h = f.getModel("tooltip", n);
      if (M(s.getAxes(), yt(p, !1, null)), s.getTooltipAxes && n && h.get("show")) {
        var c = h.get("trigger") === "axis", v = h.get(["axisPointer", "type"]) === "cross", d = s.getTooltipAxes(h.get(["axisPointer", "axis"]));
        (c || v) && M(d.baseAxes, yt(p, v ? "cross" : !0, c)), v && M(d.otherAxes, yt(p, "cross", !1));
      }
      function p(g, y, m) {
        var _ = m.model.getModel("axisPointer", a), S = _.get("show");
        if (!(!S || S === "auto" && !g && !Ey(_))) {
          y == null && (y = _.get("triggerTooltip")), _ = g ? zF(m, h, a, e, g, y) : _;
          var b = _.get("snap"), w = wu(m.model), T = y || b || m.type === "category", C = r.axesInfo[w] = {
            key: w,
            axis: m,
            coordSys: s,
            axisPointerModel: _,
            triggerTooltip: y,
            involveSeries: T,
            snap: b,
            useHandle: Ey(_),
            seriesModels: [],
            linkGroup: null
          };
          u[w] = C, r.seriesInvolved = r.seriesInvolved || T;
          var I = FF(i, m);
          if (I != null) {
            var L = o[I] || (o[I] = {
              axesInfo: {}
            });
            L.axesInfo[w] = C, L.mapper = i[I].mapper, C.linkGroup = L;
          }
        }
      }
    });
  }
  function zF(r, e, t, n, a, i) {
    var o = e.getModel("axisPointer"), s = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], l = {};
    M(s, function(c) {
      l[c] = ht(o.get(c));
    }), l.snap = r.type !== "category" && !!i, o.get("type") === "cross" && (l.type = "line");
    var u = l.label || (l.label = {});
    if (u.show == null && (u.show = !1), a === "cross") {
      var f = o.get(["label", "show"]);
      if (u.show = f ?? !0, !i) {
        var h = l.lineStyle = o.get("crossStyle");
        h && ot(u, h.textStyle);
      }
    }
    return r.model.getModel("axisPointer", new Gt(l, t, n));
  }
  function GF(r, e) {
    e.eachSeries(function(t) {
      var n = t.coordinateSystem, a = t.get(["tooltip", "trigger"], !0), i = t.get(["tooltip", "show"], !0);
      !n || a === "none" || a === !1 || a === "item" || i === !1 || t.get(["axisPointer", "show"], !0) === !1 || M(r.coordSysAxesInfo[wu(n.model)], function(o) {
        var s = o.axis;
        n.getAxis(s.dim) === s && (o.seriesModels.push(t), o.seriesDataCount == null && (o.seriesDataCount = 0), o.seriesDataCount += t.getData().count());
      });
    });
  }
  function FF(r, e) {
    for (var t = e.model, n = e.dim, a = 0; a < r.length; a++) {
      var i = r[a] || {};
      if (Ly(i[n + "AxisId"], t.id) || Ly(i[n + "AxisIndex"], t.componentIndex) || Ly(i[n + "AxisName"], t.name))
        return a;
    }
  }
  function Ly(r, e) {
    return r === "all" || U(r) && bt(r, e) >= 0 || r === e;
  }
  function HF(r) {
    var e = Py(r);
    if (e) {
      var t = e.axisPointerModel, n = e.axis.scale, a = t.option, i = t.get("status"), o = t.get("value");
      o != null && (o = n.parse(o));
      var s = Ey(t);
      i == null && (a.status = s ? "show" : "hide");
      var l = n.getExtent().slice();
      l[0] > l[1] && l.reverse(), // Pick a value on axis when initializing.
      (o == null || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), a.value = o, s && (a.status = e.axis.scale.isBlank() ? "hide" : "show");
    }
  }
  function Py(r) {
    var e = (r.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
    return e && e.axesInfo[wu(r)];
  }
  function WF(r) {
    var e = Py(r);
    return e && e.axisPointerModel;
  }
  function Ey(r) {
    return !!r.get(["handle", "show"]);
  }
  function wu(r) {
    return r.type + "||" + r.id;
  }
  var Ry = {}, ro = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        this.axisPointerClass && HF(t), r.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(t, a, !0);
      }, e.prototype.updateAxisPointer = function(t, n, a, i) {
        this._doUpdateAxisPointerClass(t, a, !1);
      }, e.prototype.remove = function(t, n) {
        var a = this._axisPointer;
        a && a.remove(n);
      }, e.prototype.dispose = function(t, n) {
        this._disposeAxisPointer(n), r.prototype.dispose.apply(this, arguments);
      }, e.prototype._doUpdateAxisPointerClass = function(t, n, a) {
        var i = e.getAxisPointerClass(this.axisPointerClass);
        if (i) {
          var o = WF(t);
          o ? (this._axisPointer || (this._axisPointer = new i())).render(t, o, n, a) : this._disposeAxisPointer(n);
        }
      }, e.prototype._disposeAxisPointer = function(t) {
        this._axisPointer && this._axisPointer.dispose(t), this._axisPointer = null;
      }, e.registerAxisPointerClass = function(t, n) {
        if (Ry[t])
          throw new Error("axisPointer " + t + " exists");
        Ry[t] = n;
      }, e.getAxisPointerClass = function(t) {
        return t && Ry[t];
      }, e.type = "axis", e;
    }(Jt)
  ), ky = Nt();
  function DA(r, e, t, n) {
    var a = t.axis;
    if (!a.scale.isBlank()) {
      var i = t.getModel("splitArea"), o = i.getModel("areaStyle"), s = o.get("color"), l = n.coordinateSystem.getRect(), u = a.getTicksCoords({
        tickModel: i,
        clamp: !0
      });
      if (u.length) {
        var f = s.length, h = ky(r).splitAreaColors, c = nt(), v = 0;
        if (h)
          for (var d = 0; d < u.length; d++) {
            var p = h.get(u[d].tickValue);
            if (p != null) {
              v = (p + (f - 1) * d) % f;
              break;
            }
          }
        var g = a.toGlobalCoord(u[0].coord), y = o.getAreaStyle();
        s = U(s) ? s : [s];
        for (var d = 1; d < u.length; d++) {
          var m = a.toGlobalCoord(u[d].coord), _ = void 0, S = void 0, b = void 0, w = void 0;
          a.isHorizontal() ? (_ = g, S = l.y, b = m - _, w = l.height, g = _ + b) : (_ = l.x, S = g, b = l.width, w = m - S, g = S + w);
          var T = u[d - 1].tickValue;
          T != null && c.set(T, v), e.add(new Rt({
            anid: T != null ? "area_" + T : null,
            shape: {
              x: _,
              y: S,
              width: b,
              height: w
            },
            style: ot({
              fill: s[v]
            }, y),
            autoBatch: !0,
            silent: !0
          })), v = (v + 1) % f;
        }
        ky(r).splitAreaColors = c;
      }
    }
  }
  function MA(r) {
    ky(r).splitAreaColors = null;
  }
  var UF = ["axisLine", "axisTickLabel", "axisName"], YF = ["splitArea", "splitLine", "minorSplitLine"], IA = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.axisPointerClass = "CartesianAxisPointer", t;
      }
      return e.prototype.render = function(t, n, a, i) {
        this.group.removeAll();
        var o = this._axisGroup;
        if (this._axisGroup = new ct(), this.group.add(this._axisGroup), !!t.get("show")) {
          var s = t.getCoordSysModel(), l = Dy(s, t), u = new er(t, H({
            handleAutoShown: function(h) {
              for (var c = s.coordinateSystem.getCartesians(), v = 0; v < c.length; v++)
                if (Ug(c[v].getOtherAxis(t.axis).scale))
                  return !0;
              return !1;
            }
          }, l));
          M(UF, u.add, u), this._axisGroup.add(u.getGroup()), M(YF, function(h) {
            t.get([h, "show"]) && $F[h](this, this._axisGroup, t, s);
          }, this);
          var f = i && i.type === "changeAxisOrder" && i.isInitSort;
          f || Rl(o, this._axisGroup, t), r.prototype.render.call(this, t, n, a, i);
        }
      }, e.prototype.remove = function() {
        MA(this);
      }, e.type = "cartesianAxis", e;
    }(ro)
  ), $F = {
    splitLine: function(r, e, t, n) {
      var a = t.axis;
      if (!a.scale.isBlank()) {
        var i = t.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
        s = U(s) ? s : [s];
        for (var l = n.coordinateSystem.getRect(), u = a.isHorizontal(), f = 0, h = a.getTicksCoords({
          tickModel: i
        }), c = [], v = [], d = o.getLineStyle(), p = 0; p < h.length; p++) {
          var g = a.toGlobalCoord(h[p].coord);
          u ? (c[0] = g, c[1] = l.y, v[0] = g, v[1] = l.y + l.height) : (c[0] = l.x, c[1] = g, v[0] = l.x + l.width, v[1] = g);
          var y = f++ % s.length, m = h[p].tickValue, _ = new Se({
            anid: m != null ? "line_" + h[p].tickValue : null,
            autoBatch: !0,
            shape: {
              x1: c[0],
              y1: c[1],
              x2: v[0],
              y2: v[1]
            },
            style: ot({
              stroke: s[y]
            }, d),
            silent: !0
          });
          Yo(_.shape, d.lineWidth), e.add(_);
        }
      }
    },
    minorSplitLine: function(r, e, t, n) {
      var a = t.axis, i = t.getModel("minorSplitLine"), o = i.getModel("lineStyle"), s = n.coordinateSystem.getRect(), l = a.isHorizontal(), u = a.getMinorTicksCoords();
      if (u.length)
        for (var f = [], h = [], c = o.getLineStyle(), v = 0; v < u.length; v++)
          for (var d = 0; d < u[v].length; d++) {
            var p = a.toGlobalCoord(u[v][d].coord);
            l ? (f[0] = p, f[1] = s.y, h[0] = p, h[1] = s.y + s.height) : (f[0] = s.x, f[1] = p, h[0] = s.x + s.width, h[1] = p);
            var g = new Se({
              anid: "minor_line_" + u[v][d].tickValue,
              autoBatch: !0,
              shape: {
                x1: f[0],
                y1: f[1],
                x2: h[0],
                y2: h[1]
              },
              style: c,
              silent: !0
            });
            Yo(g.shape, c.lineWidth), e.add(g);
          }
    },
    splitArea: function(r, e, t, n) {
      DA(r, e, t, n);
    }
  }, LA = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "xAxis", e;
    }(IA)
  ), XF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = LA.type, t;
      }
      return e.type = "yAxis", e;
    }(IA)
  ), ZF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "grid", t;
      }
      return e.prototype.render = function(t, n) {
        this.group.removeAll(), t.get("show") && this.group.add(new Rt({
          shape: t.coordinateSystem.getRect(),
          style: ot({
            fill: t.get("backgroundColor")
          }, t.getItemStyle()),
          silent: !0,
          z2: -1
        }));
      }, e.type = "grid", e;
    }(Jt)
  ), PA = {
    // gridIndex: 0,
    // gridId: '',
    offset: 0
  };
  function EA(r) {
    r.registerComponentView(ZF), r.registerComponentModel(wF), r.registerCoordinateSystem("cartesian2d", LF), ms(r, "x", Ty, PA), ms(r, "y", Ty, PA), r.registerComponentView(LA), r.registerComponentView(XF), r.registerPreprocessor(function(e) {
      e.xAxis && e.yAxis && !e.grid && (e.grid = {});
    });
  }
  function qF(r) {
    At(EA), r.registerSeriesModel(yF), r.registerChartView(xF), r.registerLayout(mu("scatter"));
  }
  function KF(r) {
    r.eachSeriesByType("radar", function(e) {
      var t = e.getData(), n = [], a = e.coordinateSystem;
      if (a) {
        var i = a.getIndicatorAxes();
        M(i, function(o, s) {
          t.each(t.mapDimension(i[s].dim), function(l, u) {
            n[u] = n[u] || [];
            var f = a.dataToPoint(l, s);
            n[u][s] = RA(f) ? f : kA(a);
          });
        }), t.each(function(o) {
          var s = z_(n[o], function(l) {
            return RA(l);
          }) || kA(a);
          n[o].push(s.slice()), t.setItemLayout(o, n[o]);
        });
      }
    });
  }
  function RA(r) {
    return !isNaN(r[0]) && !isNaN(r[1]);
  }
  function kA(r) {
    return [r.cx, r.cy];
  }
  function jF(r) {
    var e = r.polar;
    if (e) {
      U(e) || (e = [e]);
      var t = [];
      M(e, function(n, a) {
        n.indicator ? (n.type && !n.shape && (n.shape = n.type), r.radar = r.radar || [], U(r.radar) || (r.radar = [r.radar]), r.radar.push(n)) : t.push(n);
      }), r.polar = t;
    }
    M(r.series, function(n) {
      n && n.type === "radar" && n.polarIndex && (n.radarIndex = n.polarIndex);
    });
  }
  var JF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.coordinateSystem, o = this.group, s = t.getData(), l = this._data;
        function u(c, v) {
          var d = c.getItemVisual(v, "symbol") || "circle";
          if (d !== "none") {
            var p = Ql(c.getItemVisual(v, "symbolSize")), g = ve(d, -1, -1, 2, 2), y = c.getItemVisual(v, "symbolRotate") || 0;
            return g.attr({
              style: {
                strokeNoScale: !0
              },
              z2: 100,
              scaleX: p[0] / 2,
              scaleY: p[1] / 2,
              rotation: y * Math.PI / 180 || 0
            }), g;
          }
        }
        function f(c, v, d, p, g, y) {
          d.removeAll();
          for (var m = 0; m < v.length - 1; m++) {
            var _ = u(p, g);
            _ && (_.__dimIdx = m, c[m] ? (_.setPosition(c[m]), Ol[y ? "initProps" : "updateProps"](_, {
              x: v[m][0],
              y: v[m][1]
            }, t, g)) : _.setPosition(v[m]), d.add(_));
          }
        }
        function h(c) {
          return Y(c, function(v) {
            return [i.cx, i.cy];
          });
        }
        s.diff(l).add(function(c) {
          var v = s.getItemLayout(c);
          if (v) {
            var d = new ze(), p = new Ge(), g = {
              shape: {
                points: v
              }
            };
            d.shape.points = h(v), p.shape.points = h(v), te(d, g, t, c), te(p, g, t, c);
            var y = new ct(), m = new ct();
            y.add(p), y.add(d), y.add(m), f(p.shape.points, v, m, s, c, !0), s.setItemGraphicEl(c, y);
          }
        }).update(function(c, v) {
          var d = l.getItemGraphicEl(v), p = d.childAt(0), g = d.childAt(1), y = d.childAt(2), m = {
            shape: {
              points: s.getItemLayout(c)
            }
          };
          m.shape.points && (f(p.shape.points, m.shape.points, y, s, c, !1), an(g), an(p), Vt(p, m, t), Vt(g, m, t), s.setItemGraphicEl(c, d));
        }).remove(function(c) {
          o.remove(l.getItemGraphicEl(c));
        }).execute(), s.eachItemGraphicEl(function(c, v) {
          var d = s.getItemModel(v), p = c.childAt(0), g = c.childAt(1), y = c.childAt(2), m = s.getItemVisual(v, "style"), _ = m.fill;
          o.add(c), p.useStyle(ot(d.getModel("lineStyle").getLineStyle(), {
            fill: "none",
            stroke: _
          })), Re(p, d, "lineStyle"), Re(g, d, "areaStyle");
          var S = d.getModel("areaStyle"), b = S.isEmpty() && S.parentModel.isEmpty();
          g.ignore = b, M(["emphasis", "select", "blur"], function(C) {
            var I = d.getModel([C, "areaStyle"]), L = I.isEmpty() && I.parentModel.isEmpty();
            g.ensureState(C).ignore = L && b;
          }), g.useStyle(ot(S.getAreaStyle(), {
            fill: _,
            opacity: 0.7,
            decal: m.decal
          }));
          var w = d.getModel("emphasis"), T = w.getModel("itemStyle").getItemStyle();
          y.eachChild(function(C) {
            if (C instanceof Te) {
              var I = C.style;
              C.useStyle(H({
                // TODO other properties like x, y ?
                image: I.image,
                x: I.x,
                y: I.y,
                width: I.width,
                height: I.height
              }, m));
            } else
              C.useStyle(m), C.setColor(_), C.style.strokeNoScale = !0;
            var L = C.ensureState("emphasis");
            L.style = ht(T);
            var P = s.getStore().get(s.getDimensionIndex(C.__dimIdx), v);
            (P == null || isNaN(P)) && (P = ""), ke(C, Ce(d), {
              labelFetcher: s.hostModel,
              labelDataIndex: v,
              labelDimIndex: C.__dimIdx,
              defaultText: P,
              inheritColor: _,
              defaultOpacity: m.opacity
            });
          }), oe(c, w.get("focus"), w.get("blurScope"), w.get("disabled"));
        }), this._data = s;
      }, e.prototype.remove = function() {
        this.group.removeAll(), this._data = null;
      }, e.type = "radar", e;
    }($t)
  ), QF = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t;
      }
      return e.prototype.init = function(t) {
        r.prototype.init.apply(this, arguments), this.legendVisualProvider = new xu(J(this.getData, this), J(this.getRawData, this));
      }, e.prototype.getInitialData = function(t, n) {
        return ys(this, {
          generateCoord: "indicator_",
          generateCoordCount: 1 / 0
        });
      }, e.prototype.formatTooltip = function(t, n, a) {
        var i = this.getData(), o = this.coordinateSystem, s = o.getIndicatorAxes(), l = this.getData().getName(t), u = l === "" ? this.name : l, f = Kw(this, t);
        return Ae("section", {
          header: u,
          sortBlocks: !0,
          blocks: Y(s, function(h) {
            var c = i.get(i.mapDimension(h.dim), t);
            return Ae("nameValue", {
              markerType: "subItem",
              markerColor: f,
              name: h.name,
              value: c,
              sortParam: c
            });
          })
        });
      }, e.prototype.getTooltipPosition = function(t) {
        if (t != null) {
          for (var n = this.getData(), a = this.coordinateSystem, i = n.getValues(Y(a.dimensions, function(u) {
            return n.mapDimension(u);
          }), t), o = 0, s = i.length; o < s; o++)
            if (!isNaN(i[o])) {
              var l = a.getIndicatorAxes();
              return a.coordToPoint(l[o].dataToCoord(i[o]), o);
            }
        }
      }, e.type = "series.radar", e.dependencies = ["radar"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        colorBy: "data",
        coordinateSystem: "radar",
        legendHoverLink: !0,
        radarIndex: 0,
        lineStyle: {
          width: 2,
          type: "solid",
          join: "round"
        },
        label: {
          position: "top"
        },
        // areaStyle: {
        // },
        // itemStyle: {}
        symbolSize: 8
        // symbolRotate: null
      }, e;
    }(Zt)
  ), bu = pA.value;
  function _c(r, e) {
    return ot({
      show: e
    }, r);
  }
  var t3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.optionUpdated = function() {
        var t = this.get("boundaryGap"), n = this.get("splitNumber"), a = this.get("scale"), i = this.get("axisLine"), o = this.get("axisTick"), s = this.get("axisLabel"), l = this.get("axisName"), u = this.get(["axisName", "show"]), f = this.get(["axisName", "formatter"]), h = this.get("axisNameGap"), c = this.get("triggerEvent"), v = Y(this.get("indicator") || [], function(d) {
          d.max != null && d.max > 0 && !d.min ? d.min = 0 : d.min != null && d.min < 0 && !d.max && (d.max = 0);
          var p = l;
          d.color != null && (p = ot({
            color: d.color
          }, l));
          var g = mt(ht(d), {
            boundaryGap: t,
            splitNumber: n,
            scale: a,
            axisLine: i,
            axisTick: o,
            // axisType: axisType,
            axisLabel: s,
            // Compatible with 2 and use text
            name: d.text,
            showName: u,
            nameLocation: "end",
            nameGap: h,
            // min: 0,
            nameTextStyle: p,
            triggerEvent: c
          }, !1);
          if (j(f)) {
            var y = g.name;
            g.name = f.replace("{value}", y ?? "");
          } else
            rt(f) && (g.name = f(g.name, g));
          var m = new Gt(g, null, this.ecModel);
          return le(m, vs.prototype), m.mainType = "radar", m.componentIndex = this.componentIndex, m;
        }, this);
        this._indicatorModels = v;
      }, e.prototype.getIndicatorModels = function() {
        return this._indicatorModels;
      }, e.type = "radar", e.defaultOption = {
        // zlevel: 0,
        z: 0,
        center: ["50%", "50%"],
        radius: "75%",
        startAngle: 90,
        axisName: {
          show: !0
          // formatter: null
          // textStyle: {}
        },
        boundaryGap: [0, 0],
        splitNumber: 5,
        axisNameGap: 15,
        scale: !1,
        // Polygon or circle
        shape: "polygon",
        axisLine: mt({
          lineStyle: {
            color: "#bbb"
          }
        }, bu.axisLine),
        axisLabel: _c(bu.axisLabel, !1),
        axisTick: _c(bu.axisTick, !1),
        // axisType: 'value',
        splitLine: _c(bu.splitLine, !0),
        splitArea: _c(bu.splitArea, !0),
        // {text, min, max}
        indicator: []
      }, e;
    }(Ct)
  ), e3 = ["axisLine", "axisTickLabel", "axisName"], r3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = this.group;
        i.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t);
      }, e.prototype._buildAxes = function(t) {
        var n = t.coordinateSystem, a = n.getIndicatorAxes(), i = Y(a, function(o) {
          var s = o.model.get("showName") ? o.name : "", l = new er(o.model, {
            axisName: s,
            position: [n.cx, n.cy],
            rotation: o.angle,
            labelDirection: -1,
            tickDirection: -1,
            nameDirection: 1
          });
          return l;
        });
        M(i, function(o) {
          M(e3, o.add, o), this.group.add(o.getGroup());
        }, this);
      }, e.prototype._buildSplitLineAndArea = function(t) {
        var n = t.coordinateSystem, a = n.getIndicatorAxes();
        if (!a.length)
          return;
        var i = t.get("shape"), o = t.getModel("splitLine"), s = t.getModel("splitArea"), l = o.getModel("lineStyle"), u = s.getModel("areaStyle"), f = o.get("show"), h = s.get("show"), c = l.get("color"), v = u.get("color"), d = U(c) ? c : [c], p = U(v) ? v : [v], g = [], y = [];
        function m(O, N, F) {
          var G = F % N.length;
          return O[G] = O[G] || [], G;
        }
        if (i === "circle")
          for (var _ = a[0].getTicksCoords(), S = n.cx, b = n.cy, w = 0; w < _.length; w++) {
            if (f) {
              var T = m(g, d, w);
              g[T].push(new Nr({
                shape: {
                  cx: S,
                  cy: b,
                  r: _[w].coord
                }
              }));
            }
            if (h && w < _.length - 1) {
              var T = m(y, p, w);
              y[T].push(new Go({
                shape: {
                  cx: S,
                  cy: b,
                  r0: _[w].coord,
                  r: _[w + 1].coord
                }
              }));
            }
          }
        else
          for (var C, I = Y(a, function(O, N) {
            var F = O.getTicksCoords();
            return C = C == null ? F.length - 1 : Math.min(F.length - 1, C), Y(F, function(G) {
              return n.coordToPoint(G.coord, N);
            });
          }), L = [], w = 0; w <= C; w++) {
            for (var P = [], E = 0; E < a.length; E++)
              P.push(I[E][w]);
            if (P[0] ? P.push(P[0].slice()) : console.error("Can't draw value axis " + w), f) {
              var T = m(g, d, w);
              g[T].push(new Ge({
                shape: {
                  points: P
                }
              }));
            }
            if (h && L) {
              var T = m(y, p, w - 1);
              y[T].push(new ze({
                shape: {
                  points: P.concat(L)
                }
              }));
            }
            L = P.slice().reverse();
          }
        var R = l.getLineStyle(), k = u.getAreaStyle();
        M(y, function(O, N) {
          this.group.add(_r(O, {
            style: ot({
              stroke: "none",
              fill: p[N % p.length]
            }, k),
            silent: !0
          }));
        }, this), M(g, function(O, N) {
          this.group.add(_r(O, {
            style: ot({
              fill: "none",
              stroke: d[N % d.length]
            }, R),
            silent: !0
          }));
        }, this);
      }, e.type = "radar", e;
    }(Jt)
  ), n3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this, t, n, a) || this;
        return i.type = "value", i.angle = 0, i.name = "", i;
      }
      return e;
    }(Ur)
  ), a3 = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.dimensions = [], this._model = e, this._indicatorAxes = Y(e.getIndicatorModels(), function(a, i) {
          var o = "indicator_" + i, s = new n3(
            o,
            new na()
            // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()
          );
          return s.name = a.get("name"), s.model = a, a.axis = s, this.dimensions.push(o), s;
        }, this), this.resize(e, n);
      }
      return r.prototype.getIndicatorAxes = function() {
        return this._indicatorAxes;
      }, r.prototype.dataToPoint = function(e, t) {
        var n = this._indicatorAxes[t];
        return this.coordToPoint(n.dataToCoord(e), t);
      }, r.prototype.coordToPoint = function(e, t) {
        var n = this._indicatorAxes[t], a = n.angle, i = this.cx + e * Math.cos(a), o = this.cy - e * Math.sin(a);
        return [i, o];
      }, r.prototype.pointToData = function(e) {
        var t = e[0] - this.cx, n = e[1] - this.cy, a = Math.sqrt(t * t + n * n);
        t /= a, n /= a;
        for (var i = Math.atan2(-n, t), o = 1 / 0, s, l = -1, u = 0; u < this._indicatorAxes.length; u++) {
          var f = this._indicatorAxes[u], h = Math.abs(i - f.angle);
          h < o && (s = f, l = u, o = h);
        }
        return [l, +(s && s.coordToData(a))];
      }, r.prototype.resize = function(e, t) {
        var n = e.get("center"), a = t.getWidth(), i = t.getHeight(), o = Math.min(a, i) / 2;
        this.cx = Z(n[0], a), this.cy = Z(n[1], i), this.startAngle = e.get("startAngle") * Math.PI / 180;
        var s = e.get("radius");
        (j(s) || Ot(s)) && (s = [0, s]), this.r0 = Z(s[0], o), this.r = Z(s[1], o), M(this._indicatorAxes, function(l, u) {
          l.setExtent(this.r0, this.r);
          var f = this.startAngle + u * Math.PI * 2 / this._indicatorAxes.length;
          f = Math.atan2(Math.sin(f), Math.cos(f)), l.angle = f;
        }, this);
      }, r.prototype.update = function(e, t) {
        var n = this._indicatorAxes, a = this._model;
        M(n, function(s) {
          s.scale.setExtent(1 / 0, -1 / 0);
        }), e.eachSeriesByType("radar", function(s, l) {
          if (!(s.get("coordinateSystem") !== "radar" || e.getComponent("radar", s.get("radarIndex")) !== a)) {
            var u = s.getData();
            M(n, function(f) {
              f.scale.unionExtentFromData(u, u.mapDimension(f.dim));
            });
          }
        }, this);
        var i = a.get("splitNumber"), o = new na();
        o.setExtent(0, i), o.setInterval(1), M(n, function(s, l) {
          SA(s.scale, s.model, o);
        });
      }, r.prototype.convertToPixel = function(e, t, n) {
        return console.warn("Not implemented."), null;
      }, r.prototype.convertFromPixel = function(e, t, n) {
        return console.warn("Not implemented."), null;
      }, r.prototype.containPoint = function(e) {
        return console.warn("Not implemented."), !1;
      }, r.create = function(e, t) {
        var n = [];
        return e.eachComponent("radar", function(a) {
          var i = new r(a, e, t);
          n.push(i), a.coordinateSystem = i;
        }), e.eachSeriesByType("radar", function(a) {
          a.get("coordinateSystem") === "radar" && (a.coordinateSystem = n[a.get("radarIndex") || 0]);
        }), n;
      }, r.dimensions = [], r;
    }()
  );
  function i3(r) {
    r.registerCoordinateSystem("radar", a3), r.registerComponentModel(t3), r.registerComponentView(r3), r.registerVisual({
      seriesType: "radar",
      reset: function(e) {
        var t = e.getData();
        t.each(function(n) {
          t.setItemVisual(n, "legendIcon", "roundRect");
        }), t.setVisual("legendIcon", "roundRect");
      }
    });
  }
  function o3(r) {
    At(i3), r.registerChartView(JF), r.registerSeriesModel(QF), r.registerLayout(KF), r.registerProcessor(Su("radar")), r.registerPreprocessor(jF);
  }
  var OA = "\0_ec_interaction_mutex";
  function s3(r, e, t) {
    var n = Oy(r);
    n[e] = t;
  }
  function l3(r, e, t) {
    var n = Oy(r), a = n[e];
    a === t && (n[e] = null);
  }
  function NA(r, e) {
    return !!Oy(r)[e];
  }
  function Oy(r) {
    return r[OA] || (r[OA] = {});
  }
  ln({
    type: "takeGlobalCursor",
    event: "globalCursorTaken",
    update: "update"
  }, ue);
  var Tu = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this) || this;
        n._zr = t;
        var a = J(n._mousedownHandler, n), i = J(n._mousemoveHandler, n), o = J(n._mouseupHandler, n), s = J(n._mousewheelHandler, n), l = J(n._pinchHandler, n);
        return n.enable = function(u, f) {
          this.disable(), this._opt = ot(ht(f) || {}, {
            zoomOnMouseWheel: !0,
            moveOnMouseMove: !0,
            // By default, wheel do not trigger move.
            moveOnMouseWheel: !1,
            preventDefaultMouseMove: !0
          }), u == null && (u = !0), (u === !0 || u === "move" || u === "pan") && (t.on("mousedown", a), t.on("mousemove", i), t.on("mouseup", o)), (u === !0 || u === "scale" || u === "zoom") && (t.on("mousewheel", s), t.on("pinch", l));
        }, n.disable = function() {
          t.off("mousedown", a), t.off("mousemove", i), t.off("mouseup", o), t.off("mousewheel", s), t.off("pinch", l);
        }, n;
      }
      return e.prototype.isDragging = function() {
        return this._dragging;
      }, e.prototype.isPinching = function() {
        return this._pinching;
      }, e.prototype.setPointerChecker = function(t) {
        this.pointerChecker = t;
      }, e.prototype.dispose = function() {
        this.disable();
      }, e.prototype._mousedownHandler = function(t) {
        if (!K_(t)) {
          for (var n = t.target; n; ) {
            if (n.draggable)
              return;
            n = n.__hostTarget || n.parent;
          }
          var a = t.offsetX, i = t.offsetY;
          this.pointerChecker && this.pointerChecker(t, a, i) && (this._x = a, this._y = i, this._dragging = !0);
        }
      }, e.prototype._mousemoveHandler = function(t) {
        if (!(!this._dragging || !Sc("moveOnMouseMove", t, this._opt) || t.gestureEvent === "pinch" || NA(this._zr, "globalPan"))) {
          var n = t.offsetX, a = t.offsetY, i = this._x, o = this._y, s = n - i, l = a - o;
          this._x = n, this._y = a, this._opt.preventDefaultMouseMove && Yn(t.event), VA(this, "pan", "moveOnMouseMove", t, {
            dx: s,
            dy: l,
            oldX: i,
            oldY: o,
            newX: n,
            newY: a,
            isAvailableBehavior: null
          });
        }
      }, e.prototype._mouseupHandler = function(t) {
        K_(t) || (this._dragging = !1);
      }, e.prototype._mousewheelHandler = function(t) {
        var n = Sc("zoomOnMouseWheel", t, this._opt), a = Sc("moveOnMouseWheel", t, this._opt), i = t.wheelDelta, o = Math.abs(i), s = t.offsetX, l = t.offsetY;
        if (!(i === 0 || !n && !a)) {
          if (n) {
            var u = o > 3 ? 1.4 : o > 1 ? 1.2 : 1.1, f = i > 0 ? u : 1 / u;
            Ny(this, "zoom", "zoomOnMouseWheel", t, {
              scale: f,
              originX: s,
              originY: l,
              isAvailableBehavior: null
            });
          }
          if (a) {
            var h = Math.abs(i), c = (i > 0 ? 1 : -1) * (h > 3 ? 0.4 : h > 1 ? 0.15 : 0.05);
            Ny(this, "scrollMove", "moveOnMouseWheel", t, {
              scrollDelta: c,
              originX: s,
              originY: l,
              isAvailableBehavior: null
            });
          }
        }
      }, e.prototype._pinchHandler = function(t) {
        if (!NA(this._zr, "globalPan")) {
          var n = t.pinchScale > 1 ? 1.1 : 1 / 1.1;
          Ny(this, "zoom", null, t, {
            scale: n,
            originX: t.pinchX,
            originY: t.pinchY,
            isAvailableBehavior: null
          });
        }
      }, e;
    }(Ir)
  );
  function Ny(r, e, t, n, a) {
    r.pointerChecker && r.pointerChecker(n, a.originX, a.originY) && (Yn(n.event), VA(r, e, t, n, a));
  }
  function VA(r, e, t, n, a) {
    a.isAvailableBehavior = J(Sc, null, t, n), r.trigger(e, a);
  }
  function Sc(r, e, t) {
    var n = t[r];
    return !r || n && (!j(n) || e.event[n + "Key"]);
  }
  function Vy(r, e, t) {
    var n = r.target;
    n.x += e, n.y += t, n.dirty();
  }
  function By(r, e, t, n) {
    var a = r.target, i = r.zoomLimit, o = r.zoom = r.zoom || 1;
    if (o *= e, i) {
      var s = i.min || 0, l = i.max || 1 / 0;
      o = Math.max(Math.min(l, o), s);
    }
    var u = o / r.zoom;
    r.zoom = o, a.x -= (t - a.x) * (u - 1), a.y -= (n - a.y) * (u - 1), a.scaleX *= u, a.scaleY *= u, a.dirty();
  }
  var u3 = {
    axisPointer: 1,
    tooltip: 1,
    brush: 1
  };
  function xc(r, e, t) {
    var n = e.getComponentByElement(r.topTarget), a = n && n.coordinateSystem;
    return n && n !== t && !u3.hasOwnProperty(n.mainType) && a && a.model !== t;
  }
  function BA(r) {
    if (j(r)) {
      var e = new DOMParser();
      r = e.parseFromString(r, "text/xml");
    }
    var t = r;
    for (t.nodeType === 9 && (t = t.firstChild); t.nodeName.toLowerCase() !== "svg" || t.nodeType !== 1; )
      t = t.nextSibling;
    return t;
  }
  var zy, wc = {
    fill: "fill",
    stroke: "stroke",
    "stroke-width": "lineWidth",
    opacity: "opacity",
    "fill-opacity": "fillOpacity",
    "stroke-opacity": "strokeOpacity",
    "stroke-dasharray": "lineDash",
    "stroke-dashoffset": "lineDashOffset",
    "stroke-linecap": "lineCap",
    "stroke-linejoin": "lineJoin",
    "stroke-miterlimit": "miterLimit",
    "font-family": "fontFamily",
    "font-size": "fontSize",
    "font-style": "fontStyle",
    "font-weight": "fontWeight",
    "text-anchor": "textAlign",
    visibility: "visibility",
    display: "display"
  }, zA = Pt(wc), bc = {
    "alignment-baseline": "textBaseline",
    "stop-color": "stopColor"
  }, GA = Pt(bc), f3 = function() {
    function r() {
      this._defs = {}, this._root = null;
    }
    return r.prototype.parse = function(e, t) {
      t = t || {};
      var n = BA(e);
      if (!n)
        throw new Error("Illegal svg");
      this._defsUsePending = [];
      var a = new ct();
      this._root = a;
      var i = [], o = n.getAttribute("viewBox") || "", s = parseFloat(n.getAttribute("width") || t.width), l = parseFloat(n.getAttribute("height") || t.height);
      isNaN(s) && (s = null), isNaN(l) && (l = null), wr(n, a, null, !0, !1);
      for (var u = n.firstChild; u; )
        this._parseNode(u, a, i, null, !1, !1), u = u.nextSibling;
      v3(this._defs, this._defsUsePending), this._defsUsePending = [];
      var f, h;
      if (o) {
        var c = Tc(o);
        c.length >= 4 && (f = {
          x: parseFloat(c[0] || 0),
          y: parseFloat(c[1] || 0),
          width: parseFloat(c[2]),
          height: parseFloat(c[3])
        });
      }
      if (f && s != null && l != null && (h = ZA(f, { x: 0, y: 0, width: s, height: l }), !t.ignoreViewBox)) {
        var v = a;
        a = new ct(), a.add(v), v.scaleX = v.scaleY = h.scale, v.x = h.x, v.y = h.y;
      }
      return !t.ignoreRootClip && s != null && l != null && a.setClipPath(new Rt({
        shape: { x: 0, y: 0, width: s, height: l }
      })), {
        root: a,
        width: s,
        height: l,
        viewBoxRect: f,
        viewBoxTransform: h,
        named: i
      };
    }, r.prototype._parseNode = function(e, t, n, a, i, o) {
      var s = e.nodeName.toLowerCase(), l, u = a;
      if (s === "defs" && (i = !0), s === "text" && (o = !0), s === "defs" || s === "switch")
        l = t;
      else {
        if (!i) {
          var f = zy[s];
          if (f && Q(zy, s)) {
            l = f.call(this, e, t);
            var h = e.getAttribute("name");
            if (h) {
              var c = {
                name: h,
                namedFrom: null,
                svgNodeTagLower: s,
                el: l
              };
              n.push(c), s === "g" && (u = c);
            } else
              a && n.push({
                name: a.name,
                namedFrom: a,
                svgNodeTagLower: s,
                el: l
              });
            t.add(l);
          }
        }
        var v = FA[s];
        if (v && Q(FA, s)) {
          var d = v.call(this, e), p = e.getAttribute("id");
          p && (this._defs[p] = d);
        }
      }
      if (l && l.isGroup)
        for (var g = e.firstChild; g; )
          g.nodeType === 1 ? this._parseNode(g, l, n, u, i, o) : g.nodeType === 3 && o && this._parseText(g, l), g = g.nextSibling;
    }, r.prototype._parseText = function(e, t) {
      var n = new ko({
        style: {
          text: e.textContent
        },
        silent: !0,
        x: this._textX || 0,
        y: this._textY || 0
      });
      $r(t, n), wr(e, n, this._defsUsePending, !1, !1), h3(n, t);
      var a = n.style, i = a.fontSize;
      i && i < 9 && (a.fontSize = 9, n.scaleX *= i / 9, n.scaleY *= i / 9);
      var o = (a.fontSize || a.fontFamily) && [
        a.fontStyle,
        a.fontWeight,
        (a.fontSize || 12) + "px",
        a.fontFamily || "sans-serif"
      ].join(" ");
      a.font = o;
      var s = n.getBoundingRect();
      return this._textX += s.width, t.add(n), n;
    }, r.internalField = function() {
      zy = {
        g: function(e, t) {
          var n = new ct();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n;
        },
        rect: function(e, t) {
          var n = new Rt();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n.setShape({
            x: parseFloat(e.getAttribute("x") || "0"),
            y: parseFloat(e.getAttribute("y") || "0"),
            width: parseFloat(e.getAttribute("width") || "0"),
            height: parseFloat(e.getAttribute("height") || "0")
          }), n.silent = !0, n;
        },
        circle: function(e, t) {
          var n = new Nr();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n.setShape({
            cx: parseFloat(e.getAttribute("cx") || "0"),
            cy: parseFloat(e.getAttribute("cy") || "0"),
            r: parseFloat(e.getAttribute("r") || "0")
          }), n.silent = !0, n;
        },
        line: function(e, t) {
          var n = new Se();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n.setShape({
            x1: parseFloat(e.getAttribute("x1") || "0"),
            y1: parseFloat(e.getAttribute("y1") || "0"),
            x2: parseFloat(e.getAttribute("x2") || "0"),
            y2: parseFloat(e.getAttribute("y2") || "0")
          }), n.silent = !0, n;
        },
        ellipse: function(e, t) {
          var n = new Dl();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n.setShape({
            cx: parseFloat(e.getAttribute("cx") || "0"),
            cy: parseFloat(e.getAttribute("cy") || "0"),
            rx: parseFloat(e.getAttribute("rx") || "0"),
            ry: parseFloat(e.getAttribute("ry") || "0")
          }), n.silent = !0, n;
        },
        polygon: function(e, t) {
          var n = e.getAttribute("points"), a;
          n && (a = UA(n));
          var i = new ze({
            shape: {
              points: a || []
            },
            silent: !0
          });
          return $r(t, i), wr(e, i, this._defsUsePending, !1, !1), i;
        },
        polyline: function(e, t) {
          var n = e.getAttribute("points"), a;
          n && (a = UA(n));
          var i = new Ge({
            shape: {
              points: a || []
            },
            silent: !0
          });
          return $r(t, i), wr(e, i, this._defsUsePending, !1, !1), i;
        },
        image: function(e, t) {
          var n = new Te();
          return $r(t, n), wr(e, n, this._defsUsePending, !1, !1), n.setStyle({
            image: e.getAttribute("xlink:href") || e.getAttribute("href"),
            x: +e.getAttribute("x"),
            y: +e.getAttribute("y"),
            width: +e.getAttribute("width"),
            height: +e.getAttribute("height")
          }), n.silent = !0, n;
        },
        text: function(e, t) {
          var n = e.getAttribute("x") || "0", a = e.getAttribute("y") || "0", i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0";
          this._textX = parseFloat(n) + parseFloat(i), this._textY = parseFloat(a) + parseFloat(o);
          var s = new ct();
          return $r(t, s), wr(e, s, this._defsUsePending, !1, !0), s;
        },
        tspan: function(e, t) {
          var n = e.getAttribute("x"), a = e.getAttribute("y");
          n != null && (this._textX = parseFloat(n)), a != null && (this._textY = parseFloat(a));
          var i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0", s = new ct();
          return $r(t, s), wr(e, s, this._defsUsePending, !1, !0), this._textX += parseFloat(i), this._textY += parseFloat(o), s;
        },
        path: function(e, t) {
          var n = e.getAttribute("d") || "", a = ux(n);
          return $r(t, a), wr(e, a, this._defsUsePending, !1, !1), a.silent = !0, a;
        }
      };
    }(), r;
  }(), FA = {
    lineargradient: function(r) {
      var e = parseInt(r.getAttribute("x1") || "0", 10), t = parseInt(r.getAttribute("y1") || "0", 10), n = parseInt(r.getAttribute("x2") || "10", 10), a = parseInt(r.getAttribute("y2") || "0", 10), i = new Ho(e, t, n, a);
      return HA(r, i), WA(r, i), i;
    },
    radialgradient: function(r) {
      var e = parseInt(r.getAttribute("cx") || "0", 10), t = parseInt(r.getAttribute("cy") || "0", 10), n = parseInt(r.getAttribute("r") || "0", 10), a = new _p(e, t, n);
      return HA(r, a), WA(r, a), a;
    }
  };
  function HA(r, e) {
    var t = r.getAttribute("gradientUnits");
    t === "userSpaceOnUse" && (e.global = !0);
  }
  function WA(r, e) {
    for (var t = r.firstChild; t; ) {
      if (t.nodeType === 1 && t.nodeName.toLocaleLowerCase() === "stop") {
        var n = t.getAttribute("offset"), a = void 0;
        n && n.indexOf("%") > 0 ? a = parseInt(n, 10) / 100 : n ? a = parseFloat(n) : a = 0;
        var i = {};
        XA(t, i, i);
        var o = i.stopColor || t.getAttribute("stop-color") || "#000000";
        e.colorStops.push({
          offset: a,
          color: o
        });
      }
      t = t.nextSibling;
    }
  }
  function $r(r, e) {
    r && r.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), ot(e.__inheritedStyle, r.__inheritedStyle));
  }
  function UA(r) {
    for (var e = Tc(r), t = [], n = 0; n < e.length; n += 2) {
      var a = parseFloat(e[n]), i = parseFloat(e[n + 1]);
      t.push([a, i]);
    }
    return t;
  }
  function wr(r, e, t, n, a) {
    var i = e, o = i.__inheritedStyle = i.__inheritedStyle || {}, s = {};
    r.nodeType === 1 && (g3(r, e), XA(r, o, s), n || y3(r, o, s)), i.style = i.style || {}, o.fill != null && (i.style.fill = YA(i, "fill", o.fill, t)), o.stroke != null && (i.style.stroke = YA(i, "stroke", o.stroke, t)), M([
      "lineWidth",
      "opacity",
      "fillOpacity",
      "strokeOpacity",
      "miterLimit",
      "fontSize"
    ], function(l) {
      o[l] != null && (i.style[l] = parseFloat(o[l]));
    }), M([
      "lineDashOffset",
      "lineCap",
      "lineJoin",
      "fontWeight",
      "fontFamily",
      "fontStyle",
      "textAlign"
    ], function(l) {
      o[l] != null && (i.style[l] = o[l]);
    }), a && (i.__selfStyle = s), o.lineDash && (i.style.lineDash = Y(Tc(o.lineDash), function(l) {
      return parseFloat(l);
    })), (o.visibility === "hidden" || o.visibility === "collapse") && (i.invisible = !0), o.display === "none" && (i.ignore = !0);
  }
  function h3(r, e) {
    var t = e.__selfStyle;
    if (t) {
      var n = t.textBaseline, a = n;
      !n || n === "auto" || n === "baseline" ? a = "alphabetic" : n === "before-edge" || n === "text-before-edge" ? a = "top" : n === "after-edge" || n === "text-after-edge" ? a = "bottom" : (n === "central" || n === "mathematical") && (a = "middle"), r.style.textBaseline = a;
    }
    var i = e.__inheritedStyle;
    if (i) {
      var o = i.textAlign, s = o;
      o && (o === "middle" && (s = "center"), r.style.textAlign = s);
    }
  }
  var c3 = /^url\(\s*#(.*?)\)/;
  function YA(r, e, t, n) {
    var a = t && t.match(c3);
    if (a) {
      var i = Mr(a[1]);
      n.push([r, e, i]);
      return;
    }
    return t === "none" && (t = null), t;
  }
  function v3(r, e) {
    for (var t = 0; t < e.length; t++) {
      var n = e[t];
      n[0].style[n[1]] = r[n[2]];
    }
  }
  var d3 = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  function Tc(r) {
    return r.match(d3) || [];
  }
  var p3 = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g, Gy = Math.PI / 180;
  function g3(r, e) {
    var t = r.getAttribute("transform");
    if (t) {
      t = t.replace(/,/g, " ");
      var n = [], a = null;
      t.replace(p3, function(h, c, v) {
        return n.push(c, v), "";
      });
      for (var i = n.length - 1; i > 0; i -= 2) {
        var o = n[i], s = n[i - 1], l = Tc(o);
        switch (a = a || dr(), s) {
          case "translate":
            jr(a, a, [parseFloat(l[0]), parseFloat(l[1] || "0")]);
            break;
          case "scale":
            vf(a, a, [parseFloat(l[0]), parseFloat(l[1] || l[0])]);
            break;
          case "rotate":
            ga(a, a, -parseFloat(l[0]) * Gy);
            break;
          case "skewX":
            var u = Math.tan(parseFloat(l[0]) * Gy);
            mn(a, [1, 0, u, 1, 0, 0], a);
            break;
          case "skewY":
            var f = Math.tan(parseFloat(l[0]) * Gy);
            mn(a, [1, f, 0, 1, 0, 0], a);
            break;
          case "matrix":
            a[0] = parseFloat(l[0]), a[1] = parseFloat(l[1]), a[2] = parseFloat(l[2]), a[3] = parseFloat(l[3]), a[4] = parseFloat(l[4]), a[5] = parseFloat(l[5]);
            break;
        }
      }
      e.setLocalTransform(a);
    }
  }
  var $A = /([^\s:;]+)\s*:\s*([^:;]+)/g;
  function XA(r, e, t) {
    var n = r.getAttribute("style");
    if (n) {
      $A.lastIndex = 0;
      for (var a; (a = $A.exec(n)) != null; ) {
        var i = a[1], o = Q(wc, i) ? wc[i] : null;
        o && (e[o] = a[2]);
        var s = Q(bc, i) ? bc[i] : null;
        s && (t[s] = a[2]);
      }
    }
  }
  function y3(r, e, t) {
    for (var n = 0; n < zA.length; n++) {
      var a = zA[n], i = r.getAttribute(a);
      i != null && (e[wc[a]] = i);
    }
    for (var n = 0; n < GA.length; n++) {
      var a = GA[n], i = r.getAttribute(a);
      i != null && (t[bc[a]] = i);
    }
  }
  function ZA(r, e) {
    var t = e.width / r.width, n = e.height / r.height, a = Math.min(t, n);
    return {
      scale: a,
      x: -(r.x + r.width / 2) * a + (e.x + e.width / 2),
      y: -(r.y + r.height / 2) * a + (e.y + e.height / 2)
    };
  }
  function m3(r, e) {
    var t = new f3();
    return t.parse(r, e);
  }
  var _3 = nt([
    "rect",
    "circle",
    "line",
    "ellipse",
    "polygon",
    "polyline",
    "path",
    // <text> <tspan> are also enabled because some SVG might paint text itself,
    // but still need to trigger events or tooltip.
    "text",
    "tspan",
    // <g> is also enabled because this case: if multiple tags share one name
    // and need label displayed, every tags will display the name, which is not
    // expected. So we can put them into a <g name="xxx">. Thereby only one label
    // displayed and located based on the bounding rect of the <g>.
    "g"
  ]), S3 = (
    /** @class */
    function() {
      function r(e, t) {
        this.type = "geoSVG", this._usedGraphicMap = nt(), this._freedGraphics = [], this._mapName = e, this._parsedXML = BA(t);
      }
      return r.prototype.load = function() {
        var e = this._firstGraphic;
        if (!e) {
          e = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(e), this._boundingRect = this._firstGraphic.boundingRect.clone();
          var t = w3(e.named), n = t.regions, a = t.regionsMap;
          this._regions = n, this._regionsMap = a;
        }
        return {
          boundingRect: this._boundingRect,
          regions: this._regions,
          regionsMap: this._regionsMap
        };
      }, r.prototype._buildGraphic = function(e) {
        var t, n;
        try {
          t = e && m3(e, {
            ignoreViewBox: !0,
            ignoreRootClip: !0
          }) || {}, n = t.root, st(n != null);
        } catch (g) {
          throw new Error(`Invalid svg format
` + g.message);
        }
        var a = new ct();
        a.add(n), a.isGeoSVGGraphicRoot = !0;
        var i = t.width, o = t.height, s = t.viewBoxRect, l = this._boundingRect;
        if (!l) {
          var u = void 0, f = void 0, h = void 0, c = void 0;
          if (i != null ? (u = 0, h = i) : s && (u = s.x, h = s.width), o != null ? (f = 0, c = o) : s && (f = s.y, c = s.height), u == null || f == null) {
            var v = n.getBoundingRect();
            u == null && (u = v.x, h = v.width), f == null && (f = v.y, c = v.height);
          }
          l = this._boundingRect = new xt(u, f, h, c);
        }
        if (s) {
          var d = ZA(s, l);
          n.scaleX = n.scaleY = d.scale, n.x = d.x, n.y = d.y;
        }
        a.setClipPath(new Rt({
          shape: l.plain()
        }));
        var p = [];
        return M(t.named, function(g) {
          _3.get(g.svgNodeTagLower) != null && (p.push(g), x3(g.el));
        }), {
          root: a,
          boundingRect: l,
          named: p
        };
      }, r.prototype.useGraphic = function(e) {
        var t = this._usedGraphicMap, n = t.get(e);
        return n || (n = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), t.set(e, n), n);
      }, r.prototype.freeGraphic = function(e) {
        var t = this._usedGraphicMap, n = t.get(e);
        n && (t.removeKey(e), this._freedGraphics.push(n));
      }, r;
    }()
  );
  function x3(r) {
    r.silent = !1, r.isGroup && r.traverse(function(e) {
      e.silent = !1;
    });
  }
  function w3(r) {
    var e = [], t = nt();
    return M(r, function(n) {
      if (n.namedFrom == null) {
        var a = new f5(n.name, n.el);
        e.push(a), t.set(n.name, a);
      }
    }), {
      regions: e,
      regionsMap: t
    };
  }
  for (var Fy = [126, 25], qA = "南海诸岛", no = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]], ao = 0; ao < no.length; ao++)
    for (var _s = 0; _s < no[ao].length; _s++)
      no[ao][_s][0] /= 10.5, no[ao][_s][1] /= -10.5 / 0.75, no[ao][_s][0] += Fy[0], no[ao][_s][1] += Fy[1];
  function b3(r, e) {
    if (r === "china") {
      for (var t = 0; t < e.length; t++)
        if (e[t].name === qA)
          return;
      e.push(new HT(qA, Y(no, function(n) {
        return {
          type: "polygon",
          exterior: n
        };
      }), Fy));
    }
  }
  var T3 = {
    南海诸岛: [32, 80],
    // 全国
    广东: [0, -10],
    香港: [10, 5],
    澳门: [-10, 10],
    // '北京': [-10, 0],
    天津: [5, 5]
  };
  function C3(r, e) {
    if (r === "china") {
      var t = T3[e.name];
      if (t) {
        var n = e.getCenter();
        n[0] += t[0] / 10.5, n[1] += -t[1] / (10.5 / 0.75), e.setCenter(n);
      }
    }
  }
  var A3 = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
  function D3(r, e) {
    r === "china" && e.name === "台湾" && e.geometries.push({
      type: "polygon",
      exterior: A3[0]
    });
  }
  var M3 = "name", I3 = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.type = "geoJSON", this._parsedMap = nt(), this._mapName = e, this._specialAreas = n, this._geoJSON = P3(t);
      }
      return r.prototype.load = function(e, t) {
        t = t || M3;
        var n = this._parsedMap.get(t);
        if (!n) {
          var a = this._parseToRegions(t);
          n = this._parsedMap.set(t, {
            regions: a,
            boundingRect: L3(a)
          });
        }
        var i = nt(), o = [];
        return M(n.regions, function(s) {
          var l = s.name;
          e && Q(e, l) && (s = s.cloneShallow(l = e[l])), o.push(s), i.set(l, s);
        }), {
          regions: o,
          boundingRect: n.boundingRect || new xt(0, 0, 0, 0),
          regionsMap: i
        };
      }, r.prototype._parseToRegions = function(e) {
        var t = this._mapName, n = this._geoJSON, a;
        try {
          a = n ? ey(n, e) : [];
        } catch (i) {
          throw new Error(`Invalid geoJson format
` + i.message);
        }
        return b3(t, a), M(a, function(i) {
          var o = i.name;
          C3(t, i), D3(t, i);
          var s = this._specialAreas && this._specialAreas[o];
          s && i.transformTo(s.left, s.top, s.width, s.height);
        }, this), a;
      }, r.prototype.getMapForUser = function() {
        return {
          // For backward compatibility, use geoJson
          // PENDING: it has been returning them without clone.
          // do we need to avoid outsite modification?
          geoJson: this._geoJSON,
          geoJSON: this._geoJSON,
          specialAreas: this._specialAreas
        };
      }, r;
    }()
  );
  function L3(r) {
    for (var e, t = 0; t < r.length; t++) {
      var n = r[t].getBoundingRect();
      e = e || n.clone(), e.union(n);
    }
    return e;
  }
  function P3(r) {
    return j(r) ? typeof JSON < "u" && JSON.parse ? JSON.parse(r) : new Function("return (" + r + ");")() : r;
  }
  var Cu = nt(), aa = {
    /**
     * Compatible with previous `echarts.registerMap`.
     *
     * @usage
     * ```js
     *
     * echarts.registerMap('USA', geoJson, specialAreas);
     *
     * echarts.registerMap('USA', {
     *     geoJson: geoJson,
     *     specialAreas: {...}
     * });
     * echarts.registerMap('USA', {
     *     geoJSON: geoJson,
     *     specialAreas: {...}
     * });
     *
     * echarts.registerMap('airport', {
     *     svg: svg
     * }
     * ```
     *
     * Note:
     * Do not support that register multiple geoJSON or SVG
     * one map name. Because different geoJSON and SVG have
     * different unit. It's not easy to make sure how those
     * units are mapping/normalize.
     * If intending to use multiple geoJSON or SVG, we can
     * use multiple geo coordinate system.
     */
    registerMap: function(r, e, t) {
      if (e.svg) {
        var n = new S3(r, e.svg);
        Cu.set(r, n);
      } else {
        var a = e.geoJson || e.geoJSON;
        a && !e.features ? t = e.specialAreas : a = e;
        var n = new I3(r, a, t);
        Cu.set(r, n);
      }
    },
    getGeoResource: function(r) {
      return Cu.get(r);
    },
    /**
     * Only for exporting to users.
     * **MUST NOT** used internally.
     */
    getMapForUser: function(r) {
      var e = Cu.get(r);
      return e && e.type === "geoJSON" && e.getMapForUser();
    },
    load: function(r, e, t) {
      var n = Cu.get(r);
      if (!n) {
        console.error("Map " + r + " not exists. The GeoJSON of the map must be provided.");
        return;
      }
      return n.load(e, t);
    }
  }, Hy = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"], E3 = nt(Hy), R3 = nt(Hy.concat(["g"])), k3 = nt(Hy.concat(["g"])), KA = Nt();
  function Cc(r) {
    var e = r.getItemStyle(), t = r.get("areaColor");
    return t != null && (e.fill = t), e;
  }
  function jA(r) {
    var e = r.style;
    e && (e.stroke = e.stroke || e.fill, e.fill = null);
  }
  var JA = (
    /** @class */
    function() {
      function r(e) {
        var t = new ct();
        this.uid = qo("ec_map_draw"), this._controller = new Tu(e.getZr()), this._controllerHost = {
          target: t
        }, this.group = t, t.add(this._regionsGroup = new ct()), t.add(this._svgGroup = new ct());
      }
      return r.prototype.draw = function(e, t, n, a, i) {
        var o = e.mainType === "geo", s = e.getData && e.getData();
        o && t.eachComponent({
          mainType: "series",
          subType: "map"
        }, function(y) {
          !s && y.getHostGeoModel() === e && (s = y.getData());
        });
        var l = e.coordinateSystem, u = this._regionsGroup, f = this.group, h = l.getTransformInfo(), c = h.raw, v = h.roam, d = !u.childAt(0) || i;
        d ? (f.x = v.x, f.y = v.y, f.scaleX = v.scaleX, f.scaleY = v.scaleY, f.dirty()) : Vt(f, v, e);
        var p = s && s.getVisual("visualMeta") && s.getVisual("visualMeta").length > 0, g = {
          api: n,
          geo: l,
          mapOrGeoModel: e,
          data: s,
          isVisualEncodedByVisualMap: p,
          isGeo: o,
          transformInfoRaw: c
        };
        l.resourceType === "geoJSON" ? this._buildGeoJSON(g) : l.resourceType === "geoSVG" && this._buildSVG(g), this._updateController(e, t, n), this._updateMapSelectHandler(e, u, n, a);
      }, r.prototype._buildGeoJSON = function(e) {
        var t = this._regionsGroupByName = nt(), n = nt(), a = this._regionsGroup, i = e.transformInfoRaw, o = e.mapOrGeoModel, s = e.data, l = e.geo.projection, u = l && l.stream;
        function f(v, d) {
          return d && (v = d(v)), v && [v[0] * i.scaleX + i.x, v[1] * i.scaleY + i.y];
        }
        function h(v) {
          for (var d = [], p = !u && l && l.project, g = 0; g < v.length; ++g) {
            var y = f(v[g], p);
            y && d.push(y);
          }
          return d;
        }
        function c(v) {
          return {
            shape: {
              points: h(v)
            }
          };
        }
        a.removeAll(), M(e.geo.regions, function(v) {
          var d = v.name, p = t.get(d), g = n.get(d) || {}, y = g.dataIdx, m = g.regionModel;
          p || (p = t.set(d, new ct()), a.add(p), y = s ? s.indexOfName(d) : null, m = e.isGeo ? o.getRegionModel(d) : s ? s.getItemModel(y) : null, n.set(d, {
            dataIdx: y,
            regionModel: m
          }));
          var _ = [], S = [];
          M(v.geometries, function(T) {
            if (T.type === "polygon") {
              var C = [T.exterior].concat(T.interiors || []);
              u && (C = aD(C, u)), M(C, function(L) {
                _.push(new ze(c(L)));
              });
            } else {
              var I = T.points;
              u && (I = aD(I, u, !0)), M(I, function(L) {
                S.push(new Ge(c(L)));
              });
            }
          });
          var b = f(v.getCenter(), l && l.project);
          function w(T, C) {
            if (T.length) {
              var I = new rh({
                culling: !0,
                segmentIgnoreThreshold: 1,
                shape: {
                  paths: T
                }
              });
              p.add(I), QA(e, I, y, m), tD(e, I, d, m, o, y, b), C && (jA(I), M(I.states, jA));
            }
          }
          w(_), w(S, !0);
        }), t.each(function(v, d) {
          var p = n.get(d), g = p.dataIdx, y = p.regionModel;
          eD(e, v, d, y, o, g), rD(e, v, d, y, o), nD(e, v, d, y, o);
        }, this);
      }, r.prototype._buildSVG = function(e) {
        var t = e.geo.map, n = e.transformInfoRaw;
        this._svgGroup.x = n.x, this._svgGroup.y = n.y, this._svgGroup.scaleX = n.scaleX, this._svgGroup.scaleY = n.scaleY, this._svgResourceChanged(t) && (this._freeSVG(), this._useSVG(t));
        var a = this._svgDispatcherMap = nt(), i = !1;
        M(this._svgGraphicRecord.named, function(o) {
          var s = o.name, l = e.mapOrGeoModel, u = e.data, f = o.svgNodeTagLower, h = o.el, c = u ? u.indexOfName(s) : null, v = l.getRegionModel(s);
          if (E3.get(f) != null && h instanceof kr && QA(e, h, c, v), h instanceof kr && (h.culling = !0), h.z2EmphasisLift = 0, !o.namedFrom && (k3.get(f) != null && tD(e, h, s, v, l, c, null), eD(e, h, s, v, l, c), rD(e, h, s, v, l), R3.get(f) != null)) {
            var d = nD(e, h, s, v, l);
            d === "self" && (i = !0);
            var p = a.get(s) || a.set(s, []);
            p.push(h);
          }
        }, this), this._enableBlurEntireSVG(i, e);
      }, r.prototype._enableBlurEntireSVG = function(e, t) {
        if (e && t.isGeo) {
          var n = t.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(), a = n.opacity;
          this._svgGraphicRecord.root.traverse(function(i) {
            if (!i.isGroup) {
              Ii(i);
              var o = i.ensureState("blur").style || {};
              o.opacity == null && a != null && (o.opacity = a), i.ensureState("emphasis");
            }
          });
        }
      }, r.prototype.remove = function() {
        this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
      }, r.prototype.findHighDownDispatchers = function(e, t) {
        if (e == null)
          return [];
        var n = t.coordinateSystem;
        if (n.resourceType === "geoJSON") {
          var a = this._regionsGroupByName;
          if (a) {
            var i = a.get(e);
            return i ? [i] : [];
          }
        } else if (n.resourceType === "geoSVG")
          return this._svgDispatcherMap && this._svgDispatcherMap.get(e) || [];
      }, r.prototype._svgResourceChanged = function(e) {
        return this._svgMapName !== e;
      }, r.prototype._useSVG = function(e) {
        var t = aa.getGeoResource(e);
        if (t && t.type === "geoSVG") {
          var n = t.useGraphic(this.uid);
          this._svgGroup.add(n.root), this._svgGraphicRecord = n, this._svgMapName = e;
        }
      }, r.prototype._freeSVG = function() {
        var e = this._svgMapName;
        if (e != null) {
          var t = aa.getGeoResource(e);
          t && t.type === "geoSVG" && t.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
        }
      }, r.prototype._updateController = function(e, t, n) {
        var a = e.coordinateSystem, i = this._controller, o = this._controllerHost;
        o.zoomLimit = e.get("scaleLimit"), o.zoom = a.getZoom(), i.enable(e.get("roam") || !1);
        var s = e.mainType;
        function l() {
          var u = {
            type: "geoRoam",
            componentType: s
          };
          return u[s + "Id"] = e.id, u;
        }
        i.off("pan").on("pan", function(u) {
          this._mouseDownFlag = !1, Vy(o, u.dx, u.dy), n.dispatchAction(H(l(), {
            dx: u.dx,
            dy: u.dy,
            animation: {
              duration: 0
            }
          }));
        }, this), i.off("zoom").on("zoom", function(u) {
          this._mouseDownFlag = !1, By(o, u.scale, u.originX, u.originY), n.dispatchAction(H(l(), {
            zoom: u.scale,
            originX: u.originX,
            originY: u.originY,
            animation: {
              duration: 0
            }
          }));
        }, this), i.setPointerChecker(function(u, f, h) {
          return a.containPoint([f, h]) && !xc(u, n, e);
        });
      }, r.prototype.resetForLabelLayout = function() {
        this.group.traverse(function(e) {
          var t = e.getTextContent();
          t && (t.ignore = KA(t).ignore);
        });
      }, r.prototype._updateMapSelectHandler = function(e, t, n, a) {
        var i = this;
        t.off("mousedown"), t.off("click"), e.get("selectedMode") && (t.on("mousedown", function() {
          i._mouseDownFlag = !0;
        }), t.on("click", function(o) {
          i._mouseDownFlag && (i._mouseDownFlag = !1);
        }));
      }, r;
    }()
  );
  function QA(r, e, t, n) {
    var a = n.getModel("itemStyle"), i = n.getModel(["emphasis", "itemStyle"]), o = n.getModel(["blur", "itemStyle"]), s = n.getModel(["select", "itemStyle"]), l = Cc(a), u = Cc(i), f = Cc(s), h = Cc(o), c = r.data;
    if (c) {
      var v = c.getItemVisual(t, "style"), d = c.getItemVisual(t, "decal");
      r.isVisualEncodedByVisualMap && v.fill && (l.fill = v.fill), d && (l.decal = ls(d, r.api));
    }
    e.setStyle(l), e.style.strokeNoScale = !0, e.ensureState("emphasis").style = u, e.ensureState("select").style = f, e.ensureState("blur").style = h, Ii(e);
  }
  function tD(r, e, t, n, a, i, o) {
    var s = r.data, l = r.isGeo, u = s && isNaN(s.get(s.mapDimension("value"), i)), f = s && s.getItemLayout(i);
    if (l || u || f && f.showLabel) {
      var h = l ? t : i, c = void 0;
      (!s || i >= 0) && (c = a);
      var v = o ? {
        normal: {
          align: "center",
          verticalAlign: "middle"
        }
      } : null;
      ke(e, Ce(n), {
        labelFetcher: c,
        labelDataIndex: h,
        defaultText: t
      }, v);
      var d = e.getTextContent();
      if (d && (KA(d).ignore = d.ignore, e.textConfig && o)) {
        var p = e.getBoundingRect().clone();
        e.textConfig.layoutRect = p, e.textConfig.position = [(o[0] - p.x) / p.width * 100 + "%", (o[1] - p.y) / p.height * 100 + "%"];
      }
      e.disableLabelAnimation = !0;
    } else
      e.removeTextContent(), e.removeTextConfig(), e.disableLabelAnimation = null;
  }
  function eD(r, e, t, n, a, i) {
    r.data ? r.data.setItemGraphicEl(i, e) : gt(e).eventData = {
      componentType: "geo",
      componentIndex: a.componentIndex,
      geoIndex: a.componentIndex,
      name: t,
      region: n && n.option || {}
    };
  }
  function rD(r, e, t, n, a) {
    r.data || Xo({
      el: e,
      componentModel: a,
      itemName: t,
      // @ts-ignore FIXME:TS fix the "compatible with each other"?
      itemTooltipOption: n.get("tooltip")
    });
  }
  function nD(r, e, t, n, a) {
    e.highDownSilentOnTouch = !!a.get("selectedMode");
    var i = n.getModel("emphasis"), o = i.get("focus");
    return oe(e, o, i.get("blurScope"), i.get("disabled")), r.isGeo && yO(e, a, t), o;
  }
  function aD(r, e, t) {
    var n = [], a;
    function i() {
      a = [];
    }
    function o() {
      a.length && (n.push(a), a = []);
    }
    var s = e({
      polygonStart: i,
      polygonEnd: o,
      lineStart: i,
      lineEnd: o,
      point: function(l, u) {
        isFinite(l) && isFinite(u) && a.push([l, u]);
      },
      sphere: function() {
      }
    });
    return !t && s.polygonStart(), M(r, function(l) {
      s.lineStart();
      for (var u = 0; u < l.length; u++)
        s.point(l[u][0], l[u][1]);
      s.lineEnd();
    }), !t && s.polygonEnd(), n;
  }
  var O3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        if (!(i && i.type === "mapToggleSelect" && i.from === this.uid)) {
          var o = this.group;
          if (o.removeAll(), !t.getHostGeoModel()) {
            if (this._mapDraw && i && i.type === "geoRoam" && this._mapDraw.resetForLabelLayout(), i && i.type === "geoRoam" && i.componentType === "series" && i.seriesId === t.id) {
              var s = this._mapDraw;
              s && o.add(s.group);
            } else if (t.needsDrawMap) {
              var s = this._mapDraw || new JA(a);
              o.add(s.group), s.draw(t, n, a, this, i), this._mapDraw = s;
            } else
              this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
            t.get("showLegendSymbol") && n.getComponent("legend") && this._renderSymbols(t, n, a);
          }
        }
      }, e.prototype.remove = function() {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
      }, e.prototype.dispose = function() {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
      }, e.prototype._renderSymbols = function(t, n, a) {
        var i = t.originalData, o = this.group;
        i.each(i.mapDimension("value"), function(s, l) {
          if (!isNaN(s)) {
            var u = i.getItemLayout(l);
            if (!(!u || !u.point)) {
              var f = u.point, h = u.offset, c = new Nr({
                style: {
                  // Because the special of map draw.
                  // Which needs statistic of multiple series and draw on one map.
                  // And each series also need a symbol with legend color
                  //
                  // Layout and visual are put one the different data
                  // TODO
                  fill: t.getData().getVisual("style").fill
                },
                shape: {
                  cx: f[0] + h * 9,
                  cy: f[1],
                  r: 3
                },
                silent: !0,
                // Do not overlap the first series, on which labels are displayed.
                z2: 8 + (h ? 0 : No + 1)
              });
              if (!h) {
                var v = t.mainSeries.getData(), d = i.getName(l), p = v.indexOfName(d), g = i.getItemModel(l), y = g.getModel("label"), m = v.getItemGraphicEl(p);
                ke(c, Ce(g), {
                  labelFetcher: {
                    getFormattedLabel: function(_, S) {
                      return t.getFormattedLabel(p, S);
                    }
                  },
                  defaultText: d
                }), c.disableLabelAnimation = !0, y.get("position") || c.setTextConfig({
                  position: "bottom"
                }), m.onHoverStateChange = function(_) {
                  Jf(c, _);
                };
              }
              o.add(c);
            }
          }
        });
      }, e.type = "map", e;
    }($t)
  ), N3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.needsDrawMap = !1, t.seriesGroup = [], t.getTooltipPosition = function(n) {
          if (n != null) {
            var a = this.getData().getName(n), i = this.coordinateSystem, o = i.getRegion(a);
            return o && i.dataToPoint(o.getCenter());
          }
        }, t;
      }
      return e.prototype.getInitialData = function(t) {
        for (var n = ys(this, {
          coordDimensions: ["value"],
          encodeDefaulter: yt(Up, this)
        }), a = nt(), i = [], o = 0, s = n.count(); o < s; o++) {
          var l = n.getName(o);
          a.set(l, !0);
        }
        var u = aa.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
        return M(u.regions, function(f) {
          var h = f.name;
          a.get(h) || i.push(h);
        }), n.appendValues([], i), n;
      }, e.prototype.getHostGeoModel = function() {
        var t = this.option.geoIndex;
        return t != null ? this.ecModel.getComponent("geo", t) : null;
      }, e.prototype.getMapType = function() {
        return (this.getHostGeoModel() || this).option.map;
      }, e.prototype.getRawValue = function(t) {
        var n = this.getData();
        return n.get(n.mapDimension("value"), t);
      }, e.prototype.getRegionModel = function(t) {
        var n = this.getData();
        return n.getItemModel(n.indexOfName(t));
      }, e.prototype.formatTooltip = function(t, n, a) {
        for (var i = this.getData(), o = this.getRawValue(t), s = i.getName(t), l = this.seriesGroup, u = [], f = 0; f < l.length; f++) {
          var h = l[f].originalData.indexOfName(s), c = i.mapDimension("value");
          isNaN(l[f].originalData.get(c, h)) || u.push(l[f].name);
        }
        return Ae("section", {
          header: u.join(", "),
          noHeader: !u.length,
          blocks: [Ae("nameValue", {
            name: s,
            value: o
          })]
        });
      }, e.prototype.setZoom = function(t) {
        this.option.zoom = t;
      }, e.prototype.setCenter = function(t) {
        this.option.center = t;
      }, e.prototype.getLegendIcon = function(t) {
        var n = t.icon || "roundRect", a = ve(n, 0, 0, t.itemWidth, t.itemHeight, t.itemStyle.fill);
        return a.setStyle(t.itemStyle), a.style.stroke = "none", n.indexOf("empty") > -1 && (a.style.stroke = a.style.fill, a.style.fill = "#fff", a.style.lineWidth = 2), a;
      }, e.type = "series.map", e.dependencies = ["geo"], e.layoutMode = "box", e.defaultOption = {
        // 一级层叠
        // zlevel: 0,
        // 二级层叠
        z: 2,
        coordinateSystem: "geo",
        // map should be explicitly specified since ec3.
        map: "",
        // If `geoIndex` is not specified, a exclusive geo will be
        // created. Otherwise use the specified geo component, and
        // `map` and `mapType` are ignored.
        // geoIndex: 0,
        // 'center' | 'left' | 'right' | 'x%' | {number}
        left: "center",
        // 'center' | 'top' | 'bottom' | 'x%' | {number}
        top: "center",
        // right
        // bottom
        // width:
        // height
        // Aspect is width / height. Inited to be geoJson bbox aspect
        // This parameter is used for scale this aspect
        // Default value:
        // for geoSVG source: 1,
        // for geoJSON source: 0.75.
        aspectScale: null,
        // Layout with center and size
        // If you want to put map in a fixed size box with right aspect ratio
        // This two properties may be more convenient.
        // layoutCenter: [50%, 50%]
        // layoutSize: 100
        showLegendSymbol: !0,
        // Define left-top, right-bottom coords to control view
        // For example, [ [180, 90], [-180, -90] ],
        // higher priority than center and zoom
        boundingCoords: null,
        // Default on center of map
        center: null,
        zoom: 1,
        scaleLimit: null,
        selectedMode: !0,
        label: {
          show: !1,
          color: "#000"
        },
        // scaleLimit: null,
        itemStyle: {
          borderWidth: 0.5,
          borderColor: "#444",
          areaColor: "#eee"
        },
        emphasis: {
          label: {
            show: !0,
            color: "rgb(100,0,0)"
          },
          itemStyle: {
            areaColor: "rgba(255,215,0,0.8)"
          }
        },
        select: {
          label: {
            show: !0,
            color: "rgb(100,0,0)"
          },
          itemStyle: {
            color: "rgba(255,215,0,0.8)"
          }
        },
        nameProperty: "name"
      }, e;
    }(Zt)
  );
  function V3(r, e) {
    var t = {};
    return M(r, function(n) {
      n.each(n.mapDimension("value"), function(a, i) {
        var o = "ec-" + n.getName(i);
        t[o] = t[o] || [], isNaN(a) || t[o].push(a);
      });
    }), r[0].map(r[0].mapDimension("value"), function(n, a) {
      for (var i = "ec-" + r[0].getName(a), o = 0, s = 1 / 0, l = -1 / 0, u = t[i].length, f = 0; f < u; f++)
        s = Math.min(s, t[i][f]), l = Math.max(l, t[i][f]), o += t[i][f];
      var h;
      return e === "min" ? h = s : e === "max" ? h = l : e === "average" ? h = o / u : h = o, u === 0 ? NaN : h;
    });
  }
  function B3(r) {
    var e = {};
    r.eachSeriesByType("map", function(t) {
      var n = t.getHostGeoModel(), a = n ? "o" + n.id : "i" + t.getMapType();
      (e[a] = e[a] || []).push(t);
    }), M(e, function(t, n) {
      for (var a = V3(Y(t, function(o) {
        return o.getData();
      }), t[0].get("mapValueCalculation")), i = 0; i < t.length; i++)
        t[i].originalData = t[i].getData();
      for (var i = 0; i < t.length; i++)
        t[i].seriesGroup = t, t[i].needsDrawMap = i === 0 && !t[i].getHostGeoModel(), t[i].setData(a.cloneShallow()), t[i].mainSeries = t[0];
    });
  }
  function z3(r) {
    var e = {};
    r.eachSeriesByType("map", function(t) {
      var n = t.getMapType();
      if (!(t.getHostGeoModel() || e[n])) {
        var a = {};
        M(t.seriesGroup, function(o) {
          var s = o.coordinateSystem, l = o.originalData;
          o.get("showLegendSymbol") && r.getComponent("legend") && l.each(l.mapDimension("value"), function(u, f) {
            var h = l.getName(f), c = s.getRegion(h);
            if (!(!c || isNaN(u))) {
              var v = a[h] || 0, d = s.dataToPoint(c.getCenter());
              a[h] = v + 1, l.setItemLayout(f, {
                point: d,
                offset: v
              });
            }
          });
        });
        var i = t.getData();
        i.each(function(o) {
          var s = i.getName(o), l = i.getItemLayout(o) || {};
          l.showLabel = !a[s], i.setItemLayout(o, l);
        }), e[n] = !0;
      }
    });
  }
  var iD = Ie, Au = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this) || this;
        return n.type = "view", n.dimensions = ["x", "y"], n._roamTransformable = new Xn(), n._rawTransformable = new Xn(), n.name = t, n;
      }
      return e.prototype.setBoundingRect = function(t, n, a, i) {
        return this._rect = new xt(t, n, a, i), this._rect;
      }, e.prototype.getBoundingRect = function() {
        return this._rect;
      }, e.prototype.setViewRect = function(t, n, a, i) {
        this._transformTo(t, n, a, i), this._viewRect = new xt(t, n, a, i);
      }, e.prototype._transformTo = function(t, n, a, i) {
        var o = this.getBoundingRect(), s = this._rawTransformable;
        s.transform = o.calculateTransform(new xt(t, n, a, i));
        var l = s.parent;
        s.parent = null, s.decomposeTransform(), s.parent = l, this._updateTransform();
      }, e.prototype.setCenter = function(t, n) {
        t && (this._center = [Z(t[0], n.getWidth()), Z(t[1], n.getHeight())], this._updateCenterAndZoom());
      }, e.prototype.setZoom = function(t) {
        t = t || 1;
        var n = this.zoomLimit;
        n && (n.max != null && (t = Math.min(n.max, t)), n.min != null && (t = Math.max(n.min, t))), this._zoom = t, this._updateCenterAndZoom();
      }, e.prototype.getDefaultCenter = function() {
        var t = this.getBoundingRect(), n = t.x + t.width / 2, a = t.y + t.height / 2;
        return [n, a];
      }, e.prototype.getCenter = function() {
        return this._center || this.getDefaultCenter();
      }, e.prototype.getZoom = function() {
        return this._zoom || 1;
      }, e.prototype.getRoamTransform = function() {
        return this._roamTransformable.getLocalTransform();
      }, e.prototype._updateCenterAndZoom = function() {
        var t = this._rawTransformable.getLocalTransform(), n = this._roamTransformable, a = this.getDefaultCenter(), i = this.getCenter(), o = this.getZoom();
        i = Ie([], i, t), a = Ie([], a, t), n.originX = i[0], n.originY = i[1], n.x = a[0] - i[0], n.y = a[1] - i[1], n.scaleX = n.scaleY = o, this._updateTransform();
      }, e.prototype._updateTransform = function() {
        var t = this._roamTransformable, n = this._rawTransformable;
        n.parent = t, t.updateTransform(), n.updateTransform(), cf(this.transform || (this.transform = []), n.transform || dr()), this._rawTransform = n.getLocalTransform(), this.invTransform = this.invTransform || [], si(this.invTransform, this.transform), this.decomposeTransform();
      }, e.prototype.getTransformInfo = function() {
        var t = this._rawTransformable, n = this._roamTransformable, a = new Xn();
        return a.transform = n.transform, a.decomposeTransform(), {
          roam: {
            x: a.x,
            y: a.y,
            scaleX: a.scaleX,
            scaleY: a.scaleY
          },
          raw: {
            x: t.x,
            y: t.y,
            scaleX: t.scaleX,
            scaleY: t.scaleY
          }
        };
      }, e.prototype.getViewRect = function() {
        return this._viewRect;
      }, e.prototype.getViewRectAfterRoam = function() {
        var t = this.getBoundingRect().clone();
        return t.applyTransform(this.transform), t;
      }, e.prototype.dataToPoint = function(t, n, a) {
        var i = n ? this._rawTransform : this.transform;
        return a = a || [], i ? iD(a, t, i) : Ne(a, t);
      }, e.prototype.pointToData = function(t) {
        var n = this.invTransform;
        return n ? iD([], t, n) : [t[0], t[1]];
      }, e.prototype.convertToPixel = function(t, n, a) {
        var i = oD(n);
        return i === this ? i.dataToPoint(a) : null;
      }, e.prototype.convertFromPixel = function(t, n, a) {
        var i = oD(n);
        return i === this ? i.pointToData(a) : null;
      }, e.prototype.containPoint = function(t) {
        return this.getViewRectAfterRoam().contain(t[0], t[1]);
      }, e.dimensions = ["x", "y"], e;
    }(Xn)
  );
  function oD(r) {
    var e = r.seriesModel;
    return e ? e.coordinateSystem : null;
  }
  var G3 = {
    geoJSON: {
      aspectScale: 0.75,
      invertLongitute: !0
    },
    geoSVG: {
      aspectScale: 1,
      invertLongitute: !1
    }
  }, sD = ["lng", "lat"], Wy = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this, t) || this;
        i.dimensions = sD, i.type = "geo", i._nameCoordMap = nt(), i.map = n;
        var o = a.projection, s = aa.load(n, a.nameMap, a.nameProperty), l = aa.getGeoResource(n), u = i.resourceType = l ? l.type : null, f = i.regions = s.regions, h = G3[l.type];
        i._regionsMap = s.regionsMap, i.regions = s.regions, o && (u === "geoSVG" && (ae("Map " + n + " with SVG source can't use projection. Only GeoJSON source supports projection."), o = null), o.project && o.unproject || (ae("project and unproject must be both provided in the projeciton."), o = null)), i.projection = o;
        var c;
        if (o)
          for (var v = 0; v < f.length; v++) {
            var d = f[v].getBoundingRect(o);
            c = c || d.clone(), c.union(d);
          }
        else
          c = s.boundingRect;
        return i.setBoundingRect(c.x, c.y, c.width, c.height), i.aspectScale = o ? 1 : _t(a.aspectScale, h.aspectScale), i._invertLongitute = o ? !1 : h.invertLongitute, i;
      }
      return e.prototype._transformTo = function(t, n, a, i) {
        var o = this.getBoundingRect(), s = this._invertLongitute;
        o = o.clone(), s && (o.y = -o.y - o.height);
        var l = this._rawTransformable;
        l.transform = o.calculateTransform(new xt(t, n, a, i));
        var u = l.parent;
        l.parent = null, l.decomposeTransform(), l.parent = u, s && (l.scaleY = -l.scaleY), this._updateTransform();
      }, e.prototype.getRegion = function(t) {
        return this._regionsMap.get(t);
      }, e.prototype.getRegionByCoord = function(t) {
        for (var n = this.regions, a = 0; a < n.length; a++) {
          var i = n[a];
          if (i.type === "geoJSON" && i.contain(t))
            return n[a];
        }
      }, e.prototype.addGeoCoord = function(t, n) {
        this._nameCoordMap.set(t, n);
      }, e.prototype.getGeoCoord = function(t) {
        var n = this._regionsMap.get(t);
        return this._nameCoordMap.get(t) || n && n.getCenter();
      }, e.prototype.dataToPoint = function(t, n, a) {
        if (j(t) && (t = this.getGeoCoord(t)), t) {
          var i = this.projection;
          return i && (t = i.project(t)), t && this.projectedToPoint(t, n, a);
        }
      }, e.prototype.pointToData = function(t) {
        var n = this.projection;
        return n && (t = n.unproject(t)), t && this.pointToProjected(t);
      }, e.prototype.pointToProjected = function(t) {
        return r.prototype.pointToData.call(this, t);
      }, e.prototype.projectedToPoint = function(t, n, a) {
        return r.prototype.dataToPoint.call(this, t, n, a);
      }, e.prototype.convertToPixel = function(t, n, a) {
        var i = lD(n);
        return i === this ? i.dataToPoint(a) : null;
      }, e.prototype.convertFromPixel = function(t, n, a) {
        var i = lD(n);
        return i === this ? i.pointToData(a) : null;
      }, e;
    }(Au)
  );
  le(Wy, Au);
  function lD(r) {
    var e = r.geoModel, t = r.seriesModel;
    return e ? e.coordinateSystem : t ? t.coordinateSystem || (t.getReferringComponents("geo", ge).models[0] || {}).coordinateSystem : null;
  }
  function uD(r, e) {
    var t = r.get("boundingCoords");
    if (t != null) {
      var n = t[0], a = t[1];
      if (!(isFinite(n[0]) && isFinite(n[1]) && isFinite(a[0]) && isFinite(a[1])))
        console.error("Invalid boundingCoords");
      else {
        var i = this.projection;
        if (i) {
          var o = n[0], s = n[1], l = a[0], u = a[1];
          n = [1 / 0, 1 / 0], a = [-1 / 0, -1 / 0];
          var f = function(w, T, C, I) {
            for (var L = C - w, P = I - T, E = 0; E <= 100; E++) {
              var R = E / 100, k = i.project([w + L * R, T + P * R]);
              Wn(n, n, k), Un(a, a, k);
            }
          };
          f(o, s, l, s), f(l, s, l, u), f(l, u, o, u), f(o, u, l, s);
        }
        this.setBoundingRect(n[0], n[1], a[0] - n[0], a[1] - n[1]);
      }
    }
    var h = this.getBoundingRect(), c = r.get("layoutCenter"), v = r.get("layoutSize"), d = e.getWidth(), p = e.getHeight(), g = h.width / h.height * this.aspectScale, y = !1, m, _;
    c && v && (m = [Z(c[0], d), Z(c[1], p)], _ = Z(v, Math.min(d, p)), !isNaN(m[0]) && !isNaN(m[1]) && !isNaN(_) ? y = !0 : console.warn("Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead."));
    var S;
    if (y)
      S = {}, g > 1 ? (S.width = _, S.height = _ / g) : (S.height = _, S.width = _ * g), S.y = m[1] - S.height / 2, S.x = m[0] - S.width / 2;
    else {
      var b = r.getBoxLayoutParams();
      b.aspect = g, S = ye(b, {
        width: d,
        height: p
      });
    }
    this.setViewRect(S.x, S.y, S.width, S.height), this.setCenter(r.get("center"), e), this.setZoom(r.get("zoom"));
  }
  function F3(r, e) {
    M(e.get("geoCoord"), function(t, n) {
      r.addGeoCoord(n, t);
    });
  }
  var H3 = (
    /** @class */
    function() {
      function r() {
        this.dimensions = sD;
      }
      return r.prototype.create = function(e, t) {
        var n = [];
        function a(o) {
          return {
            nameProperty: o.get("nameProperty"),
            aspectScale: o.get("aspectScale"),
            projection: o.get("projection")
          };
        }
        e.eachComponent("geo", function(o, s) {
          var l = o.get("map"), u = new Wy(l + s, l, H({
            nameMap: o.get("nameMap")
          }, a(o)));
          u.zoomLimit = o.get("scaleLimit"), n.push(u), o.coordinateSystem = u, u.model = o, u.resize = uD, u.resize(o, t);
        }), e.eachSeries(function(o) {
          var s = o.get("coordinateSystem");
          if (s === "geo") {
            var l = o.get("geoIndex") || 0;
            o.coordinateSystem = n[l];
          }
        });
        var i = {};
        return e.eachSeriesByType("map", function(o) {
          if (!o.getHostGeoModel()) {
            var s = o.getMapType();
            i[s] = i[s] || [], i[s].push(o);
          }
        }), M(i, function(o, s) {
          var l = Y(o, function(f) {
            return f.get("nameMap");
          }), u = new Wy(s, s, H({
            nameMap: sf(l)
          }, a(o[0])));
          u.zoomLimit = he.apply(null, Y(o, function(f) {
            return f.get("scaleLimit");
          })), n.push(u), u.resize = uD, u.resize(o[0], t), M(o, function(f) {
            f.coordinateSystem = u, F3(u, f);
          });
        }), n;
      }, r.prototype.getFilledRegions = function(e, t, n, a) {
        for (var i = (e || []).slice(), o = nt(), s = 0; s < i.length; s++)
          o.set(i[s].name, i[s]);
        var l = aa.load(t, n, a);
        return M(l.regions, function(u) {
          var f = u.name;
          !o.get(f) && i.push({
            name: f
          });
        }), i;
      }, r;
    }()
  ), fD = new H3(), W3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n, a) {
        var i = aa.getGeoResource(t.map);
        if (i && i.type === "geoJSON") {
          var o = t.itemStyle = t.itemStyle || {};
          "color" in o || (o.color = "#eee");
        }
        this.mergeDefaultAndTheme(t, a), gi(t, "label", ["show"]);
      }, e.prototype.optionUpdated = function() {
        var t = this, n = this.option;
        n.regions = fD.getFilledRegions(n.regions, n.map, n.nameMap, n.nameProperty);
        var a = {};
        this._optionModelMap = Ar(n.regions || [], function(i, o) {
          var s = o.name;
          return s && (i.set(s, new Gt(o, t, t.ecModel)), o.selected && (a[s] = !0)), i;
        }, nt()), n.selectedMap || (n.selectedMap = a);
      }, e.prototype.getRegionModel = function(t) {
        return this._optionModelMap.get(t) || new Gt(null, this, this.ecModel);
      }, e.prototype.getFormattedLabel = function(t, n) {
        var a = this.getRegionModel(t), i = n === "normal" ? a.get(["label", "formatter"]) : a.get(["emphasis", "label", "formatter"]), o = {
          name: t
        };
        if (rt(i))
          return o.status = n, i(o);
        if (j(i))
          return i.replace("{a}", t ?? "");
      }, e.prototype.setZoom = function(t) {
        this.option.zoom = t;
      }, e.prototype.setCenter = function(t) {
        this.option.center = t;
      }, e.prototype.select = function(t) {
        var n = this.option, a = n.selectedMode;
        if (a) {
          a !== "multiple" && (n.selectedMap = null);
          var i = n.selectedMap || (n.selectedMap = {});
          i[t] = !0;
        }
      }, e.prototype.unSelect = function(t) {
        var n = this.option.selectedMap;
        n && (n[t] = !1);
      }, e.prototype.toggleSelected = function(t) {
        this[this.isSelected(t) ? "unSelect" : "select"](t);
      }, e.prototype.isSelected = function(t) {
        var n = this.option.selectedMap;
        return !!(n && n[t]);
      }, e.type = "geo", e.layoutMode = "box", e.defaultOption = {
        // zlevel: 0,
        z: 0,
        show: !0,
        left: "center",
        top: "center",
        // Default value:
        // for geoSVG source: 1,
        // for geoJSON source: 0.75.
        aspectScale: null,
        // /// Layout with center and size
        // If you want to put map in a fixed size box with right aspect ratio
        // This two properties may be more convenient
        // layoutCenter: [50%, 50%]
        // layoutSize: 100
        silent: !1,
        // Map type
        map: "",
        // Define left-top, right-bottom coords to control view
        // For example, [ [180, 90], [-180, -90] ]
        boundingCoords: null,
        // Default on center of map
        center: null,
        zoom: 1,
        scaleLimit: null,
        // selectedMode: false
        label: {
          show: !1,
          color: "#000"
        },
        itemStyle: {
          borderWidth: 0.5,
          borderColor: "#444"
          // Default color:
          // + geoJSON: #eee
          // + geoSVG: null (use SVG original `fill`)
          // color: '#eee'
        },
        emphasis: {
          label: {
            show: !0,
            color: "rgb(100,0,0)"
          },
          itemStyle: {
            color: "rgba(255,215,0,0.8)"
          }
        },
        select: {
          label: {
            show: !0,
            color: "rgb(100,0,0)"
          },
          itemStyle: {
            color: "rgba(255,215,0,0.8)"
          }
        },
        regions: []
        // tooltip: {
        //     show: false
        // }
      }, e;
    }(Ct)
  );
  function hD(r, e) {
    return r.pointToProjected ? r.pointToProjected(e) : r.pointToData(e);
  }
  function Uy(r, e, t, n) {
    var a = r.getZoom(), i = r.getCenter(), o = e.zoom, s = r.projectedToPoint ? r.projectedToPoint(i) : r.dataToPoint(i);
    if (e.dx != null && e.dy != null && (s[0] -= e.dx, s[1] -= e.dy, r.setCenter(hD(r, s), n)), o != null) {
      if (t) {
        var l = t.min || 0, u = t.max || 1 / 0;
        o = Math.max(Math.min(a * o, u), l) / a;
      }
      r.scaleX *= o, r.scaleY *= o;
      var f = (e.originX - r.x) * (o - 1), h = (e.originY - r.y) * (o - 1);
      r.x -= f, r.y -= h, r.updateTransform(), r.setCenter(hD(r, s), n), r.setZoom(o * a);
    }
    return {
      center: r.getCenter(),
      zoom: r.getZoom()
    };
  }
  var U3 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.focusBlurEnabled = !0, t;
      }
      return e.prototype.init = function(t, n) {
        this._api = n;
      }, e.prototype.render = function(t, n, a, i) {
        if (this._model = t, !t.get("show")) {
          this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          return;
        }
        this._mapDraw || (this._mapDraw = new JA(a));
        var o = this._mapDraw;
        o.draw(t, n, a, this, i), o.group.on("click", this._handleRegionClick, this), o.group.silent = t.get("silent"), this.group.add(o.group), this.updateSelectStatus(t, n, a);
      }, e.prototype._handleRegionClick = function(t) {
        var n;
        Hi(t.target, function(a) {
          return (n = gt(a).eventData) != null;
        }, !0), n && this._api.dispatchAction({
          type: "geoToggleSelect",
          geoId: this._model.id,
          name: n.name
        });
      }, e.prototype.updateSelectStatus = function(t, n, a) {
        var i = this;
        this._mapDraw.group.traverse(function(o) {
          var s = gt(o).eventData;
          if (s)
            return i._model.isSelected(s.name) ? a.enterSelect(o) : a.leaveSelect(o), !0;
        });
      }, e.prototype.findHighDownDispatchers = function(t) {
        return this._mapDraw && this._mapDraw.findHighDownDispatchers(t, this._model);
      }, e.prototype.dispose = function() {
        this._mapDraw && this._mapDraw.remove();
      }, e.type = "geo", e;
    }(Jt)
  );
  function Y3(r, e, t) {
    aa.registerMap(r, e, t);
  }
  function cD(r) {
    r.registerCoordinateSystem("geo", fD), r.registerComponentModel(W3), r.registerComponentView(U3), r.registerImpl("registerMap", Y3), r.registerImpl("getMap", function(t) {
      return aa.getMapForUser(t);
    });
    function e(t, n) {
      n.update = "geo:updateSelectStatus", r.registerAction(n, function(a, i) {
        var o = {}, s = [];
        return i.eachComponent({
          mainType: "geo",
          query: a
        }, function(l) {
          l[t](a.name);
          var u = l.coordinateSystem;
          M(u.regions, function(h) {
            o[h.name] = l.isSelected(h.name) || !1;
          });
          var f = [];
          M(o, function(h, c) {
            o[c] && f.push(c);
          }), s.push({
            geoIndex: l.componentIndex,
            // Use singular, the same naming convention as the event `selectchanged`.
            name: f
          });
        }), {
          selected: o,
          allSelected: s,
          name: a.name
        };
      });
    }
    e("toggleSelected", {
      type: "geoToggleSelect",
      event: "geoselectchanged"
    }), e("select", {
      type: "geoSelect",
      event: "geoselected"
    }), e("unSelect", {
      type: "geoUnSelect",
      event: "geounselected"
    }), r.registerAction({
      type: "geoRoam",
      event: "geoRoam",
      update: "updateTransform"
    }, function(t, n, a) {
      var i = t.componentType || "series";
      n.eachComponent({
        mainType: i,
        query: t
      }, function(o) {
        var s = o.coordinateSystem;
        if (s.type === "geo") {
          var l = Uy(s, t, o.get("scaleLimit"), a);
          o.setCenter && o.setCenter(l.center), o.setZoom && o.setZoom(l.zoom), i === "series" && M(o.seriesGroup, function(u) {
            u.setCenter(l.center), u.setZoom(l.zoom);
          });
        }
      });
    });
  }
  function $3(r) {
    At(cD), r.registerChartView(O3), r.registerSeriesModel(N3), r.registerLayout(z3), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, B3), Sb("map", r.registerAction);
  }
  function X3(r) {
    var e = r;
    e.hierNode = {
      defaultAncestor: null,
      ancestor: e,
      prelim: 0,
      modifier: 0,
      change: 0,
      shift: 0,
      i: 0,
      thread: null
    };
    for (var t = [e], n, a; n = t.pop(); )
      if (a = n.children, n.isExpand && a.length)
        for (var i = a.length, o = i - 1; o >= 0; o--) {
          var s = a[o];
          s.hierNode = {
            defaultAncestor: null,
            ancestor: s,
            prelim: 0,
            modifier: 0,
            change: 0,
            shift: 0,
            i: o,
            thread: null
          }, t.push(s);
        }
  }
  function Z3(r, e) {
    var t = r.isExpand ? r.children : [], n = r.parentNode.children, a = r.hierNode.i ? n[r.hierNode.i - 1] : null;
    if (t.length) {
      j3(r);
      var i = (t[0].hierNode.prelim + t[t.length - 1].hierNode.prelim) / 2;
      a ? (r.hierNode.prelim = a.hierNode.prelim + e(r, a), r.hierNode.modifier = r.hierNode.prelim - i) : r.hierNode.prelim = i;
    } else
      a && (r.hierNode.prelim = a.hierNode.prelim + e(r, a));
    r.parentNode.hierNode.defaultAncestor = J3(r, a, r.parentNode.hierNode.defaultAncestor || n[0], e);
  }
  function q3(r) {
    var e = r.hierNode.prelim + r.parentNode.hierNode.modifier;
    r.setLayout({
      x: e
    }, !0), r.hierNode.modifier += r.parentNode.hierNode.modifier;
  }
  function vD(r) {
    return arguments.length ? r : eH;
  }
  function Du(r, e) {
    return r -= Math.PI / 2, {
      x: e * Math.cos(r),
      y: e * Math.sin(r)
    };
  }
  function K3(r, e) {
    return ye(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function j3(r) {
    for (var e = r.children, t = e.length, n = 0, a = 0; --t >= 0; ) {
      var i = e[t];
      i.hierNode.prelim += n, i.hierNode.modifier += n, a += i.hierNode.change, n += i.hierNode.shift + a;
    }
  }
  function J3(r, e, t, n) {
    if (e) {
      for (var a = r, i = r, o = i.parentNode.children[0], s = e, l = a.hierNode.modifier, u = i.hierNode.modifier, f = o.hierNode.modifier, h = s.hierNode.modifier; s = Yy(s), i = $y(i), s && i; ) {
        a = Yy(a), o = $y(o), a.hierNode.ancestor = r;
        var c = s.hierNode.prelim + h - i.hierNode.prelim - u + n(s, i);
        c > 0 && (tH(Q3(s, r, t), r, c), u += c, l += c), h += s.hierNode.modifier, u += i.hierNode.modifier, l += a.hierNode.modifier, f += o.hierNode.modifier;
      }
      s && !Yy(a) && (a.hierNode.thread = s, a.hierNode.modifier += h - l), i && !$y(o) && (o.hierNode.thread = i, o.hierNode.modifier += u - f, t = r);
    }
    return t;
  }
  function Yy(r) {
    var e = r.children;
    return e.length && r.isExpand ? e[e.length - 1] : r.hierNode.thread;
  }
  function $y(r) {
    var e = r.children;
    return e.length && r.isExpand ? e[0] : r.hierNode.thread;
  }
  function Q3(r, e, t) {
    return r.hierNode.ancestor.parentNode === e.parentNode ? r.hierNode.ancestor : t;
  }
  function tH(r, e, t) {
    var n = t / (e.hierNode.i - r.hierNode.i);
    e.hierNode.change -= n, e.hierNode.shift += t, e.hierNode.modifier += t, e.hierNode.prelim += t, r.hierNode.change += n;
  }
  function eH(r, e) {
    return r.parentNode === e.parentNode ? 1 : 2;
  }
  var rH = (
    /** @class */
    function() {
      function r() {
        this.parentPoint = [], this.childPoints = [];
      }
      return r;
    }()
  ), nH = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        return r.call(this, t) || this;
      }
      return e.prototype.getDefaultStyle = function() {
        return {
          stroke: "#000",
          fill: null
        };
      }, e.prototype.getDefaultShape = function() {
        return new rH();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.childPoints, i = a.length, o = n.parentPoint, s = a[0], l = a[i - 1];
        if (i === 1) {
          t.moveTo(o[0], o[1]), t.lineTo(s[0], s[1]);
          return;
        }
        var u = n.orient, f = u === "TB" || u === "BT" ? 0 : 1, h = 1 - f, c = Z(n.forkPosition, 1), v = [];
        v[f] = o[f], v[h] = o[h] + (l[h] - o[h]) * c, t.moveTo(o[0], o[1]), t.lineTo(v[0], v[1]), t.moveTo(s[0], s[1]), v[f] = s[f], t.lineTo(v[0], v[1]), v[f] = l[f], t.lineTo(v[0], v[1]), t.lineTo(l[0], l[1]);
        for (var d = 1; d < i - 1; d++) {
          var p = a[d];
          t.moveTo(p[0], p[1]), v[f] = p[f], t.lineTo(v[0], v[1]);
        }
      }, e;
    }(Dt)
  ), aH = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._mainGroup = new ct(), t;
      }
      return e.prototype.init = function(t, n) {
        this._controller = new Tu(n.getZr()), this._controllerHost = {
          target: this.group
        }, this.group.add(this._mainGroup);
      }, e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = t.layoutInfo, s = this._mainGroup, l = t.get("layout");
        l === "radial" ? (s.x = o.x + o.width / 2, s.y = o.y + o.height / 2) : (s.x = o.x, s.y = o.y), this._updateViewCoordSys(t, a), this._updateController(t, n, a);
        var u = this._data;
        i.diff(u).add(function(f) {
          dD(i, f) && pD(i, f, null, s, t);
        }).update(function(f, h) {
          var c = u.getItemGraphicEl(h);
          if (!dD(i, f)) {
            c && mD(u, h, c, s, t);
            return;
          }
          pD(i, f, c, s, t);
        }).remove(function(f) {
          var h = u.getItemGraphicEl(f);
          h && mD(u, f, h, s, t);
        }).execute(), this._nodeScaleRatio = t.get("nodeScaleRatio"), this._updateNodeAndLinkScale(t), t.get("expandAndCollapse") === !0 && i.eachItemGraphicEl(function(f, h) {
          f.off("click").on("click", function() {
            a.dispatchAction({
              type: "treeExpandAndCollapse",
              seriesId: t.id,
              dataIndex: h
            });
          });
        }), this._data = i;
      }, e.prototype._updateViewCoordSys = function(t, n) {
        var a = t.getData(), i = [];
        a.each(function(h) {
          var c = a.getItemLayout(h);
          c && !isNaN(c.x) && !isNaN(c.y) && i.push([+c.x, +c.y]);
        });
        var o = [], s = [];
        $f(i, o, s);
        var l = this._min, u = this._max;
        s[0] - o[0] === 0 && (o[0] = l ? l[0] : o[0] - 1, s[0] = u ? u[0] : s[0] + 1), s[1] - o[1] === 0 && (o[1] = l ? l[1] : o[1] - 1, s[1] = u ? u[1] : s[1] + 1);
        var f = t.coordinateSystem = new Au();
        f.zoomLimit = t.get("scaleLimit"), f.setBoundingRect(o[0], o[1], s[0] - o[0], s[1] - o[1]), f.setCenter(t.get("center"), n), f.setZoom(t.get("zoom")), this.group.attr({
          x: f.x,
          y: f.y,
          scaleX: f.scaleX,
          scaleY: f.scaleY
        }), this._min = o, this._max = s;
      }, e.prototype._updateController = function(t, n, a) {
        var i = this, o = this._controller, s = this._controllerHost, l = this.group;
        o.setPointerChecker(function(u, f, h) {
          var c = l.getBoundingRect();
          return c.applyTransform(l.transform), c.contain(f, h) && !xc(u, a, t);
        }), o.enable(t.get("roam")), s.zoomLimit = t.get("scaleLimit"), s.zoom = t.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
          Vy(s, u.dx, u.dy), a.dispatchAction({
            seriesId: t.id,
            type: "treeRoam",
            dx: u.dx,
            dy: u.dy
          });
        }).on("zoom", function(u) {
          By(s, u.scale, u.originX, u.originY), a.dispatchAction({
            seriesId: t.id,
            type: "treeRoam",
            zoom: u.scale,
            originX: u.originX,
            originY: u.originY
          }), i._updateNodeAndLinkScale(t), a.updateLabelLayout();
        });
      }, e.prototype._updateNodeAndLinkScale = function(t) {
        var n = t.getData(), a = this._getNodeGlobalScale(t);
        n.eachItemGraphicEl(function(i, o) {
          i.setSymbolScale(a);
        });
      }, e.prototype._getNodeGlobalScale = function(t) {
        var n = t.coordinateSystem;
        if (n.type !== "view")
          return 1;
        var a = this._nodeScaleRatio, i = n.scaleX || 1, o = n.getZoom(), s = (o - 1) * a + 1;
        return s / i;
      }, e.prototype.dispose = function() {
        this._controller && this._controller.dispose(), this._controllerHost = null;
      }, e.prototype.remove = function() {
        this._mainGroup.removeAll(), this._data = null;
      }, e.type = "tree", e;
    }($t)
  );
  function dD(r, e) {
    var t = r.getItemLayout(e);
    return t && !isNaN(t.x) && !isNaN(t.y);
  }
  function pD(r, e, t, n, a) {
    var i = !t, o = r.tree.getNodeByDataIndex(e), s = o.getModel(), l = o.getVisual("style").fill, u = o.isExpand === !1 && o.children.length !== 0 ? l : "#fff", f = r.tree.root, h = o.parentNode === f ? o : o.parentNode || o, c = r.getItemGraphicEl(h.dataIndex), v = h.getLayout(), d = c ? {
      x: c.__oldX,
      y: c.__oldY,
      rawX: c.__radialOldRawX,
      rawY: c.__radialOldRawY
    } : v, p = o.getLayout();
    i ? (t = new gu(r, e, null, {
      symbolInnerColor: u,
      useNameLabel: !0
    }), t.x = d.x, t.y = d.y) : t.updateData(r, e, null, {
      symbolInnerColor: u,
      useNameLabel: !0
    }), t.__radialOldRawX = t.__radialRawX, t.__radialOldRawY = t.__radialRawY, t.__radialRawX = p.rawX, t.__radialRawY = p.rawY, n.add(t), r.setItemGraphicEl(e, t), t.__oldX = t.x, t.__oldY = t.y, Vt(t, {
      x: p.x,
      y: p.y
    }, a);
    var g = t.getSymbolPath();
    if (a.get("layout") === "radial") {
      var y = f.children[0], m = y.getLayout(), _ = y.children.length, S = void 0, b = void 0;
      if (p.x === m.x && o.isExpand === !0 && y.children.length) {
        var w = {
          x: (y.children[0].getLayout().x + y.children[_ - 1].getLayout().x) / 2,
          y: (y.children[0].getLayout().y + y.children[_ - 1].getLayout().y) / 2
        };
        S = Math.atan2(w.y - m.y, w.x - m.x), S < 0 && (S = Math.PI * 2 + S), b = w.x < m.x, b && (S = S - Math.PI);
      } else
        S = Math.atan2(p.y - m.y, p.x - m.x), S < 0 && (S = Math.PI * 2 + S), o.children.length === 0 || o.children.length !== 0 && o.isExpand === !1 ? (b = p.x < m.x, b && (S = S - Math.PI)) : (b = p.x > m.x, b || (S = S - Math.PI));
      var T = b ? "left" : "right", C = s.getModel("label"), I = C.get("rotate"), L = I * (Math.PI / 180), P = g.getTextContent();
      P && (g.setTextConfig({
        position: C.get("position") || T,
        rotation: I == null ? -S : L,
        origin: "center"
      }), P.setStyle("verticalAlign", "middle"));
    }
    var E = s.get(["emphasis", "focus"]), R = E === "relative" ? Ws(o.getAncestorsIndices(), o.getDescendantIndices()) : E === "ancestor" ? o.getAncestorsIndices() : E === "descendant" ? o.getDescendantIndices() : null;
    R && (gt(t).focus = R), iH(a, o, f, t, d, v, p, n), t.__edge && (t.onHoverStateChange = function(k) {
      if (k !== "blur") {
        var O = o.parentNode && r.getItemGraphicEl(o.parentNode.dataIndex);
        O && O.hoverState === wl || Jf(t.__edge, k);
      }
    });
  }
  function iH(r, e, t, n, a, i, o, s) {
    var l = e.getModel(), u = r.get("edgeShape"), f = r.get("layout"), h = r.getOrient(), c = r.get(["lineStyle", "curveness"]), v = r.get("edgeForkPosition"), d = l.getModel("lineStyle").getLineStyle(), p = n.__edge;
    if (u === "curve")
      e.parentNode && e.parentNode !== t && (p || (p = n.__edge = new Fo({
        shape: Xy(f, h, c, a, a)
      })), Vt(p, {
        shape: Xy(f, h, c, i, o)
      }, r));
    else if (u === "polyline")
      if (f === "orthogonal") {
        if (e !== t && e.children && e.children.length !== 0 && e.isExpand === !0) {
          for (var g = e.children, y = [], m = 0; m < g.length; m++) {
            var _ = g[m].getLayout();
            y.push([_.x, _.y]);
          }
          p || (p = n.__edge = new nH({
            shape: {
              parentPoint: [o.x, o.y],
              childPoints: [[o.x, o.y]],
              orient: h,
              forkPosition: v
            }
          })), Vt(p, {
            shape: {
              parentPoint: [o.x, o.y],
              childPoints: y
            }
          }, r);
        }
      } else
        throw new Error("The polyline edgeShape can only be used in orthogonal layout");
    p && !(u === "polyline" && !e.isExpand) && (p.useStyle(ot({
      strokeNoScale: !0,
      fill: null
    }, d)), Re(p, l, "lineStyle"), Ii(p), s.add(p));
  }
  function gD(r, e, t, n, a) {
    var i = e.tree.root, o = yD(i, r), s = o.source, l = o.sourceLayout, u = e.getItemGraphicEl(r.dataIndex);
    if (u) {
      var f = e.getItemGraphicEl(s.dataIndex), h = f.__edge, c = u.__edge || (s.isExpand === !1 || s.children.length === 1 ? h : void 0), v = n.get("edgeShape"), d = n.get("layout"), p = n.get("orient"), g = n.get(["lineStyle", "curveness"]);
      c && (v === "curve" ? Ia(c, {
        shape: Xy(d, p, g, l, l),
        style: {
          opacity: 0
        }
      }, n, {
        cb: function() {
          t.remove(c);
        },
        removeOpt: a
      }) : v === "polyline" && n.get("layout") === "orthogonal" && Ia(c, {
        shape: {
          parentPoint: [l.x, l.y],
          childPoints: [[l.x, l.y]]
        },
        style: {
          opacity: 0
        }
      }, n, {
        cb: function() {
          t.remove(c);
        },
        removeOpt: a
      }));
    }
  }
  function yD(r, e) {
    for (var t = e.parentNode === r ? e : e.parentNode || e, n; n = t.getLayout(), n == null; )
      t = t.parentNode === r ? t : t.parentNode || t;
    return {
      source: t,
      sourceLayout: n
    };
  }
  function mD(r, e, t, n, a) {
    var i = r.tree.getNodeByDataIndex(e), o = r.tree.root, s = yD(o, i).sourceLayout, l = {
      duration: a.get("animationDurationUpdate"),
      easing: a.get("animationEasingUpdate")
    };
    Ia(t, {
      x: s.x + 1,
      y: s.y + 1
    }, a, {
      cb: function() {
        n.remove(t), r.setItemGraphicEl(e, null);
      },
      removeOpt: l
    }), t.fadeOut(null, r.hostModel, {
      fadeLabel: !0,
      animation: l
    }), i.children.forEach(function(u) {
      gD(u, r, n, a, l);
    }), gD(i, r, n, a, l);
  }
  function Xy(r, e, t, n, a) {
    var i, o, s, l, u, f, h, c;
    if (r === "radial") {
      u = n.rawX, h = n.rawY, f = a.rawX, c = a.rawY;
      var v = Du(u, h), d = Du(u, h + (c - h) * t), p = Du(f, c + (h - c) * t), g = Du(f, c);
      return {
        x1: v.x || 0,
        y1: v.y || 0,
        x2: g.x || 0,
        y2: g.y || 0,
        cpx1: d.x || 0,
        cpy1: d.y || 0,
        cpx2: p.x || 0,
        cpy2: p.y || 0
      };
    } else
      u = n.x, h = n.y, f = a.x, c = a.y, (e === "LR" || e === "RL") && (i = u + (f - u) * t, o = h, s = f + (u - f) * t, l = c), (e === "TB" || e === "BT") && (i = u, o = h + (c - h) * t, s = f, l = c + (h - c) * t);
    return {
      x1: u,
      y1: h,
      x2: f,
      y2: c,
      cpx1: i,
      cpy1: o,
      cpx2: s,
      cpy2: l
    };
  }
  var Xr = Nt();
  function _D(r) {
    var e = r.mainData, t = r.datas;
    t || (t = {
      main: e
    }, r.datasAttr = {
      main: "data"
    }), r.datas = r.mainData = null, SD(e, t, r), M(t, function(n) {
      M(e.TRANSFERABLE_METHODS, function(a) {
        n.wrapMethod(a, yt(oH, r));
      });
    }), e.wrapMethod("cloneShallow", yt(lH, r)), M(e.CHANGABLE_METHODS, function(n) {
      e.wrapMethod(n, yt(sH, r));
    }), st(t[e.dataType] === e);
  }
  function oH(r, e) {
    if (hH(this)) {
      var t = H({}, Xr(this).datas);
      t[this.dataType] = e, SD(e, t, r);
    } else
      Zy(e, this.dataType, Xr(this).mainData, r);
    return e;
  }
  function sH(r, e) {
    return r.struct && r.struct.update(), e;
  }
  function lH(r, e) {
    return M(Xr(e).datas, function(t, n) {
      t !== e && Zy(t.cloneShallow(), n, e, r);
    }), e;
  }
  function uH(r) {
    var e = Xr(this).mainData;
    return r == null || e == null ? e : Xr(e).datas[r];
  }
  function fH() {
    var r = Xr(this).mainData;
    return r == null ? [{
      data: r
    }] : Y(Pt(Xr(r).datas), function(e) {
      return {
        type: e,
        data: Xr(r).datas[e]
      };
    });
  }
  function hH(r) {
    return Xr(r).mainData === r;
  }
  function SD(r, e, t) {
    Xr(r).datas = {}, M(e, function(n, a) {
      Zy(n, a, r, t);
    });
  }
  function Zy(r, e, t, n) {
    Xr(t).datas[e] = r, Xr(r).mainData = t, r.dataType = e, n.struct && (r[n.structAttr] = n.struct, n.struct[n.datasAttr[e]] = r), r.getLinkedData = uH, r.getLinkedDataAll = fH;
  }
  var cH = (
    /** @class */
    function() {
      function r(e, t) {
        this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = !1, this.name = e || "", this.hostTree = t;
      }
      return r.prototype.isRemoved = function() {
        return this.dataIndex < 0;
      }, r.prototype.eachNode = function(e, t, n) {
        rt(e) && (n = t, t = e, e = null), e = e || {}, j(e) && (e = {
          order: e
        });
        var a = e.order || "preorder", i = this[e.attr || "children"], o;
        a === "preorder" && (o = t.call(n, this));
        for (var s = 0; !o && s < i.length; s++)
          i[s].eachNode(e, t, n);
        a === "postorder" && t.call(n, this);
      }, r.prototype.updateDepthAndHeight = function(e) {
        var t = 0;
        this.depth = e;
        for (var n = 0; n < this.children.length; n++) {
          var a = this.children[n];
          a.updateDepthAndHeight(e + 1), a.height > t && (t = a.height);
        }
        this.height = t + 1;
      }, r.prototype.getNodeById = function(e) {
        if (this.getId() === e)
          return this;
        for (var t = 0, n = this.children, a = n.length; t < a; t++) {
          var i = n[t].getNodeById(e);
          if (i)
            return i;
        }
      }, r.prototype.contains = function(e) {
        if (e === this)
          return !0;
        for (var t = 0, n = this.children, a = n.length; t < a; t++) {
          var i = n[t].contains(e);
          if (i)
            return i;
        }
      }, r.prototype.getAncestors = function(e) {
        for (var t = [], n = e ? this : this.parentNode; n; )
          t.push(n), n = n.parentNode;
        return t.reverse(), t;
      }, r.prototype.getAncestorsIndices = function() {
        for (var e = [], t = this; t; )
          e.push(t.dataIndex), t = t.parentNode;
        return e.reverse(), e;
      }, r.prototype.getDescendantIndices = function() {
        var e = [];
        return this.eachNode(function(t) {
          e.push(t.dataIndex);
        }), e;
      }, r.prototype.getValue = function(e) {
        var t = this.hostTree.data;
        return t.getStore().get(t.getDimensionIndex(e || "value"), this.dataIndex);
      }, r.prototype.setLayout = function(e, t) {
        this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, e, t);
      }, r.prototype.getLayout = function() {
        return this.hostTree.data.getItemLayout(this.dataIndex);
      }, r.prototype.getModel = function(e) {
        if (!(this.dataIndex < 0)) {
          var t = this.hostTree, n = t.data.getItemModel(this.dataIndex);
          return n.getModel(e);
        }
      }, r.prototype.getLevelModel = function() {
        return (this.hostTree.levelModels || [])[this.depth];
      }, r.prototype.setVisual = function(e, t) {
        this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, e, t);
      }, r.prototype.getVisual = function(e) {
        return this.hostTree.data.getItemVisual(this.dataIndex, e);
      }, r.prototype.getRawIndex = function() {
        return this.hostTree.data.getRawIndex(this.dataIndex);
      }, r.prototype.getId = function() {
        return this.hostTree.data.getId(this.dataIndex);
      }, r.prototype.getChildIndex = function() {
        if (this.parentNode) {
          for (var e = this.parentNode.children, t = 0; t < e.length; ++t)
            if (e[t] === this)
              return t;
          return -1;
        }
        return -1;
      }, r.prototype.isAncestorOf = function(e) {
        for (var t = e.parentNode; t; ) {
          if (t === this)
            return !0;
          t = t.parentNode;
        }
        return !1;
      }, r.prototype.isDescendantOf = function(e) {
        return e !== this && e.isAncestorOf(this);
      }, r;
    }()
  ), qy = (
    /** @class */
    function() {
      function r(e) {
        this.type = "tree", this._nodes = [], this.hostModel = e;
      }
      return r.prototype.eachNode = function(e, t, n) {
        this.root.eachNode(e, t, n);
      }, r.prototype.getNodeByDataIndex = function(e) {
        var t = this.data.getRawIndex(e);
        return this._nodes[t];
      }, r.prototype.getNodeById = function(e) {
        return this.root.getNodeById(e);
      }, r.prototype.update = function() {
        for (var e = this.data, t = this._nodes, n = 0, a = t.length; n < a; n++)
          t[n].dataIndex = -1;
        for (var n = 0, a = e.count(); n < a; n++)
          t[e.getRawIndex(n)].dataIndex = n;
      }, r.prototype.clearLayouts = function() {
        this.data.clearItemLayouts();
      }, r.createTree = function(e, t, n) {
        var a = new r(t), i = [], o = 1;
        s(e);
        function s(f, h) {
          var c = f.value;
          o = Math.max(o, U(c) ? c.length : 1), i.push(f);
          var v = new cH(_e(f.name, ""), a);
          h ? vH(v, h) : a.root = v, a._nodes.push(v);
          var d = f.children;
          if (d)
            for (var p = 0; p < d.length; p++)
              s(d[p], v);
        }
        a.root.updateDepthAndHeight(0);
        var l = hs(i, {
          coordDimensions: ["value"],
          dimensionsCount: o
        }).dimensions, u = new Ue(l, t);
        return u.initData(i), n && n(u), _D({
          mainData: u,
          struct: a,
          structAttr: "tree"
        }), a.update(), a;
      }, r;
    }()
  );
  function vH(r, e) {
    var t = e.children;
    r.parentNode !== e && (t.push(r), r.parentNode = e);
  }
  function Mu(r, e, t) {
    if (r && bt(e, r.type) >= 0) {
      var n = t.getData().tree.root, a = r.targetNode;
      if (j(a) && (a = n.getNodeById(a)), a && n.contains(a))
        return {
          node: a
        };
      var i = r.targetNodeId;
      if (i != null && (a = n.getNodeById(i)))
        return {
          node: a
        };
    }
  }
  function xD(r) {
    for (var e = []; r; )
      r = r.parentNode, r && e.push(r);
    return e.reverse();
  }
  function Ky(r, e) {
    var t = xD(r);
    return bt(t, e) >= 0;
  }
  function Ac(r, e) {
    for (var t = []; r; ) {
      var n = r.dataIndex;
      t.push({
        name: r.name,
        dataIndex: n,
        value: e.getRawValue(n)
      }), r = r.parentNode;
    }
    return t.reverse(), t;
  }
  var dH = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.hasSymbolVisual = !0, t.ignoreStyleOnData = !0, t;
      }
      return e.prototype.getInitialData = function(t) {
        var n = {
          name: t.name,
          children: t.data
        }, a = t.leaves || {}, i = new Gt(a, this, this.ecModel), o = qy.createTree(n, this, s);
        function s(h) {
          h.wrapMethod("getItemModel", function(c, v) {
            var d = o.getNodeByDataIndex(v);
            return d && d.children.length && d.isExpand || (c.parentModel = i), c;
          });
        }
        var l = 0;
        o.eachNode("preorder", function(h) {
          h.depth > l && (l = h.depth);
        });
        var u = t.expandAndCollapse, f = u && t.initialTreeDepth >= 0 ? t.initialTreeDepth : l;
        return o.root.eachNode("preorder", function(h) {
          var c = h.hostTree.data.getRawDataItem(h.dataIndex);
          h.isExpand = c && c.collapsed != null ? !c.collapsed : h.depth <= f;
        }), o.data;
      }, e.prototype.getOrient = function() {
        var t = this.get("orient");
        return t === "horizontal" ? t = "LR" : t === "vertical" && (t = "TB"), t;
      }, e.prototype.setZoom = function(t) {
        this.option.zoom = t;
      }, e.prototype.setCenter = function(t) {
        this.option.center = t;
      }, e.prototype.formatTooltip = function(t, n, a) {
        for (var i = this.getData().tree, o = i.root.children[0], s = i.getNodeByDataIndex(t), l = s.getValue(), u = s.name; s && s !== o; )
          u = s.parentNode.name + "." + u, s = s.parentNode;
        return Ae("nameValue", {
          name: u,
          value: l,
          noValue: isNaN(l) || l == null
        });
      }, e.prototype.getDataParams = function(t) {
        var n = r.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(t);
        return n.treeAncestors = Ac(a, this), n.collapsed = !a.isExpand, n;
      }, e.type = "series.tree", e.layoutMode = "box", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "view",
        // the position of the whole view
        left: "12%",
        top: "12%",
        right: "12%",
        bottom: "12%",
        // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'
        layout: "orthogonal",
        // value can be 'polyline'
        edgeShape: "curve",
        edgeForkPosition: "50%",
        // true | false | 'move' | 'scale', see module:component/helper/RoamController.
        roam: !1,
        // Symbol size scale ratio in roam
        nodeScaleRatio: 0.4,
        // Default on center of graph
        center: null,
        zoom: 1,
        orient: "LR",
        symbol: "emptyCircle",
        symbolSize: 7,
        expandAndCollapse: !0,
        initialTreeDepth: 2,
        lineStyle: {
          color: "#ccc",
          width: 1.5,
          curveness: 0.5
        },
        itemStyle: {
          color: "lightsteelblue",
          // borderColor: '#c23531',
          borderWidth: 1.5
        },
        label: {
          show: !0
        },
        animationEasing: "linear",
        animationDuration: 700,
        animationDurationUpdate: 500
      }, e;
    }(Zt)
  );
  function pH(r, e, t) {
    for (var n = [r], a = [], i; i = n.pop(); )
      if (a.push(i), i.isExpand) {
        var o = i.children;
        if (o.length)
          for (var s = 0; s < o.length; s++)
            n.push(o[s]);
      }
    for (; i = a.pop(); )
      e(i, t);
  }
  function Iu(r, e) {
    for (var t = [r], n; n = t.pop(); )
      if (e(n), n.isExpand) {
        var a = n.children;
        if (a.length)
          for (var i = a.length - 1; i >= 0; i--)
            t.push(a[i]);
      }
  }
  function gH(r, e) {
    r.eachSeriesByType("tree", function(t) {
      yH(t, e);
    });
  }
  function yH(r, e) {
    var t = K3(r, e);
    r.layoutInfo = t;
    var n = r.get("layout"), a = 0, i = 0, o = null;
    n === "radial" ? (a = 2 * Math.PI, i = Math.min(t.height, t.width) / 2, o = vD(function(_, S) {
      return (_.parentNode === S.parentNode ? 1 : 2) / _.depth;
    })) : (a = t.width, i = t.height, o = vD());
    var s = r.getData().tree.root, l = s.children[0];
    if (l) {
      X3(s), pH(l, Z3, o), s.hierNode.modifier = -l.hierNode.prelim, Iu(l, q3);
      var u = l, f = l, h = l;
      Iu(l, function(_) {
        var S = _.getLayout().x;
        S < u.getLayout().x && (u = _), S > f.getLayout().x && (f = _), _.depth > h.depth && (h = _);
      });
      var c = u === f ? 1 : o(u, f) / 2, v = c - u.getLayout().x, d = 0, p = 0, g = 0, y = 0;
      if (n === "radial")
        d = a / (f.getLayout().x + c + v), p = i / (h.depth - 1 || 1), Iu(l, function(_) {
          g = (_.getLayout().x + v) * d, y = (_.depth - 1) * p;
          var S = Du(g, y);
          _.setLayout({
            x: S.x,
            y: S.y,
            rawX: g,
            rawY: y
          }, !0);
        });
      else {
        var m = r.getOrient();
        m === "RL" || m === "LR" ? (p = i / (f.getLayout().x + c + v), d = a / (h.depth - 1 || 1), Iu(l, function(_) {
          y = (_.getLayout().x + v) * p, g = m === "LR" ? (_.depth - 1) * d : a - (_.depth - 1) * d, _.setLayout({
            x: g,
            y
          }, !0);
        })) : (m === "TB" || m === "BT") && (d = a / (f.getLayout().x + c + v), p = i / (h.depth - 1 || 1), Iu(l, function(_) {
          g = (_.getLayout().x + v) * d, y = m === "TB" ? (_.depth - 1) * p : i - (_.depth - 1) * p, _.setLayout({
            x: g,
            y
          }, !0);
        }));
      }
    }
  }
  function mH(r) {
    r.eachSeriesByType("tree", function(e) {
      var t = e.getData(), n = t.tree;
      n.eachNode(function(a) {
        var i = a.getModel(), o = i.getModel("itemStyle").getItemStyle(), s = t.ensureUniqueItemVisual(a.dataIndex, "style");
        H(s, o);
      });
    });
  }
  function _H(r) {
    r.registerAction({
      type: "treeExpandAndCollapse",
      event: "treeExpandAndCollapse",
      update: "update"
    }, function(e, t) {
      t.eachComponent({
        mainType: "series",
        subType: "tree",
        query: e
      }, function(n) {
        var a = e.dataIndex, i = n.getData().tree, o = i.getNodeByDataIndex(a);
        o.isExpand = !o.isExpand;
      });
    }), r.registerAction({
      type: "treeRoam",
      event: "treeRoam",
      // Here we set 'none' instead of 'update', because roam action
      // just need to update the transform matrix without having to recalculate
      // the layout. So don't need to go through the whole update process, such
      // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.
      update: "none"
    }, function(e, t, n) {
      t.eachComponent({
        mainType: "series",
        subType: "tree",
        query: e
      }, function(a) {
        var i = a.coordinateSystem, o = Uy(i, e, void 0, n);
        a.setCenter && a.setCenter(o.center), a.setZoom && a.setZoom(o.zoom);
      });
    });
  }
  function SH(r) {
    r.registerChartView(aH), r.registerSeriesModel(dH), r.registerLayout(gH), r.registerVisual(mH), _H(r);
  }
  var wD = ["treemapZoomToNode", "treemapRender", "treemapMove"];
  function xH(r) {
    for (var e = 0; e < wD.length; e++)
      r.registerAction({
        type: wD[e],
        update: "updateView"
      }, ue);
    r.registerAction({
      type: "treemapRootToNode",
      update: "updateView"
    }, function(t, n) {
      n.eachComponent({
        mainType: "series",
        subType: "treemap",
        query: t
      }, a);
      function a(i, o) {
        var s = ["treemapZoomToNode", "treemapRootToNode"], l = Mu(t, s, i);
        if (l) {
          var u = i.getViewRoot();
          u && (t.direction = Ky(u, l.node) ? "rollUp" : "drillDown"), i.resetViewRoot(l.node);
        }
      }
    });
  }
  function bD(r) {
    var e = r.getData(), t = e.tree, n = {};
    t.eachNode(function(a) {
      for (var i = a; i && i.depth > 1; )
        i = i.parentNode;
      var o = Zp(r.ecModel, i.name || i.dataIndex + "", n);
      a.setVisual("decal", o);
    });
  }
  var wH = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.preventUsingHoverLayer = !0, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        var a = {
          name: t.name,
          children: t.data
        };
        TD(a);
        var i = t.levels || [], o = this.designatedVisualItemStyle = {}, s = new Gt({
          itemStyle: o
        }, this, n);
        i = t.levels = bH(i, n);
        var l = Y(i || [], function(h) {
          return new Gt(h, s, n);
        }, this), u = qy.createTree(a, this, f);
        function f(h) {
          h.wrapMethod("getItemModel", function(c, v) {
            var d = u.getNodeByDataIndex(v), p = d ? l[d.depth] : null;
            return c.parentModel = p || s, c;
          });
        }
        return u.data;
      }, e.prototype.optionUpdated = function() {
        this.resetViewRoot();
      }, e.prototype.formatTooltip = function(t, n, a) {
        var i = this.getData(), o = this.getRawValue(t), s = i.getName(t);
        return Ae("nameValue", {
          name: s,
          value: o
        });
      }, e.prototype.getDataParams = function(t) {
        var n = r.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(t);
        return n.treeAncestors = Ac(a, this), n.treePathInfo = n.treeAncestors, n;
      }, e.prototype.setLayoutInfo = function(t) {
        this.layoutInfo = this.layoutInfo || {}, H(this.layoutInfo, t);
      }, e.prototype.mapIdToIndex = function(t) {
        var n = this._idIndexMap;
        n || (n = this._idIndexMap = nt(), this._idIndexMapCount = 0);
        var a = n.get(t);
        return a == null && n.set(t, a = this._idIndexMapCount++), a;
      }, e.prototype.getViewRoot = function() {
        return this._viewRoot;
      }, e.prototype.resetViewRoot = function(t) {
        t ? this._viewRoot = t : t = this._viewRoot;
        var n = this.getRawData().tree.root;
        (!t || t !== n && !n.contains(t)) && (this._viewRoot = n);
      }, e.prototype.enableAriaDecal = function() {
        bD(this);
      }, e.type = "series.treemap", e.layoutMode = "box", e.defaultOption = {
        // Disable progressive rendering
        progressive: 0,
        // size: ['80%', '80%'],            // deprecated, compatible with ec2.
        left: "center",
        top: "middle",
        width: "80%",
        height: "80%",
        sort: !0,
        clipWindow: "origin",
        squareRatio: 0.5 * (1 + Math.sqrt(5)),
        leafDepth: null,
        drillDownIcon: "▶",
        // to align specialized icon. ▷▶❒❐▼✚
        zoomToNodeRatio: 0.32 * 0.32,
        roam: !0,
        nodeClick: "zoomToNode",
        animation: !0,
        animationDurationUpdate: 900,
        animationEasing: "quinticInOut",
        breadcrumb: {
          show: !0,
          height: 22,
          left: "center",
          top: "bottom",
          // right
          // bottom
          emptyItemWidth: 25,
          itemStyle: {
            color: "rgba(0,0,0,0.7)",
            textStyle: {
              color: "#fff"
            }
          },
          emphasis: {
            itemStyle: {
              color: "rgba(0,0,0,0.9)"
              // '#5793f3',
            }
          }
        },
        label: {
          show: !0,
          // Do not use textDistance, for ellipsis rect just the same as treemap node rect.
          distance: 0,
          padding: 5,
          position: "inside",
          // formatter: null,
          color: "#fff",
          overflow: "truncate"
          // align
          // verticalAlign
        },
        upperLabel: {
          show: !1,
          position: [0, "50%"],
          height: 20,
          // formatter: null,
          // color: '#fff',
          overflow: "truncate",
          // align: null,
          verticalAlign: "middle"
        },
        itemStyle: {
          color: null,
          colorAlpha: null,
          colorSaturation: null,
          borderWidth: 0,
          gapWidth: 0,
          borderColor: "#fff",
          borderColorSaturation: null
          // If specified, borderColor will be ineffective, and the
          // border color is evaluated by color of current node and
          // borderColorSaturation.
        },
        emphasis: {
          upperLabel: {
            show: !0,
            position: [0, "50%"],
            overflow: "truncate",
            verticalAlign: "middle"
          }
        },
        visualDimension: 0,
        visualMin: null,
        visualMax: null,
        color: [],
        // level[n].color (if necessary).
        // + Specify color list of each level. level[0].color would be global
        // color list if not specified. (see method `setDefault`).
        // + But set as a empty array to forbid fetch color from global palette
        // when using nodeModel.get('color'), otherwise nodes on deep level
        // will always has color palette set and are not able to inherit color
        // from parent node.
        // + TreemapSeries.color can not be set as 'none', otherwise effect
        // legend color fetching (see seriesColor.js).
        colorAlpha: null,
        colorSaturation: null,
        colorMappingBy: "index",
        visibleMin: 10,
        // be rendered. Only works when sort is 'asc' or 'desc'.
        childrenVisibleMin: null,
        // grandchildren will not show.
        // Why grandchildren? If not grandchildren but children,
        // some siblings show children and some not,
        // the appearance may be mess and not consistent,
        levels: []
        // Each item: {
        //     visibleMin, itemStyle, visualDimension, label
        // }
      }, e;
    }(Zt)
  );
  function TD(r) {
    var e = 0;
    M(r.children, function(n) {
      TD(n);
      var a = n.value;
      U(a) && (a = a[0]), e += a;
    });
    var t = r.value;
    U(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), U(r.value) ? r.value[0] = t : r.value = t;
  }
  function bH(r, e) {
    var t = Xt(e.get("color")), n = Xt(e.get(["aria", "decal", "decals"]));
    if (t) {
      r = r || [];
      var a, i;
      M(r, function(s) {
        var l = new Gt(s), u = l.get("color"), f = l.get("decal");
        (l.get(["itemStyle", "color"]) || u && u !== "none") && (a = !0), (l.get(["itemStyle", "decal"]) || f && f !== "none") && (i = !0);
      });
      var o = r[0] || (r[0] = {});
      return a || (o.color = t.slice()), !i && n && (o.decal = n.slice()), r;
    }
  }
  var TH = 8, CD = 8, jy = 5, CH = (
    /** @class */
    function() {
      function r(e) {
        this.group = new ct(), e.add(this.group);
      }
      return r.prototype.render = function(e, t, n, a) {
        var i = e.getModel("breadcrumb"), o = this.group;
        if (o.removeAll(), !(!i.get("show") || !n)) {
          var s = i.getModel("itemStyle"), l = i.getModel("emphasis"), u = s.getModel("textStyle"), f = l.getModel(["itemStyle", "textStyle"]), h = {
            pos: {
              left: i.get("left"),
              right: i.get("right"),
              top: i.get("top"),
              bottom: i.get("bottom")
            },
            box: {
              width: t.getWidth(),
              height: t.getHeight()
            },
            emptyItemWidth: i.get("emptyItemWidth"),
            totalWidth: 0,
            renderList: []
          };
          this._prepare(n, h, u), this._renderContent(e, h, s, l, u, f, a), wh(o, h.pos, h.box);
        }
      }, r.prototype._prepare = function(e, t, n) {
        for (var a = e; a; a = a.parentNode) {
          var i = _e(a.getModel().get("name"), ""), o = n.getTextRect(i), s = Math.max(o.width + TH * 2, t.emptyItemWidth);
          t.totalWidth += s + CD, t.renderList.push({
            node: a,
            text: i,
            width: s
          });
        }
      }, r.prototype._renderContent = function(e, t, n, a, i, o, s) {
        for (var l = 0, u = t.emptyItemWidth, f = e.get(["breadcrumb", "height"]), h = yN(t.pos, t.box), c = t.totalWidth, v = t.renderList, d = a.getModel("itemStyle").getItemStyle(), p = v.length - 1; p >= 0; p--) {
          var g = v[p], y = g.node, m = g.width, _ = g.text;
          c > h.width && (c -= m - u, m = u, _ = null);
          var S = new ze({
            shape: {
              points: AH(l, 0, m, f, p === v.length - 1, p === 0)
            },
            style: ot(n.getItemStyle(), {
              lineJoin: "bevel"
            }),
            textContent: new kt({
              style: jt(i, {
                text: _
              })
            }),
            textConfig: {
              position: "inside"
            },
            z2: No * 1e4,
            onclick: yt(s, y)
          });
          S.disableLabelAnimation = !0, S.getTextContent().ensureState("emphasis").style = jt(o, {
            text: _
          }), S.ensureState("emphasis").style = d, oe(S, a.get("focus"), a.get("blurScope"), a.get("disabled")), this.group.add(S), DH(S, e, y), l += m + CD;
        }
      }, r.prototype.remove = function() {
        this.group.removeAll();
      }, r;
    }()
  );
  function AH(r, e, t, n, a, i) {
    var o = [[a ? r : r - jy, e], [r + t, e], [r + t, e + n], [a ? r : r - jy, e + n]];
    return !i && o.splice(2, 0, [r + t + jy, e + n / 2]), !a && o.push([r, e + n / 2]), o;
  }
  function DH(r, e, t) {
    gt(r).eventData = {
      componentType: "series",
      componentSubType: "treemap",
      componentIndex: e.componentIndex,
      seriesIndex: e.seriesIndex,
      seriesName: e.name,
      seriesType: "treemap",
      selfType: "breadcrumb",
      nodeData: {
        dataIndex: t && t.dataIndex,
        name: t && t.name
      },
      treePathInfo: t && Ac(t, e)
    };
  }
  var MH = (
    /** @class */
    function() {
      function r() {
        this._storage = [], this._elExistsMap = {};
      }
      return r.prototype.add = function(e, t, n, a, i) {
        return this._elExistsMap[e.id] ? !1 : (this._elExistsMap[e.id] = !0, this._storage.push({
          el: e,
          target: t,
          duration: n,
          delay: a,
          easing: i
        }), !0);
      }, r.prototype.finished = function(e) {
        return this._finishedCallback = e, this;
      }, r.prototype.start = function() {
        for (var e = this, t = this._storage.length, n = function() {
          t--, t <= 0 && (e._storage.length = 0, e._elExistsMap = {}, e._finishedCallback && e._finishedCallback());
        }, a = 0, i = this._storage.length; a < i; a++) {
          var o = this._storage[a];
          o.el.animateTo(o.target, {
            duration: o.duration,
            delay: o.delay,
            easing: o.easing,
            setToFinal: !0,
            done: n,
            aborted: n
          });
        }
        return this;
      }, r;
    }()
  );
  function IH() {
    return new MH();
  }
  var Jy = ct, AD = Rt, DD = 3, MD = "label", ID = "upperLabel", LH = No * 10, PH = No * 2, EH = No * 3, io = _i([
    ["fill", "color"],
    // `borderColor` and `borderWidth` has been occupied,
    // so use `stroke` to indicate the stroke of the rect.
    ["stroke", "strokeColor"],
    ["lineWidth", "strokeWidth"],
    ["shadowBlur"],
    ["shadowOffsetX"],
    ["shadowOffsetY"],
    ["shadowColor"]
    // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
    // So do not transfer decal directly.
  ]), LD = function(r) {
    var e = io(r);
    return e.stroke = e.fill = e.lineWidth = null, e;
  }, Dc = Nt(), RH = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._state = "ready", t._storage = Lu(), t;
      }
      return e.prototype.render = function(t, n, a, i) {
        var o = n.findComponents({
          mainType: "series",
          subType: "treemap",
          query: i
        });
        if (!(bt(o, t) < 0)) {
          this.seriesModel = t, this.api = a, this.ecModel = n;
          var s = ["treemapZoomToNode", "treemapRootToNode"], l = Mu(i, s, t), u = i && i.type, f = t.layoutInfo, h = !this._oldTree, c = this._storage, v = u === "treemapRootToNode" && l && c ? {
            rootNodeGroup: c.nodeGroup[l.node.getRawIndex()],
            direction: i.direction
          } : null, d = this._giveContainerGroup(f), p = t.get("animation"), g = this._doRender(d, t, v);
          p && !h && (!u || u === "treemapZoomToNode" || u === "treemapRootToNode") ? this._doAnimation(d, g, t, v) : g.renderFinally(), this._resetController(a), this._renderBreadcrumb(t, a, l);
        }
      }, e.prototype._giveContainerGroup = function(t) {
        var n = this._containerGroup;
        return n || (n = this._containerGroup = new Jy(), this._initEvents(n), this.group.add(n)), n.x = t.x, n.y = t.y, n;
      }, e.prototype._doRender = function(t, n, a) {
        var i = n.getData().tree, o = this._oldTree, s = Lu(), l = Lu(), u = this._storage, f = [];
        function h(g, y, m, _) {
          return kH(n, l, u, a, s, f, g, y, m, _);
        }
        v(i.root ? [i.root] : [], o && o.root ? [o.root] : [], t, i === o || !o, 0);
        var c = d(u);
        return this._oldTree = i, this._storage = l, {
          lastsForAnimation: s,
          willDeleteEls: c,
          renderFinally: p
        };
        function v(g, y, m, _, S) {
          _ ? (y = g, M(g, function(T, C) {
            !T.isRemoved() && w(C, C);
          })) : new ea(y, g, b, b).add(w).update(w).remove(yt(w, null)).execute();
          function b(T) {
            return T.getId();
          }
          function w(T, C) {
            var I = T != null ? g[T] : null, L = C != null ? y[C] : null, P = h(I, L, m, S);
            P && v(I && I.viewChildren || [], L && L.viewChildren || [], P, _, S + 1);
          }
        }
        function d(g) {
          var y = Lu();
          return g && M(g, function(m, _) {
            var S = y[_];
            M(m, function(b) {
              b && (S.push(b), Dc(b).willDelete = !0);
            });
          }), y;
        }
        function p() {
          M(c, function(g) {
            M(g, function(y) {
              y.parent && y.parent.remove(y);
            });
          }), M(f, function(g) {
            g.invisible = !0, g.dirty();
          });
        }
      }, e.prototype._doAnimation = function(t, n, a, i) {
        var o = a.get("animationDurationUpdate"), s = a.get("animationEasing"), l = (rt(o) ? 0 : o) || 0, u = (rt(s) ? null : s) || "cubicOut", f = IH();
        M(n.willDeleteEls, function(h, c) {
          M(h, function(v, d) {
            if (!v.invisible) {
              var p = v.parent, g, y = Dc(p);
              if (i && i.direction === "drillDown")
                g = p === i.rootNodeGroup ? {
                  shape: {
                    x: 0,
                    y: 0,
                    width: y.nodeWidth,
                    height: y.nodeHeight
                  },
                  style: {
                    opacity: 0
                  }
                } : {
                  style: {
                    opacity: 0
                  }
                };
              else {
                var m = 0, _ = 0;
                y.willDelete || (m = y.nodeWidth / 2, _ = y.nodeHeight / 2), g = c === "nodeGroup" ? {
                  x: m,
                  y: _,
                  style: {
                    opacity: 0
                  }
                } : {
                  shape: {
                    x: m,
                    y: _,
                    width: 0,
                    height: 0
                  },
                  style: {
                    opacity: 0
                  }
                };
              }
              g && f.add(v, g, l, 0, u);
            }
          });
        }), M(this._storage, function(h, c) {
          M(h, function(v, d) {
            var p = n.lastsForAnimation[c][d], g = {};
            p && (v instanceof ct ? p.oldX != null && (g.x = v.x, g.y = v.y, v.x = p.oldX, v.y = p.oldY) : (p.oldShape && (g.shape = H({}, v.shape), v.setShape(p.oldShape)), p.fadein ? (v.setStyle("opacity", 0), g.style = {
              opacity: 1
            }) : v.style.opacity !== 1 && (g.style = {
              opacity: 1
            })), f.add(v, g, l, 0, u));
          });
        }, this), this._state = "animating", f.finished(J(function() {
          this._state = "ready", n.renderFinally();
        }, this)).start();
      }, e.prototype._resetController = function(t) {
        var n = this._controller;
        n || (n = this._controller = new Tu(t.getZr()), n.enable(this.seriesModel.get("roam")), n.on("pan", J(this._onPan, this)), n.on("zoom", J(this._onZoom, this)));
        var a = new xt(0, 0, t.getWidth(), t.getHeight());
        n.setPointerChecker(function(i, o, s) {
          return a.contain(o, s);
        });
      }, e.prototype._clearController = function() {
        var t = this._controller;
        t && (t.dispose(), t = null);
      }, e.prototype._onPan = function(t) {
        if (this._state !== "animating" && (Math.abs(t.dx) > DD || Math.abs(t.dy) > DD)) {
          var n = this.seriesModel.getData().tree.root;
          if (!n)
            return;
          var a = n.getLayout();
          if (!a)
            return;
          this.api.dispatchAction({
            type: "treemapMove",
            from: this.uid,
            seriesId: this.seriesModel.id,
            rootRect: {
              x: a.x + t.dx,
              y: a.y + t.dy,
              width: a.width,
              height: a.height
            }
          });
        }
      }, e.prototype._onZoom = function(t) {
        var n = t.originX, a = t.originY;
        if (this._state !== "animating") {
          var i = this.seriesModel.getData().tree.root;
          if (!i)
            return;
          var o = i.getLayout();
          if (!o)
            return;
          var s = new xt(o.x, o.y, o.width, o.height), l = this.seriesModel.layoutInfo;
          n -= l.x, a -= l.y;
          var u = dr();
          jr(u, u, [-n, -a]), vf(u, u, [t.scale, t.scale]), jr(u, u, [n, a]), s.applyTransform(u), this.api.dispatchAction({
            type: "treemapRender",
            from: this.uid,
            seriesId: this.seriesModel.id,
            rootRect: {
              x: s.x,
              y: s.y,
              width: s.width,
              height: s.height
            }
          });
        }
      }, e.prototype._initEvents = function(t) {
        var n = this;
        t.on("click", function(a) {
          if (n._state === "ready") {
            var i = n.seriesModel.get("nodeClick", !0);
            if (i) {
              var o = n.findTarget(a.offsetX, a.offsetY);
              if (o) {
                var s = o.node;
                if (s.getLayout().isLeafRoot)
                  n._rootToNode(o);
                else if (i === "zoomToNode")
                  n._zoomToNode(o);
                else if (i === "link") {
                  var l = s.hostTree.data.getItemModel(s.dataIndex), u = l.get("link", !0), f = l.get("target", !0) || "blank";
                  u && Sh(u, f);
                }
              }
            }
          }
        }, this);
      }, e.prototype._renderBreadcrumb = function(t, n, a) {
        var i = this;
        a || (a = t.get("leafDepth", !0) != null ? {
          node: t.getViewRoot()
        } : this.findTarget(n.getWidth() / 2, n.getHeight() / 2), a || (a = {
          node: t.getData().tree.root
        })), (this._breadcrumb || (this._breadcrumb = new CH(this.group))).render(t, n, a.node, function(o) {
          i._state !== "animating" && (Ky(t.getViewRoot(), o) ? i._rootToNode({
            node: o
          }) : i._zoomToNode({
            node: o
          }));
        });
      }, e.prototype.remove = function() {
        this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = Lu(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
      }, e.prototype.dispose = function() {
        this._clearController();
      }, e.prototype._zoomToNode = function(t) {
        this.api.dispatchAction({
          type: "treemapZoomToNode",
          from: this.uid,
          seriesId: this.seriesModel.id,
          targetNode: t.node
        });
      }, e.prototype._rootToNode = function(t) {
        this.api.dispatchAction({
          type: "treemapRootToNode",
          from: this.uid,
          seriesId: this.seriesModel.id,
          targetNode: t.node
        });
      }, e.prototype.findTarget = function(t, n) {
        var a, i = this.seriesModel.getViewRoot();
        return i.eachNode({
          attr: "viewChildren",
          order: "preorder"
        }, function(o) {
          var s = this._storage.background[o.getRawIndex()];
          if (s) {
            var l = s.transformCoordToLocal(t, n), u = s.shape;
            if (u.x <= l[0] && l[0] <= u.x + u.width && u.y <= l[1] && l[1] <= u.y + u.height)
              a = {
                node: o,
                offsetX: l[0],
                offsetY: l[1]
              };
            else
              return !1;
          }
        }, this), a;
      }, e.type = "treemap", e;
    }($t)
  );
  function Lu() {
    return {
      nodeGroup: [],
      background: [],
      content: []
    };
  }
  function kH(r, e, t, n, a, i, o, s, l, u) {
    if (!o)
      return;
    var f = o.getLayout(), h = r.getData(), c = o.getModel();
    if (h.setItemGraphicEl(o.dataIndex, null), !f || !f.isInView)
      return;
    var v = f.width, d = f.height, p = f.borderWidth, g = f.invisible, y = o.getRawIndex(), m = s && s.getRawIndex(), _ = o.viewChildren, S = f.upperHeight, b = _ && _.length, w = c.getModel("itemStyle"), T = c.getModel(["emphasis", "itemStyle"]), C = c.getModel(["blur", "itemStyle"]), I = c.getModel(["select", "itemStyle"]), L = w.get("borderRadius") || 0, P = ft("nodeGroup", Jy);
    if (!P)
      return;
    if (l.add(P), P.x = f.x || 0, P.y = f.y || 0, P.markRedraw(), Dc(P).nodeWidth = v, Dc(P).nodeHeight = d, f.isAboveViewRoot)
      return P;
    var E = ft("background", AD, u, PH);
    E && W(P, E, b && f.upperLabelHeight);
    var R = c.getModel("emphasis"), k = R.get("focus"), O = R.get("blurScope"), N = R.get("disabled"), F = k === "ancestor" ? o.getAncestorsIndices() : k === "descendant" ? o.getDescendantIndices() : k;
    if (b)
      Ma(P) && Li(P, !1), E && (Li(E, !N), h.setItemGraphicEl(o.dataIndex, E), vp(E, F, O));
    else {
      var G = ft("content", AD, u, EH);
      G && X(P, G), E.disableMorphing = !0, E && Ma(E) && Li(E, !1), Li(P, !N), h.setItemGraphicEl(o.dataIndex, P), vp(P, F, O);
    }
    return P;
    function W(Mt, dt, Lt) {
      var Tt = gt(dt);
      if (Tt.dataIndex = o.dataIndex, Tt.seriesIndex = r.seriesIndex, dt.setShape({
        x: 0,
        y: 0,
        width: v,
        height: d,
        r: L
      }), g)
        K(dt);
      else {
        dt.invisible = !1;
        var at = o.getVisual("style"), wt = at.stroke, re = LD(w);
        re.fill = wt;
        var Bt = io(T);
        Bt.fill = T.get("borderColor");
        var fe = io(C);
        fe.fill = C.get("borderColor");
        var se = io(I);
        if (se.fill = I.get("borderColor"), Lt) {
          var Ye = v - 2 * p;
          et(
            // PENDING: convert ZRColor to ColorString for text.
            dt,
            wt,
            at.opacity,
            {
              x: p,
              y: 0,
              width: Ye,
              height: S
            }
          );
        } else
          dt.removeTextContent();
        dt.setStyle(re), dt.ensureState("emphasis").style = Bt, dt.ensureState("blur").style = fe, dt.ensureState("select").style = se, Ii(dt);
      }
      Mt.add(dt);
    }
    function X(Mt, dt) {
      var Lt = gt(dt);
      Lt.dataIndex = o.dataIndex, Lt.seriesIndex = r.seriesIndex;
      var Tt = Math.max(v - 2 * p, 0), at = Math.max(d - 2 * p, 0);
      if (dt.culling = !0, dt.setShape({
        x: p,
        y: p,
        width: Tt,
        height: at,
        r: L
      }), g)
        K(dt);
      else {
        dt.invisible = !1;
        var wt = o.getVisual("style"), re = wt.fill, Bt = LD(w);
        Bt.fill = re, Bt.decal = wt.decal;
        var fe = io(T), se = io(C), Ye = io(I);
        et(dt, re, wt.opacity, null), dt.setStyle(Bt), dt.ensureState("emphasis").style = fe, dt.ensureState("blur").style = se, dt.ensureState("select").style = Ye, Ii(dt);
      }
      Mt.add(dt);
    }
    function K(Mt) {
      !Mt.invisible && i.push(Mt);
    }
    function et(Mt, dt, Lt, Tt) {
      var at = c.getModel(Tt ? ID : MD), wt = _e(c.get("name"), null), re = at.getShallow("show");
      ke(Mt, Ce(c, Tt ? ID : MD), {
        defaultText: re ? wt : null,
        inheritColor: dt,
        defaultOpacity: Lt,
        labelFetcher: r,
        labelDataIndex: o.dataIndex
      });
      var Bt = Mt.getTextContent();
      if (Bt) {
        var fe = Bt.style, se = uf(fe.padding || 0);
        Tt && (Mt.setTextConfig({
          layoutRect: Tt
        }), Bt.disableLabelLayout = !0), Bt.beforeUpdate = function() {
          var fa = Math.max((Tt ? Tt.width : Mt.shape.width) - se[1] - se[3], 0), cr = Math.max((Tt ? Tt.height : Mt.shape.height) - se[0] - se[2], 0);
          (fe.width !== fa || fe.height !== cr) && Bt.setStyle({
            width: fa,
            height: cr
          });
        }, fe.truncateMinChar = 2, fe.lineOverflow = "truncate", lt(fe, Tt, f);
        var Ye = Bt.getState("emphasis");
        lt(Ye ? Ye.style : null, Tt, f);
      }
    }
    function lt(Mt, dt, Lt) {
      var Tt = Mt ? Mt.text : null;
      if (!dt && Lt.isLeafRoot && Tt != null) {
        var at = r.get("drillDownIcon", !0);
        Mt.text = at ? at + " " + Tt : Tt;
      }
    }
    function ft(Mt, dt, Lt, Tt) {
      var at = m != null && t[Mt][m], wt = a[Mt];
      return at ? (t[Mt][m] = null, It(wt, at)) : g || (at = new dt(), at instanceof kr && (at.z2 = OH(Lt, Tt)), zt(wt, at)), e[Mt][y] = at;
    }
    function It(Mt, dt) {
      var Lt = Mt[y] = {};
      dt instanceof Jy ? (Lt.oldX = dt.x, Lt.oldY = dt.y) : Lt.oldShape = H({}, dt.shape);
    }
    function zt(Mt, dt) {
      var Lt = Mt[y] = {}, Tt = o.parentNode, at = dt instanceof ct;
      if (Tt && (!n || n.direction === "drillDown")) {
        var wt = 0, re = 0, Bt = a.background[Tt.getRawIndex()];
        !n && Bt && Bt.oldShape && (wt = Bt.oldShape.width, re = Bt.oldShape.height), at ? (Lt.oldX = 0, Lt.oldY = re) : Lt.oldShape = {
          x: wt,
          y: re,
          width: 0,
          height: 0
        };
      }
      Lt.fadein = !at;
    }
  }
  function OH(r, e) {
    return r * LH + e;
  }
  var Pu = M, NH = it, Mc = -1, Me = (
    /** @class */
    function() {
      function r(e) {
        var t = e.mappingMethod, n = e.type, a = this.option = ht(e);
        this.type = n, this.mappingMethod = t, this._normalizeData = zH[t];
        var i = r.visualHandlers[n];
        this.applyVisual = i.applyVisual, this.getColorMapper = i.getColorMapper, this._normalizedToVisual = i._normalizedToVisual[t], t === "piecewise" ? (Qy(a), VH(a)) : t === "category" ? a.categories ? BH(a) : Qy(a, !0) : (st(t !== "linear" || a.dataExtent), Qy(a));
      }
      return r.prototype.mapValueToVisual = function(e) {
        var t = this._normalizeData(e);
        return this._normalizedToVisual(t, e);
      }, r.prototype.getNormalizer = function() {
        return J(this._normalizeData, this);
      }, r.listVisualTypes = function() {
        return Pt(r.visualHandlers);
      }, r.isValidType = function(e) {
        return r.visualHandlers.hasOwnProperty(e);
      }, r.eachVisual = function(e, t, n) {
        it(e) ? M(e, t, n) : t.call(n, e);
      }, r.mapVisual = function(e, t, n) {
        var a, i = U(e) ? [] : it(e) ? {} : (a = !0, null);
        return r.eachVisual(e, function(o, s) {
          var l = t.call(n, o, s);
          a ? i = l : i[s] = l;
        }), i;
      }, r.retrieveVisuals = function(e) {
        var t = {}, n;
        return e && Pu(r.visualHandlers, function(a, i) {
          e.hasOwnProperty(i) && (t[i] = e[i], n = !0);
        }), n ? t : null;
      }, r.prepareVisualTypes = function(e) {
        if (U(e))
          e = e.slice();
        else if (NH(e)) {
          var t = [];
          Pu(e, function(n, a) {
            t.push(a);
          }), e = t;
        } else
          return [];
        return e.sort(function(n, a) {
          return a === "color" && n !== "color" && n.indexOf("color") === 0 ? 1 : -1;
        }), e;
      }, r.dependsOn = function(e, t) {
        return t === "color" ? !!(e && e.indexOf(t) === 0) : e === t;
      }, r.findPieceIndex = function(e, t, n) {
        for (var a, i = 1 / 0, o = 0, s = t.length; o < s; o++) {
          var l = t[o].value;
          if (l != null) {
            if (l === e || j(l) && l === e + "")
              return o;
            n && c(l, o);
          }
        }
        for (var o = 0, s = t.length; o < s; o++) {
          var u = t[o], f = u.interval, h = u.close;
          if (f) {
            if (f[0] === -1 / 0) {
              if (Lc(h[1], e, f[1]))
                return o;
            } else if (f[1] === 1 / 0) {
              if (Lc(h[0], f[0], e))
                return o;
            } else if (Lc(h[0], f[0], e) && Lc(h[1], e, f[1]))
              return o;
            n && c(f[0], o), n && c(f[1], o);
          }
        }
        if (n)
          return e === 1 / 0 ? t.length - 1 : e === -1 / 0 ? 0 : a;
        function c(v, d) {
          var p = Math.abs(v - e);
          p < i && (i = p, a = d);
        }
      }, r.visualHandlers = {
        color: {
          applyVisual: Eu("color"),
          getColorMapper: function() {
            var e = this.option;
            return J(e.mappingMethod === "category" ? function(t, n) {
              return !n && (t = this._normalizeData(t)), Ru.call(this, t);
            } : function(t, n, a) {
              var i = !!a;
              return !n && (t = this._normalizeData(t)), a = il(t, e.parsedVisual, a), i ? a : Qr(a, "rgba");
            }, this);
          },
          _normalizedToVisual: {
            linear: function(e) {
              return Qr(il(e, this.option.parsedVisual), "rgba");
            },
            category: Ru,
            piecewise: function(e, t) {
              var n = em.call(this, t);
              return n == null && (n = Qr(il(e, this.option.parsedVisual), "rgba")), n;
            },
            fixed: oo
          }
        },
        colorHue: Ic(function(e, t) {
          return Do(e, t);
        }),
        colorSaturation: Ic(function(e, t) {
          return Do(e, null, t);
        }),
        colorLightness: Ic(function(e, t) {
          return Do(e, null, null, t);
        }),
        colorAlpha: Ic(function(e, t) {
          return ol(e, t);
        }),
        decal: {
          applyVisual: Eu("decal"),
          _normalizedToVisual: {
            linear: null,
            category: Ru,
            piecewise: null,
            fixed: null
          }
        },
        opacity: {
          applyVisual: Eu("opacity"),
          _normalizedToVisual: tm([0, 1])
        },
        liftZ: {
          applyVisual: Eu("liftZ"),
          _normalizedToVisual: {
            linear: oo,
            category: oo,
            piecewise: oo,
            fixed: oo
          }
        },
        symbol: {
          applyVisual: function(e, t, n) {
            var a = this.mapValueToVisual(e);
            n("symbol", a);
          },
          _normalizedToVisual: {
            linear: PD,
            category: Ru,
            piecewise: function(e, t) {
              var n = em.call(this, t);
              return n == null && (n = PD.call(this, e)), n;
            },
            fixed: oo
          }
        },
        symbolSize: {
          applyVisual: Eu("symbolSize"),
          _normalizedToVisual: tm([0, 1])
        }
      }, r;
    }()
  );
  function VH(r) {
    var e = r.pieceList;
    r.hasSpecialVisual = !1, M(e, function(t, n) {
      t.originIndex = n, t.visual != null && (r.hasSpecialVisual = !0);
    });
  }
  function BH(r) {
    var e = r.categories, t = r.categoryMap = {}, n = r.visual;
    if (Pu(e, function(o, s) {
      t[o] = s;
    }), !U(n)) {
      var a = [];
      it(n) ? Pu(n, function(o, s) {
        var l = t[s];
        a[l ?? Mc] = o;
      }) : a[Mc] = n, n = ED(r, a);
    }
    for (var i = e.length - 1; i >= 0; i--)
      n[i] == null && (delete t[e[i]], e.pop());
  }
  function Qy(r, e) {
    var t = r.visual, n = [];
    it(t) ? Pu(t, function(i) {
      n.push(i);
    }) : t != null && n.push(t);
    var a = {
      color: 1,
      symbol: 1
    };
    !e && n.length === 1 && !a.hasOwnProperty(r.type) && (n[1] = n[0]), ED(r, n);
  }
  function Ic(r) {
    return {
      applyVisual: function(e, t, n) {
        var a = this.mapValueToVisual(e);
        n("color", r(t("color"), a));
      },
      _normalizedToVisual: tm([0, 1])
    };
  }
  function PD(r) {
    var e = this.option.visual;
    return e[Math.round(Wt(r, [0, 1], [0, e.length - 1], !0))] || {};
  }
  function Eu(r) {
    return function(e, t, n) {
      n(r, this.mapValueToVisual(e));
    };
  }
  function Ru(r) {
    var e = this.option.visual;
    return e[this.option.loop && r !== Mc ? r % e.length : r];
  }
  function oo() {
    return this.option.visual[0];
  }
  function tm(r) {
    return {
      linear: function(e) {
        return Wt(e, r, this.option.visual, !0);
      },
      category: Ru,
      piecewise: function(e, t) {
        var n = em.call(this, t);
        return n == null && (n = Wt(e, r, this.option.visual, !0)), n;
      },
      fixed: oo
    };
  }
  function em(r) {
    var e = this.option, t = e.pieceList;
    if (e.hasSpecialVisual) {
      var n = Me.findPieceIndex(r, t), a = t[n];
      if (a && a.visual)
        return a.visual[this.type];
    }
  }
  function ED(r, e) {
    return r.visual = e, r.type === "color" && (r.parsedVisual = Y(e, function(t) {
      var n = qe(t);
      return n || ae("'" + t + "' is an illegal color, fallback to '#000000'", !0), n || [0, 0, 0, 1];
    })), e;
  }
  var zH = {
    linear: function(r) {
      return Wt(r, this.option.dataExtent, [0, 1], !0);
    },
    piecewise: function(r) {
      var e = this.option.pieceList, t = Me.findPieceIndex(r, e, !0);
      if (t != null)
        return Wt(t, [0, e.length - 1], [0, 1], !0);
    },
    category: function(r) {
      var e = this.option.categories ? this.option.categoryMap[r] : r;
      return e ?? Mc;
    },
    fixed: ue
  };
  function Lc(r, e, t) {
    return r ? e <= t : e < t;
  }
  var GH = "itemStyle", RD = Nt(), FH = {
    seriesType: "treemap",
    reset: function(r) {
      var e = r.getData().tree, t = e.root;
      t.isRemoved() || kD(
        t,
        // Visual should calculate from tree root but not view root.
        {},
        r.getViewRoot().getAncestors(),
        r
      );
    }
  };
  function kD(r, e, t, n) {
    var a = r.getModel(), i = r.getLayout(), o = r.hostTree.data;
    if (!(!i || i.invisible || !i.isInView)) {
      var s = a.getModel(GH), l = HH(s, e, n), u = o.ensureUniqueItemVisual(r.dataIndex, "style"), f = s.get("borderColor"), h = s.get("borderColorSaturation"), c;
      h != null && (c = OD(l), f = WH(h, c)), u.stroke = f;
      var v = r.viewChildren;
      if (!v || !v.length)
        c = OD(l), u.fill = c;
      else {
        var d = UH(r, a, i, s, l, v);
        M(v, function(p, g) {
          if (p.depth >= t.length || p === t[p.depth]) {
            var y = YH(a, l, p, g, d, n);
            kD(p, y, t, n);
          }
        });
      }
    }
  }
  function HH(r, e, t) {
    var n = H({}, e), a = t.designatedVisualItemStyle;
    return M(["color", "colorAlpha", "colorSaturation"], function(i) {
      a[i] = e[i];
      var o = r.get(i);
      a[i] = null, o != null && (n[i] = o);
    }), n;
  }
  function OD(r) {
    var e = rm(r, "color");
    if (e) {
      var t = rm(r, "colorAlpha"), n = rm(r, "colorSaturation");
      return n && (e = Do(e, null, null, n)), t && (e = ol(e, t)), e;
    }
  }
  function WH(r, e) {
    return e != null ? Do(e, null, null, r) : null;
  }
  function rm(r, e) {
    var t = r[e];
    if (t != null && t !== "none")
      return t;
  }
  function UH(r, e, t, n, a, i) {
    if (!(!i || !i.length)) {
      var o = nm(e, "color") || a.color != null && a.color !== "none" && (nm(e, "colorAlpha") || nm(e, "colorSaturation"));
      if (o) {
        var s = e.get("visualMin"), l = e.get("visualMax"), u = t.dataExtent.slice();
        s != null && s < u[0] && (u[0] = s), l != null && l > u[1] && (u[1] = l);
        var f = e.get("colorMappingBy"), h = {
          type: o.name,
          dataExtent: u,
          visual: o.range
        };
        h.type === "color" && (f === "index" || f === "id") ? (h.mappingMethod = "category", h.loop = !0) : h.mappingMethod = "linear";
        var c = new Me(h);
        return RD(c).drColorMappingBy = f, c;
      }
    }
  }
  function nm(r, e) {
    var t = r.get(e);
    return U(t) && t.length ? {
      name: e,
      range: t
    } : null;
  }
  function YH(r, e, t, n, a, i) {
    var o = H({}, e);
    if (a) {
      var s = a.type, l = s === "color" && RD(a).drColorMappingBy, u = l === "index" ? n : l === "id" ? i.mapIdToIndex(t.getId()) : t.getValue(r.get("visualDimension"));
      o[s] = a.mapValueToVisual(u);
    }
    return o;
  }
  var ku = Math.max, Pc = Math.min, ND = he, am = M, VD = ["itemStyle", "borderWidth"], $H = ["itemStyle", "gapWidth"], XH = ["upperLabel", "show"], ZH = ["upperLabel", "height"], qH = {
    seriesType: "treemap",
    reset: function(r, e, t, n) {
      var a = t.getWidth(), i = t.getHeight(), o = r.option, s = ye(r.getBoxLayoutParams(), {
        width: t.getWidth(),
        height: t.getHeight()
      }), l = o.size || [], u = Z(ND(s.width, l[0]), a), f = Z(ND(s.height, l[1]), i), h = n && n.type, c = ["treemapZoomToNode", "treemapRootToNode"], v = Mu(n, c, r), d = h === "treemapRender" || h === "treemapMove" ? n.rootRect : null, p = r.getViewRoot(), g = xD(p);
      if (h !== "treemapMove") {
        var y = h === "treemapZoomToNode" ? e4(r, v, p, u, f) : d ? [d.width, d.height] : [u, f], m = o.sort;
        m && m !== "asc" && m !== "desc" && (m = "desc");
        var _ = {
          squareRatio: o.squareRatio,
          sort: m,
          leafDepth: o.leafDepth
        };
        p.hostTree.clearLayouts();
        var S = {
          x: 0,
          y: 0,
          width: y[0],
          height: y[1],
          area: y[0] * y[1]
        };
        p.setLayout(S), BD(p, _, !1, 0), S = p.getLayout(), am(g, function(w, T) {
          var C = (g[T + 1] || p).getValue();
          w.setLayout(H({
            dataExtent: [C, C],
            borderWidth: 0,
            upperHeight: 0
          }, S));
        });
      }
      var b = r.getData().tree.root;
      b.setLayout(r4(s, d, v), !0), r.setLayoutInfo(s), GD(
        b,
        // Transform to base element coordinate system.
        new xt(-s.x, -s.y, a, i),
        g,
        p,
        0
      );
    }
  };
  function BD(r, e, t, n) {
    var a, i;
    if (!r.isRemoved()) {
      var o = r.getLayout();
      a = o.width, i = o.height;
      var s = r.getModel(), l = s.get(VD), u = s.get($H) / 2, f = FD(s), h = Math.max(l, f), c = l - u, v = h - u;
      r.setLayout({
        borderWidth: l,
        upperHeight: h,
        upperLabelHeight: f
      }, !0), a = ku(a - 2 * c, 0), i = ku(i - c - v, 0);
      var d = a * i, p = KH(r, s, d, e, t, n);
      if (p.length) {
        var g = {
          x: c,
          y: v,
          width: a,
          height: i
        }, y = Pc(a, i), m = 1 / 0, _ = [];
        _.area = 0;
        for (var S = 0, b = p.length; S < b; ) {
          var w = p[S];
          _.push(w), _.area += w.getLayout().area;
          var T = t4(_, y, e.squareRatio);
          T <= m ? (S++, m = T) : (_.area -= _.pop().getLayout().area, zD(_, y, g, u, !1), y = Pc(g.width, g.height), _.length = _.area = 0, m = 1 / 0);
        }
        if (_.length && zD(_, y, g, u, !0), !t) {
          var C = s.get("childrenVisibleMin");
          C != null && d < C && (t = !0);
        }
        for (var S = 0, b = p.length; S < b; S++)
          BD(p[S], e, t, n + 1);
      }
    }
  }
  function KH(r, e, t, n, a, i) {
    var o = r.children || [], s = n.sort;
    s !== "asc" && s !== "desc" && (s = null);
    var l = n.leafDepth != null && n.leafDepth <= i;
    if (a && !l)
      return r.viewChildren = [];
    o = Ht(o, function(v) {
      return !v.isRemoved();
    }), JH(o, s);
    var u = QH(e, o, s);
    if (u.sum === 0)
      return r.viewChildren = [];
    if (u.sum = jH(e, t, u.sum, s, o), u.sum === 0)
      return r.viewChildren = [];
    for (var f = 0, h = o.length; f < h; f++) {
      var c = o[f].getValue() / u.sum * t;
      o[f].setLayout({
        area: c
      });
    }
    return l && (o.length && r.setLayout({
      isLeafRoot: !0
    }, !0), o.length = 0), r.viewChildren = o, r.setLayout({
      dataExtent: u.dataExtent
    }, !0), o;
  }
  function jH(r, e, t, n, a) {
    if (!n)
      return t;
    for (var i = r.get("visibleMin"), o = a.length, s = o, l = o - 1; l >= 0; l--) {
      var u = a[n === "asc" ? o - l - 1 : l].getValue();
      u / t * e < i && (s = l, t -= u);
    }
    return n === "asc" ? a.splice(0, o - s) : a.splice(s, o - s), t;
  }
  function JH(r, e) {
    return e && r.sort(function(t, n) {
      var a = e === "asc" ? t.getValue() - n.getValue() : n.getValue() - t.getValue();
      return a === 0 ? e === "asc" ? t.dataIndex - n.dataIndex : n.dataIndex - t.dataIndex : a;
    }), r;
  }
  function QH(r, e, t) {
    for (var n = 0, a = 0, i = e.length; a < i; a++)
      n += e[a].getValue();
    var o = r.get("visualDimension"), s;
    return !e || !e.length ? s = [NaN, NaN] : o === "value" && t ? (s = [e[e.length - 1].getValue(), e[0].getValue()], t === "asc" && s.reverse()) : (s = [1 / 0, -1 / 0], am(e, function(l) {
      var u = l.getValue(o);
      u < s[0] && (s[0] = u), u > s[1] && (s[1] = u);
    })), {
      sum: n,
      dataExtent: s
    };
  }
  function t4(r, e, t) {
    for (var n = 0, a = 1 / 0, i = 0, o = void 0, s = r.length; i < s; i++)
      o = r[i].getLayout().area, o && (o < a && (a = o), o > n && (n = o));
    var l = r.area * r.area, u = e * e * t;
    return l ? ku(u * n / l, l / (u * a)) : 1 / 0;
  }
  function zD(r, e, t, n, a) {
    var i = e === t.width ? 0 : 1, o = 1 - i, s = ["x", "y"], l = ["width", "height"], u = t[s[i]], f = e ? r.area / e : 0;
    (a || f > t[l[o]]) && (f = t[l[o]]);
    for (var h = 0, c = r.length; h < c; h++) {
      var v = r[h], d = {}, p = f ? v.getLayout().area / f : 0, g = d[l[o]] = ku(f - 2 * n, 0), y = t[s[i]] + t[l[i]] - u, m = h === c - 1 || y < p ? y : p, _ = d[l[i]] = ku(m - 2 * n, 0);
      d[s[o]] = t[s[o]] + Pc(n, g / 2), d[s[i]] = u + Pc(n, _ / 2), u += m, v.setLayout(d, !0);
    }
    t[s[o]] += f, t[l[o]] -= f;
  }
  function e4(r, e, t, n, a) {
    var i = (e || {}).node, o = [n, a];
    if (!i || i === t)
      return o;
    for (var s, l = n * a, u = l * r.option.zoomToNodeRatio; s = i.parentNode; ) {
      for (var f = 0, h = s.children, c = 0, v = h.length; c < v; c++)
        f += h[c].getValue();
      var d = i.getValue();
      if (d === 0)
        return o;
      u *= f / d;
      var p = s.getModel(), g = p.get(VD), y = Math.max(g, FD(p));
      u += 4 * g * g + (3 * g + y) * Math.pow(u, 0.5), u > kd && (u = kd), i = s;
    }
    u < l && (u = l);
    var m = Math.pow(u / l, 0.5);
    return [n * m, a * m];
  }
  function r4(r, e, t) {
    if (e)
      return {
        x: e.x,
        y: e.y
      };
    var n = {
      x: 0,
      y: 0
    };
    if (!t)
      return n;
    var a = t.node, i = a.getLayout();
    if (!i)
      return n;
    for (var o = [i.width / 2, i.height / 2], s = a; s; ) {
      var l = s.getLayout();
      o[0] += l.x, o[1] += l.y, s = s.parentNode;
    }
    return {
      x: r.width / 2 - o[0],
      y: r.height / 2 - o[1]
    };
  }
  function GD(r, e, t, n, a) {
    var i = r.getLayout(), o = t[a], s = o && o === r;
    if (!(o && !s || a === t.length && r !== n)) {
      r.setLayout({
        // isInView means: viewRoot sub tree + viewAbovePath
        isInView: !0,
        // invisible only means: outside view clip so that the node can not
        // see but still layout for animation preparation but not render.
        invisible: !s && !e.intersect(i),
        isAboveViewRoot: s
      }, !0);
      var l = new xt(e.x - i.x, e.y - i.y, e.width, e.height);
      am(r.viewChildren || [], function(u) {
        GD(u, l, t, n, a + 1);
      });
    }
  }
  function FD(r) {
    return r.get(XH) ? r.get(ZH) : 0;
  }
  function n4(r) {
    r.registerSeriesModel(wH), r.registerChartView(RH), r.registerVisual(FH), r.registerLayout(qH), xH(r);
  }
  function a4(r) {
    var e = r.findComponents({
      mainType: "legend"
    });
    !e || !e.length || r.eachSeriesByType("graph", function(t) {
      var n = t.getCategoriesData(), a = t.getGraph(), i = a.data, o = n.mapArray(n.getName);
      i.filterSelf(function(s) {
        var l = i.getItemModel(s), u = l.getShallow("category");
        if (u != null) {
          Ot(u) && (u = o[u]);
          for (var f = 0; f < e.length; f++)
            if (!e[f].isSelected(u))
              return !1;
        }
        return !0;
      });
    });
  }
  function i4(r) {
    var e = {};
    r.eachSeriesByType("graph", function(t) {
      var n = t.getCategoriesData(), a = t.getData(), i = {};
      n.each(function(o) {
        var s = n.getName(o);
        i["ec-" + s] = o;
        var l = n.getItemModel(o), u = l.getModel("itemStyle").getItemStyle();
        u.fill || (u.fill = t.getColorFromPalette(s, e)), n.setItemVisual(o, "style", u);
        for (var f = ["symbol", "symbolSize", "symbolKeepAspect"], h = 0; h < f.length; h++) {
          var c = l.getShallow(f[h], !0);
          c != null && n.setItemVisual(o, f[h], c);
        }
      }), n.count() && a.each(function(o) {
        var s = a.getItemModel(o), l = s.getShallow("category");
        if (l != null) {
          j(l) && (l = i["ec-" + l]);
          var u = n.getItemVisual(l, "style"), f = a.ensureUniqueItemVisual(o, "style");
          H(f, u);
          for (var h = ["symbol", "symbolSize", "symbolKeepAspect"], c = 0; c < h.length; c++)
            a.setItemVisual(o, h[c], n.getItemVisual(l, h[c]));
        }
      });
    });
  }
  function Ec(r) {
    return r instanceof Array || (r = [r, r]), r;
  }
  function o4(r) {
    r.eachSeriesByType("graph", function(e) {
      var t = e.getGraph(), n = e.getEdgeData(), a = Ec(e.get("edgeSymbol")), i = Ec(e.get("edgeSymbolSize"));
      n.setVisual("fromSymbol", a && a[0]), n.setVisual("toSymbol", a && a[1]), n.setVisual("fromSymbolSize", i && i[0]), n.setVisual("toSymbolSize", i && i[1]), n.setVisual("style", e.getModel("lineStyle").getLineStyle()), n.each(function(o) {
        var s = n.getItemModel(o), l = t.getEdgeByIndex(o), u = Ec(s.getShallow("symbol", !0)), f = Ec(s.getShallow("symbolSize", !0)), h = s.getModel("lineStyle").getLineStyle(), c = n.ensureUniqueItemVisual(o, "style");
        switch (H(c, h), c.stroke) {
          case "source": {
            var v = l.node1.getVisual("style");
            c.stroke = v && v.fill;
            break;
          }
          case "target": {
            var v = l.node2.getVisual("style");
            c.stroke = v && v.fill;
            break;
          }
        }
        u[0] && l.setVisual("fromSymbol", u[0]), u[1] && l.setVisual("toSymbol", u[1]), f[0] && l.setVisual("fromSymbolSize", f[0]), f[1] && l.setVisual("toSymbolSize", f[1]);
      });
    });
  }
  var im = "-->", Rc = function(r) {
    return r.get("autoCurveness") || null;
  }, HD = function(r, e) {
    var t = Rc(r), n = 20, a = [];
    if (Ot(t))
      n = t;
    else if (U(t)) {
      r.__curvenessList = t;
      return;
    }
    e > n && (n = e);
    var i = n % 2 ? n + 2 : n + 3;
    a = [];
    for (var o = 0; o < i; o++)
      a.push((o % 2 ? o + 1 : o) / 10 * (o % 2 ? -1 : 1));
    r.__curvenessList = a;
  }, Ou = function(r, e, t) {
    var n = [r.id, r.dataIndex].join("."), a = [e.id, e.dataIndex].join(".");
    return [t.uid, n, a].join(im);
  }, WD = function(r) {
    var e = r.split(im);
    return [e[0], e[2], e[1]].join(im);
  }, s4 = function(r, e) {
    var t = Ou(r.node1, r.node2, e);
    return e.__edgeMap[t];
  }, l4 = function(r, e) {
    var t = om(Ou(r.node1, r.node2, e), e), n = om(Ou(r.node2, r.node1, e), e);
    return t + n;
  }, om = function(r, e) {
    var t = e.__edgeMap;
    return t[r] ? t[r].length : 0;
  };
  function u4(r) {
    Rc(r) && (r.__curvenessList = [], r.__edgeMap = {}, HD(r));
  }
  function f4(r, e, t, n) {
    if (Rc(t)) {
      var a = Ou(r, e, t), i = t.__edgeMap, o = i[WD(a)];
      i[a] && !o ? i[a].isForward = !0 : o && i[a] && (o.isForward = !0, i[a].isForward = !1), i[a] = i[a] || [], i[a].push(n);
    }
  }
  function sm(r, e, t, n) {
    var a = Rc(e), i = U(a);
    if (!a)
      return null;
    var o = s4(r, e);
    if (!o)
      return null;
    for (var s = -1, l = 0; l < o.length; l++)
      if (o[l] === t) {
        s = l;
        break;
      }
    var u = l4(r, e);
    HD(e, u), r.lineStyle = r.lineStyle || {};
    var f = Ou(r.node1, r.node2, e), h = e.__curvenessList, c = i || u % 2 ? 0 : 1;
    if (o.isForward)
      return h[c + s];
    var v = WD(f), d = om(v, e), p = h[s + d + c];
    return n ? i ? a && a[0] === 0 ? (d + c) % 2 ? p : -p : ((d % 2 ? 0 : 1) + c) % 2 ? p : -p : (d + c) % 2 ? p : -p : h[s + d + c];
  }
  function UD(r) {
    var e = r.coordinateSystem;
    if (!(e && e.type !== "view")) {
      var t = r.getGraph();
      t.eachNode(function(n) {
        var a = n.getModel();
        n.setLayout([+a.get("x"), +a.get("y")]);
      }), lm(t, r);
    }
  }
  function lm(r, e) {
    r.eachEdge(function(t, n) {
      var a = Dr(t.getModel().get(["lineStyle", "curveness"]), -sm(t, e, n, !0), 0), i = yn(t.node1.getLayout()), o = yn(t.node2.getLayout()), s = [i, o];
      +a && s.push([(i[0] + o[0]) / 2 - (i[1] - o[1]) * a, (i[1] + o[1]) / 2 - (o[0] - i[0]) * a]), t.setLayout(s);
    });
  }
  function h4(r, e) {
    r.eachSeriesByType("graph", function(t) {
      var n = t.get("layout"), a = t.coordinateSystem;
      if (a && a.type !== "view") {
        var i = t.getData(), o = [];
        M(a.dimensions, function(c) {
          o = o.concat(i.mapDimensionsAll(c));
        });
        for (var s = 0; s < i.count(); s++) {
          for (var l = [], u = !1, f = 0; f < o.length; f++) {
            var h = i.get(o[f], s);
            isNaN(h) || (u = !0), l.push(h);
          }
          u ? i.setItemLayout(s, a.dataToPoint(l)) : i.setItemLayout(s, [NaN, NaN]);
        }
        lm(i.graph, t);
      } else
        (!n || n === "none") && UD(t);
    });
  }
  function Nu(r) {
    var e = r.coordinateSystem;
    if (e.type !== "view")
      return 1;
    var t = r.option.nodeScaleRatio, n = e.scaleX, a = e.getZoom(), i = (a - 1) * t + 1;
    return i / n;
  }
  function Vu(r) {
    var e = r.getVisual("symbolSize");
    return e instanceof Array && (e = (e[0] + e[1]) / 2), +e;
  }
  var YD = Math.PI, um = [];
  function fm(r, e, t, n) {
    var a = r.coordinateSystem;
    if (!(a && a.type !== "view")) {
      var i = a.getBoundingRect(), o = r.getData(), s = o.graph, l = i.width / 2 + i.x, u = i.height / 2 + i.y, f = Math.min(i.width, i.height) / 2, h = o.count();
      if (o.setLayout({
        cx: l,
        cy: u
      }), !!h) {
        if (t) {
          var c = a.pointToData(n), v = c[0], d = c[1], p = [v - l, d - u];
          oi(p, p), Xs(p, p, f), t.setLayout([l + p[0], u + p[1]], !0);
          var g = r.get(["circular", "rotateLabel"]);
          $D(t, g, l, u);
        }
        c4[e](r, s, o, f, l, u, h), s.eachEdge(function(y, m) {
          var _ = Dr(y.getModel().get(["lineStyle", "curveness"]), sm(y, r, m), 0), S = yn(y.node1.getLayout()), b = yn(y.node2.getLayout()), w, T = (S[0] + b[0]) / 2, C = (S[1] + b[1]) / 2;
          +_ && (_ *= 3, w = [l * _ + T * (1 - _), u * _ + C * (1 - _)]), y.setLayout([S, b, w]);
        });
      }
    }
  }
  var c4 = {
    value: function(r, e, t, n, a, i, o) {
      var s = 0, l = t.getSum("value"), u = Math.PI * 2 / (l || o);
      e.eachNode(function(f) {
        var h = f.getValue("value"), c = u * (l ? h : 1) / 2;
        s += c, f.setLayout([n * Math.cos(s) + a, n * Math.sin(s) + i]), s += c;
      });
    },
    symbolSize: function(r, e, t, n, a, i, o) {
      var s = 0;
      um.length = o;
      var l = Nu(r);
      e.eachNode(function(h) {
        var c = Vu(h);
        isNaN(c) && (c = 2), c < 0 && (c = 0), c *= l;
        var v = Math.asin(c / 2 / n);
        isNaN(v) && (v = YD / 2), um[h.dataIndex] = v, s += v * 2;
      });
      var u = (2 * YD - s) / o / 2, f = 0;
      e.eachNode(function(h) {
        var c = u + um[h.dataIndex];
        f += c, (!h.getLayout() || !h.getLayout().fixed) && h.setLayout([n * Math.cos(f) + a, n * Math.sin(f) + i]), f += c;
      });
    }
  };
  function $D(r, e, t, n) {
    var a = r.getGraphicEl();
    if (a) {
      var i = r.getModel(), o = i.get(["label", "rotate"]) || 0, s = a.getSymbolPath();
      if (e) {
        var l = r.getLayout(), u = Math.atan2(l[1] - n, l[0] - t);
        u < 0 && (u = Math.PI * 2 + u);
        var f = l[0] < t;
        f && (u = u - Math.PI);
        var h = f ? "left" : "right";
        s.setTextConfig({
          rotation: -u,
          position: h,
          origin: "center"
        });
        var c = s.ensureState("emphasis");
        H(c.textConfig || (c.textConfig = {}), {
          position: h
        });
      } else
        s.setTextConfig({
          rotation: o *= Math.PI / 180
        });
    }
  }
  function v4(r) {
    r.eachSeriesByType("graph", function(e) {
      e.get("layout") === "circular" && fm(e, "symbolSize");
    });
  }
  var Ss = ff;
  function d4(r, e, t) {
    for (var n = r, a = e, i = t.rect, o = i.width, s = i.height, l = [i.x + o / 2, i.y + s / 2], u = t.gravity == null ? 0.1 : t.gravity, f = 0; f < n.length; f++) {
      var h = n[f];
      h.p || (h.p = va(o * (Math.random() - 0.5) + l[0], s * (Math.random() - 0.5) + l[1])), h.pp = yn(h.p), h.edges = null;
    }
    var c = t.friction == null ? 0.6 : t.friction, v = c, d, p;
    return {
      warmUp: function() {
        v = c * 0.8;
      },
      setFixed: function(g) {
        n[g].fixed = !0;
      },
      setUnfixed: function(g) {
        n[g].fixed = !1;
      },
      /**
       * Before step hook
       */
      beforeStep: function(g) {
        d = g;
      },
      /**
       * After step hook
       */
      afterStep: function(g) {
        p = g;
      },
      /**
       * Some formulas were originally copied from "d3.js"
       * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js
       * with some modifications made for this project.
       * See the license statement at the head of this file.
       */
      step: function(g) {
        d && d(n, a);
        for (var y = [], m = n.length, _ = 0; _ < a.length; _++) {
          var S = a[_];
          if (!S.ignoreForceLayout) {
            var b = S.n1, w = S.n2;
            da(y, w.p, b.p);
            var T = $s(y) - S.d, C = w.w / (b.w + w.w);
            isNaN(C) && (C = 0), oi(y, y), !b.fixed && Ss(b.p, b.p, y, C * T * v), !w.fixed && Ss(w.p, w.p, y, -(1 - C) * T * v);
          }
        }
        for (var _ = 0; _ < m; _++) {
          var I = n[_];
          I.fixed || (da(y, l, I.p), Ss(I.p, I.p, y, u * v));
        }
        for (var _ = 0; _ < m; _++)
          for (var b = n[_], L = _ + 1; L < m; L++) {
            var w = n[L];
            da(y, w.p, b.p);
            var T = $s(y);
            T === 0 && (U_(y, Math.random() - 0.5, Math.random() - 0.5), T = 1);
            var P = (b.rep + w.rep) / T / T;
            !b.fixed && Ss(b.pp, b.pp, y, P), !w.fixed && Ss(w.pp, w.pp, y, -P);
          }
        for (var E = [], _ = 0; _ < m; _++) {
          var I = n[_];
          I.fixed || (da(E, I.p, I.pp), Ss(I.p, I.p, E, v), Ne(I.pp, I.p));
        }
        v = v * 0.992;
        var R = v < 0.01;
        p && p(n, a, R), g && g(R);
      }
    };
  }
  function p4(r) {
    r.eachSeriesByType("graph", function(e) {
      var t = e.coordinateSystem;
      if (!(t && t.type !== "view"))
        if (e.get("layout") === "force") {
          var n = e.preservedPoints || {}, a = e.getGraph(), i = a.data, o = a.edgeData, s = e.getModel("force"), l = s.get("initLayout");
          e.preservedPoints ? i.each(function(_) {
            var S = i.getId(_);
            i.setItemLayout(_, n[S] || [NaN, NaN]);
          }) : !l || l === "none" ? UD(e) : l === "circular" && fm(e, "value");
          var u = i.getDataExtent("value"), f = o.getDataExtent("value"), h = s.get("repulsion"), c = s.get("edgeLength"), v = U(h) ? h : [h, h], d = U(c) ? c : [c, c];
          d = [d[1], d[0]];
          var p = i.mapArray("value", function(_, S) {
            var b = i.getItemLayout(S), w = Wt(_, u, v);
            return isNaN(w) && (w = (v[0] + v[1]) / 2), {
              w,
              rep: w,
              fixed: i.getItemModel(S).get("fixed"),
              p: !b || isNaN(b[0]) || isNaN(b[1]) ? null : b
            };
          }), g = o.mapArray("value", function(_, S) {
            var b = a.getEdgeByIndex(S), w = Wt(_, f, d);
            isNaN(w) && (w = (d[0] + d[1]) / 2);
            var T = b.getModel(), C = Dr(b.getModel().get(["lineStyle", "curveness"]), -sm(b, e, S, !0), 0);
            return {
              n1: p[b.node1.dataIndex],
              n2: p[b.node2.dataIndex],
              d: w,
              curveness: C,
              ignoreForceLayout: T.get("ignoreForceLayout")
            };
          }), y = t.getBoundingRect(), m = d4(p, g, {
            rect: y,
            gravity: s.get("gravity"),
            friction: s.get("friction")
          });
          m.beforeStep(function(_, S) {
            for (var b = 0, w = _.length; b < w; b++)
              _[b].fixed && Ne(_[b].p, a.getNodeByIndex(b).getLayout());
          }), m.afterStep(function(_, S, b) {
            for (var w = 0, T = _.length; w < T; w++)
              _[w].fixed || a.getNodeByIndex(w).setLayout(_[w].p), n[i.getId(w)] = _[w].p;
            for (var w = 0, T = S.length; w < T; w++) {
              var C = S[w], I = a.getEdgeByIndex(w), L = C.n1.p, P = C.n2.p, E = I.getLayout();
              E = E ? E.slice() : [], E[0] = E[0] || [], E[1] = E[1] || [], Ne(E[0], L), Ne(E[1], P), +C.curveness && (E[2] = [(L[0] + P[0]) / 2 - (L[1] - P[1]) * C.curveness, (L[1] + P[1]) / 2 - (P[0] - L[0]) * C.curveness]), I.setLayout(E);
            }
          }), e.forceLayout = m, e.preservedPoints = n, m.step();
        } else
          e.forceLayout = null;
    });
  }
  function g4(r, e, t) {
    var n = H(r.getBoxLayoutParams(), {
      aspect: t
    });
    return ye(n, {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function y4(r, e) {
    var t = [];
    return r.eachSeriesByType("graph", function(n) {
      var a = n.get("coordinateSystem");
      if (!a || a === "view") {
        var i = n.getData(), o = i.mapArray(function(g) {
          var y = i.getItemModel(g);
          return [+y.get("x"), +y.get("y")];
        }), s = [], l = [];
        $f(o, s, l), l[0] - s[0] === 0 && (l[0] += 1, s[0] -= 1), l[1] - s[1] === 0 && (l[1] += 1, s[1] -= 1);
        var u = (l[0] - s[0]) / (l[1] - s[1]), f = g4(n, e, u);
        isNaN(u) && (s = [f.x, f.y], l = [f.x + f.width, f.y + f.height]);
        var h = l[0] - s[0], c = l[1] - s[1], v = f.width, d = f.height, p = n.coordinateSystem = new Au();
        p.zoomLimit = n.get("scaleLimit"), p.setBoundingRect(s[0], s[1], h, c), p.setViewRect(f.x, f.y, v, d), p.setCenter(n.get("center"), e), p.setZoom(n.get("zoom")), t.push(p);
      }
    }), t;
  }
  var XD = Se.prototype, hm = Fo.prototype, ZD = (
    /** @class */
    function() {
      function r() {
        this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
      }
      return r;
    }()
  );
  (function(r) {
    A(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e;
  })(ZD);
  function cm(r) {
    return isNaN(+r.cpx1) || isNaN(+r.cpy1);
  }
  var m4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "ec-line", n;
      }
      return e.prototype.getDefaultStyle = function() {
        return {
          stroke: "#000",
          fill: null
        };
      }, e.prototype.getDefaultShape = function() {
        return new ZD();
      }, e.prototype.buildPath = function(t, n) {
        cm(n) ? XD.buildPath.call(this, t, n) : hm.buildPath.call(this, t, n);
      }, e.prototype.pointAt = function(t) {
        return cm(this.shape) ? XD.pointAt.call(this, t) : hm.pointAt.call(this, t);
      }, e.prototype.tangentAt = function(t) {
        var n = this.shape, a = cm(n) ? [n.x2 - n.x1, n.y2 - n.y1] : hm.tangentAt.call(this, t);
        return oi(a, a);
      }, e;
    }(Dt)
  ), vm = ["fromSymbol", "toSymbol"];
  function qD(r) {
    return "_" + r + "Type";
  }
  function KD(r, e, t) {
    var n = e.getItemVisual(t, r);
    if (!(!n || n === "none")) {
      var a = e.getItemVisual(t, r + "Size"), i = e.getItemVisual(t, r + "Rotate"), o = e.getItemVisual(t, r + "Offset"), s = e.getItemVisual(t, r + "KeepAspect"), l = Ql(a), u = os(o || 0, l), f = ve(n, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, s);
      return f.__specifiedRotation = i == null || isNaN(i) ? void 0 : +i * Math.PI / 180 || 0, f.name = r, f;
    }
  }
  function _4(r) {
    var e = new m4({
      name: "line",
      subPixelOptimize: !0
    });
    return dm(e.shape, r), e;
  }
  function dm(r, e) {
    r.x1 = e[0][0], r.y1 = e[0][1], r.x2 = e[1][0], r.y2 = e[1][1], r.percent = 1;
    var t = e[2];
    t ? (r.cpx1 = t[0], r.cpy1 = t[1]) : (r.cpx1 = NaN, r.cpy1 = NaN);
  }
  var pm = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this) || this;
        return i._createLine(t, n, a), i;
      }
      return e.prototype._createLine = function(t, n, a) {
        var i = t.hostModel, o = t.getItemLayout(n), s = _4(o);
        s.shape.percent = 0, te(s, {
          shape: {
            percent: 1
          }
        }, i, n), this.add(s), M(vm, function(l) {
          var u = KD(l, t, n);
          this.add(u), this[qD(l)] = t.getItemVisual(n, l);
        }, this), this._updateCommonStl(t, n, a);
      }, e.prototype.updateData = function(t, n, a) {
        var i = t.hostModel, o = this.childOfName("line"), s = t.getItemLayout(n), l = {
          shape: {}
        };
        dm(l.shape, s), Vt(o, l, i, n), M(vm, function(u) {
          var f = t.getItemVisual(n, u), h = qD(u);
          if (this[h] !== f) {
            this.remove(this.childOfName(u));
            var c = KD(u, t, n);
            this.add(c);
          }
          this[h] = f;
        }, this), this._updateCommonStl(t, n, a);
      }, e.prototype.getLinePath = function() {
        return this.childAt(0);
      }, e.prototype._updateCommonStl = function(t, n, a) {
        var i = t.hostModel, o = this.childOfName("line"), s = a && a.emphasisLineStyle, l = a && a.blurLineStyle, u = a && a.selectLineStyle, f = a && a.labelStatesModels, h = a && a.emphasisDisabled, c = a && a.focus, v = a && a.blurScope;
        if (!a || t.hasItemOption) {
          var d = t.getItemModel(n), p = d.getModel("emphasis");
          s = p.getModel("lineStyle").getLineStyle(), l = d.getModel(["blur", "lineStyle"]).getLineStyle(), u = d.getModel(["select", "lineStyle"]).getLineStyle(), h = p.get("disabled"), c = p.get("focus"), v = p.get("blurScope"), f = Ce(d);
        }
        var g = t.getItemVisual(n, "style"), y = g.stroke;
        o.useStyle(g), o.style.fill = null, o.style.strokeNoScale = !0, o.ensureState("emphasis").style = s, o.ensureState("blur").style = l, o.ensureState("select").style = u, M(vm, function(w) {
          var T = this.childOfName(w);
          if (T) {
            T.setColor(y), T.style.opacity = g.opacity;
            for (var C = 0; C < Je.length; C++) {
              var I = Je[C], L = o.getState(I);
              if (L) {
                var P = L.style || {}, E = T.ensureState(I), R = E.style || (E.style = {});
                P.stroke != null && (R[T.__isEmptyBrush ? "stroke" : "fill"] = P.stroke), P.opacity != null && (R.opacity = P.opacity);
              }
            }
            T.markRedraw();
          }
        }, this);
        var m = i.getRawValue(n);
        ke(this, f, {
          labelDataIndex: n,
          labelFetcher: {
            getFormattedLabel: function(w, T) {
              return i.getFormattedLabel(w, T, t.dataType);
            }
          },
          inheritColor: y || "#000",
          defaultOpacity: g.opacity,
          defaultText: (m == null ? t.getName(n) : isFinite(m) ? ie(m) : m) + ""
        });
        var _ = this.getTextContent();
        if (_) {
          var S = f.normal;
          _.__align = _.style.align, _.__verticalAlign = _.style.verticalAlign, _.__position = S.get("position") || "middle";
          var b = S.get("distance");
          U(b) || (b = [b, b]), _.__labelDistance = b;
        }
        this.setTextConfig({
          position: null,
          local: !0,
          inside: !1
          // Can't be inside for stroke element.
        }), oe(this, c, v, h);
      }, e.prototype.highlight = function() {
        jn(this);
      }, e.prototype.downplay = function() {
        Jn(this);
      }, e.prototype.updateLayout = function(t, n) {
        this.setLinePoints(t.getItemLayout(n));
      }, e.prototype.setLinePoints = function(t) {
        var n = this.childOfName("line");
        dm(n.shape, t), n.dirty();
      }, e.prototype.beforeUpdate = function() {
        var t = this, n = t.childOfName("fromSymbol"), a = t.childOfName("toSymbol"), i = t.getTextContent();
        if (!n && !a && (!i || i.ignore))
          return;
        for (var o = 1, s = this.parent; s; )
          s.scaleX && (o /= s.scaleX), s = s.parent;
        var l = t.childOfName("line");
        if (!this.__dirty && !l.__dirty)
          return;
        var u = l.shape.percent, f = l.pointAt(0), h = l.pointAt(u), c = da([], h, f);
        oi(c, c);
        function v(L, P) {
          var E = L.__specifiedRotation;
          if (E == null) {
            var R = l.tangentAt(P);
            L.attr("rotation", (P === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(R[1], R[0]));
          } else
            L.attr("rotation", E);
        }
        if (n && (n.setPosition(f), v(n, 0), n.scaleX = n.scaleY = o * u, n.markRedraw()), a && (a.setPosition(h), v(a, 1), a.scaleX = a.scaleY = o * u, a.markRedraw()), i && !i.ignore) {
          i.x = i.y = 0, i.originX = i.originY = 0;
          var d = void 0, p = void 0, g = i.__labelDistance, y = g[0] * o, m = g[1] * o, _ = u / 2, S = l.tangentAt(_), b = [S[1], -S[0]], w = l.pointAt(_);
          b[1] > 0 && (b[0] = -b[0], b[1] = -b[1]);
          var T = S[0] < 0 ? -1 : 1;
          if (i.__position !== "start" && i.__position !== "end") {
            var C = -Math.atan2(S[1], S[0]);
            h[0] < f[0] && (C = Math.PI + C), i.rotation = C;
          }
          var I = void 0;
          switch (i.__position) {
            case "insideStartTop":
            case "insideMiddleTop":
            case "insideEndTop":
            case "middle":
              I = -m, p = "bottom";
              break;
            case "insideStartBottom":
            case "insideMiddleBottom":
            case "insideEndBottom":
              I = m, p = "top";
              break;
            default:
              I = 0, p = "middle";
          }
          switch (i.__position) {
            case "end":
              i.x = c[0] * y + h[0], i.y = c[1] * m + h[1], d = c[0] > 0.8 ? "left" : c[0] < -0.8 ? "right" : "center", p = c[1] > 0.8 ? "top" : c[1] < -0.8 ? "bottom" : "middle";
              break;
            case "start":
              i.x = -c[0] * y + f[0], i.y = -c[1] * m + f[1], d = c[0] > 0.8 ? "right" : c[0] < -0.8 ? "left" : "center", p = c[1] > 0.8 ? "bottom" : c[1] < -0.8 ? "top" : "middle";
              break;
            case "insideStartTop":
            case "insideStart":
            case "insideStartBottom":
              i.x = y * T + f[0], i.y = f[1] + I, d = S[0] < 0 ? "right" : "left", i.originX = -y * T, i.originY = -I;
              break;
            case "insideMiddleTop":
            case "insideMiddle":
            case "insideMiddleBottom":
            case "middle":
              i.x = w[0], i.y = w[1] + I, d = "center", i.originY = -I;
              break;
            case "insideEndTop":
            case "insideEnd":
            case "insideEndBottom":
              i.x = -y * T + h[0], i.y = h[1] + I, d = S[0] >= 0 ? "right" : "left", i.originX = y * T, i.originY = -I;
              break;
          }
          i.scaleX = i.scaleY = o, i.setStyle({
            // Use the user specified text align and baseline first
            verticalAlign: i.__verticalAlign || p,
            align: i.__align || d
          });
        }
      }, e;
    }(ct)
  ), gm = (
    /** @class */
    function() {
      function r(e) {
        this.group = new ct(), this._LineCtor = e || pm;
      }
      return r.prototype.updateData = function(e) {
        var t = this;
        this._progressiveEls = null;
        var n = this, a = n.group, i = n._lineData;
        n._lineData = e, i || a.removeAll();
        var o = jD(e);
        e.diff(i).add(function(s) {
          t._doAdd(e, s, o);
        }).update(function(s, l) {
          t._doUpdate(i, e, l, s, o);
        }).remove(function(s) {
          a.remove(i.getItemGraphicEl(s));
        }).execute();
      }, r.prototype.updateLayout = function() {
        var e = this._lineData;
        e && e.eachItemGraphicEl(function(t, n) {
          t.updateLayout(e, n);
        }, this);
      }, r.prototype.incrementalPrepareUpdate = function(e) {
        this._seriesScope = jD(e), this._lineData = null, this.group.removeAll();
      }, r.prototype.incrementalUpdate = function(e, t) {
        this._progressiveEls = [];
        function n(s) {
          !s.isGroup && !S4(s) && (s.incremental = !0, s.ensureState("emphasis").hoverLayer = !0);
        }
        for (var a = e.start; a < e.end; a++) {
          var i = t.getItemLayout(a);
          if (ym(i)) {
            var o = new this._LineCtor(t, a, this._seriesScope);
            o.traverse(n), this.group.add(o), t.setItemGraphicEl(a, o), this._progressiveEls.push(o);
          }
        }
      }, r.prototype.remove = function() {
        this.group.removeAll();
      }, r.prototype.eachRendered = function(e) {
        Pa(this._progressiveEls || this.group, e);
      }, r.prototype._doAdd = function(e, t, n) {
        var a = e.getItemLayout(t);
        if (ym(a)) {
          var i = new this._LineCtor(e, t, n);
          e.setItemGraphicEl(t, i), this.group.add(i);
        }
      }, r.prototype._doUpdate = function(e, t, n, a, i) {
        var o = e.getItemGraphicEl(n);
        if (!ym(t.getItemLayout(a))) {
          this.group.remove(o);
          return;
        }
        o ? o.updateData(t, a, i) : o = new this._LineCtor(t, a, i), t.setItemGraphicEl(a, o), this.group.add(o);
      }, r;
    }()
  );
  function S4(r) {
    return r.animators && r.animators.length > 0;
  }
  function jD(r) {
    var e = r.hostModel, t = e.getModel("emphasis");
    return {
      lineStyle: e.getModel("lineStyle").getLineStyle(),
      emphasisLineStyle: t.getModel(["lineStyle"]).getLineStyle(),
      blurLineStyle: e.getModel(["blur", "lineStyle"]).getLineStyle(),
      selectLineStyle: e.getModel(["select", "lineStyle"]).getLineStyle(),
      emphasisDisabled: t.get("disabled"),
      blurScope: t.get("blurScope"),
      focus: t.get("focus"),
      labelStatesModels: Ce(e)
    };
  }
  function JD(r) {
    return isNaN(r[0]) || isNaN(r[1]);
  }
  function ym(r) {
    return r && !JD(r[0]) && !JD(r[1]);
  }
  var mm = [], _m = [], Sm = [], xs = Le, xm = pa, QD = Math.abs;
  function tM(r, e, t) {
    for (var n = r[0], a = r[1], i = r[2], o = 1 / 0, s, l = t * t, u = 0.1, f = 0.1; f <= 0.9; f += 0.1) {
      mm[0] = xs(n[0], a[0], i[0], f), mm[1] = xs(n[1], a[1], i[1], f);
      var h = QD(xm(mm, e) - l);
      h < o && (o = h, s = f);
    }
    for (var c = 0; c < 32; c++) {
      var v = s + u;
      _m[0] = xs(n[0], a[0], i[0], s), _m[1] = xs(n[1], a[1], i[1], s), Sm[0] = xs(n[0], a[0], i[0], v), Sm[1] = xs(n[1], a[1], i[1], v);
      var h = xm(_m, e) - l;
      if (QD(h) < 0.01)
        break;
      var d = xm(Sm, e) - l;
      u /= 2, h < 0 ? d >= 0 ? s = s + u : s = s - u : d >= 0 ? s = s - u : s = s + u;
    }
    return s;
  }
  function wm(r, e) {
    var t = [], n = rl, a = [[], [], []], i = [[], []], o = [];
    e /= 2, r.eachEdge(function(s, l) {
      var u = s.getLayout(), f = s.getVisual("fromSymbol"), h = s.getVisual("toSymbol");
      u.__original || (u.__original = [yn(u[0]), yn(u[1])], u[2] && u.__original.push(yn(u[2])));
      var c = u.__original;
      if (u[2] != null) {
        if (Ne(a[0], c[0]), Ne(a[1], c[2]), Ne(a[2], c[1]), f && f !== "none") {
          var v = Vu(s.node1), d = tM(a, c[0], v * e);
          n(a[0][0], a[1][0], a[2][0], d, t), a[0][0] = t[3], a[1][0] = t[4], n(a[0][1], a[1][1], a[2][1], d, t), a[0][1] = t[3], a[1][1] = t[4];
        }
        if (h && h !== "none") {
          var v = Vu(s.node2), d = tM(a, c[1], v * e);
          n(a[0][0], a[1][0], a[2][0], d, t), a[1][0] = t[1], a[2][0] = t[2], n(a[0][1], a[1][1], a[2][1], d, t), a[1][1] = t[1], a[2][1] = t[2];
        }
        Ne(u[0], a[0]), Ne(u[1], a[2]), Ne(u[2], a[1]);
      } else {
        if (Ne(i[0], c[0]), Ne(i[1], c[1]), da(o, i[1], i[0]), oi(o, o), f && f !== "none") {
          var v = Vu(s.node1);
          ff(i[0], i[0], o, v * e);
        }
        if (h && h !== "none") {
          var v = Vu(s.node2);
          ff(i[1], i[1], o, -v * e);
        }
        Ne(u[0], i[0]), Ne(u[1], i[1]);
      }
    });
  }
  function eM(r) {
    return r.type === "view";
  }
  var x4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n) {
        var a = new yu(), i = new gm(), o = this.group;
        this._controller = new Tu(n.getZr()), this._controllerHost = {
          target: o
        }, o.add(a.group), o.add(i.group), this._symbolDraw = a, this._lineDraw = i, this._firstRender = !0;
      }, e.prototype.render = function(t, n, a) {
        var i = this, o = t.coordinateSystem;
        this._model = t;
        var s = this._symbolDraw, l = this._lineDraw, u = this.group;
        if (eM(o)) {
          var f = {
            x: o.x,
            y: o.y,
            scaleX: o.scaleX,
            scaleY: o.scaleY
          };
          this._firstRender ? u.attr(f) : Vt(u, f, t);
        }
        wm(t.getGraph(), Nu(t));
        var h = t.getData();
        s.updateData(h);
        var c = t.getEdgeData();
        l.updateData(c), this._updateNodeAndLinkScale(), this._updateController(t, n, a), clearTimeout(this._layoutTimeout);
        var v = t.forceLayout, d = t.get(["force", "layoutAnimation"]);
        v && this._startForceLayoutIteration(v, d);
        var p = t.get("layout");
        h.graph.eachNode(function(_) {
          var S = _.dataIndex, b = _.getGraphicEl(), w = _.getModel();
          if (b) {
            b.off("drag").off("dragend");
            var T = w.get("draggable");
            T && b.on("drag", function(I) {
              switch (p) {
                case "force":
                  v.warmUp(), !i._layouting && i._startForceLayoutIteration(v, d), v.setFixed(S), h.setItemLayout(S, [b.x, b.y]);
                  break;
                case "circular":
                  h.setItemLayout(S, [b.x, b.y]), _.setLayout({
                    fixed: !0
                  }, !0), fm(t, "symbolSize", _, [I.offsetX, I.offsetY]), i.updateLayout(t);
                  break;
                case "none":
                default:
                  h.setItemLayout(S, [b.x, b.y]), lm(t.getGraph(), t), i.updateLayout(t);
                  break;
              }
            }).on("dragend", function() {
              v && v.setUnfixed(S);
            }), b.setDraggable(T, !!w.get("cursor"));
            var C = w.get(["emphasis", "focus"]);
            C === "adjacency" && (gt(b).focus = _.getAdjacentDataIndices());
          }
        }), h.graph.eachEdge(function(_) {
          var S = _.getGraphicEl(), b = _.getModel().get(["emphasis", "focus"]);
          S && b === "adjacency" && (gt(S).focus = {
            edge: [_.dataIndex],
            node: [_.node1.dataIndex, _.node2.dataIndex]
          });
        });
        var g = t.get("layout") === "circular" && t.get(["circular", "rotateLabel"]), y = h.getLayout("cx"), m = h.getLayout("cy");
        h.graph.eachNode(function(_) {
          $D(_, g, y, m);
        }), this._firstRender = !1;
      }, e.prototype.dispose = function() {
        this._controller && this._controller.dispose(), this._controllerHost = null;
      }, e.prototype._startForceLayoutIteration = function(t, n) {
        var a = this;
        (function i() {
          t.step(function(o) {
            a.updateLayout(a._model), (a._layouting = !o) && (n ? a._layoutTimeout = setTimeout(i, 16) : i());
          });
        })();
      }, e.prototype._updateController = function(t, n, a) {
        var i = this, o = this._controller, s = this._controllerHost, l = this.group;
        if (o.setPointerChecker(function(u, f, h) {
          var c = l.getBoundingRect();
          return c.applyTransform(l.transform), c.contain(f, h) && !xc(u, a, t);
        }), !eM(t.coordinateSystem)) {
          o.disable();
          return;
        }
        o.enable(t.get("roam")), s.zoomLimit = t.get("scaleLimit"), s.zoom = t.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
          Vy(s, u.dx, u.dy), a.dispatchAction({
            seriesId: t.id,
            type: "graphRoam",
            dx: u.dx,
            dy: u.dy
          });
        }).on("zoom", function(u) {
          By(s, u.scale, u.originX, u.originY), a.dispatchAction({
            seriesId: t.id,
            type: "graphRoam",
            zoom: u.scale,
            originX: u.originX,
            originY: u.originY
          }), i._updateNodeAndLinkScale(), wm(t.getGraph(), Nu(t)), i._lineDraw.updateLayout(), a.updateLabelLayout();
        });
      }, e.prototype._updateNodeAndLinkScale = function() {
        var t = this._model, n = t.getData(), a = Nu(t);
        n.eachItemGraphicEl(function(i, o) {
          i && i.setSymbolScale(a);
        });
      }, e.prototype.updateLayout = function(t) {
        wm(t.getGraph(), Nu(t)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
      }, e.prototype.remove = function(t, n) {
        this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
      }, e.type = "graph", e;
    }($t)
  );
  function ws(r) {
    return "_EC_" + r;
  }
  var w4 = (
    /** @class */
    function() {
      function r(e) {
        this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = e || !1;
      }
      return r.prototype.isDirected = function() {
        return this._directed;
      }, r.prototype.addNode = function(e, t) {
        e = e == null ? "" + t : "" + e;
        var n = this._nodesMap;
        if (n[ws(e)]) {
          console.error("Graph nodes have duplicate name or id");
          return;
        }
        var a = new so(e, t);
        return a.hostGraph = this, this.nodes.push(a), n[ws(e)] = a, a;
      }, r.prototype.getNodeByIndex = function(e) {
        var t = this.data.getRawIndex(e);
        return this.nodes[t];
      }, r.prototype.getNodeById = function(e) {
        return this._nodesMap[ws(e)];
      }, r.prototype.addEdge = function(e, t, n) {
        var a = this._nodesMap, i = this._edgesMap;
        if (Ot(e) && (e = this.nodes[e]), Ot(t) && (t = this.nodes[t]), e instanceof so || (e = a[ws(e)]), t instanceof so || (t = a[ws(t)]), !(!e || !t)) {
          var o = e.id + "-" + t.id, s = new rM(e, t, n);
          return s.hostGraph = this, this._directed && (e.outEdges.push(s), t.inEdges.push(s)), e.edges.push(s), e !== t && t.edges.push(s), this.edges.push(s), i[o] = s, s;
        }
      }, r.prototype.getEdgeByIndex = function(e) {
        var t = this.edgeData.getRawIndex(e);
        return this.edges[t];
      }, r.prototype.getEdge = function(e, t) {
        e instanceof so && (e = e.id), t instanceof so && (t = t.id);
        var n = this._edgesMap;
        return this._directed ? n[e + "-" + t] : n[e + "-" + t] || n[t + "-" + e];
      }, r.prototype.eachNode = function(e, t) {
        for (var n = this.nodes, a = n.length, i = 0; i < a; i++)
          n[i].dataIndex >= 0 && e.call(t, n[i], i);
      }, r.prototype.eachEdge = function(e, t) {
        for (var n = this.edges, a = n.length, i = 0; i < a; i++)
          n[i].dataIndex >= 0 && n[i].node1.dataIndex >= 0 && n[i].node2.dataIndex >= 0 && e.call(t, n[i], i);
      }, r.prototype.breadthFirstTraverse = function(e, t, n, a) {
        if (t instanceof so || (t = this._nodesMap[ws(t)]), !!t) {
          for (var i = n === "out" ? "outEdges" : n === "in" ? "inEdges" : "edges", o = 0; o < this.nodes.length; o++)
            this.nodes[o].__visited = !1;
          if (!e.call(a, t, null))
            for (var s = [t]; s.length; )
              for (var l = s.shift(), u = l[i], o = 0; o < u.length; o++) {
                var f = u[o], h = f.node1 === l ? f.node2 : f.node1;
                if (!h.__visited) {
                  if (e.call(a, h, l))
                    return;
                  s.push(h), h.__visited = !0;
                }
              }
        }
      }, r.prototype.update = function() {
        for (var e = this.data, t = this.edgeData, n = this.nodes, a = this.edges, i = 0, o = n.length; i < o; i++)
          n[i].dataIndex = -1;
        for (var i = 0, o = e.count(); i < o; i++)
          n[e.getRawIndex(i)].dataIndex = i;
        t.filterSelf(function(s) {
          var l = a[t.getRawIndex(s)];
          return l.node1.dataIndex >= 0 && l.node2.dataIndex >= 0;
        });
        for (var i = 0, o = a.length; i < o; i++)
          a[i].dataIndex = -1;
        for (var i = 0, o = t.count(); i < o; i++)
          a[t.getRawIndex(i)].dataIndex = i;
      }, r.prototype.clone = function() {
        for (var e = new r(this._directed), t = this.nodes, n = this.edges, a = 0; a < t.length; a++)
          e.addNode(t[a].id, t[a].dataIndex);
        for (var a = 0; a < n.length; a++) {
          var i = n[a];
          e.addEdge(i.node1.id, i.node2.id, i.dataIndex);
        }
        return e;
      }, r;
    }()
  ), so = (
    /** @class */
    function() {
      function r(e, t) {
        this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = e ?? "", this.dataIndex = t ?? -1;
      }
      return r.prototype.degree = function() {
        return this.edges.length;
      }, r.prototype.inDegree = function() {
        return this.inEdges.length;
      }, r.prototype.outDegree = function() {
        return this.outEdges.length;
      }, r.prototype.getModel = function(e) {
        if (!(this.dataIndex < 0)) {
          var t = this.hostGraph, n = t.data.getItemModel(this.dataIndex);
          return n.getModel(e);
        }
      }, r.prototype.getAdjacentDataIndices = function() {
        for (var e = {
          edge: [],
          node: []
        }, t = 0; t < this.edges.length; t++) {
          var n = this.edges[t];
          n.dataIndex < 0 || (e.edge.push(n.dataIndex), e.node.push(n.node1.dataIndex, n.node2.dataIndex));
        }
        return e;
      }, r;
    }()
  ), rM = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.dataIndex = -1, this.node1 = e, this.node2 = t, this.dataIndex = n ?? -1;
      }
      return r.prototype.getModel = function(e) {
        if (!(this.dataIndex < 0)) {
          var t = this.hostGraph, n = t.edgeData.getItemModel(this.dataIndex);
          return n.getModel(e);
        }
      }, r.prototype.getAdjacentDataIndices = function() {
        return {
          edge: [this.dataIndex],
          node: [this.node1.dataIndex, this.node2.dataIndex]
        };
      }, r;
    }()
  );
  function nM(r, e) {
    return {
      /**
       * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.
       */
      getValue: function(t) {
        var n = this[r][e];
        return n.getStore().get(n.getDimensionIndex(t || "value"), this.dataIndex);
      },
      // TODO: TYPE stricter type.
      setVisual: function(t, n) {
        this.dataIndex >= 0 && this[r][e].setItemVisual(this.dataIndex, t, n);
      },
      getVisual: function(t) {
        return this[r][e].getItemVisual(this.dataIndex, t);
      },
      setLayout: function(t, n) {
        this.dataIndex >= 0 && this[r][e].setItemLayout(this.dataIndex, t, n);
      },
      getLayout: function() {
        return this[r][e].getItemLayout(this.dataIndex);
      },
      getGraphicEl: function() {
        return this[r][e].getItemGraphicEl(this.dataIndex);
      },
      getRawIndex: function() {
        return this[r][e].getRawIndex(this.dataIndex);
      }
    };
  }
  le(so, nM("hostGraph", "data")), le(rM, nM("hostGraph", "edgeData"));
  function aM(r, e, t, n, a) {
    for (var i = new w4(n), o = 0; o < r.length; o++)
      i.addNode(he(
        // Id, name, dataIndex
        r[o].id,
        r[o].name,
        o
      ), o);
    for (var s = [], l = [], u = 0, o = 0; o < e.length; o++) {
      var f = e[o], h = f.source, c = f.target;
      i.addEdge(h, c, u) && (l.push(f), s.push(he(_e(f.id, null), h + " > " + c)), u++);
    }
    var v = t.get("coordinateSystem"), d;
    if (v === "cartesian2d" || v === "polar")
      d = Ln(r, t);
    else {
      var p = Bi.get(v), g = p ? p.dimensions || [] : [];
      bt(g, "value") < 0 && g.concat(["value"]);
      var y = hs(r, {
        coordDimensions: g,
        encodeDefine: t.getEncode()
      }).dimensions;
      d = new Ue(y, t), d.initData(r);
    }
    var m = new Ue(["value"], t);
    return m.initData(l, s), a && a(d, m), _D({
      mainData: d,
      struct: i,
      structAttr: "graph",
      datas: {
        node: d,
        edge: m
      },
      datasAttr: {
        node: "data",
        edge: "edgeData"
      }
    }), i.update(), i;
  }
  var b4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t;
      }
      return e.prototype.init = function(t) {
        r.prototype.init.apply(this, arguments);
        var n = this;
        function a() {
          return n._categoriesData;
        }
        this.legendVisualProvider = new xu(a, a), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
      }, e.prototype.mergeOption = function(t) {
        r.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
      }, e.prototype.mergeDefaultAndTheme = function(t) {
        r.prototype.mergeDefaultAndTheme.apply(this, arguments), gi(t, "edgeLabel", ["show"]);
      }, e.prototype.getInitialData = function(t, n) {
        var a = t.edges || t.links || [], i = t.data || t.nodes || [], o = this;
        if (i && a) {
          u4(this);
          var s = aM(i, a, this, !0, l);
          return M(s.edges, function(u) {
            f4(u.node1, u.node2, this, u.dataIndex);
          }, this), s.data;
        }
        function l(u, f) {
          u.wrapMethod("getItemModel", function(d) {
            var p = o._categoriesModels, g = d.getShallow("category"), y = p[g];
            return y && (y.parentModel = d.parentModel, d.parentModel = y), d;
          });
          var h = Gt.prototype.getModel;
          function c(d, p) {
            var g = h.call(this, d, p);
            return g.resolveParentPath = v, g;
          }
          f.wrapMethod("getItemModel", function(d) {
            return d.resolveParentPath = v, d.getModel = c, d;
          });
          function v(d) {
            if (d && (d[0] === "label" || d[1] === "label")) {
              var p = d.slice();
              return d[0] === "label" ? p[0] = "edgeLabel" : d[1] === "label" && (p[1] = "edgeLabel"), p;
            }
            return d;
          }
        }
      }, e.prototype.getGraph = function() {
        return this.getData().graph;
      }, e.prototype.getEdgeData = function() {
        return this.getGraph().edgeData;
      }, e.prototype.getCategoriesData = function() {
        return this._categoriesData;
      }, e.prototype.formatTooltip = function(t, n, a) {
        if (a === "edge") {
          var i = this.getData(), o = this.getDataParams(t, a), s = i.graph.getEdgeByIndex(t), l = i.getName(s.node1.dataIndex), u = i.getName(s.node2.dataIndex), f = [];
          return l != null && f.push(l), u != null && f.push(u), Ae("nameValue", {
            name: f.join(" > "),
            value: o.value,
            noValue: o.value == null
          });
        }
        var h = Jw({
          series: this,
          dataIndex: t,
          multipleSeries: n
        });
        return h;
      }, e.prototype._updateCategoriesData = function() {
        var t = Y(this.option.categories || [], function(a) {
          return a.value != null ? a : H({
            value: 0
          }, a);
        }), n = new Ue(["value"], this);
        n.initData(t), this._categoriesData = n, this._categoriesModels = n.mapArray(function(a) {
          return n.getItemModel(a);
        });
      }, e.prototype.setZoom = function(t) {
        this.option.zoom = t;
      }, e.prototype.setCenter = function(t) {
        this.option.center = t;
      }, e.prototype.isAnimationEnabled = function() {
        return r.prototype.isAnimationEnabled.call(this) && !(this.get("layout") === "force" && this.get(["force", "layoutAnimation"]));
      }, e.type = "series.graph", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "view",
        // Default option for all coordinate systems
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        // polarIndex: 0,
        // geoIndex: 0,
        legendHoverLink: !0,
        layout: null,
        // Configuration of circular layout
        circular: {
          rotateLabel: !1
        },
        // Configuration of force directed layout
        force: {
          initLayout: null,
          // Node repulsion. Can be an array to represent range.
          repulsion: [0, 50],
          gravity: 0.1,
          // Initial friction
          friction: 0.6,
          // Edge length. Can be an array to represent range.
          edgeLength: 30,
          layoutAnimation: !0
        },
        left: "center",
        top: "center",
        // right: null,
        // bottom: null,
        // width: '80%',
        // height: '80%',
        symbol: "circle",
        symbolSize: 10,
        edgeSymbol: ["none", "none"],
        edgeSymbolSize: 10,
        edgeLabel: {
          position: "middle",
          distance: 5
        },
        draggable: !1,
        roam: !1,
        // Default on center of graph
        center: null,
        zoom: 1,
        // Symbol size scale ratio in roam
        nodeScaleRatio: 0.6,
        // cursor: null,
        // categories: [],
        // data: []
        // Or
        // nodes: []
        //
        // links: []
        // Or
        // edges: []
        label: {
          show: !1,
          formatter: "{b}"
        },
        itemStyle: {},
        lineStyle: {
          color: "#aaa",
          width: 1,
          opacity: 0.5
        },
        emphasis: {
          scale: !0,
          label: {
            show: !0
          }
        },
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        }
      }, e;
    }(Zt)
  ), T4 = {
    type: "graphRoam",
    event: "graphRoam",
    update: "none"
  };
  function C4(r) {
    r.registerChartView(x4), r.registerSeriesModel(b4), r.registerProcessor(a4), r.registerVisual(i4), r.registerVisual(o4), r.registerLayout(h4), r.registerLayout(r.PRIORITY.VISUAL.POST_CHART_LAYOUT, v4), r.registerLayout(p4), r.registerCoordinateSystem("graphView", {
      dimensions: Au.dimensions,
      create: y4
    }), r.registerAction({
      type: "focusNodeAdjacency",
      event: "focusNodeAdjacency",
      update: "series:focusNodeAdjacency"
    }, ue), r.registerAction({
      type: "unfocusNodeAdjacency",
      event: "unfocusNodeAdjacency",
      update: "series:unfocusNodeAdjacency"
    }, ue), r.registerAction(T4, function(e, t, n) {
      t.eachComponent({
        mainType: "series",
        query: e
      }, function(a) {
        var i = a.coordinateSystem, o = Uy(i, e, void 0, n);
        a.setCenter && a.setCenter(o.center), a.setZoom && a.setZoom(o.zoom);
      });
    });
  }
  var A4 = (
    /** @class */
    function() {
      function r() {
        this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
      }
      return r;
    }()
  ), D4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "pointer", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new A4();
      }, e.prototype.buildPath = function(t, n) {
        var a = Math.cos, i = Math.sin, o = n.r, s = n.width, l = n.angle, u = n.x - a(l) * s * (s >= o / 3 ? 1 : 2), f = n.y - i(l) * s * (s >= o / 3 ? 1 : 2);
        l = n.angle - Math.PI / 2, t.moveTo(u, f), t.lineTo(n.x + a(l) * s, n.y + i(l) * s), t.lineTo(n.x + a(n.angle) * o, n.y + i(n.angle) * o), t.lineTo(n.x - a(l) * s, n.y - i(l) * s), t.lineTo(u, f);
      }, e;
    }(Dt)
  );
  function M4(r, e) {
    var t = r.get("center"), n = e.getWidth(), a = e.getHeight(), i = Math.min(n, a), o = Z(t[0], e.getWidth()), s = Z(t[1], e.getHeight()), l = Z(r.get("radius"), i / 2);
    return {
      cx: o,
      cy: s,
      r: l
    };
  }
  function kc(r, e) {
    var t = r == null ? "" : r + "";
    return e && (j(e) ? t = e.replace("{value}", t) : rt(e) && (t = e(r))), t;
  }
  var I4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        this.group.removeAll();
        var i = t.get(["axisLine", "lineStyle", "color"]), o = M4(t, a);
        this._renderMain(t, n, a, i, o), this._data = t.getData();
      }, e.prototype.dispose = function() {
      }, e.prototype._renderMain = function(t, n, a, i, o) {
        var s = this.group, l = t.get("clockwise"), u = -t.get("startAngle") / 180 * Math.PI, f = -t.get("endAngle") / 180 * Math.PI, h = t.getModel("axisLine"), c = h.get("roundCap"), v = c ? dc : Be, d = h.get("show"), p = h.getModel("lineStyle"), g = p.get("width"), y = [u, f];
        _S(y, !l), u = y[0], f = y[1];
        for (var m = f - u, _ = u, S = [], b = 0; d && b < i.length; b++) {
          var w = Math.min(Math.max(i[b][0], 0), 1);
          f = u + m * w;
          var T = new v({
            shape: {
              startAngle: _,
              endAngle: f,
              cx: o.cx,
              cy: o.cy,
              clockwise: l,
              r0: o.r - g,
              r: o.r
            },
            silent: !0
          });
          T.setStyle({
            fill: i[b][1]
          }), T.setStyle(p.getLineStyle(
            // Because we use sector to simulate arc
            // so the properties for stroking are useless
            ["color", "width"]
          )), S.push(T), _ = f;
        }
        S.reverse(), M(S, function(I) {
          return s.add(I);
        });
        var C = function(I) {
          if (I <= 0)
            return i[0][1];
          var L;
          for (L = 0; L < i.length; L++)
            if (i[L][0] >= I && (L === 0 ? 0 : i[L - 1][0]) < I)
              return i[L][1];
          return i[L - 1][1];
        };
        this._renderTicks(t, n, a, C, o, u, f, l, g), this._renderTitleAndDetail(t, n, a, C, o), this._renderAnchor(t, o), this._renderPointer(t, n, a, C, o, u, f, l, g);
      }, e.prototype._renderTicks = function(t, n, a, i, o, s, l, u, f) {
        for (var h = this.group, c = o.cx, v = o.cy, d = o.r, p = +t.get("min"), g = +t.get("max"), y = t.getModel("splitLine"), m = t.getModel("axisTick"), _ = t.getModel("axisLabel"), S = t.get("splitNumber"), b = m.get("splitNumber"), w = Z(y.get("length"), d), T = Z(m.get("length"), d), C = s, I = (l - s) / S, L = I / b, P = y.getModel("lineStyle").getLineStyle(), E = m.getModel("lineStyle").getLineStyle(), R = y.get("distance"), k, O, N = 0; N <= S; N++) {
          if (k = Math.cos(C), O = Math.sin(C), y.get("show")) {
            var F = R ? R + f : f, G = new Se({
              shape: {
                x1: k * (d - F) + c,
                y1: O * (d - F) + v,
                x2: k * (d - w - F) + c,
                y2: O * (d - w - F) + v
              },
              style: P,
              silent: !0
            });
            P.stroke === "auto" && G.setStyle({
              stroke: i(N / S)
            }), h.add(G);
          }
          if (_.get("show")) {
            var F = _.get("distance") + R, W = kc(ie(N / S * (g - p) + p), _.get("formatter")), X = i(N / S), K = k * (d - w - F) + c, et = O * (d - w - F) + v, lt = _.get("rotate"), ft = 0;
            lt === "radial" ? (ft = -C + 2 * Math.PI, ft > Math.PI / 2 && (ft += Math.PI)) : lt === "tangential" ? ft = -C - Math.PI / 2 : Ot(lt) && (ft = lt * Math.PI / 180), ft === 0 ? h.add(new kt({
              style: jt(_, {
                text: W,
                x: K,
                y: et,
                verticalAlign: O < -0.8 ? "top" : O > 0.8 ? "bottom" : "middle",
                align: k < -0.4 ? "left" : k > 0.4 ? "right" : "center"
              }, {
                inheritColor: X
              }),
              silent: !0
            })) : h.add(new kt({
              style: jt(_, {
                text: W,
                x: K,
                y: et,
                verticalAlign: "middle",
                align: "center"
              }, {
                inheritColor: X
              }),
              silent: !0,
              originX: K,
              originY: et,
              rotation: ft
            }));
          }
          if (m.get("show") && N !== S) {
            var F = m.get("distance");
            F = F ? F + f : f;
            for (var It = 0; It <= b; It++) {
              k = Math.cos(C), O = Math.sin(C);
              var zt = new Se({
                shape: {
                  x1: k * (d - F) + c,
                  y1: O * (d - F) + v,
                  x2: k * (d - T - F) + c,
                  y2: O * (d - T - F) + v
                },
                silent: !0,
                style: E
              });
              E.stroke === "auto" && zt.setStyle({
                stroke: i((N + It / b) / S)
              }), h.add(zt), C += L;
            }
            C -= L;
          } else
            C += I;
        }
      }, e.prototype._renderPointer = function(t, n, a, i, o, s, l, u, f) {
        var h = this.group, c = this._data, v = this._progressEls, d = [], p = t.get(["pointer", "show"]), g = t.getModel("progress"), y = g.get("show"), m = t.getData(), _ = m.mapDimension("value"), S = +t.get("min"), b = +t.get("max"), w = [S, b], T = [s, l];
        function C(L, P) {
          var E = m.getItemModel(L), R = E.getModel("pointer"), k = Z(R.get("width"), o.r), O = Z(R.get("length"), o.r), N = t.get(["pointer", "icon"]), F = R.get("offsetCenter"), G = Z(F[0], o.r), W = Z(F[1], o.r), X = R.get("keepAspect"), K;
          return N ? K = ve(N, G - k / 2, W - O, k, O, null, X) : K = new D4({
            shape: {
              angle: -Math.PI / 2,
              width: k,
              r: O,
              x: G,
              y: W
            }
          }), K.rotation = -(P + Math.PI / 2), K.x = o.cx, K.y = o.cy, K;
        }
        function I(L, P) {
          var E = g.get("roundCap"), R = E ? dc : Be, k = g.get("overlap"), O = k ? g.get("width") : f / m.count(), N = k ? o.r - O : o.r - (L + 1) * O, F = k ? o.r : o.r - L * O, G = new R({
            shape: {
              startAngle: s,
              endAngle: P,
              cx: o.cx,
              cy: o.cy,
              clockwise: u,
              r0: N,
              r: F
            }
          });
          return k && (G.z2 = b - m.get(_, L) % b), G;
        }
        (y || p) && (m.diff(c).add(function(L) {
          var P = m.get(_, L);
          if (p) {
            var E = C(L, s);
            te(E, {
              rotation: -((isNaN(+P) ? T[0] : Wt(P, w, T, !0)) + Math.PI / 2)
            }, t), h.add(E), m.setItemGraphicEl(L, E);
          }
          if (y) {
            var R = I(L, s), k = g.get("clip");
            te(R, {
              shape: {
                endAngle: Wt(P, w, T, k)
              }
            }, t), h.add(R), ap(t.seriesIndex, m.dataType, L, R), d[L] = R;
          }
        }).update(function(L, P) {
          var E = m.get(_, L);
          if (p) {
            var R = c.getItemGraphicEl(P), k = R ? R.rotation : s, O = C(L, k);
            O.rotation = k, Vt(O, {
              rotation: -((isNaN(+E) ? T[0] : Wt(E, w, T, !0)) + Math.PI / 2)
            }, t), h.add(O), m.setItemGraphicEl(L, O);
          }
          if (y) {
            var N = v[P], F = N ? N.shape.endAngle : s, G = I(L, F), W = g.get("clip");
            Vt(G, {
              shape: {
                endAngle: Wt(E, w, T, W)
              }
            }, t), h.add(G), ap(t.seriesIndex, m.dataType, L, G), d[L] = G;
          }
        }).execute(), m.each(function(L) {
          var P = m.getItemModel(L), E = P.getModel("emphasis"), R = E.get("focus"), k = E.get("blurScope"), O = E.get("disabled");
          if (p) {
            var N = m.getItemGraphicEl(L), F = m.getItemVisual(L, "style"), G = F.fill;
            if (N instanceof Te) {
              var W = N.style;
              N.useStyle(H({
                image: W.image,
                x: W.x,
                y: W.y,
                width: W.width,
                height: W.height
              }, F));
            } else
              N.useStyle(F), N.type !== "pointer" && N.setColor(G);
            N.setStyle(P.getModel(["pointer", "itemStyle"]).getItemStyle()), N.style.fill === "auto" && N.setStyle("fill", i(Wt(m.get(_, L), w, [0, 1], !0))), N.z2EmphasisLift = 0, Re(N, P), oe(N, R, k, O);
          }
          if (y) {
            var X = d[L];
            X.useStyle(m.getItemVisual(L, "style")), X.setStyle(P.getModel(["progress", "itemStyle"]).getItemStyle()), X.z2EmphasisLift = 0, Re(X, P), oe(X, R, k, O);
          }
        }), this._progressEls = d);
      }, e.prototype._renderAnchor = function(t, n) {
        var a = t.getModel("anchor"), i = a.get("show");
        if (i) {
          var o = a.get("size"), s = a.get("icon"), l = a.get("offsetCenter"), u = a.get("keepAspect"), f = ve(s, n.cx - o / 2 + Z(l[0], n.r), n.cy - o / 2 + Z(l[1], n.r), o, o, null, u);
          f.z2 = a.get("showAbove") ? 1 : 0, f.setStyle(a.getModel("itemStyle").getItemStyle()), this.group.add(f);
        }
      }, e.prototype._renderTitleAndDetail = function(t, n, a, i, o) {
        var s = this, l = t.getData(), u = l.mapDimension("value"), f = +t.get("min"), h = +t.get("max"), c = new ct(), v = [], d = [], p = t.isAnimationEnabled(), g = t.get(["pointer", "showAbove"]);
        l.diff(this._data).add(function(y) {
          v[y] = new kt({
            silent: !0
          }), d[y] = new kt({
            silent: !0
          });
        }).update(function(y, m) {
          v[y] = s._titleEls[m], d[y] = s._detailEls[m];
        }).execute(), l.each(function(y) {
          var m = l.getItemModel(y), _ = l.get(u, y), S = new ct(), b = i(Wt(_, [f, h], [0, 1], !0)), w = m.getModel("title");
          if (w.get("show")) {
            var T = w.get("offsetCenter"), C = o.cx + Z(T[0], o.r), I = o.cy + Z(T[1], o.r), L = v[y];
            L.attr({
              z2: g ? 0 : 2,
              style: jt(w, {
                x: C,
                y: I,
                text: l.getName(y),
                align: "center",
                verticalAlign: "middle"
              }, {
                inheritColor: b
              })
            }), S.add(L);
          }
          var P = m.getModel("detail");
          if (P.get("show")) {
            var E = P.get("offsetCenter"), R = o.cx + Z(E[0], o.r), k = o.cy + Z(E[1], o.r), O = Z(P.get("width"), o.r), N = Z(P.get("height"), o.r), F = t.get(["progress", "show"]) ? l.getItemVisual(y, "style").fill : b, L = d[y], G = P.get("formatter");
            L.attr({
              z2: g ? 0 : 2,
              style: jt(P, {
                x: R,
                y: k,
                text: kc(_, G),
                width: isNaN(O) ? null : O,
                height: isNaN(N) ? null : N,
                align: "center",
                verticalAlign: "middle"
              }, {
                inheritColor: F
              })
            }), Ex(L, {
              normal: P
            }, _, function(X) {
              return kc(X, G);
            }), p && Rx(L, y, l, t, {
              getFormattedLabel: function(X, K, et, lt, ft, It) {
                return kc(It ? It.interpolatedValue : _, G);
              }
            }), S.add(L);
          }
          c.add(S);
        }), this.group.add(c), this._titleEls = v, this._detailEls = d;
      }, e.type = "gauge", e;
    }($t)
  ), L4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.visualStyleAccessPath = "itemStyle", t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return ys(this, ["value"]);
      }, e.type = "series.gauge", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        colorBy: "data",
        // 默认全局居中
        center: ["50%", "50%"],
        legendHoverLink: !0,
        radius: "75%",
        startAngle: 225,
        endAngle: -45,
        clockwise: !0,
        // 最小值
        min: 0,
        // 最大值
        max: 100,
        // 分割段数，默认为10
        splitNumber: 10,
        // 坐标轴线
        axisLine: {
          // 默认显示，属性show控制显示与否
          show: !0,
          roundCap: !1,
          lineStyle: {
            color: [[1, "#E6EBF8"]],
            width: 10
          }
        },
        // 坐标轴线
        progress: {
          // 默认显示，属性show控制显示与否
          show: !1,
          overlap: !0,
          width: 10,
          roundCap: !1,
          clip: !0
        },
        // 分隔线
        splitLine: {
          // 默认显示，属性show控制显示与否
          show: !0,
          // 属性length控制线长
          length: 10,
          distance: 10,
          // 属性lineStyle（详见lineStyle）控制线条样式
          lineStyle: {
            color: "#63677A",
            width: 3,
            type: "solid"
          }
        },
        // 坐标轴小标记
        axisTick: {
          // 属性show控制显示与否，默认不显示
          show: !0,
          // 每份split细分多少段
          splitNumber: 5,
          // 属性length控制线长
          length: 6,
          distance: 10,
          // 属性lineStyle控制线条样式
          lineStyle: {
            color: "#63677A",
            width: 1,
            type: "solid"
          }
        },
        axisLabel: {
          show: !0,
          distance: 15,
          // formatter: null,
          color: "#464646",
          fontSize: 12,
          rotate: 0
        },
        pointer: {
          icon: null,
          offsetCenter: [0, 0],
          show: !0,
          showAbove: !0,
          length: "60%",
          width: 6,
          keepAspect: !1
        },
        anchor: {
          show: !1,
          showAbove: !1,
          size: 6,
          icon: "circle",
          offsetCenter: [0, 0],
          keepAspect: !1,
          itemStyle: {
            color: "#fff",
            borderWidth: 0,
            borderColor: "#5470c6"
          }
        },
        title: {
          show: !0,
          // x, y，单位px
          offsetCenter: [0, "20%"],
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#464646",
          fontSize: 16,
          valueAnimation: !1
        },
        detail: {
          show: !0,
          backgroundColor: "rgba(0,0,0,0)",
          borderWidth: 0,
          borderColor: "#ccc",
          width: 100,
          height: null,
          padding: [5, 10],
          // x, y，单位px
          offsetCenter: [0, "40%"],
          // formatter: null,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#464646",
          fontSize: 30,
          fontWeight: "bold",
          lineHeight: 30,
          valueAnimation: !1
        }
      }, e;
    }(Zt)
  );
  function P4(r) {
    r.registerChartView(I4), r.registerSeriesModel(L4);
  }
  var E4 = ["itemStyle", "opacity"], R4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n) {
        var a = r.call(this) || this, i = a, o = new Ge(), s = new kt();
        return i.setTextContent(s), a.setTextGuideLine(o), a.updateData(t, n, !0), a;
      }
      return e.prototype.updateData = function(t, n, a) {
        var i = this, o = t.hostModel, s = t.getItemModel(n), l = t.getItemLayout(n), u = s.getModel("emphasis"), f = s.get(E4);
        f = f ?? 1, a || an(i), i.useStyle(t.getItemVisual(n, "style")), i.style.lineJoin = "round", a ? (i.setShape({
          points: l.points
        }), i.style.opacity = 0, te(i, {
          style: {
            opacity: f
          }
        }, o, n)) : Vt(i, {
          style: {
            opacity: f
          },
          shape: {
            points: l.points
          }
        }, o, n), Re(i, s), this._updateLabel(t, n), oe(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
      }, e.prototype._updateLabel = function(t, n) {
        var a = this, i = this.getTextGuideLine(), o = a.getTextContent(), s = t.hostModel, l = t.getItemModel(n), u = t.getItemLayout(n), f = u.label, h = t.getItemVisual(n, "style"), c = h.fill;
        ke(
          // position will not be used in setLabelStyle
          o,
          Ce(l),
          {
            labelFetcher: t.hostModel,
            labelDataIndex: n,
            defaultOpacity: h.opacity,
            defaultText: t.getName(n)
          },
          {
            normal: {
              align: f.textAlign,
              verticalAlign: f.verticalAlign
            }
          }
        ), a.setTextConfig({
          local: !0,
          inside: !!f.inside,
          insideStroke: c,
          // insideFill: 'auto',
          outsideFill: c
        });
        var v = f.linePoints;
        i.setShape({
          points: v
        }), a.textGuideLineConfig = {
          anchor: v ? new St(v[0][0], v[0][1]) : null
        }, Vt(o, {
          style: {
            x: f.x,
            y: f.y
          }
        }, s, n), o.attr({
          rotation: f.rotation,
          originX: f.x,
          originY: f.y,
          z2: 10
        }), ry(a, ny(l), {
          // Default use item visual color
          stroke: c
        });
      }, e;
    }(ze)
  ), k4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.ignoreLabelLineUpdate = !0, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this._data, s = this.group;
        i.diff(o).add(function(l) {
          var u = new R4(i, l);
          i.setItemGraphicEl(l, u), s.add(u);
        }).update(function(l, u) {
          var f = o.getItemGraphicEl(u);
          f.updateData(i, l), s.add(f), i.setItemGraphicEl(l, f);
        }).remove(function(l) {
          var u = o.getItemGraphicEl(l);
          Pl(u, t, l);
        }).execute(), this._data = i;
      }, e.prototype.remove = function() {
        this.group.removeAll(), this._data = null;
      }, e.prototype.dispose = function() {
      }, e.type = "funnel", e;
    }($t)
  ), O4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t) {
        r.prototype.init.apply(this, arguments), this.legendVisualProvider = new xu(J(this.getData, this), J(this.getRawData, this)), this._defaultLabelLine(t);
      }, e.prototype.getInitialData = function(t, n) {
        return ys(this, {
          coordDimensions: ["value"],
          encodeDefaulter: yt(Up, this)
        });
      }, e.prototype._defaultLabelLine = function(t) {
        gi(t, "labelLine", ["show"]);
        var n = t.labelLine, a = t.emphasis.labelLine;
        n.show = n.show && t.label.show, a.show = a.show && t.emphasis.label.show;
      }, e.prototype.getDataParams = function(t) {
        var n = this.getData(), a = r.prototype.getDataParams.call(this, t), i = n.mapDimension("value"), o = n.getSum(i);
        return a.percent = o ? +(n.get(i, t) / o * 100).toFixed(2) : 0, a.$vars.push("percent"), a;
      }, e.type = "series.funnel", e.defaultOption = {
        // zlevel: 0,                  // 一级层叠
        z: 2,
        legendHoverLink: !0,
        colorBy: "data",
        left: 80,
        top: 60,
        right: 80,
        bottom: 60,
        // width: {totalWidth} - left - right,
        // height: {totalHeight} - top - bottom,
        // 默认取数据最小最大值
        // min: 0,
        // max: 100,
        minSize: "0%",
        maxSize: "100%",
        sort: "descending",
        orient: "vertical",
        gap: 0,
        funnelAlign: "center",
        label: {
          show: !0,
          position: "outer"
          // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
        },
        labelLine: {
          show: !0,
          length: 20,
          lineStyle: {
            // color: 各异,
            width: 1
          }
        },
        itemStyle: {
          // color: 各异,
          borderColor: "#fff",
          borderWidth: 1
        },
        emphasis: {
          label: {
            show: !0
          }
        },
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        }
      }, e;
    }(Zt)
  );
  function N4(r, e) {
    return ye(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function V4(r, e) {
    for (var t = r.mapDimension("value"), n = r.mapArray(t, function(l) {
      return l;
    }), a = [], i = e === "ascending", o = 0, s = r.count(); o < s; o++)
      a[o] = o;
    return rt(e) ? a.sort(e) : e !== "none" && a.sort(function(l, u) {
      return i ? n[l] - n[u] : n[u] - n[l];
    }), a;
  }
  function B4(r) {
    var e = r.hostModel, t = e.get("orient");
    r.each(function(n) {
      var a = r.getItemModel(n), i = a.getModel("label"), o = i.get("position"), s = a.getModel("labelLine"), l = r.getItemLayout(n), u = l.points, f = o === "inner" || o === "inside" || o === "center" || o === "insideLeft" || o === "insideRight", h, c, v, d;
      if (f)
        o === "insideLeft" ? (c = (u[0][0] + u[3][0]) / 2 + 5, v = (u[0][1] + u[3][1]) / 2, h = "left") : o === "insideRight" ? (c = (u[1][0] + u[2][0]) / 2 - 5, v = (u[1][1] + u[2][1]) / 2, h = "right") : (c = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4, v = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4, h = "center"), d = [[c, v], [c, v]];
      else {
        var p = void 0, g = void 0, y = void 0, m = void 0, _ = s.get("length");
        t === "vertical" && ["top", "bottom"].indexOf(o) > -1 && (o = "left", console.warn("Position error: Funnel chart on vertical orient dose not support top and bottom.")), t === "horizontal" && ["left", "right"].indexOf(o) > -1 && (o = "bottom", console.warn("Position error: Funnel chart on horizontal orient dose not support left and right.")), o === "left" ? (p = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, y = p - _, c = y - 5, h = "right") : o === "right" ? (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, y = p + _, c = y + 5, h = "left") : o === "top" ? (p = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, m = g - _, v = m - 5, h = "center") : o === "bottom" ? (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, m = g + _, v = m + 5, h = "center") : o === "rightTop" ? (p = t === "horizontal" ? u[3][0] : u[1][0], g = t === "horizontal" ? u[3][1] : u[1][1], t === "horizontal" ? (m = g - _, v = m - 5, h = "center") : (y = p + _, c = y + 5, h = "top")) : o === "rightBottom" ? (p = u[2][0], g = u[2][1], t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p + _, c = y + 5, h = "bottom")) : o === "leftTop" ? (p = u[0][0], g = t === "horizontal" ? u[0][1] : u[1][1], t === "horizontal" ? (m = g - _, v = m - 5, h = "center") : (y = p - _, c = y - 5, h = "right")) : o === "leftBottom" ? (p = t === "horizontal" ? u[1][0] : u[3][0], g = t === "horizontal" ? u[1][1] : u[2][1], t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p - _, c = y - 5, h = "right")) : (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p + _, c = y + 5, h = "left")), t === "horizontal" ? (y = p, c = y) : (m = g, v = m), d = [[p, g], [y, m]];
      }
      l.label = {
        linePoints: d,
        x: c,
        y: v,
        verticalAlign: "middle",
        textAlign: h,
        inside: f
      };
    });
  }
  function z4(r, e) {
    r.eachSeriesByType("funnel", function(t) {
      var n = t.getData(), a = n.mapDimension("value"), i = t.get("sort"), o = N4(t, e), s = t.get("orient"), l = o.width, u = o.height, f = V4(n, i), h = o.x, c = o.y, v = s === "horizontal" ? [Z(t.get("minSize"), u), Z(t.get("maxSize"), u)] : [Z(t.get("minSize"), l), Z(t.get("maxSize"), l)], d = n.getDataExtent(a), p = t.get("min"), g = t.get("max");
      p == null && (p = Math.min(d[0], 0)), g == null && (g = d[1]);
      var y = t.get("funnelAlign"), m = t.get("gap"), _ = s === "horizontal" ? l : u, S = (_ - m * (n.count() - 1)) / n.count(), b = function(k, O) {
        if (s === "horizontal") {
          var N = n.get(a, k) || 0, F = Wt(N, [p, g], v, !0), G = void 0;
          switch (y) {
            case "top":
              G = c;
              break;
            case "center":
              G = c + (u - F) / 2;
              break;
            case "bottom":
              G = c + (u - F);
              break;
          }
          return [[O, G], [O, G + F]];
        }
        var W = n.get(a, k) || 0, X = Wt(W, [p, g], v, !0), K;
        switch (y) {
          case "left":
            K = h;
            break;
          case "center":
            K = h + (l - X) / 2;
            break;
          case "right":
            K = h + l - X;
            break;
        }
        return [[K, O], [K + X, O]];
      };
      i === "ascending" && (S = -S, m = -m, s === "horizontal" ? h += l : c += u, f = f.reverse());
      for (var w = 0; w < f.length; w++) {
        var T = f[w], C = f[w + 1], I = n.getItemModel(T);
        if (s === "horizontal") {
          var L = I.get(["itemStyle", "width"]);
          L == null ? L = S : (L = Z(L, l), i === "ascending" && (L = -L));
          var P = b(T, h), E = b(C, h + L);
          h += L + m, n.setItemLayout(T, {
            points: P.concat(E.slice().reverse())
          });
        } else {
          var R = I.get(["itemStyle", "height"]);
          R == null ? R = S : (R = Z(R, u), i === "ascending" && (R = -R));
          var P = b(T, c), E = b(C, c + R);
          c += R + m, n.setItemLayout(T, {
            points: P.concat(E.slice().reverse())
          });
        }
      }
      B4(n);
    });
  }
  function G4(r) {
    r.registerChartView(k4), r.registerSeriesModel(O4), r.registerLayout(z4), r.registerProcessor(Su("funnel"));
  }
  var F4 = 0.3, H4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._dataGroup = new ct(), t._initialized = !1, t;
      }
      return e.prototype.init = function() {
        this.group.add(this._dataGroup);
      }, e.prototype.render = function(t, n, a, i) {
        this._progressiveEls = null;
        var o = this._dataGroup, s = t.getData(), l = this._data, u = t.coordinateSystem, f = u.dimensions, h = sM(t);
        s.diff(l).add(c).update(v).remove(d).execute();
        function c(g) {
          var y = oM(s, o, g, f, u);
          bm(y, s, g, h);
        }
        function v(g, y) {
          var m = l.getItemGraphicEl(y), _ = iM(s, g, f, u);
          s.setItemGraphicEl(g, m), Vt(m, {
            shape: {
              points: _
            }
          }, t, g), an(m), bm(m, s, g, h);
        }
        function d(g) {
          var y = l.getItemGraphicEl(g);
          o.remove(y);
        }
        if (!this._initialized) {
          this._initialized = !0;
          var p = W4(u, t, function() {
            setTimeout(function() {
              o.removeClipPath();
            });
          });
          o.setClipPath(p);
        }
        this._data = s;
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        this._initialized = !0, this._data = null, this._dataGroup.removeAll();
      }, e.prototype.incrementalRender = function(t, n, a) {
        for (var i = n.getData(), o = n.coordinateSystem, s = o.dimensions, l = sM(n), u = this._progressiveEls = [], f = t.start; f < t.end; f++) {
          var h = oM(i, this._dataGroup, f, s, o);
          h.incremental = !0, bm(h, i, f, l), u.push(h);
        }
      }, e.prototype.remove = function() {
        this._dataGroup && this._dataGroup.removeAll(), this._data = null;
      }, e.type = "parallel", e;
    }($t)
  );
  function W4(r, e, t) {
    var n = r.model, a = r.getRect(), i = new Rt({
      shape: {
        x: a.x,
        y: a.y,
        width: a.width,
        height: a.height
      }
    }), o = n.get("layout") === "horizontal" ? "width" : "height";
    return i.setShape(o, 0), te(i, {
      shape: {
        width: a.width,
        height: a.height
      }
    }, e, t), i;
  }
  function iM(r, e, t, n) {
    for (var a = [], i = 0; i < t.length; i++) {
      var o = t[i], s = r.get(r.mapDimension(o), e);
      U4(s, n.getAxis(o).type) || a.push(n.dataToPoint(s, o));
    }
    return a;
  }
  function oM(r, e, t, n, a) {
    var i = iM(r, t, n, a), o = new Ge({
      shape: {
        points: i
      },
      // silent: true,
      z2: 10
    });
    return e.add(o), r.setItemGraphicEl(t, o), o;
  }
  function sM(r) {
    var e = r.get("smooth", !0);
    return e === !0 && (e = F4), e = xn(e), ca(e) && (e = 0), {
      smooth: e
    };
  }
  function bm(r, e, t, n) {
    r.useStyle(e.getItemVisual(t, "style")), r.style.fill = null, r.setShape("smooth", n.smooth);
    var a = e.getItemModel(t), i = a.getModel("emphasis");
    Re(r, a, "lineStyle"), oe(r, i.get("focus"), i.get("blurScope"), i.get("disabled"));
  }
  function U4(r, e) {
    return e === "category" ? r == null : r == null || isNaN(r);
  }
  var Y4 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return Ln(null, this, {
          useEncodeDefaulter: J($4, null, this)
        });
      }, e.prototype.getRawIndicesByActiveState = function(t) {
        var n = this.coordinateSystem, a = this.getData(), i = [];
        return n.eachActiveState(a, function(o, s) {
          t === o && i.push(a.getRawIndex(s));
        }), i;
      }, e.type = "series.parallel", e.dependencies = ["parallel"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "parallel",
        parallelIndex: 0,
        label: {
          show: !1
        },
        inactiveOpacity: 0.05,
        activeOpacity: 1,
        lineStyle: {
          width: 1,
          opacity: 0.45,
          type: "solid"
        },
        emphasis: {
          label: {
            show: !1
          }
        },
        progressive: 500,
        smooth: !1,
        animationEasing: "linear"
      }, e;
    }(Zt)
  );
  function $4(r) {
    var e = r.ecModel.getComponent("parallel", r.get("parallelIndex"));
    if (e) {
      var t = {};
      return M(e.dimensions, function(n) {
        var a = X4(n);
        t[n] = a;
      }), t;
    }
  }
  function X4(r) {
    return +r.replace("dim", "");
  }
  var Z4 = ["lineStyle", "opacity"], q4 = {
    seriesType: "parallel",
    reset: function(r, e) {
      var t = r.coordinateSystem, n = {
        normal: r.get(["lineStyle", "opacity"]),
        active: r.get("activeOpacity"),
        inactive: r.get("inactiveOpacity")
      };
      return {
        progress: function(a, i) {
          t.eachActiveState(i, function(o, s) {
            var l = n[o];
            if (o === "normal" && i.hasItemOption) {
              var u = i.getItemModel(s).get(Z4, !0);
              u != null && (l = u);
            }
            var f = i.ensureUniqueItemVisual(s, "style");
            f.opacity = l;
          }, a.start, a.end);
        }
      };
    }
  };
  function K4(r) {
    j4(r), J4(r);
  }
  function j4(r) {
    if (!r.parallel) {
      var e = !1;
      M(r.series, function(t) {
        t && t.type === "parallel" && (e = !0);
      }), e && (r.parallel = [{}]);
    }
  }
  function J4(r) {
    var e = Xt(r.parallelAxis);
    M(e, function(t) {
      if (it(t)) {
        var n = t.parallelIndex || 0, a = Xt(r.parallel)[n];
        a && a.parallelAxisDefault && mt(t, a.parallelAxisDefault, !1);
      }
    });
  }
  var Q4 = 5, tW = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        this._model = t, this._api = a, this._handlers || (this._handlers = {}, M(eW, function(i, o) {
          a.getZr().on(o, this._handlers[o] = J(i, this));
        }, this)), as(this, "_throttledDispatchExpand", t.get("axisExpandRate"), "fixRate");
      }, e.prototype.dispose = function(t, n) {
        ql(this, "_throttledDispatchExpand"), M(this._handlers, function(a, i) {
          n.getZr().off(i, a);
        }), this._handlers = null;
      }, e.prototype._throttledDispatchExpand = function(t) {
        this._dispatchExpand(t);
      }, e.prototype._dispatchExpand = function(t) {
        t && this._api.dispatchAction(H({
          type: "parallelAxisExpand"
        }, t));
      }, e.type = "parallel", e;
    }(Jt)
  ), eW = {
    mousedown: function(r) {
      Tm(this, "click") && (this._mouseDownPoint = [r.offsetX, r.offsetY]);
    },
    mouseup: function(r) {
      var e = this._mouseDownPoint;
      if (Tm(this, "click") && e) {
        var t = [r.offsetX, r.offsetY], n = Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2);
        if (n > Q4)
          return;
        var a = this._model.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]);
        a.behavior !== "none" && this._dispatchExpand({
          axisExpandWindow: a.axisExpandWindow
        });
      }
      this._mouseDownPoint = null;
    },
    mousemove: function(r) {
      if (!(this._mouseDownPoint || !Tm(this, "mousemove"))) {
        var e = this._model, t = e.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]), n = t.behavior;
        n === "jump" && this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")), this._throttledDispatchExpand(n === "none" ? null : {
          axisExpandWindow: t.axisExpandWindow,
          // Jumping uses animation, and sliding suppresses animation.
          animation: n === "jump" ? null : {
            duration: 0
            // Disable animation.
          }
        });
      }
    }
  };
  function Tm(r, e) {
    var t = r._model;
    return t.get("axisExpandable") && t.get("axisExpandTriggerOn") === e;
  }
  var rW = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function() {
        r.prototype.init.apply(this, arguments), this.mergeOption({});
      }, e.prototype.mergeOption = function(t) {
        var n = this.option;
        t && mt(n, t, !0), this._initDimensions();
      }, e.prototype.contains = function(t, n) {
        var a = t.get("parallelIndex");
        return a != null && n.getComponent("parallel", a) === this;
      }, e.prototype.setAxisExpand = function(t) {
        M(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(n) {
          t.hasOwnProperty(n) && (this.option[n] = t[n]);
        }, this);
      }, e.prototype._initDimensions = function() {
        var t = this.dimensions = [], n = this.parallelAxisIndex = [], a = Ht(this.ecModel.queryComponents({
          mainType: "parallelAxis"
        }), function(i) {
          return (i.get("parallelIndex") || 0) === this.componentIndex;
        }, this);
        M(a, function(i) {
          t.push("dim" + i.get("dim")), n.push(i.componentIndex);
        });
      }, e.type = "parallel", e.dependencies = ["parallelAxis"], e.layoutMode = "box", e.defaultOption = {
        // zlevel: 0,
        z: 0,
        left: 80,
        top: 60,
        right: 80,
        bottom: 60,
        // width: {totalWidth} - left - right,
        // height: {totalHeight} - top - bottom,
        layout: "horizontal",
        // FIXME
        // naming?
        axisExpandable: !1,
        axisExpandCenter: null,
        axisExpandCount: 0,
        axisExpandWidth: 50,
        axisExpandRate: 17,
        axisExpandDebounce: 50,
        // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.
        // Do not doc to user until necessary.
        axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
        axisExpandTriggerOn: "click",
        parallelAxisDefault: null
      }, e;
    }(Ct)
  ), nW = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i, o) {
        var s = r.call(this, t, n, a) || this;
        return s.type = i || "value", s.axisIndex = o, s;
      }
      return e.prototype.isHorizontal = function() {
        return this.coordinateSystem.getModel().get("layout") !== "horizontal";
      }, e;
    }(Ur)
  );
  function lo(r, e, t, n, a, i) {
    r = r || 0;
    var o = t[1] - t[0];
    if (a != null && (a = bs(a, [0, o])), i != null && (i = Math.max(i, a ?? 0)), n === "all") {
      var s = Math.abs(e[1] - e[0]);
      s = bs(s, [0, o]), a = i = bs(s, [a, i]), n = 0;
    }
    e[0] = bs(e[0], t), e[1] = bs(e[1], t);
    var l = Cm(e, n);
    e[n] += r;
    var u = a || 0, f = t.slice();
    l.sign < 0 ? f[0] += u : f[1] -= u, e[n] = bs(e[n], f);
    var h;
    return h = Cm(e, n), a != null && (h.sign !== l.sign || h.span < a) && (e[1 - n] = e[n] + l.sign * a), h = Cm(e, n), i != null && h.span > i && (e[1 - n] = e[n] + h.sign * i), e;
  }
  function Cm(r, e) {
    var t = r[e] - r[1 - e];
    return {
      span: Math.abs(t),
      sign: t > 0 ? -1 : t < 0 ? 1 : e ? -1 : 1
    };
  }
  function bs(r, e) {
    return Math.min(e[1] != null ? e[1] : 1 / 0, Math.max(e[0] != null ? e[0] : -1 / 0, r));
  }
  var Am = M, lM = Math.min, uM = Math.max, fM = Math.floor, aW = Math.ceil, hM = ie, iW = Math.PI, oW = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.type = "parallel", this._axesMap = nt(), this._axesLayout = {}, this.dimensions = e.dimensions, this._model = e, this._init(e, t, n);
      }
      return r.prototype._init = function(e, t, n) {
        var a = e.dimensions, i = e.parallelAxisIndex;
        Am(a, function(o, s) {
          var l = i[s], u = t.getComponent("parallelAxis", l), f = this._axesMap.set(o, new nW(o, lu(u), [0, 0], u.get("type"), l)), h = f.type === "category";
          f.onBand = h && u.get("boundaryGap"), f.inverse = u.get("inverse"), u.axis = f, f.model = u, f.coordinateSystem = u.coordinateSystem = this;
        }, this);
      }, r.prototype.update = function(e, t) {
        this._updateAxesFromSeries(this._model, e);
      }, r.prototype.containPoint = function(e) {
        var t = this._makeLayoutInfo(), n = t.axisBase, a = t.layoutBase, i = t.pixelDimIndex, o = e[1 - i], s = e[i];
        return o >= n && o <= n + t.axisLength && s >= a && s <= a + t.layoutLength;
      }, r.prototype.getModel = function() {
        return this._model;
      }, r.prototype._updateAxesFromSeries = function(e, t) {
        t.eachSeries(function(n) {
          if (e.contains(n, t)) {
            var a = n.getData();
            Am(this.dimensions, function(i) {
              var o = this._axesMap.get(i);
              o.scale.unionExtentFromData(a, a.mapDimension(i)), Xi(o.scale, o.model);
            }, this);
          }
        }, this);
      }, r.prototype.resize = function(e, t) {
        this._rect = ye(e.getBoxLayoutParams(), {
          width: t.getWidth(),
          height: t.getHeight()
        }), this._layoutAxes();
      }, r.prototype.getRect = function() {
        return this._rect;
      }, r.prototype._makeLayoutInfo = function() {
        var e = this._model, t = this._rect, n = ["x", "y"], a = ["width", "height"], i = e.get("layout"), o = i === "horizontal" ? 0 : 1, s = t[a[o]], l = [0, s], u = this.dimensions.length, f = Oc(e.get("axisExpandWidth"), l), h = Oc(e.get("axisExpandCount") || 0, [0, u]), c = e.get("axisExpandable") && u > 3 && u > h && h > 1 && f > 0 && s > 0, v = e.get("axisExpandWindow"), d;
        if (v)
          d = Oc(v[1] - v[0], l), v[1] = v[0] + d;
        else {
          d = Oc(f * (h - 1), l);
          var p = e.get("axisExpandCenter") || fM(u / 2);
          v = [f * p - d / 2], v[1] = v[0] + d;
        }
        var g = (s - d) / (u - h);
        g < 3 && (g = 0);
        var y = [fM(hM(v[0] / f, 1)) + 1, aW(hM(v[1] / f, 1)) - 1], m = g / f * v[0];
        return {
          layout: i,
          pixelDimIndex: o,
          layoutBase: t[n[o]],
          layoutLength: s,
          axisBase: t[n[1 - o]],
          axisLength: t[a[1 - o]],
          axisExpandable: c,
          axisExpandWidth: f,
          axisCollapseWidth: g,
          axisExpandWindow: v,
          axisCount: u,
          winInnerIndices: y,
          axisExpandWindow0Pos: m
        };
      }, r.prototype._layoutAxes = function() {
        var e = this._rect, t = this._axesMap, n = this.dimensions, a = this._makeLayoutInfo(), i = a.layout;
        t.each(function(o) {
          var s = [0, a.axisLength], l = o.inverse ? 1 : 0;
          o.setExtent(s[l], s[1 - l]);
        }), Am(n, function(o, s) {
          var l = (a.axisExpandable ? lW : sW)(s, a), u = {
            horizontal: {
              x: l.position,
              y: a.axisLength
            },
            vertical: {
              x: 0,
              y: l.position
            }
          }, f = {
            horizontal: iW / 2,
            vertical: 0
          }, h = [u[i].x + e.x, u[i].y + e.y], c = f[i], v = dr();
          ga(v, v, c), jr(v, v, h), this._axesLayout[o] = {
            position: h,
            rotation: c,
            transform: v,
            axisNameAvailableWidth: l.axisNameAvailableWidth,
            axisLabelShow: l.axisLabelShow,
            nameTruncateMaxWidth: l.nameTruncateMaxWidth,
            tickDirection: 1,
            labelDirection: 1
          };
        }, this);
      }, r.prototype.getAxis = function(e) {
        return this._axesMap.get(e);
      }, r.prototype.dataToPoint = function(e, t) {
        return this.axisCoordToPoint(this._axesMap.get(t).dataToCoord(e), t);
      }, r.prototype.eachActiveState = function(e, t, n, a) {
        n == null && (n = 0), a == null && (a = e.count());
        var i = this._axesMap, o = this.dimensions, s = [], l = [];
        M(o, function(g) {
          s.push(e.mapDimension(g)), l.push(i.get(g).model);
        });
        for (var u = this.hasAxisBrushed(), f = n; f < a; f++) {
          var h = void 0;
          if (!u)
            h = "normal";
          else {
            h = "active";
            for (var c = e.getValues(s, f), v = 0, d = o.length; v < d; v++) {
              var p = l[v].getActiveState(c[v]);
              if (p === "inactive") {
                h = "inactive";
                break;
              }
            }
          }
          t(h, f);
        }
      }, r.prototype.hasAxisBrushed = function() {
        for (var e = this.dimensions, t = this._axesMap, n = !1, a = 0, i = e.length; a < i; a++)
          t.get(e[a]).model.getActiveState() !== "normal" && (n = !0);
        return n;
      }, r.prototype.axisCoordToPoint = function(e, t) {
        var n = this._axesLayout[t];
        return on([e, 0], n.transform);
      }, r.prototype.getAxisLayout = function(e) {
        return ht(this._axesLayout[e]);
      }, r.prototype.getSlidedAxisExpandWindow = function(e) {
        var t = this._makeLayoutInfo(), n = t.pixelDimIndex, a = t.axisExpandWindow.slice(), i = a[1] - a[0], o = [0, t.axisExpandWidth * (t.axisCount - 1)];
        if (!this.containPoint(e))
          return {
            behavior: "none",
            axisExpandWindow: a
          };
        var s = e[n] - t.layoutBase - t.axisExpandWindow0Pos, l, u = "slide", f = t.axisCollapseWidth, h = this._model.get("axisExpandSlideTriggerArea"), c = h[0] != null;
        if (f)
          c && f && s < i * h[0] ? (u = "jump", l = s - i * h[2]) : c && f && s > i * (1 - h[0]) ? (u = "jump", l = s - i * (1 - h[2])) : (l = s - i * h[1]) >= 0 && (l = s - i * (1 - h[1])) <= 0 && (l = 0), l *= t.axisExpandWidth / f, l ? lo(l, a, o, "all") : u = "none";
        else {
          var v = a[1] - a[0], d = o[1] * s / v;
          a = [uM(0, d - v / 2)], a[1] = lM(o[1], a[0] + v), a[0] = a[1] - v;
        }
        return {
          axisExpandWindow: a,
          behavior: u
        };
      }, r;
    }()
  );
  function Oc(r, e) {
    return lM(uM(r, e[0]), e[1]);
  }
  function sW(r, e) {
    var t = e.layoutLength / (e.axisCount - 1);
    return {
      position: t * r,
      axisNameAvailableWidth: t,
      axisLabelShow: !0
    };
  }
  function lW(r, e) {
    var t = e.layoutLength, n = e.axisExpandWidth, a = e.axisCount, i = e.axisCollapseWidth, o = e.winInnerIndices, s, l = i, u = !1, f;
    return r < o[0] ? (s = r * i, f = i) : r <= o[1] ? (s = e.axisExpandWindow0Pos + r * n - e.axisExpandWindow[0], l = n, u = !0) : (s = t - (a - 1 - r) * i, f = i), {
      position: s,
      axisNameAvailableWidth: l,
      axisLabelShow: u,
      nameTruncateMaxWidth: f
    };
  }
  function uW(r, e) {
    var t = [];
    return r.eachComponent("parallel", function(n, a) {
      var i = new oW(n, r, e);
      i.name = "parallel_" + a, i.resize(n, e), n.coordinateSystem = i, i.model = n, t.push(i);
    }), r.eachSeries(function(n) {
      if (n.get("coordinateSystem") === "parallel") {
        var a = n.getReferringComponents("parallel", ge).models[0];
        n.coordinateSystem = a.coordinateSystem;
      }
    }), t;
  }
  var fW = {
    create: uW
  }, Dm = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.activeIntervals = [], t;
      }
      return e.prototype.getAreaSelectStyle = function() {
        return _i([
          ["fill", "color"],
          ["lineWidth", "borderWidth"],
          ["stroke", "borderColor"],
          ["width", "width"],
          ["opacity", "opacity"]
          // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
          // So do not transfer decal directly.
        ])(this.getModel("areaSelectStyle"));
      }, e.prototype.setActiveIntervals = function(t) {
        var n = this.activeIntervals = ht(t);
        if (n)
          for (var a = n.length - 1; a >= 0; a--)
            yr(n[a]);
      }, e.prototype.getActiveState = function(t) {
        var n = this.activeIntervals;
        if (!n.length)
          return "normal";
        if (t == null || isNaN(+t))
          return "inactive";
        if (n.length === 1) {
          var a = n[0];
          if (a[0] <= t && t <= a[1])
            return "active";
        } else
          for (var i = 0, o = n.length; i < o; i++)
            if (n[i][0] <= t && t <= n[i][1])
              return "active";
        return "inactive";
      }, e;
    }(Ct)
  );
  le(Dm, vs);
  var uo = !0, Bu = Math.min, Ts = Math.max, hW = Math.pow, cW = 1e4, vW = 6, dW = 6, cM = "globalPan", pW = {
    w: [0, 0],
    e: [0, 1],
    n: [1, 0],
    s: [1, 1]
  }, gW = {
    w: "ew",
    e: "ew",
    n: "ns",
    s: "ns",
    ne: "nesw",
    sw: "nesw",
    nw: "nwse",
    se: "nwse"
  }, vM = {
    brushStyle: {
      lineWidth: 2,
      stroke: "rgba(210,219,238,0.3)",
      fill: "#D2DBEE"
    },
    transformable: !0,
    brushMode: "single",
    removeOnClick: !1
  }, yW = 0, Mm = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this) || this;
        return n._track = [], n._covers = [], n._handlers = {}, st(t), n._zr = t, n.group = new ct(), n._uid = "brushController_" + yW++, M(TW, function(a, i) {
          this._handlers[i] = J(a, this);
        }, n), n;
      }
      return e.prototype.enableBrush = function(t) {
        return st(this._mounted), this._brushType && this._doDisableBrush(), t.brushType && this._doEnableBrush(t), this;
      }, e.prototype._doEnableBrush = function(t) {
        var n = this._zr;
        this._enableGlobalPan || s3(n, cM, this._uid), M(this._handlers, function(a, i) {
          n.on(i, a);
        }), this._brushType = t.brushType, this._brushOption = mt(ht(vM), t, !0);
      }, e.prototype._doDisableBrush = function() {
        var t = this._zr;
        l3(t, cM, this._uid), M(this._handlers, function(n, a) {
          t.off(a, n);
        }), this._brushType = this._brushOption = null;
      }, e.prototype.setPanels = function(t) {
        if (t && t.length) {
          var n = this._panels = {};
          M(t, function(a) {
            n[a.panelId] = ht(a);
          });
        } else
          this._panels = null;
        return this;
      }, e.prototype.mount = function(t) {
        t = t || {}, this._mounted = !0, this._enableGlobalPan = t.enableGlobalPan;
        var n = this.group;
        return this._zr.add(n), n.attr({
          x: t.x || 0,
          y: t.y || 0,
          rotation: t.rotation || 0,
          scaleX: t.scaleX || 1,
          scaleY: t.scaleY || 1
        }), this._transform = n.getLocalTransform(), this;
      }, e.prototype.updateCovers = function(t) {
        st(this._mounted), t = Y(t, function(c) {
          return mt(ht(vM), c, !0);
        });
        var n = "\0-brush-index-", a = this._covers, i = this._covers = [], o = this, s = this._creatingCover;
        return new ea(a, t, u, l).add(f).update(f).remove(h).execute(), this;
        function l(c, v) {
          return (c.id != null ? c.id : n + v) + "-" + c.brushType;
        }
        function u(c, v) {
          return l(c.__brushOption, v);
        }
        function f(c, v) {
          var d = t[c];
          if (v != null && a[v] === s)
            i[c] = a[v];
          else {
            var p = i[c] = v != null ? (a[v].__brushOption = d, a[v]) : pM(o, dM(o, d));
            Im(o, p);
          }
        }
        function h(c) {
          a[c] !== s && o.group.remove(a[c]);
        }
      }, e.prototype.unmount = function() {
        if (this._mounted)
          return this.enableBrush(!1), Em(this), this._zr.remove(this.group), this._mounted = !1, this;
      }, e.prototype.dispose = function() {
        this.unmount(), this.off();
      }, e;
    }(Ir)
  );
  function dM(r, e) {
    var t = Nc[e.brushType].createCover(r, e);
    return t.__brushOption = e, yM(t, e), r.group.add(t), t;
  }
  function pM(r, e) {
    var t = Lm(e);
    return t.endCreating && (t.endCreating(r, e), yM(e, e.__brushOption)), e;
  }
  function gM(r, e) {
    var t = e.__brushOption;
    Lm(e).updateCoverShape(r, e, t.range, t);
  }
  function yM(r, e) {
    var t = e.z;
    t == null && (t = cW), r.traverse(function(n) {
      n.z = t, n.z2 = t;
    });
  }
  function Im(r, e) {
    Lm(e).updateCommon(r, e), gM(r, e);
  }
  function Lm(r) {
    return Nc[r.__brushOption.brushType];
  }
  function Pm(r, e, t) {
    var n = r._panels;
    if (!n)
      return uo;
    var a, i = r._transform;
    return M(n, function(o) {
      o.isTargetByCursor(e, t, i) && (a = o);
    }), a;
  }
  function mM(r, e) {
    var t = r._panels;
    if (!t)
      return uo;
    var n = e.__brushOption.panelId;
    return n != null ? t[n] : uo;
  }
  function Em(r) {
    var e = r._covers, t = e.length;
    return M(e, function(n) {
      r.group.remove(n);
    }, r), e.length = 0, !!t;
  }
  function fo(r, e) {
    var t = Y(r._covers, function(n) {
      var a = n.__brushOption, i = ht(a.range);
      return {
        brushType: a.brushType,
        panelId: a.panelId,
        range: i
      };
    });
    r.trigger("brush", {
      areas: t,
      isEnd: !!e.isEnd,
      removeOnClick: !!e.removeOnClick
    });
  }
  function mW(r) {
    var e = r._track;
    if (!e.length)
      return !1;
    var t = e[e.length - 1], n = e[0], a = t[0] - n[0], i = t[1] - n[1], o = hW(a * a + i * i, 0.5);
    return o > vW;
  }
  function _M(r) {
    var e = r.length - 1;
    return e < 0 && (e = 0), [r[0], r[e]];
  }
  function SM(r, e, t, n) {
    var a = new ct();
    return a.add(new Rt({
      name: "main",
      style: km(t),
      silent: !0,
      draggable: !0,
      cursor: "move",
      drift: yt(bM, r, e, a, ["n", "s", "w", "e"]),
      ondragend: yt(fo, e, {
        isEnd: !0
      })
    })), M(n, function(i) {
      a.add(new Rt({
        name: i.join(""),
        style: {
          opacity: 0
        },
        draggable: !0,
        silent: !0,
        invisible: !0,
        drift: yt(bM, r, e, a, i),
        ondragend: yt(fo, e, {
          isEnd: !0
        })
      }));
    }), a;
  }
  function xM(r, e, t, n) {
    var a = n.brushStyle.lineWidth || 0, i = Ts(a, dW), o = t[0][0], s = t[1][0], l = o - a / 2, u = s - a / 2, f = t[0][1], h = t[1][1], c = f - i + a / 2, v = h - i + a / 2, d = f - o, p = h - s, g = d + a, y = p + a;
    ia(r, e, "main", o, s, d, p), n.transformable && (ia(r, e, "w", l, u, i, y), ia(r, e, "e", c, u, i, y), ia(r, e, "n", l, u, g, i), ia(r, e, "s", l, v, g, i), ia(r, e, "nw", l, u, i, i), ia(r, e, "ne", c, u, i, i), ia(r, e, "sw", l, v, i, i), ia(r, e, "se", c, v, i, i));
  }
  function Rm(r, e) {
    var t = e.__brushOption, n = t.transformable, a = e.childAt(0);
    a.useStyle(km(t)), a.attr({
      silent: !n,
      cursor: n ? "move" : "default"
    }), M([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(i) {
      var o = e.childOfName(i.join("")), s = i.length === 1 ? Om(r, i[0]) : SW(r, i);
      o && o.attr({
        silent: !n,
        invisible: !n,
        cursor: n ? gW[s] + "-resize" : null
      });
    });
  }
  function ia(r, e, t, n, a, i, o) {
    var s = e.childOfName(t);
    s && s.setShape(wW(Nm(r, e, [[n, a], [n + i, a + o]])));
  }
  function km(r) {
    return ot({
      strokeNoScale: !0
    }, r.brushStyle);
  }
  function wM(r, e, t, n) {
    var a = [Bu(r, t), Bu(e, n)], i = [Ts(r, t), Ts(e, n)];
    return [
      [a[0], i[0]],
      [a[1], i[1]]
      // y range
    ];
  }
  function _W(r) {
    return La(r.group);
  }
  function Om(r, e) {
    var t = {
      w: "left",
      e: "right",
      n: "top",
      s: "bottom"
    }, n = {
      left: "w",
      right: "e",
      top: "n",
      bottom: "s"
    }, a = fh(t[e], _W(r));
    return n[a];
  }
  function SW(r, e) {
    var t = [Om(r, e[0]), Om(r, e[1])];
    return (t[0] === "e" || t[0] === "w") && t.reverse(), t.join("");
  }
  function bM(r, e, t, n, a, i) {
    var o = t.__brushOption, s = r.toRectRange(o.range), l = TM(e, a, i);
    M(n, function(u) {
      var f = pW[u];
      s[f[0]][f[1]] += l[f[0]];
    }), o.range = r.fromRectRange(wM(s[0][0], s[1][0], s[0][1], s[1][1])), Im(e, t), fo(e, {
      isEnd: !1
    });
  }
  function xW(r, e, t, n) {
    var a = e.__brushOption.range, i = TM(r, t, n);
    M(a, function(o) {
      o[0] += i[0], o[1] += i[1];
    }), Im(r, e), fo(r, {
      isEnd: !1
    });
  }
  function TM(r, e, t) {
    var n = r.group, a = n.transformCoordToLocal(e, t), i = n.transformCoordToLocal(0, 0);
    return [a[0] - i[0], a[1] - i[1]];
  }
  function Nm(r, e, t) {
    var n = mM(r, e);
    return n && n !== uo ? n.clipPath(t, r._transform) : ht(t);
  }
  function wW(r) {
    var e = Bu(r[0][0], r[1][0]), t = Bu(r[0][1], r[1][1]), n = Ts(r[0][0], r[1][0]), a = Ts(r[0][1], r[1][1]);
    return {
      x: e,
      y: t,
      width: n - e,
      height: a - t
    };
  }
  function bW(r, e, t) {
    if (
      // Check active
      !(!r._brushType || CW(r, e.offsetX, e.offsetY))
    ) {
      var n = r._zr, a = r._covers, i = Pm(r, e, t);
      if (!r._dragging)
        for (var o = 0; o < a.length; o++) {
          var s = a[o].__brushOption;
          if (i && (i === uo || s.panelId === i.panelId) && Nc[s.brushType].contain(a[o], t[0], t[1]))
            return;
        }
      i && n.setCursorStyle("crosshair");
    }
  }
  function Vm(r) {
    var e = r.event;
    e.preventDefault && e.preventDefault();
  }
  function Bm(r, e, t) {
    return r.childOfName("main").contain(e, t);
  }
  function CM(r, e, t, n) {
    var a = r._creatingCover, i = r._creatingPanel, o = r._brushOption, s;
    if (r._track.push(t.slice()), mW(r) || a) {
      if (i && !a) {
        o.brushMode === "single" && Em(r);
        var l = ht(o);
        l.brushType = AM(l.brushType, i), l.panelId = i === uo ? null : i.panelId, a = r._creatingCover = dM(r, l), r._covers.push(a);
      }
      if (a) {
        var u = Nc[AM(r._brushType, i)], f = a.__brushOption;
        f.range = u.getCreatingRange(Nm(r, a, r._track)), n && (pM(r, a), u.updateCommon(r, a)), gM(r, a), s = {
          isEnd: n
        };
      }
    } else
      n && o.brushMode === "single" && o.removeOnClick && Pm(r, e, t) && Em(r) && (s = {
        isEnd: n,
        removeOnClick: !0
      });
    return s;
  }
  function AM(r, e) {
    return r === "auto" ? (st(e && e.defaultBrushType, 'MUST have defaultBrushType when brushType is "atuo"'), e.defaultBrushType) : r;
  }
  var TW = {
    mousedown: function(r) {
      if (this._dragging)
        DM(this, r);
      else if (!r.target || !r.target.draggable) {
        Vm(r);
        var e = this.group.transformCoordToLocal(r.offsetX, r.offsetY);
        this._creatingCover = null;
        var t = this._creatingPanel = Pm(this, r, e);
        t && (this._dragging = !0, this._track = [e.slice()]);
      }
    },
    mousemove: function(r) {
      var e = r.offsetX, t = r.offsetY, n = this.group.transformCoordToLocal(e, t);
      if (bW(this, r, n), this._dragging) {
        Vm(r);
        var a = CM(this, r, n, !1);
        a && fo(this, a);
      }
    },
    mouseup: function(r) {
      DM(this, r);
    }
  };
  function DM(r, e) {
    if (r._dragging) {
      Vm(e);
      var t = e.offsetX, n = e.offsetY, a = r.group.transformCoordToLocal(t, n), i = CM(r, e, a, !0);
      r._dragging = !1, r._track = [], r._creatingCover = null, i && fo(r, i);
    }
  }
  function CW(r, e, t) {
    var n = r._zr;
    return e < 0 || e > n.getWidth() || t < 0 || t > n.getHeight();
  }
  var Nc = {
    lineX: MM(0),
    lineY: MM(1),
    rect: {
      createCover: function(r, e) {
        function t(n) {
          return n;
        }
        return SM({
          toRectRange: t,
          fromRectRange: t
        }, r, e, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
      },
      getCreatingRange: function(r) {
        var e = _M(r);
        return wM(e[1][0], e[1][1], e[0][0], e[0][1]);
      },
      updateCoverShape: function(r, e, t, n) {
        xM(r, e, t, n);
      },
      updateCommon: Rm,
      contain: Bm
    },
    polygon: {
      createCover: function(r, e) {
        var t = new ct();
        return t.add(new Ge({
          name: "main",
          style: km(e),
          silent: !0
        })), t;
      },
      getCreatingRange: function(r) {
        return r;
      },
      endCreating: function(r, e) {
        e.remove(e.childAt(0)), e.add(new ze({
          name: "main",
          draggable: !0,
          drift: yt(xW, r, e),
          ondragend: yt(fo, r, {
            isEnd: !0
          })
        }));
      },
      updateCoverShape: function(r, e, t, n) {
        e.childAt(0).setShape({
          points: Nm(r, e, t)
        });
      },
      updateCommon: Rm,
      contain: Bm
    }
  };
  function MM(r) {
    return {
      createCover: function(e, t) {
        return SM({
          toRectRange: function(n) {
            var a = [n, [0, 100]];
            return r && a.reverse(), a;
          },
          fromRectRange: function(n) {
            return n[r];
          }
        }, e, t, [[["w"], ["e"]], [["n"], ["s"]]][r]);
      },
      getCreatingRange: function(e) {
        var t = _M(e), n = Bu(t[0][r], t[1][r]), a = Ts(t[0][r], t[1][r]);
        return [n, a];
      },
      updateCoverShape: function(e, t, n, a) {
        var i, o = mM(e, t);
        if (o !== uo && o.getLinearBrushOtherExtent)
          i = o.getLinearBrushOtherExtent(r);
        else {
          var s = e._zr;
          i = [0, [s.getWidth(), s.getHeight()][1 - r]];
        }
        var l = [n, i];
        r && l.reverse(), xM(e, t, l, a);
      },
      updateCommon: Rm,
      contain: Bm
    };
  }
  function IM(r) {
    return r = zm(r), function(e) {
      return Tp(e, r);
    };
  }
  function LM(r, e) {
    return r = zm(r), function(t) {
      var n = e ?? t, a = n ? r.width : r.height, i = n ? r.x : r.y;
      return [i, i + (a || 0)];
    };
  }
  function PM(r, e, t) {
    var n = zm(r);
    return function(a, i) {
      return n.contain(i[0], i[1]) && !xc(a, e, t);
    };
  }
  function zm(r) {
    return xt.create(r);
  }
  var AW = ["axisLine", "axisTickLabel", "axisName"], DW = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n) {
        r.prototype.init.apply(this, arguments), (this._brushController = new Mm(n.getZr())).on("brush", J(this._onBrush, this));
      }, e.prototype.render = function(t, n, a, i) {
        if (!MW(t, n, i)) {
          this.axisModel = t, this.api = a, this.group.removeAll();
          var o = this._axisGroup;
          if (this._axisGroup = new ct(), this.group.add(this._axisGroup), !!t.get("show")) {
            var s = LW(t, n), l = s.coordinateSystem, u = t.getAreaSelectStyle(), f = u.width, h = t.axis.dim, c = l.getAxisLayout(h), v = H({
              strokeContainThreshold: f
            }, c), d = new er(t, v);
            M(AW, d.add, d), this._axisGroup.add(d.getGroup()), this._refreshBrushController(v, u, t, s, f, a), Rl(o, this._axisGroup, t);
          }
        }
      }, e.prototype._refreshBrushController = function(t, n, a, i, o, s) {
        var l = a.axis.getExtent(), u = l[1] - l[0], f = Math.min(30, Math.abs(u) * 0.1), h = xt.create({
          x: l[0],
          y: -o / 2,
          width: u,
          height: o
        });
        h.x -= f, h.width += 2 * f, this._brushController.mount({
          enableGlobalPan: !0,
          rotation: t.rotation,
          x: t.position[0],
          y: t.position[1]
        }).setPanels([{
          panelId: "pl",
          clipPath: IM(h),
          isTargetByCursor: PM(h, s, i),
          getLinearBrushOtherExtent: LM(h, 0)
        }]).enableBrush({
          brushType: "lineX",
          brushStyle: n,
          removeOnClick: !0
        }).updateCovers(IW(a));
      }, e.prototype._onBrush = function(t) {
        var n = t.areas, a = this.axisModel, i = a.axis, o = Y(n, function(s) {
          return [i.coordToData(s.range[0], !0), i.coordToData(s.range[1], !0)];
        });
        (!a.option.realtime === t.isEnd || t.removeOnClick) && this.api.dispatchAction({
          type: "axisAreaSelect",
          parallelAxisId: a.id,
          intervals: o
        });
      }, e.prototype.dispose = function() {
        this._brushController.dispose();
      }, e.type = "parallelAxis", e;
    }(Jt)
  );
  function MW(r, e, t) {
    return t && t.type === "axisAreaSelect" && e.findComponents({
      mainType: "parallelAxis",
      query: t
    })[0] === r;
  }
  function IW(r) {
    var e = r.axis;
    return Y(r.activeIntervals, function(t) {
      return {
        brushType: "lineX",
        panelId: "pl",
        range: [e.dataToCoord(t[0], !0), e.dataToCoord(t[1], !0)]
      };
    });
  }
  function LW(r, e) {
    return e.getComponent("parallel", r.get("parallelIndex"));
  }
  var PW = {
    type: "axisAreaSelect",
    event: "axisAreaSelected"
    // update: 'updateVisual'
  };
  function EW(r) {
    r.registerAction(PW, function(e, t) {
      t.eachComponent({
        mainType: "parallelAxis",
        query: e
      }, function(n) {
        n.axis.model.setActiveIntervals(e.intervals);
      });
    }), r.registerAction("parallelAxisExpand", function(e, t) {
      t.eachComponent({
        mainType: "parallel",
        query: e
      }, function(n) {
        n.setAxisExpand(e);
      });
    });
  }
  var RW = {
    type: "value",
    areaSelectStyle: {
      width: 20,
      borderWidth: 1,
      borderColor: "rgba(160,197,232)",
      color: "rgba(160,197,232)",
      opacity: 0.3
    },
    realtime: !0,
    z: 10
  };
  function EM(r) {
    r.registerComponentView(tW), r.registerComponentModel(rW), r.registerCoordinateSystem("parallel", fW), r.registerPreprocessor(K4), r.registerComponentModel(Dm), r.registerComponentView(DW), ms(r, "parallel", Dm, RW), EW(r);
  }
  function kW(r) {
    At(EM), r.registerChartView(H4), r.registerSeriesModel(Y4), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, q4);
  }
  var OW = (
    /** @class */
    function() {
      function r() {
        this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
      }
      return r;
    }()
  ), NW = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        return r.call(this, t) || this;
      }
      return e.prototype.getDefaultShape = function() {
        return new OW();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.extent;
        t.moveTo(n.x1, n.y1), t.bezierCurveTo(n.cpx1, n.cpy1, n.cpx2, n.cpy2, n.x2, n.y2), n.orient === "vertical" ? (t.lineTo(n.x2 + a, n.y2), t.bezierCurveTo(n.cpx2 + a, n.cpy2, n.cpx1 + a, n.cpy1, n.x1 + a, n.y1)) : (t.lineTo(n.x2, n.y2 + a), t.bezierCurveTo(n.cpx2, n.cpy2 + a, n.cpx1, n.cpy1 + a, n.x1, n.y1 + a)), t.closePath();
      }, e.prototype.highlight = function() {
        jn(this);
      }, e.prototype.downplay = function() {
        Jn(this);
      }, e;
    }(Dt)
  ), VW = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._focusAdjacencyDisabled = !1, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = this, o = t.getGraph(), s = this.group, l = t.layoutInfo, u = l.width, f = l.height, h = t.getData(), c = t.getData("edge"), v = t.get("orient");
        this._model = t, s.removeAll(), s.x = l.x, s.y = l.y, o.eachEdge(function(d) {
          var p = new NW(), g = gt(p);
          g.dataIndex = d.dataIndex, g.seriesIndex = t.seriesIndex, g.dataType = "edge";
          var y = d.getModel(), m = y.getModel("lineStyle"), _ = m.get("curveness"), S = d.node1.getLayout(), b = d.node1.getModel(), w = b.get("localX"), T = b.get("localY"), C = d.node2.getLayout(), I = d.node2.getModel(), L = I.get("localX"), P = I.get("localY"), E = d.getLayout(), R, k, O, N, F, G, W, X;
          switch (p.shape.extent = Math.max(1, E.dy), p.shape.orient = v, v === "vertical" ? (R = (w != null ? w * u : S.x) + E.sy, k = (T != null ? T * f : S.y) + S.dy, O = (L != null ? L * u : C.x) + E.ty, N = P != null ? P * f : C.y, F = R, G = k * (1 - _) + N * _, W = O, X = k * _ + N * (1 - _)) : (R = (w != null ? w * u : S.x) + S.dx, k = (T != null ? T * f : S.y) + E.sy, O = L != null ? L * u : C.x, N = (P != null ? P * f : C.y) + E.ty, F = R * (1 - _) + O * _, G = k, W = R * _ + O * (1 - _), X = N), p.setShape({
            x1: R,
            y1: k,
            x2: O,
            y2: N,
            cpx1: F,
            cpy1: G,
            cpx2: W,
            cpy2: X
          }), p.useStyle(m.getItemStyle()), p.style.fill) {
            case "source":
              p.style.fill = d.node1.getVisual("color"), p.style.decal = d.node1.getVisual("style").decal;
              break;
            case "target":
              p.style.fill = d.node2.getVisual("color"), p.style.decal = d.node2.getVisual("style").decal;
              break;
            case "gradient":
              var K = d.node1.getVisual("color"), et = d.node2.getVisual("color");
              j(K) && j(et) && (p.style.fill = new Ho(0, 0, +(v === "horizontal"), +(v === "vertical"), [{
                color: K,
                offset: 0
              }, {
                color: et,
                offset: 1
              }]));
          }
          ke(p, Ce(y, "edgeLabel"), {
            labelFetcher: t,
            labelDataIndex: d.dataIndex,
            defaultText: "" + y.get("value")
          }), p.setTextConfig({
            position: "inside"
          });
          var lt = y.getModel("emphasis");
          Re(p, y, "lineStyle", function(It) {
            return It.getItemStyle();
          }), s.add(p), c.setItemGraphicEl(d.dataIndex, p);
          var ft = lt.get("focus");
          oe(p, ft === "adjacency" ? d.getAdjacentDataIndices() : ft, lt.get("blurScope"), lt.get("disabled")), gt(p).dataType = "edge";
        }), o.eachNode(function(d) {
          var p = d.getLayout(), g = d.getModel(), y = g.get("localX"), m = g.get("localY"), _ = g.getModel("emphasis"), S = new Rt({
            shape: {
              x: y != null ? y * u : p.x,
              y: m != null ? m * f : p.y,
              width: p.dx,
              height: p.dy
            },
            style: g.getModel("itemStyle").getItemStyle(),
            z2: 10
          });
          ke(S, Ce(g), {
            labelFetcher: t,
            labelDataIndex: d.dataIndex,
            defaultText: d.id
          }), S.disableLabelAnimation = !0, S.setStyle("fill", d.getVisual("color")), S.setStyle("decal", d.getVisual("style").decal), Re(S, g), s.add(S), h.setItemGraphicEl(d.dataIndex, S), gt(S).dataType = "node";
          var b = _.get("focus");
          oe(S, b === "adjacency" ? d.getAdjacentDataIndices() : b, _.get("blurScope"), _.get("disabled"));
        }), h.eachItemGraphicEl(function(d, p) {
          var g = h.getItemModel(p);
          g.get("draggable") && (d.drift = function(y, m) {
            i._focusAdjacencyDisabled = !0, this.shape.x += y, this.shape.y += m, this.dirty(), a.dispatchAction({
              type: "dragNode",
              seriesId: t.id,
              dataIndex: h.getRawIndex(p),
              localX: this.shape.x / u,
              localY: this.shape.y / f
            });
          }, d.ondragend = function() {
            i._focusAdjacencyDisabled = !1;
          }, d.draggable = !0, d.cursor = "move");
        }), !this._data && t.isAnimationEnabled() && s.setClipPath(BW(s.getBoundingRect(), t, function() {
          s.removeClipPath();
        })), this._data = t.getData();
      }, e.prototype.dispose = function() {
      }, e.type = "sankey", e;
    }($t)
  );
  function BW(r, e, t) {
    var n = new Rt({
      shape: {
        x: r.x - 10,
        y: r.y - 10,
        width: 0,
        height: r.height + 20
      }
    });
    return te(n, {
      shape: {
        width: r.width + 20
      }
    }, e, t), n;
  }
  var zW = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        var a = t.edges || t.links, i = t.data || t.nodes, o = t.levels;
        this.levelModels = [];
        for (var s = this.levelModels, l = 0; l < o.length; l++)
          if (o[l].depth != null && o[l].depth >= 0)
            s[o[l].depth] = new Gt(o[l], this, n);
          else
            throw new Error("levels[i].depth is mandatory and should be natural number");
        if (i && a) {
          var u = aM(i, a, this, !0, f);
          return u.data;
        }
        function f(h, c) {
          h.wrapMethod("getItemModel", function(v, d) {
            var p = v.parentModel, g = p.getData().getItemLayout(d);
            if (g) {
              var y = g.depth, m = p.levelModels[y];
              m && (v.parentModel = m);
            }
            return v;
          }), c.wrapMethod("getItemModel", function(v, d) {
            var p = v.parentModel, g = p.getGraph().getEdgeByIndex(d), y = g.node1.getLayout();
            if (y) {
              var m = y.depth, _ = p.levelModels[m];
              _ && (v.parentModel = _);
            }
            return v;
          });
        }
      }, e.prototype.setNodePosition = function(t, n) {
        var a = this.option.data || this.option.nodes, i = a[t];
        i.localX = n[0], i.localY = n[1];
      }, e.prototype.getGraph = function() {
        return this.getData().graph;
      }, e.prototype.getEdgeData = function() {
        return this.getGraph().edgeData;
      }, e.prototype.formatTooltip = function(t, n, a) {
        function i(v) {
          return isNaN(v) || v == null;
        }
        if (a === "edge") {
          var o = this.getDataParams(t, a), s = o.data, l = o.value, u = s.source + " -- " + s.target;
          return Ae("nameValue", {
            name: u,
            value: l,
            noValue: i(l)
          });
        } else {
          var f = this.getGraph().getNodeByIndex(t), h = f.getLayout().value, c = this.getDataParams(t, a).data.name;
          return Ae("nameValue", {
            name: c != null ? c + "" : null,
            value: h,
            noValue: i(h)
          });
        }
      }, e.prototype.optionUpdated = function() {
      }, e.prototype.getDataParams = function(t, n) {
        var a = r.prototype.getDataParams.call(this, t, n);
        if (a.value == null && n === "node") {
          var i = this.getGraph().getNodeByIndex(t), o = i.getLayout().value;
          a.value = o;
        }
        return a;
      }, e.type = "series.sankey", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "view",
        left: "5%",
        top: "5%",
        right: "20%",
        bottom: "5%",
        orient: "horizontal",
        nodeWidth: 20,
        nodeGap: 8,
        draggable: !0,
        layoutIterations: 32,
        label: {
          show: !0,
          position: "right",
          fontSize: 12
        },
        edgeLabel: {
          show: !1,
          fontSize: 12
        },
        levels: [],
        nodeAlign: "justify",
        lineStyle: {
          color: "#314656",
          opacity: 0.2,
          curveness: 0.5
        },
        emphasis: {
          label: {
            show: !0
          },
          lineStyle: {
            opacity: 0.5
          }
        },
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        },
        animationEasing: "linear",
        animationDuration: 1e3
      }, e;
    }(Zt)
  );
  function GW(r, e) {
    r.eachSeriesByType("sankey", function(t) {
      var n = t.get("nodeWidth"), a = t.get("nodeGap"), i = FW(t, e);
      t.layoutInfo = i;
      var o = i.width, s = i.height, l = t.getGraph(), u = l.nodes, f = l.edges;
      WW(u);
      var h = Ht(u, function(p) {
        return p.getLayout().value === 0;
      }), c = h.length !== 0 ? 0 : t.get("layoutIterations"), v = t.get("orient"), d = t.get("nodeAlign");
      HW(u, f, n, a, o, s, c, v, d);
    });
  }
  function FW(r, e) {
    return ye(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function HW(r, e, t, n, a, i, o, s, l) {
    UW(r, e, t, a, i, s, l), ZW(r, e, i, a, n, o, s), nU(r, s);
  }
  function WW(r) {
    M(r, function(e) {
      var t = Ua(e.outEdges, Vc), n = Ua(e.inEdges, Vc), a = e.getValue() || 0, i = Math.max(t, n, a);
      e.setLayout({
        value: i
      }, !0);
    });
  }
  function UW(r, e, t, n, a, i, o) {
    for (var s = [], l = [], u = [], f = [], h = 0, c = 0; c < e.length; c++)
      s[c] = 1;
    for (var c = 0; c < r.length; c++)
      l[c] = r[c].inEdges.length, l[c] === 0 && u.push(r[c]);
    for (var v = -1; u.length; ) {
      for (var d = 0; d < u.length; d++) {
        var p = u[d], g = p.hostGraph.data.getRawDataItem(p.dataIndex), y = g.depth != null && g.depth >= 0;
        y && g.depth > v && (v = g.depth), p.setLayout({
          depth: y ? g.depth : h
        }, !0), i === "vertical" ? p.setLayout({
          dy: t
        }, !0) : p.setLayout({
          dx: t
        }, !0);
        for (var m = 0; m < p.outEdges.length; m++) {
          var _ = p.outEdges[m], S = e.indexOf(_);
          s[S] = 0;
          var b = _.node2, w = r.indexOf(b);
          --l[w] === 0 && f.indexOf(b) < 0 && f.push(b);
        }
      }
      ++h, u = f, f = [];
    }
    for (var c = 0; c < s.length; c++)
      if (s[c] === 1)
        throw new Error("Sankey is a DAG, the original data has cycle!");
    var T = v > h - 1 ? v : h - 1;
    o && o !== "left" && YW(r, o, i, T);
    var C = i === "vertical" ? (a - t) / T : (n - t) / T;
    XW(r, C, i);
  }
  function RM(r) {
    var e = r.hostGraph.data.getRawDataItem(r.dataIndex);
    return e.depth != null && e.depth >= 0;
  }
  function YW(r, e, t, n) {
    if (e === "right") {
      for (var a = [], i = r, o = 0; i.length; ) {
        for (var s = 0; s < i.length; s++) {
          var l = i[s];
          l.setLayout({
            skNodeHeight: o
          }, !0);
          for (var u = 0; u < l.inEdges.length; u++) {
            var f = l.inEdges[u];
            a.indexOf(f.node1) < 0 && a.push(f.node1);
          }
        }
        i = a, a = [], ++o;
      }
      M(r, function(h) {
        RM(h) || h.setLayout({
          depth: Math.max(0, n - h.getLayout().skNodeHeight)
        }, !0);
      });
    } else
      e === "justify" && $W(r, n);
  }
  function $W(r, e) {
    M(r, function(t) {
      !RM(t) && !t.outEdges.length && t.setLayout({
        depth: e
      }, !0);
    });
  }
  function XW(r, e, t) {
    M(r, function(n) {
      var a = n.getLayout().depth * e;
      t === "vertical" ? n.setLayout({
        y: a
      }, !0) : n.setLayout({
        x: a
      }, !0);
    });
  }
  function ZW(r, e, t, n, a, i, o) {
    var s = qW(r, o);
    KW(s, e, t, n, a, o), Gm(s, a, t, n, o);
    for (var l = 1; i > 0; i--)
      l *= 0.99, jW(s, l, o), Gm(s, a, t, n, o), rU(s, l, o), Gm(s, a, t, n, o);
  }
  function qW(r, e) {
    var t = [], n = e === "vertical" ? "y" : "x", a = Gd(r, function(i) {
      return i.getLayout()[n];
    });
    return a.keys.sort(function(i, o) {
      return i - o;
    }), M(a.keys, function(i) {
      t.push(a.buckets.get(i));
    }), t;
  }
  function KW(r, e, t, n, a, i) {
    var o = 1 / 0;
    M(r, function(s) {
      var l = s.length, u = 0;
      M(s, function(h) {
        u += h.getLayout().value;
      });
      var f = i === "vertical" ? (n - (l - 1) * a) / u : (t - (l - 1) * a) / u;
      f < o && (o = f);
    }), M(r, function(s) {
      M(s, function(l, u) {
        var f = l.getLayout().value * o;
        i === "vertical" ? (l.setLayout({
          x: u
        }, !0), l.setLayout({
          dx: f
        }, !0)) : (l.setLayout({
          y: u
        }, !0), l.setLayout({
          dy: f
        }, !0));
      });
    }), M(e, function(s) {
      var l = +s.getValue() * o;
      s.setLayout({
        dy: l
      }, !0);
    });
  }
  function Gm(r, e, t, n, a) {
    var i = a === "vertical" ? "x" : "y";
    M(r, function(o) {
      o.sort(function(p, g) {
        return p.getLayout()[i] - g.getLayout()[i];
      });
      for (var s, l, u, f = 0, h = o.length, c = a === "vertical" ? "dx" : "dy", v = 0; v < h; v++)
        l = o[v], u = f - l.getLayout()[i], u > 0 && (s = l.getLayout()[i] + u, a === "vertical" ? l.setLayout({
          x: s
        }, !0) : l.setLayout({
          y: s
        }, !0)), f = l.getLayout()[i] + l.getLayout()[c] + e;
      var d = a === "vertical" ? n : t;
      if (u = f - e - d, u > 0) {
        s = l.getLayout()[i] - u, a === "vertical" ? l.setLayout({
          x: s
        }, !0) : l.setLayout({
          y: s
        }, !0), f = s;
        for (var v = h - 2; v >= 0; --v)
          l = o[v], u = l.getLayout()[i] + l.getLayout()[c] + e - f, u > 0 && (s = l.getLayout()[i] - u, a === "vertical" ? l.setLayout({
            x: s
          }, !0) : l.setLayout({
            y: s
          }, !0)), f = l.getLayout()[i];
      }
    });
  }
  function jW(r, e, t) {
    M(r.slice().reverse(), function(n) {
      M(n, function(a) {
        if (a.outEdges.length) {
          var i = Ua(a.outEdges, JW, t) / Ua(a.outEdges, Vc);
          if (isNaN(i)) {
            var o = a.outEdges.length;
            i = o ? Ua(a.outEdges, QW, t) / o : 0;
          }
          if (t === "vertical") {
            var s = a.getLayout().x + (i - Wa(a, t)) * e;
            a.setLayout({
              x: s
            }, !0);
          } else {
            var l = a.getLayout().y + (i - Wa(a, t)) * e;
            a.setLayout({
              y: l
            }, !0);
          }
        }
      });
    });
  }
  function JW(r, e) {
    return Wa(r.node2, e) * r.getValue();
  }
  function QW(r, e) {
    return Wa(r.node2, e);
  }
  function tU(r, e) {
    return Wa(r.node1, e) * r.getValue();
  }
  function eU(r, e) {
    return Wa(r.node1, e);
  }
  function Wa(r, e) {
    return e === "vertical" ? r.getLayout().x + r.getLayout().dx / 2 : r.getLayout().y + r.getLayout().dy / 2;
  }
  function Vc(r) {
    return r.getValue();
  }
  function Ua(r, e, t) {
    for (var n = 0, a = r.length, i = -1; ++i < a; ) {
      var o = +e(r[i], t);
      isNaN(o) || (n += o);
    }
    return n;
  }
  function rU(r, e, t) {
    M(r, function(n) {
      M(n, function(a) {
        if (a.inEdges.length) {
          var i = Ua(a.inEdges, tU, t) / Ua(a.inEdges, Vc);
          if (isNaN(i)) {
            var o = a.inEdges.length;
            i = o ? Ua(a.inEdges, eU, t) / o : 0;
          }
          if (t === "vertical") {
            var s = a.getLayout().x + (i - Wa(a, t)) * e;
            a.setLayout({
              x: s
            }, !0);
          } else {
            var l = a.getLayout().y + (i - Wa(a, t)) * e;
            a.setLayout({
              y: l
            }, !0);
          }
        }
      });
    });
  }
  function nU(r, e) {
    var t = e === "vertical" ? "x" : "y";
    M(r, function(n) {
      n.outEdges.sort(function(a, i) {
        return a.node2.getLayout()[t] - i.node2.getLayout()[t];
      }), n.inEdges.sort(function(a, i) {
        return a.node1.getLayout()[t] - i.node1.getLayout()[t];
      });
    }), M(r, function(n) {
      var a = 0, i = 0;
      M(n.outEdges, function(o) {
        o.setLayout({
          sy: a
        }, !0), a += o.getLayout().dy;
      }), M(n.inEdges, function(o) {
        o.setLayout({
          ty: i
        }, !0), i += o.getLayout().dy;
      });
    });
  }
  function aU(r) {
    r.eachSeriesByType("sankey", function(e) {
      var t = e.getGraph(), n = t.nodes, a = t.edges;
      if (n.length) {
        var i = 1 / 0, o = -1 / 0;
        M(n, function(s) {
          var l = s.getLayout().value;
          l < i && (i = l), l > o && (o = l);
        }), M(n, function(s) {
          var l = new Me({
            type: "color",
            mappingMethod: "linear",
            dataExtent: [i, o],
            visual: e.get("color")
          }), u = l.mapValueToVisual(s.getLayout().value), f = s.getModel().get(["itemStyle", "color"]);
          f != null ? (s.setVisual("color", f), s.setVisual("style", {
            fill: f
          })) : (s.setVisual("color", u), s.setVisual("style", {
            fill: u
          }));
        });
      }
      a.length && M(a, function(s) {
        var l = s.getModel().get("lineStyle");
        s.setVisual("style", l);
      });
    });
  }
  function iU(r) {
    r.registerChartView(VW), r.registerSeriesModel(zW), r.registerLayout(GW), r.registerVisual(aU), r.registerAction({
      type: "dragNode",
      event: "dragnode",
      // here can only use 'update' now, other value is not support in echarts.
      update: "update"
    }, function(e, t) {
      t.eachComponent({
        mainType: "series",
        subType: "sankey",
        query: e
      }, function(n) {
        n.setNodePosition(e.dataIndex, [e.localX, e.localY]);
      });
    });
  }
  var kM = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.getInitialData = function(e, t) {
        var n, a = t.getComponent("xAxis", this.get("xAxisIndex")), i = t.getComponent("yAxis", this.get("yAxisIndex")), o = a.get("type"), s = i.get("type"), l;
        o === "category" ? (e.layout = "horizontal", n = a.getOrdinalMeta(), l = !0) : s === "category" ? (e.layout = "vertical", n = i.getOrdinalMeta(), l = !0) : e.layout = e.layout || "horizontal";
        var u = ["x", "y"], f = e.layout === "horizontal" ? 0 : 1, h = this._baseAxisDim = u[f], c = u[1 - f], v = [a, i], d = v[f].get("type"), p = v[1 - f].get("type"), g = e.data;
        if (g && l) {
          var y = [];
          M(g, function(S, b) {
            var w;
            U(S) ? (w = S.slice(), S.unshift(b)) : U(S.value) ? (w = H({}, S), w.value = w.value.slice(), S.value.unshift(b)) : w = S, y.push(w);
          }), e.data = y;
        }
        var m = this.defaultValueDimensions, _ = [{
          name: h,
          type: Xh(d),
          ordinalMeta: n,
          otherDims: {
            tooltip: !1,
            itemName: 0
          },
          dimsDef: ["base"]
        }, {
          name: c,
          type: Xh(p),
          dimsDef: m.slice()
        }];
        return ys(this, {
          coordDimensions: _,
          dimensionsCount: m.length + 1,
          encodeDefaulter: yt(ew, _, this)
        });
      }, r.prototype.getBaseAxis = function() {
        var e = this._baseAxisDim;
        return this.ecModel.getComponent(e + "Axis", this.get(e + "AxisIndex")).axis;
      }, r;
    }()
  ), OM = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.defaultValueDimensions = [{
          name: "min",
          defaultTooltip: !0
        }, {
          name: "Q1",
          defaultTooltip: !0
        }, {
          name: "median",
          defaultTooltip: !0
        }, {
          name: "Q3",
          defaultTooltip: !0
        }, {
          name: "max",
          defaultTooltip: !0
        }], t.visualDrawType = "stroke", t;
      }
      return e.type = "series.boxplot", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "cartesian2d",
        legendHoverLink: !0,
        layout: null,
        boxWidth: [7, 50],
        itemStyle: {
          color: "#fff",
          borderWidth: 1
        },
        emphasis: {
          scale: !0,
          itemStyle: {
            borderWidth: 2,
            shadowBlur: 5,
            shadowOffsetX: 1,
            shadowOffsetY: 1,
            shadowColor: "rgba(0,0,0,0.2)"
          }
        },
        animationDuration: 800
      }, e;
    }(Zt)
  );
  le(OM, kM, !0);
  var oU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this.group, s = this._data;
        this._data || o.removeAll();
        var l = t.get("layout") === "horizontal" ? 1 : 0;
        i.diff(s).add(function(u) {
          if (i.hasValue(u)) {
            var f = i.getItemLayout(u), h = NM(f, i, u, l, !0);
            i.setItemGraphicEl(u, h), o.add(h);
          }
        }).update(function(u, f) {
          var h = s.getItemGraphicEl(f);
          if (!i.hasValue(u)) {
            o.remove(h);
            return;
          }
          var c = i.getItemLayout(u);
          h ? (an(h), VM(c, h, i, u)) : h = NM(c, i, u, l), o.add(h), i.setItemGraphicEl(u, h);
        }).remove(function(u) {
          var f = s.getItemGraphicEl(u);
          f && o.remove(f);
        }).execute(), this._data = i;
      }, e.prototype.remove = function(t) {
        var n = this.group, a = this._data;
        this._data = null, a && a.eachItemGraphicEl(function(i) {
          i && n.remove(i);
        });
      }, e.type = "boxplot", e;
    }($t)
  ), sU = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), lU = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "boxplotBoxPath", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new sU();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.points, i = 0;
        for (t.moveTo(a[i][0], a[i][1]), i++; i < 4; i++)
          t.lineTo(a[i][0], a[i][1]);
        for (t.closePath(); i < a.length; i++)
          t.moveTo(a[i][0], a[i][1]), i++, t.lineTo(a[i][0], a[i][1]);
      }, e;
    }(Dt)
  );
  function NM(r, e, t, n, a) {
    var i = r.ends, o = new lU({
      shape: {
        points: a ? uU(i, n, r) : i
      }
    });
    return VM(r, o, e, t, a), o;
  }
  function VM(r, e, t, n, a) {
    var i = t.hostModel, o = Ol[a ? "initProps" : "updateProps"];
    o(e, {
      shape: {
        points: r.ends
      }
    }, i, n), e.useStyle(t.getItemVisual(n, "style")), e.style.strokeNoScale = !0, e.z2 = 100;
    var s = t.getItemModel(n), l = s.getModel("emphasis");
    Re(e, s), oe(e, l.get("focus"), l.get("blurScope"), l.get("disabled"));
  }
  function uU(r, e, t) {
    return Y(r, function(n) {
      return n = n.slice(), n[e] = t.initBaseline, n;
    });
  }
  var zu = M;
  function fU(r) {
    var e = hU(r);
    zu(e, function(t) {
      var n = t.seriesModels;
      n.length && (cU(t), zu(n, function(a, i) {
        vU(a, t.boxOffsetList[i], t.boxWidthList[i]);
      }));
    });
  }
  function hU(r) {
    var e = [], t = [];
    return r.eachSeriesByType("boxplot", function(n) {
      var a = n.getBaseAxis(), i = bt(t, a);
      i < 0 && (i = t.length, t[i] = a, e[i] = {
        axis: a,
        seriesModels: []
      }), e[i].seriesModels.push(n);
    }), e;
  }
  function cU(r) {
    var e = r.axis, t = r.seriesModels, n = t.length, a = r.boxWidthList = [], i = r.boxOffsetList = [], o = [], s;
    if (e.type === "category")
      s = e.getBandWidth();
    else {
      var l = 0;
      zu(t, function(d) {
        l = Math.max(l, d.getData().count());
      });
      var u = e.getExtent();
      s = Math.abs(u[1] - u[0]) / l;
    }
    zu(t, function(d) {
      var p = d.get("boxWidth");
      U(p) || (p = [p, p]), o.push([Z(p[0], s) || 0, Z(p[1], s) || 0]);
    });
    var f = s * 0.8 - 2, h = f / n * 0.3, c = (f - h * (n - 1)) / n, v = c / 2 - f / 2;
    zu(t, function(d, p) {
      i.push(v), v += h + c, a.push(Math.min(Math.max(c, o[p][0]), o[p][1]));
    });
  }
  function vU(r, e, t) {
    var n = r.coordinateSystem, a = r.getData(), i = t / 2, o = r.get("layout") === "horizontal" ? 0 : 1, s = 1 - o, l = ["x", "y"], u = a.mapDimension(l[o]), f = a.mapDimensionsAll(l[s]);
    if (u == null || f.length < 5)
      return;
    for (var h = 0; h < a.count(); h++) {
      var c = a.get(u, h), v = _(c, f[2], h), d = _(c, f[0], h), p = _(c, f[1], h), g = _(c, f[3], h), y = _(c, f[4], h), m = [];
      S(m, p, !1), S(m, g, !0), m.push(d, p, y, g), b(m, d), b(m, y), b(m, v), a.setItemLayout(h, {
        initBaseline: v[s],
        ends: m
      });
    }
    function _(w, T, C) {
      var I = a.get(T, C), L = [];
      L[o] = w, L[s] = I;
      var P;
      return isNaN(w) || isNaN(I) ? P = [NaN, NaN] : (P = n.dataToPoint(L), P[o] += e), P;
    }
    function S(w, T, C) {
      var I = T.slice(), L = T.slice();
      I[o] += i, L[o] -= i, C ? w.push(I, L) : w.push(L, I);
    }
    function b(w, T) {
      var C = T.slice(), I = T.slice();
      C[o] -= i, I[o] += i, w.push(C, I);
    }
  }
  function dU(r, e) {
    e = e || {};
    for (var t = [], n = [], a = e.boundIQR, i = a === "none" || a === 0, o = 0; o < r.length; o++) {
      var s = yr(r[o].slice()), l = Vf(s, 0.25), u = Vf(s, 0.5), f = Vf(s, 0.75), h = s[0], c = s[s.length - 1], v = (a ?? 1.5) * (f - l), d = i ? h : Math.max(h, l - v), p = i ? c : Math.min(c, f + v), g = e.itemNameFormatter, y = rt(g) ? g({
        value: o
      }) : j(g) ? g.replace("{value}", o + "") : o + "";
      t.push([y, d, l, u, f, p]);
      for (var m = 0; m < s.length; m++) {
        var _ = s[m];
        if (_ < d || _ > p) {
          var S = [y, _];
          n.push(S);
        }
      }
    }
    return {
      boxData: t,
      outliers: n
    };
  }
  var pU = {
    type: "echarts:boxplot",
    transform: function(e) {
      var t = e.upstream;
      if (t.sourceFormat !== Fe) {
        var n = "";
        n = Ke("source data is not applicable for this boxplot transform. Expect number[][]."), Ft(n);
      }
      var a = dU(t.getRawData(), e.config);
      return [{
        dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"],
        data: a.boxData
      }, {
        data: a.outliers
      }];
    }
  };
  function gU(r) {
    r.registerSeriesModel(OM), r.registerChartView(oU), r.registerLayout(fU), r.registerTransform(pU);
  }
  var yU = ["color", "borderColor"], mU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(t), this._isLargeDraw ? this._renderLarge(t) : this._renderNormal(t);
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        this._clear(), this._updateDrawMode(t);
      }, e.prototype.incrementalRender = function(t, n, a, i) {
        this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(t, n) : this._incrementalRenderNormal(t, n);
      }, e.prototype.eachRendered = function(t) {
        Pa(this._progressiveEls || this.group, t);
      }, e.prototype._updateDrawMode = function(t) {
        var n = t.pipelineContext.large;
        (this._isLargeDraw == null || n !== this._isLargeDraw) && (this._isLargeDraw = n, this._clear());
      }, e.prototype._renderNormal = function(t) {
        var n = t.getData(), a = this._data, i = this.group, o = n.getLayout("isSimpleBox"), s = t.get("clip", !0), l = t.coordinateSystem, u = l.getArea && l.getArea();
        this._data || i.removeAll(), n.diff(a).add(function(f) {
          if (n.hasValue(f)) {
            var h = n.getItemLayout(f);
            if (s && BM(u, h))
              return;
            var c = Fm(h, f, !0);
            te(c, {
              shape: {
                points: h.ends
              }
            }, t, f), Hm(c, n, f, o), i.add(c), n.setItemGraphicEl(f, c);
          }
        }).update(function(f, h) {
          var c = a.getItemGraphicEl(h);
          if (!n.hasValue(f)) {
            i.remove(c);
            return;
          }
          var v = n.getItemLayout(f);
          if (s && BM(u, v)) {
            i.remove(c);
            return;
          }
          c ? (Vt(c, {
            shape: {
              points: v.ends
            }
          }, t, f), an(c)) : c = Fm(v), Hm(c, n, f, o), i.add(c), n.setItemGraphicEl(f, c);
        }).remove(function(f) {
          var h = a.getItemGraphicEl(f);
          h && i.remove(h);
        }).execute(), this._data = n;
      }, e.prototype._renderLarge = function(t) {
        this._clear(), zM(t, this.group);
        var n = t.get("clip", !0) ? vc(t.coordinateSystem, !1, t) : null;
        n ? this.group.setClipPath(n) : this.group.removeClipPath();
      }, e.prototype._incrementalRenderNormal = function(t, n) {
        for (var a = n.getData(), i = a.getLayout("isSimpleBox"), o; (o = t.next()) != null; ) {
          var s = a.getItemLayout(o), l = Fm(s);
          Hm(l, a, o, i), l.incremental = !0, this.group.add(l), this._progressiveEls.push(l);
        }
      }, e.prototype._incrementalRenderLarge = function(t, n) {
        zM(n, this.group, this._progressiveEls, !0);
      }, e.prototype.remove = function(t) {
        this._clear();
      }, e.prototype._clear = function() {
        this.group.removeAll(), this._data = null;
      }, e.type = "candlestick", e;
    }($t)
  ), _U = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), SU = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "normalCandlestickBox", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new _U();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.points;
        this.__simpleBox ? (t.moveTo(a[4][0], a[4][1]), t.lineTo(a[6][0], a[6][1])) : (t.moveTo(a[0][0], a[0][1]), t.lineTo(a[1][0], a[1][1]), t.lineTo(a[2][0], a[2][1]), t.lineTo(a[3][0], a[3][1]), t.closePath(), t.moveTo(a[4][0], a[4][1]), t.lineTo(a[5][0], a[5][1]), t.moveTo(a[6][0], a[6][1]), t.lineTo(a[7][0], a[7][1]));
      }, e;
    }(Dt)
  );
  function Fm(r, e, t) {
    var n = r.ends;
    return new SU({
      shape: {
        points: t ? xU(n, r) : n
      },
      z2: 100
    });
  }
  function BM(r, e) {
    for (var t = !0, n = 0; n < e.ends.length; n++)
      if (r.contain(e.ends[n][0], e.ends[n][1])) {
        t = !1;
        break;
      }
    return t;
  }
  function Hm(r, e, t, n) {
    var a = e.getItemModel(t);
    r.useStyle(e.getItemVisual(t, "style")), r.style.strokeNoScale = !0, r.__simpleBox = n, Re(r, a);
  }
  function xU(r, e) {
    return Y(r, function(t) {
      return t = t.slice(), t[1] = e.initBaseline, t;
    });
  }
  var wU = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), Wm = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n.type = "largeCandlestickBox", n;
      }
      return e.prototype.getDefaultShape = function() {
        return new wU();
      }, e.prototype.buildPath = function(t, n) {
        for (var a = n.points, i = 0; i < a.length; )
          if (this.__sign === a[i++]) {
            var o = a[i++];
            t.moveTo(o, a[i++]), t.lineTo(o, a[i++]);
          } else
            i += 3;
      }, e;
    }(Dt)
  );
  function zM(r, e, t, n) {
    var a = r.getData(), i = a.getLayout("largePoints"), o = new Wm({
      shape: {
        points: i
      },
      __sign: 1,
      ignoreCoarsePointer: !0
    });
    e.add(o);
    var s = new Wm({
      shape: {
        points: i
      },
      __sign: -1,
      ignoreCoarsePointer: !0
    });
    e.add(s);
    var l = new Wm({
      shape: {
        points: i
      },
      __sign: 0,
      ignoreCoarsePointer: !0
    });
    e.add(l), Um(1, o, r), Um(-1, s, r), Um(0, l, r), n && (o.incremental = !0, s.incremental = !0), t && t.push(o, s);
  }
  function Um(r, e, t, n) {
    var a = t.get(["itemStyle", r > 0 ? "borderColor" : "borderColor0"]) || t.get(["itemStyle", r > 0 ? "color" : "color0"]);
    r === 0 && (a = t.get(["itemStyle", "borderColorDoji"]));
    var i = t.getModel("itemStyle").getItemStyle(yU);
    e.useStyle(i), e.style.fill = null, e.style.stroke = a;
  }
  var GM = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.defaultValueDimensions = [{
          name: "open",
          defaultTooltip: !0
        }, {
          name: "close",
          defaultTooltip: !0
        }, {
          name: "lowest",
          defaultTooltip: !0
        }, {
          name: "highest",
          defaultTooltip: !0
        }], t;
      }
      return e.prototype.getShadowDim = function() {
        return "open";
      }, e.prototype.brushSelector = function(t, n, a) {
        var i = n.getItemLayout(t);
        return i && a.rect(i.brushRect);
      }, e.type = "series.candlestick", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        coordinateSystem: "cartesian2d",
        legendHoverLink: !0,
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        layout: null,
        clip: !0,
        itemStyle: {
          color: "#eb5454",
          color0: "#47b262",
          borderColor: "#eb5454",
          borderColor0: "#47b262",
          borderColorDoji: null,
          // borderColor: '#d24040',
          // borderColor0: '#398f4f',
          borderWidth: 1
        },
        emphasis: {
          scale: !0,
          itemStyle: {
            borderWidth: 2
          }
        },
        barMaxWidth: null,
        barMinWidth: null,
        barWidth: null,
        large: !0,
        largeThreshold: 600,
        progressive: 3e3,
        progressiveThreshold: 1e4,
        progressiveChunkMode: "mod",
        animationEasing: "linear",
        animationDuration: 300
      }, e;
    }(Zt)
  );
  le(GM, kM, !0);
  function bU(r) {
    !r || !U(r.series) || M(r.series, function(e) {
      it(e) && e.type === "k" && (e.type = "candlestick");
    });
  }
  var TU = ["itemStyle", "borderColor"], CU = ["itemStyle", "borderColor0"], AU = ["itemStyle", "borderColorDoji"], DU = ["itemStyle", "color"], MU = ["itemStyle", "color0"], IU = {
    seriesType: "candlestick",
    plan: ns(),
    // For legend.
    performRawSeries: !0,
    reset: function(r, e) {
      function t(i, o) {
        return o.get(i > 0 ? DU : MU);
      }
      function n(i, o) {
        return o.get(i === 0 ? AU : i > 0 ? TU : CU);
      }
      if (!e.isSeriesFiltered(r)) {
        var a = r.pipelineContext.large;
        return !a && {
          progress: function(i, o) {
            for (var s; (s = i.next()) != null; ) {
              var l = o.getItemModel(s), u = o.getItemLayout(s).sign, f = l.getItemStyle();
              f.fill = t(u, l), f.stroke = n(u, l) || f.fill;
              var h = o.ensureUniqueItemVisual(s, "style");
              H(h, f);
            }
          }
        };
      }
    }
  }, LU = {
    seriesType: "candlestick",
    plan: ns(),
    reset: function(r) {
      var e = r.coordinateSystem, t = r.getData(), n = PU(r, t), a = 0, i = 1, o = ["x", "y"], s = t.getDimensionIndex(t.mapDimension(o[a])), l = Y(t.mapDimensionsAll(o[i]), t.getDimensionIndex, t), u = l[0], f = l[1], h = l[2], c = l[3];
      if (t.setLayout({
        candleWidth: n,
        // The value is experimented visually.
        isSimpleBox: n <= 1.3
      }), s < 0 || l.length < 4)
        return;
      return {
        progress: r.pipelineContext.large ? d : v
      };
      function v(p, g) {
        for (var y, m = g.getStore(); (y = p.next()) != null; ) {
          var _ = m.get(s, y), S = m.get(u, y), b = m.get(f, y), w = m.get(h, y), T = m.get(c, y), C = Math.min(S, b), I = Math.max(S, b), L = F(C, _), P = F(I, _), E = F(w, _), R = F(T, _), k = [];
          G(k, P, 0), G(k, L, 1), k.push(X(R), X(P), X(E), X(L));
          var O = g.getItemModel(y), N = !!O.get(["itemStyle", "borderColorDoji"]);
          g.setItemLayout(y, {
            sign: FM(m, y, S, b, f, N),
            initBaseline: S > b ? P[i] : L[i],
            ends: k,
            brushRect: W(w, T, _)
          });
        }
        function F(K, et) {
          var lt = [];
          return lt[a] = et, lt[i] = K, isNaN(et) || isNaN(K) ? [NaN, NaN] : e.dataToPoint(lt);
        }
        function G(K, et, lt) {
          var ft = et.slice(), It = et.slice();
          ft[a] = uh(ft[a] + n / 2, 1, !1), It[a] = uh(It[a] - n / 2, 1, !0), lt ? K.push(ft, It) : K.push(It, ft);
        }
        function W(K, et, lt) {
          var ft = F(K, lt), It = F(et, lt);
          return ft[a] -= n / 2, It[a] -= n / 2, {
            x: ft[0],
            y: ft[1],
            width: n,
            height: It[1] - ft[1]
          };
        }
        function X(K) {
          return K[a] = uh(K[a], 1), K;
        }
      }
      function d(p, g) {
        for (var y = En(p.count * 4), m = 0, _, S = [], b = [], w, T = g.getStore(), C = !!r.get(["itemStyle", "borderColorDoji"]); (w = p.next()) != null; ) {
          var I = T.get(s, w), L = T.get(u, w), P = T.get(f, w), E = T.get(h, w), R = T.get(c, w);
          if (isNaN(I) || isNaN(E) || isNaN(R)) {
            y[m++] = NaN, m += 3;
            continue;
          }
          y[m++] = FM(T, w, L, P, f, C), S[a] = I, S[i] = E, _ = e.dataToPoint(S, null, b), y[m++] = _ ? _[0] : NaN, y[m++] = _ ? _[1] : NaN, S[i] = R, _ = e.dataToPoint(S, null, b), y[m++] = _ ? _[1] : NaN;
        }
        g.setLayout("largePoints", y);
      }
    }
  };
  function FM(r, e, t, n, a, i) {
    var o;
    return t > n ? o = -1 : t < n ? o = 1 : o = i ? 0 : e > 0 ? r.get(a, e - 1) <= n ? 1 : -1 : (
      // No record of previous, set to be positive
      1
    ), o;
  }
  function PU(r, e) {
    var t = r.getBaseAxis(), n, a = t.type === "category" ? t.getBandWidth() : (n = t.getExtent(), Math.abs(n[1] - n[0]) / e.count()), i = Z(_t(r.get("barMaxWidth"), a), a), o = Z(_t(r.get("barMinWidth"), 1), a), s = r.get("barWidth");
    return s != null ? Z(s, a) : Math.max(Math.min(a / 2, i), o);
  }
  function EU(r) {
    r.registerChartView(mU), r.registerSeriesModel(GM), r.registerPreprocessor(bU), r.registerVisual(IU), r.registerLayout(LU);
  }
  function HM(r, e) {
    var t = e.rippleEffectColor || e.color;
    r.eachChild(function(n) {
      n.attr({
        z: e.z,
        zlevel: e.zlevel,
        style: {
          stroke: e.brushType === "stroke" ? t : null,
          fill: e.brushType === "fill" ? t : null
        }
      });
    });
  }
  var RU = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n) {
        var a = r.call(this) || this, i = new gu(t, n), o = new ct();
        return a.add(i), a.add(o), a.updateData(t, n), a;
      }
      return e.prototype.stopEffectAnimation = function() {
        this.childAt(1).removeAll();
      }, e.prototype.startEffectAnimation = function(t) {
        for (var n = t.symbolType, a = t.color, i = t.rippleNumber, o = this.childAt(1), s = 0; s < i; s++) {
          var l = ve(n, -1, -1, 2, 2, a);
          l.attr({
            style: {
              strokeNoScale: !0
            },
            z2: 99,
            silent: !0,
            scaleX: 0.5,
            scaleY: 0.5
          });
          var u = -s / i * t.period + t.effectOffset;
          l.animate("", !0).when(t.period, {
            scaleX: t.rippleScale / 2,
            scaleY: t.rippleScale / 2
          }).delay(u).start(), l.animateStyle(!0).when(t.period, {
            opacity: 0
          }).delay(u).start(), o.add(l);
        }
        HM(o, t);
      }, e.prototype.updateEffectAnimation = function(t) {
        for (var n = this._effectCfg, a = this.childAt(1), i = ["symbolType", "period", "rippleScale", "rippleNumber"], o = 0; o < i.length; o++) {
          var s = i[o];
          if (n[s] !== t[s]) {
            this.stopEffectAnimation(), this.startEffectAnimation(t);
            return;
          }
        }
        HM(a, t);
      }, e.prototype.highlight = function() {
        jn(this);
      }, e.prototype.downplay = function() {
        Jn(this);
      }, e.prototype.getSymbolType = function() {
        var t = this.childAt(0);
        return t && t.getSymbolType();
      }, e.prototype.updateData = function(t, n) {
        var a = this, i = t.hostModel;
        this.childAt(0).updateData(t, n);
        var o = this.childAt(1), s = t.getItemModel(n), l = t.getItemVisual(n, "symbol"), u = Ql(t.getItemVisual(n, "symbolSize")), f = t.getItemVisual(n, "style"), h = f && f.fill, c = s.getModel("emphasis");
        o.setScale(u), o.traverse(function(g) {
          g.setStyle("fill", h);
        });
        var v = os(t.getItemVisual(n, "symbolOffset"), u);
        v && (o.x = v[0], o.y = v[1]);
        var d = t.getItemVisual(n, "symbolRotate");
        o.rotation = (d || 0) * Math.PI / 180 || 0;
        var p = {};
        p.showEffectOn = i.get("showEffectOn"), p.rippleScale = s.get(["rippleEffect", "scale"]), p.brushType = s.get(["rippleEffect", "brushType"]), p.period = s.get(["rippleEffect", "period"]) * 1e3, p.effectOffset = n / t.count(), p.z = i.getShallow("z") || 0, p.zlevel = i.getShallow("zlevel") || 0, p.symbolType = l, p.color = h, p.rippleEffectColor = s.get(["rippleEffect", "color"]), p.rippleNumber = s.get(["rippleEffect", "number"]), p.showEffectOn === "render" ? (this._effectCfg ? this.updateEffectAnimation(p) : this.startEffectAnimation(p), this._effectCfg = p) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(g) {
          g === "emphasis" ? p.showEffectOn !== "render" && a.startEffectAnimation(p) : g === "normal" && p.showEffectOn !== "render" && a.stopEffectAnimation();
        }), this._effectCfg = p, oe(this, c.get("focus"), c.get("blurScope"), c.get("disabled"));
      }, e.prototype.fadeOut = function(t) {
        t && t();
      }, e;
    }(ct)
  ), kU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function() {
        this._symbolDraw = new yu(RU);
      }, e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this._symbolDraw;
        o.updateData(i, {
          clipShape: this._getClipShape(t)
        }), this.group.add(o.group);
      }, e.prototype._getClipShape = function(t) {
        var n = t.coordinateSystem, a = n && n.getArea && n.getArea();
        return t.get("clip", !0) ? a : null;
      }, e.prototype.updateTransform = function(t, n, a) {
        var i = t.getData();
        this.group.dirty();
        var o = mu("").reset(t, n, a);
        o.progress && o.progress({
          start: 0,
          end: i.count(),
          count: i.count()
        }, i), this._symbolDraw.updateLayout();
      }, e.prototype._updateGroupTransform = function(t) {
        var n = t.coordinateSystem;
        n && n.getRoamTransform && (this.group.transform = J_(n.getRoamTransform()), this.group.decomposeTransform());
      }, e.prototype.remove = function(t, n) {
        this._symbolDraw && this._symbolDraw.remove(!0);
      }, e.type = "effectScatter", e;
    }($t)
  ), OU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return Ln(null, this, {
          useEncodeDefaulter: !0
        });
      }, e.prototype.brushSelector = function(t, n, a) {
        return a.point(n.getItemLayout(t));
      }, e.type = "series.effectScatter", e.dependencies = ["grid", "polar"], e.defaultOption = {
        coordinateSystem: "cartesian2d",
        // zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        effectType: "ripple",
        progressive: 0,
        // When to show the effect, option: 'render'|'emphasis'
        showEffectOn: "render",
        clip: !0,
        // Ripple effect config
        rippleEffect: {
          period: 4,
          // Scale of ripple
          scale: 2.5,
          // Brush type can be fill or stroke
          brushType: "fill",
          // Ripple number
          number: 3
        },
        universalTransition: {
          divideShape: "clone"
        },
        // Cartesian coordinate system
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        // Polar coordinate system
        // polarIndex: 0,
        // Geo coordinate system
        // geoIndex: 0,
        // symbol: null,        // 图形类型
        symbolSize: 10
        // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2
        // symbolRotate: null,  // 图形旋转控制
        // itemStyle: {
        //     opacity: 1
        // }
      }, e;
    }(Zt)
  );
  function NU(r) {
    r.registerChartView(kU), r.registerSeriesModel(OU), r.registerLayout(mu("effectScatter"));
  }
  var WM = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this) || this;
        return i.add(i.createLine(t, n, a)), i._updateEffectSymbol(t, n), i;
      }
      return e.prototype.createLine = function(t, n, a) {
        return new pm(t, n, a);
      }, e.prototype._updateEffectSymbol = function(t, n) {
        var a = t.getItemModel(n), i = a.getModel("effect"), o = i.get("symbolSize"), s = i.get("symbol");
        U(o) || (o = [o, o]);
        var l = t.getItemVisual(n, "style"), u = i.get("color") || l && l.stroke, f = this.childAt(1);
        this._symbolType !== s && (this.remove(f), f = ve(s, -0.5, -0.5, 1, 1, u), f.z2 = 100, f.culling = !0, this.add(f)), f && (f.setStyle("shadowColor", u), f.setStyle(i.getItemStyle(["color"])), f.scaleX = o[0], f.scaleY = o[1], f.setColor(u), this._symbolType = s, this._symbolScale = o, this._updateEffectAnimation(t, i, n));
      }, e.prototype._updateEffectAnimation = function(t, n, a) {
        var i = this.childAt(1);
        if (i) {
          var o = t.getItemLayout(a), s = n.get("period") * 1e3, l = n.get("loop"), u = n.get("roundTrip"), f = n.get("constantSpeed"), h = he(n.get("delay"), function(v) {
            return v / t.count() * s / 3;
          });
          if (i.ignore = !0, this._updateAnimationPoints(i, o), f > 0 && (s = this._getLineLength(i) / f * 1e3), s !== this._period || l !== this._loop || u !== this._roundTrip) {
            i.stopAnimation();
            var c = void 0;
            rt(h) ? c = h(a) : c = h, i.__t > 0 && (c = -s * i.__t), this._animateSymbol(i, s, c, l, u);
          }
          this._period = s, this._loop = l, this._roundTrip = u;
        }
      }, e.prototype._animateSymbol = function(t, n, a, i, o) {
        if (n > 0) {
          t.__t = 0;
          var s = this, l = t.animate("", i).when(o ? n * 2 : n, {
            __t: o ? 2 : 1
          }).delay(a).during(function() {
            s._updateSymbolPosition(t);
          });
          i || l.done(function() {
            s.remove(t);
          }), l.start();
        }
      }, e.prototype._getLineLength = function(t) {
        return Hn(t.__p1, t.__cp1) + Hn(t.__cp1, t.__p2);
      }, e.prototype._updateAnimationPoints = function(t, n) {
        t.__p1 = n[0], t.__p2 = n[1], t.__cp1 = n[2] || [(n[0][0] + n[1][0]) / 2, (n[0][1] + n[1][1]) / 2];
      }, e.prototype.updateData = function(t, n, a) {
        this.childAt(0).updateData(t, n, a), this._updateEffectSymbol(t, n);
      }, e.prototype._updateSymbolPosition = function(t) {
        var n = t.__p1, a = t.__p2, i = t.__cp1, o = t.__t < 1 ? t.__t : 2 - t.__t, s = [t.x, t.y], l = s.slice(), u = Le, f = nd;
        s[0] = u(n[0], i[0], a[0], o), s[1] = u(n[1], i[1], a[1], o);
        var h = t.__t < 1 ? f(n[0], i[0], a[0], o) : f(a[0], i[0], n[0], 1 - o), c = t.__t < 1 ? f(n[1], i[1], a[1], o) : f(a[1], i[1], n[1], 1 - o);
        t.rotation = -Math.atan2(c, h) - Math.PI / 2, (this._symbolType === "line" || this._symbolType === "rect" || this._symbolType === "roundRect") && (t.__lastT !== void 0 && t.__lastT < t.__t ? (t.scaleY = Hn(l, s) * 1.05, o === 1 && (s[0] = l[0] + (s[0] - l[0]) / 2, s[1] = l[1] + (s[1] - l[1]) / 2)) : t.__lastT === 1 ? t.scaleY = 2 * Hn(n, s) : t.scaleY = this._symbolScale[1]), t.__lastT = t.__t, t.ignore = !1, t.x = s[0], t.y = s[1];
      }, e.prototype.updateLayout = function(t, n) {
        this.childAt(0).updateLayout(t, n);
        var a = t.getItemModel(n).getModel("effect");
        this._updateEffectAnimation(t, a, n);
      }, e;
    }(ct)
  ), UM = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a) {
        var i = r.call(this) || this;
        return i._createPolyline(t, n, a), i;
      }
      return e.prototype._createPolyline = function(t, n, a) {
        var i = t.getItemLayout(n), o = new Ge({
          shape: {
            points: i
          }
        });
        this.add(o), this._updateCommonStl(t, n, a);
      }, e.prototype.updateData = function(t, n, a) {
        var i = t.hostModel, o = this.childAt(0), s = {
          shape: {
            points: t.getItemLayout(n)
          }
        };
        Vt(o, s, i, n), this._updateCommonStl(t, n, a);
      }, e.prototype._updateCommonStl = function(t, n, a) {
        var i = this.childAt(0), o = t.getItemModel(n), s = a && a.emphasisLineStyle, l = a && a.focus, u = a && a.blurScope, f = a && a.emphasisDisabled;
        if (!a || t.hasItemOption) {
          var h = o.getModel("emphasis");
          s = h.getModel("lineStyle").getLineStyle(), f = h.get("disabled"), l = h.get("focus"), u = h.get("blurScope");
        }
        i.useStyle(t.getItemVisual(n, "style")), i.style.fill = null, i.style.strokeNoScale = !0;
        var c = i.ensureState("emphasis");
        c.style = s, oe(this, l, u, f);
      }, e.prototype.updateLayout = function(t, n) {
        var a = this.childAt(0);
        a.setShape("points", t.getItemLayout(n));
      }, e;
    }(ct)
  ), VU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t._lastFrame = 0, t._lastFramePercent = 0, t;
      }
      return e.prototype.createLine = function(t, n, a) {
        return new UM(t, n, a);
      }, e.prototype._updateAnimationPoints = function(t, n) {
        this._points = n;
        for (var a = [0], i = 0, o = 1; o < n.length; o++) {
          var s = n[o - 1], l = n[o];
          i += Hn(s, l), a.push(i);
        }
        if (i === 0) {
          this._length = 0;
          return;
        }
        for (var o = 0; o < a.length; o++)
          a[o] /= i;
        this._offsets = a, this._length = i;
      }, e.prototype._getLineLength = function() {
        return this._length;
      }, e.prototype._updateSymbolPosition = function(t) {
        var n = t.__t < 1 ? t.__t : 2 - t.__t, a = this._points, i = this._offsets, o = a.length;
        if (i) {
          var s = this._lastFrame, l;
          if (n < this._lastFramePercent) {
            var u = Math.min(s + 1, o - 1);
            for (l = u; l >= 0 && !(i[l] <= n); l--)
              ;
            l = Math.min(l, o - 2);
          } else {
            for (l = s; l < o && !(i[l] > n); l++)
              ;
            l = Math.min(l - 1, o - 2);
          }
          var f = (n - i[l]) / (i[l + 1] - i[l]), h = a[l], c = a[l + 1];
          t.x = h[0] * (1 - f) + f * c[0], t.y = h[1] * (1 - f) + f * c[1];
          var v = t.__t < 1 ? c[0] - h[0] : h[0] - c[0], d = t.__t < 1 ? c[1] - h[1] : h[1] - c[1];
          t.rotation = -Math.atan2(d, v) - Math.PI / 2, this._lastFrame = l, this._lastFramePercent = n, t.ignore = !1;
        }
      }, e;
    }(WM)
  ), BU = (
    /** @class */
    function() {
      function r() {
        this.polyline = !1, this.curveness = 0, this.segs = [];
      }
      return r;
    }()
  ), zU = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t) {
        var n = r.call(this, t) || this;
        return n._off = 0, n.hoverDataIdx = -1, n;
      }
      return e.prototype.reset = function() {
        this.notClear = !1, this._off = 0;
      }, e.prototype.getDefaultStyle = function() {
        return {
          stroke: "#000",
          fill: null
        };
      }, e.prototype.getDefaultShape = function() {
        return new BU();
      }, e.prototype.buildPath = function(t, n) {
        var a = n.segs, i = n.curveness, o;
        if (n.polyline)
          for (o = this._off; o < a.length; ) {
            var s = a[o++];
            if (s > 0) {
              t.moveTo(a[o++], a[o++]);
              for (var l = 1; l < s; l++)
                t.lineTo(a[o++], a[o++]);
            }
          }
        else
          for (o = this._off; o < a.length; ) {
            var u = a[o++], f = a[o++], h = a[o++], c = a[o++];
            if (t.moveTo(u, f), i > 0) {
              var v = (u + h) / 2 - (f - c) * i, d = (f + c) / 2 - (h - u) * i;
              t.quadraticCurveTo(v, d, h, c);
            } else
              t.lineTo(h, c);
          }
        this.incremental && (this._off = o, this.notClear = !0);
      }, e.prototype.findDataIndex = function(t, n) {
        var a = this.shape, i = a.segs, o = a.curveness, s = this.style.lineWidth;
        if (a.polyline)
          for (var l = 0, u = 0; u < i.length; ) {
            var f = i[u++];
            if (f > 0)
              for (var h = i[u++], c = i[u++], v = 1; v < f; v++) {
                var d = i[u++], p = i[u++];
                if (Ta(h, c, d, p, s, t, n))
                  return l;
              }
            l++;
          }
        else
          for (var l = 0, u = 0; u < i.length; ) {
            var h = i[u++], c = i[u++], d = i[u++], p = i[u++];
            if (o > 0) {
              var g = (h + d) / 2 - (c - p) * o, y = (c + p) / 2 - (d - h) * o;
              if (SS(h, c, g, y, d, p, s, t, n))
                return l;
            } else if (Ta(h, c, d, p, s, t, n))
              return l;
            l++;
          }
        return -1;
      }, e.prototype.contain = function(t, n) {
        var a = this.transformCoordToLocal(t, n), i = this.getBoundingRect();
        if (t = a[0], n = a[1], i.contain(t, n)) {
          var o = this.hoverDataIdx = this.findDataIndex(t, n);
          return o >= 0;
        }
        return this.hoverDataIdx = -1, !1;
      }, e.prototype.getBoundingRect = function() {
        var t = this._rect;
        if (!t) {
          for (var n = this.shape, a = n.segs, i = 1 / 0, o = 1 / 0, s = -1 / 0, l = -1 / 0, u = 0; u < a.length; ) {
            var f = a[u++], h = a[u++];
            i = Math.min(f, i), s = Math.max(f, s), o = Math.min(h, o), l = Math.max(h, l);
          }
          t = this._rect = new xt(i, o, s, l);
        }
        return t;
      }, e;
    }(Dt)
  ), GU = (
    /** @class */
    function() {
      function r() {
        this.group = new ct();
      }
      return r.prototype.updateData = function(e) {
        this._clear();
        var t = this._create();
        t.setShape({
          segs: e.getLayout("linesPoints")
        }), this._setCommon(t, e);
      }, r.prototype.incrementalPrepareUpdate = function(e) {
        this.group.removeAll(), this._clear();
      }, r.prototype.incrementalUpdate = function(e, t) {
        var n = this._newAdded[0], a = t.getLayout("linesPoints"), i = n && n.shape.segs;
        if (i && i.length < 2e4) {
          var o = i.length, s = new Float32Array(o + a.length);
          s.set(i), s.set(a, o), n.setShape({
            segs: s
          });
        } else {
          this._newAdded = [];
          var l = this._create();
          l.incremental = !0, l.setShape({
            segs: a
          }), this._setCommon(l, t), l.__startIndex = e.start;
        }
      }, r.prototype.remove = function() {
        this._clear();
      }, r.prototype.eachRendered = function(e) {
        this._newAdded[0] && e(this._newAdded[0]);
      }, r.prototype._create = function() {
        var e = new zU({
          cursor: "default",
          ignoreCoarsePointer: !0
        });
        return this._newAdded.push(e), this.group.add(e), e;
      }, r.prototype._setCommon = function(e, t, n) {
        var a = t.hostModel;
        e.setShape({
          polyline: a.get("polyline"),
          curveness: a.get(["lineStyle", "curveness"])
        }), e.useStyle(a.getModel("lineStyle").getLineStyle()), e.style.strokeNoScale = !0;
        var i = t.getVisual("style");
        i && i.stroke && e.setStyle("stroke", i.stroke), e.setStyle("fill", null);
        var o = gt(e);
        o.seriesIndex = a.seriesIndex, e.on("mousemove", function(s) {
          o.dataIndex = null;
          var l = e.hoverDataIdx;
          l > 0 && (o.dataIndex = l + e.__startIndex);
        });
      }, r.prototype._clear = function() {
        this._newAdded = [], this.group.removeAll();
      }, r;
    }()
  ), YM = {
    seriesType: "lines",
    plan: ns(),
    reset: function(r) {
      var e = r.coordinateSystem;
      if (!e) {
        Ee("The lines series must have a coordinate system.");
        return;
      }
      var t = r.get("polyline"), n = r.pipelineContext.large;
      return {
        progress: function(a, i) {
          var o = [];
          if (n) {
            var s = void 0, l = a.end - a.start;
            if (t) {
              for (var u = 0, f = a.start; f < a.end; f++)
                u += r.getLineCoordsCount(f);
              s = new Float32Array(l + u * 2);
            } else
              s = new Float32Array(l * 4);
            for (var h = 0, c = [], f = a.start; f < a.end; f++) {
              var v = r.getLineCoords(f, o);
              t && (s[h++] = v);
              for (var d = 0; d < v; d++)
                c = e.dataToPoint(o[d], !1, c), s[h++] = c[0], s[h++] = c[1];
            }
            i.setLayout("linesPoints", s);
          } else
            for (var f = a.start; f < a.end; f++) {
              var p = i.getItemModel(f), v = r.getLineCoords(f, o), g = [];
              if (t)
                for (var y = 0; y < v; y++)
                  g.push(e.dataToPoint(o[y]));
              else {
                g[0] = e.dataToPoint(o[0]), g[1] = e.dataToPoint(o[1]);
                var m = p.get(["lineStyle", "curveness"]);
                +m && (g[2] = [(g[0][0] + g[1][0]) / 2 - (g[0][1] - g[1][1]) * m, (g[0][1] + g[1][1]) / 2 - (g[1][0] - g[0][0]) * m]);
              }
              i.setItemLayout(f, g);
            }
        }
      };
    }
  }, FU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this._updateLineDraw(i, t), s = t.get("zlevel"), l = t.get(["effect", "trailLength"]), u = a.getZr(), f = u.painter.getType() === "svg";
        f || u.painter.getLayer(s).clear(!0), this._lastZlevel != null && !f && u.configLayer(this._lastZlevel, {
          motionBlur: !1
        }), this._showEffect(t) && l > 0 && (f ? console.warn("SVG render mode doesn't support lines with trail effect") : u.configLayer(s, {
          motionBlur: !0,
          lastFrameAlpha: Math.max(Math.min(l / 10 + 0.9, 1), 0)
        })), o.updateData(i);
        var h = t.get("clip", !0) && vc(t.coordinateSystem, !1, t);
        h ? this.group.setClipPath(h) : this.group.removeClipPath(), this._lastZlevel = s, this._finished = !0;
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        var i = t.getData(), o = this._updateLineDraw(i, t);
        o.incrementalPrepareUpdate(i), this._clearLayer(a), this._finished = !1;
      }, e.prototype.incrementalRender = function(t, n, a) {
        this._lineDraw.incrementalUpdate(t, n.getData()), this._finished = t.end === n.getData().count();
      }, e.prototype.eachRendered = function(t) {
        this._lineDraw && this._lineDraw.eachRendered(t);
      }, e.prototype.updateTransform = function(t, n, a) {
        var i = t.getData(), o = t.pipelineContext;
        if (!this._finished || o.large || o.progressiveRender)
          return {
            update: !0
          };
        var s = YM.reset(t, n, a);
        s.progress && s.progress({
          start: 0,
          end: i.count(),
          count: i.count()
        }, i), this._lineDraw.updateLayout(), this._clearLayer(a);
      }, e.prototype._updateLineDraw = function(t, n) {
        var a = this._lineDraw, i = this._showEffect(n), o = !!n.get("polyline"), s = n.pipelineContext, l = s.large;
        return i && l && console.warn("Large lines not support effect"), (!a || i !== this._hasEffet || o !== this._isPolyline || l !== this._isLargeDraw) && (a && a.remove(), a = this._lineDraw = l ? new GU() : new gm(o ? i ? VU : UM : i ? WM : pm), this._hasEffet = i, this._isPolyline = o, this._isLargeDraw = l), this.group.add(a.group), a;
      }, e.prototype._showEffect = function(t) {
        return !!t.get(["effect", "show"]);
      }, e.prototype._clearLayer = function(t) {
        var n = t.getZr(), a = n.painter.getType() === "svg";
        !a && this._lastZlevel != null && n.painter.getLayer(this._lastZlevel).clear(!0);
      }, e.prototype.remove = function(t, n) {
        this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(n);
      }, e.prototype.dispose = function(t, n) {
        this.remove(t, n);
      }, e.type = "lines", e;
    }($t)
  ), HU = typeof Uint32Array > "u" ? Array : Uint32Array, WU = typeof Float64Array > "u" ? Array : Float64Array;
  function $M(r) {
    var e = r.data;
    e && e[0] && e[0][0] && e[0][0].coord && (console.warn("Lines data configuration has been changed to { coords:[[1,2],[2,3]] }"), r.data = Y(e, function(t) {
      var n = [t[0].coord, t[1].coord], a = {
        coords: n
      };
      return t[0].name && (a.fromName = t[0].name), t[1].name && (a.toName = t[1].name), sf([a, t[0], t[1]]);
    }));
  }
  var UU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
      }
      return e.prototype.init = function(t) {
        t.data = t.data || [], $M(t);
        var n = this._processFlatCoordsArray(t.data);
        this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (t.data = new Float32Array(n.count)), r.prototype.init.apply(this, arguments);
      }, e.prototype.mergeOption = function(t) {
        if ($M(t), t.data) {
          var n = this._processFlatCoordsArray(t.data);
          this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset, n.flatCoords && (t.data = new Float32Array(n.count));
        }
        r.prototype.mergeOption.apply(this, arguments);
      }, e.prototype.appendData = function(t) {
        var n = this._processFlatCoordsArray(t.data);
        n.flatCoords && (this._flatCoords ? (this._flatCoords = Ws(this._flatCoords, n.flatCoords), this._flatCoordsOffset = Ws(this._flatCoordsOffset, n.flatCoordsOffset)) : (this._flatCoords = n.flatCoords, this._flatCoordsOffset = n.flatCoordsOffset), t.data = new Float32Array(n.count)), this.getRawData().appendData(t.data);
      }, e.prototype._getCoordsFromItemModel = function(t) {
        var n = this.getData().getItemModel(t), a = n.option instanceof Array ? n.option : n.getShallow("coords");
        if (!(a instanceof Array && a.length > 0 && a[0] instanceof Array))
          throw new Error("Invalid coords " + JSON.stringify(a) + ". Lines must have 2d coords array in data item.");
        return a;
      }, e.prototype.getLineCoordsCount = function(t) {
        return this._flatCoordsOffset ? this._flatCoordsOffset[t * 2 + 1] : this._getCoordsFromItemModel(t).length;
      }, e.prototype.getLineCoords = function(t, n) {
        if (this._flatCoordsOffset) {
          for (var a = this._flatCoordsOffset[t * 2], i = this._flatCoordsOffset[t * 2 + 1], o = 0; o < i; o++)
            n[o] = n[o] || [], n[o][0] = this._flatCoords[a + o * 2], n[o][1] = this._flatCoords[a + o * 2 + 1];
          return i;
        } else {
          for (var s = this._getCoordsFromItemModel(t), o = 0; o < s.length; o++)
            n[o] = n[o] || [], n[o][0] = s[o][0], n[o][1] = s[o][1];
          return s.length;
        }
      }, e.prototype._processFlatCoordsArray = function(t) {
        var n = 0;
        if (this._flatCoords && (n = this._flatCoords.length), Ot(t[0])) {
          for (var a = t.length, i = new HU(a), o = new WU(a), s = 0, l = 0, u = 0, f = 0; f < a; ) {
            u++;
            var h = t[f++];
            i[l++] = s + n, i[l++] = h;
            for (var c = 0; c < h; c++) {
              var v = t[f++], d = t[f++];
              if (o[s++] = v, o[s++] = d, f > a)
                throw new Error("Invalid data format.");
            }
          }
          return {
            flatCoordsOffset: new Uint32Array(i.buffer, 0, l),
            flatCoords: o,
            count: u
          };
        }
        return {
          flatCoordsOffset: null,
          flatCoords: null,
          count: t.length
        };
      }, e.prototype.getInitialData = function(t, n) {
        {
          var a = Bi.get(t.coordinateSystem);
          if (!a)
            throw new Error("Unknown coordinate system " + t.coordinateSystem);
        }
        var i = new Ue(["value"], this);
        return i.hasItemOption = !1, i.initData(t.data, [], function(o, s, l, u) {
          if (o instanceof Array)
            return NaN;
          i.hasItemOption = !0;
          var f = o.value;
          if (f != null)
            return f instanceof Array ? f[u] : f;
        }), i;
      }, e.prototype.formatTooltip = function(t, n, a) {
        var i = this.getData(), o = i.getItemModel(t), s = o.get("name");
        if (s)
          return s;
        var l = o.get("fromName"), u = o.get("toName"), f = [];
        return l != null && f.push(l), u != null && f.push(u), Ae("nameValue", {
          name: f.join(" > ")
        });
      }, e.prototype.preventIncremental = function() {
        return !!this.get(["effect", "show"]);
      }, e.prototype.getProgressive = function() {
        var t = this.option.progressive;
        return t ?? (this.option.large ? 1e4 : this.get("progressive"));
      }, e.prototype.getProgressiveThreshold = function() {
        var t = this.option.progressiveThreshold;
        return t ?? (this.option.large ? 2e4 : this.get("progressiveThreshold"));
      }, e.prototype.getZLevelKey = function() {
        var t = this.getModel("effect"), n = t.get("trailLength");
        return this.getData().count() > this.getProgressiveThreshold() ? this.id : t.get("show") && n > 0 ? n + "" : "";
      }, e.type = "series.lines", e.dependencies = ["grid", "polar", "geo", "calendar"], e.defaultOption = {
        coordinateSystem: "geo",
        // zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        // Cartesian coordinate system
        xAxisIndex: 0,
        yAxisIndex: 0,
        symbol: ["none", "none"],
        symbolSize: [10, 10],
        // Geo coordinate system
        geoIndex: 0,
        effect: {
          show: !1,
          period: 4,
          constantSpeed: 0,
          symbol: "circle",
          symbolSize: 3,
          loop: !0,
          trailLength: 0.2
        },
        large: !1,
        // Available when large is true
        largeThreshold: 2e3,
        polyline: !1,
        clip: !0,
        label: {
          show: !1,
          position: "end"
          // distance: 5,
          // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
        },
        lineStyle: {
          opacity: 0.5
        }
      }, e;
    }(Zt)
  );
  function Bc(r) {
    return r instanceof Array || (r = [r, r]), r;
  }
  var YU = {
    seriesType: "lines",
    reset: function(r) {
      var e = Bc(r.get("symbol")), t = Bc(r.get("symbolSize")), n = r.getData();
      n.setVisual("fromSymbol", e && e[0]), n.setVisual("toSymbol", e && e[1]), n.setVisual("fromSymbolSize", t && t[0]), n.setVisual("toSymbolSize", t && t[1]);
      function a(i, o) {
        var s = i.getItemModel(o), l = Bc(s.getShallow("symbol", !0)), u = Bc(s.getShallow("symbolSize", !0));
        l[0] && i.setItemVisual(o, "fromSymbol", l[0]), l[1] && i.setItemVisual(o, "toSymbol", l[1]), u[0] && i.setItemVisual(o, "fromSymbolSize", u[0]), u[1] && i.setItemVisual(o, "toSymbolSize", u[1]);
      }
      return {
        dataEach: n.hasItemOption ? a : null
      };
    }
  };
  function $U(r) {
    r.registerChartView(FU), r.registerSeriesModel(UU), r.registerLayout(YM), r.registerVisual(YU);
  }
  var XU = 256, ZU = (
    /** @class */
    function() {
      function r() {
        this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {
          inRange: null,
          outOfRange: null
        };
        var e = qt.createCanvas();
        this.canvas = e;
      }
      return r.prototype.update = function(e, t, n, a, i, o) {
        var s = this._getBrush(), l = this._getGradient(i, "inRange"), u = this._getGradient(i, "outOfRange"), f = this.pointSize + this.blurSize, h = this.canvas, c = h.getContext("2d"), v = e.length;
        h.width = t, h.height = n;
        for (var d = 0; d < v; ++d) {
          var p = e[d], g = p[0], y = p[1], m = p[2], _ = a(m);
          c.globalAlpha = _, c.drawImage(s, g - f, y - f);
        }
        if (!h.width || !h.height)
          return h;
        for (var S = c.getImageData(0, 0, h.width, h.height), b = S.data, w = 0, T = b.length, C = this.minOpacity, I = this.maxOpacity, L = I - C; w < T; ) {
          var _ = b[w + 3] / 256, P = Math.floor(_ * (XU - 1)) * 4;
          if (_ > 0) {
            var E = o(_) ? l : u;
            _ > 0 && (_ = _ * L + C), b[w++] = E[P], b[w++] = E[P + 1], b[w++] = E[P + 2], b[w++] = E[P + 3] * _ * 256;
          } else
            w += 4;
        }
        return c.putImageData(S, 0, 0), h;
      }, r.prototype._getBrush = function() {
        var e = this._brushCanvas || (this._brushCanvas = qt.createCanvas()), t = this.pointSize + this.blurSize, n = t * 2;
        e.width = n, e.height = n;
        var a = e.getContext("2d");
        return a.clearRect(0, 0, n, n), a.shadowOffsetX = n, a.shadowBlur = this.blurSize, a.shadowColor = "#000", a.beginPath(), a.arc(-t, t, this.pointSize, 0, Math.PI * 2, !0), a.closePath(), a.fill(), e;
      }, r.prototype._getGradient = function(e, t) {
        for (var n = this._gradientPixels, a = n[t] || (n[t] = new Uint8ClampedArray(256 * 4)), i = [0, 0, 0, 0], o = 0, s = 0; s < 256; s++)
          e[t](s / 255, !0, i), a[o++] = i[0], a[o++] = i[1], a[o++] = i[2], a[o++] = i[3];
        return a;
      }, r;
    }()
  );
  function qU(r, e, t) {
    var n = r[1] - r[0];
    e = Y(e, function(o) {
      return {
        interval: [(o.interval[0] - r[0]) / n, (o.interval[1] - r[0]) / n]
      };
    });
    var a = e.length, i = 0;
    return function(o) {
      var s;
      for (s = i; s < a; s++) {
        var l = e[s].interval;
        if (l[0] <= o && o <= l[1]) {
          i = s;
          break;
        }
      }
      if (s === a)
        for (s = i - 1; s >= 0; s--) {
          var l = e[s].interval;
          if (l[0] <= o && o <= l[1]) {
            i = s;
            break;
          }
        }
      return s >= 0 && s < a && t[s];
    };
  }
  function KU(r, e) {
    var t = r[1] - r[0];
    return e = [(e[0] - r[0]) / t, (e[1] - r[0]) / t], function(n) {
      return n >= e[0] && n <= e[1];
    };
  }
  function XM(r) {
    var e = r.dimensions;
    return e[0] === "lng" && e[1] === "lat";
  }
  var jU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i;
        if (n.eachComponent("visualMap", function(s) {
          s.eachTargetSeries(function(l) {
            l === t && (i = s);
          });
        }), !i)
          throw new Error("Heatmap must use with visualMap");
        this._progressiveEls = null, this.group.removeAll();
        var o = t.coordinateSystem;
        o.type === "cartesian2d" || o.type === "calendar" ? this._renderOnCartesianAndCalendar(t, a, 0, t.getData().count()) : XM(o) && this._renderOnGeo(o, t, i, a);
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        this.group.removeAll();
      }, e.prototype.incrementalRender = function(t, n, a, i) {
        var o = n.coordinateSystem;
        o && (XM(o) ? this.render(n, a, i) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(n, i, t.start, t.end, !0)));
      }, e.prototype.eachRendered = function(t) {
        Pa(this._progressiveEls || this.group, t);
      }, e.prototype._renderOnCartesianAndCalendar = function(t, n, a, i, o) {
        var s = t.coordinateSystem, l = eo(s, "cartesian2d"), u, f, h, c;
        if (l) {
          var v = s.getAxis("x"), d = s.getAxis("y");
          {
            if (!(v.type === "category" && d.type === "category"))
              throw new Error("Heatmap on cartesian must have two category axes");
            if (!(v.onBand && d.onBand))
              throw new Error("Heatmap on cartesian must have two axes with boundaryGap true");
          }
          u = v.getBandWidth() + 0.5, f = d.getBandWidth() + 0.5, h = v.scale.getExtent(), c = d.scale.getExtent();
        }
        for (var p = this.group, g = t.getData(), y = t.getModel(["emphasis", "itemStyle"]).getItemStyle(), m = t.getModel(["blur", "itemStyle"]).getItemStyle(), _ = t.getModel(["select", "itemStyle"]).getItemStyle(), S = t.get(["itemStyle", "borderRadius"]), b = Ce(t), w = t.getModel("emphasis"), T = w.get("focus"), C = w.get("blurScope"), I = w.get("disabled"), L = l ? [g.mapDimension("x"), g.mapDimension("y"), g.mapDimension("value")] : [g.mapDimension("time"), g.mapDimension("value")], P = a; P < i; P++) {
          var E = void 0, R = g.getItemVisual(P, "style");
          if (l) {
            var k = g.get(L[0], P), O = g.get(L[1], P);
            if (isNaN(g.get(L[2], P)) || isNaN(k) || isNaN(O) || k < h[0] || k > h[1] || O < c[0] || O > c[1])
              continue;
            var N = s.dataToPoint([k, O]);
            E = new Rt({
              shape: {
                x: N[0] - u / 2,
                y: N[1] - f / 2,
                width: u,
                height: f
              },
              style: R
            });
          } else {
            if (isNaN(g.get(L[1], P)))
              continue;
            E = new Rt({
              z2: 1,
              shape: s.dataToRect([g.get(L[0], P)]).contentShape,
              style: R
            });
          }
          if (g.hasItemOption) {
            var F = g.getItemModel(P), G = F.getModel("emphasis");
            y = G.getModel("itemStyle").getItemStyle(), m = F.getModel(["blur", "itemStyle"]).getItemStyle(), _ = F.getModel(["select", "itemStyle"]).getItemStyle(), S = F.get(["itemStyle", "borderRadius"]), T = G.get("focus"), C = G.get("blurScope"), I = G.get("disabled"), b = Ce(F);
          }
          E.shape.r = S;
          var W = t.getRawValue(P), X = "-";
          W && W[2] != null && (X = W[2] + ""), ke(E, b, {
            labelFetcher: t,
            labelDataIndex: P,
            defaultOpacity: R.opacity,
            defaultText: X
          }), E.ensureState("emphasis").style = y, E.ensureState("blur").style = m, E.ensureState("select").style = _, oe(E, T, C, I), E.incremental = o, o && (E.states.emphasis.hoverLayer = !0), p.add(E), g.setItemGraphicEl(P, E), this._progressiveEls && this._progressiveEls.push(E);
        }
      }, e.prototype._renderOnGeo = function(t, n, a, i) {
        var o = a.targetVisuals.inRange, s = a.targetVisuals.outOfRange, l = n.getData(), u = this._hmLayer || this._hmLayer || new ZU();
        u.blurSize = n.get("blurSize"), u.pointSize = n.get("pointSize"), u.minOpacity = n.get("minOpacity"), u.maxOpacity = n.get("maxOpacity");
        var f = t.getViewRect().clone(), h = t.getRoamTransform();
        f.applyTransform(h);
        var c = Math.max(f.x, 0), v = Math.max(f.y, 0), d = Math.min(f.width + f.x, i.getWidth()), p = Math.min(f.height + f.y, i.getHeight()), g = d - c, y = p - v, m = [l.mapDimension("lng"), l.mapDimension("lat"), l.mapDimension("value")], _ = l.mapArray(m, function(T, C, I) {
          var L = t.dataToPoint([T, C]);
          return L[0] -= c, L[1] -= v, L.push(I), L;
        }), S = a.getExtent(), b = a.type === "visualMap.continuous" ? KU(S, a.option.range) : qU(S, a.getPieceList(), a.option.selected);
        u.update(_, g, y, o.color.getNormalizer(), {
          inRange: o.color.getColorMapper(),
          outOfRange: s.color.getColorMapper()
        }, b);
        var w = new Te({
          style: {
            width: g,
            height: y,
            x: c,
            y: v,
            image: u.canvas
          },
          silent: !0
        });
        this.group.add(w);
      }, e.type = "heatmap", e;
    }($t)
  ), JU = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        return Ln(null, this, {
          generateCoord: "value"
        });
      }, e.prototype.preventIncremental = function() {
        var t = Bi.get(this.get("coordinateSystem"));
        if (t && t.dimensions)
          return t.dimensions[0] === "lng" && t.dimensions[1] === "lat";
      }, e.type = "series.heatmap", e.dependencies = ["grid", "geo", "calendar"], e.defaultOption = {
        coordinateSystem: "cartesian2d",
        // zlevel: 0,
        z: 2,
        // Cartesian coordinate system
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        // Geo coordinate system
        geoIndex: 0,
        blurSize: 30,
        pointSize: 20,
        maxOpacity: 1,
        minOpacity: 0,
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        }
      }, e;
    }(Zt)
  );
  function QU(r) {
    r.registerChartView(jU), r.registerSeriesModel(JU);
  }
  var t6 = ["itemStyle", "borderWidth"], ZM = [{
    xy: "x",
    wh: "width",
    index: 0,
    posDesc: ["left", "right"]
  }, {
    xy: "y",
    wh: "height",
    index: 1,
    posDesc: ["top", "bottom"]
  }], Ym = new Nr(), e6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = this.group, o = t.getData(), s = this._data, l = t.coordinateSystem, u = l.getBaseAxis(), f = u.isHorizontal(), h = l.master.getRect(), c = {
          ecSize: {
            width: a.getWidth(),
            height: a.getHeight()
          },
          seriesModel: t,
          coordSys: l,
          coordSysExtent: [[h.x, h.x + h.width], [h.y, h.y + h.height]],
          isHorizontal: f,
          valueDim: ZM[+f],
          categoryDim: ZM[1 - +f]
        };
        return o.diff(s).add(function(v) {
          if (o.hasValue(v)) {
            var d = eI(o, v), p = qM(o, v, d, c), g = rI(o, c, p);
            o.setItemGraphicEl(v, g), i.add(g), iI(g, c, p);
          }
        }).update(function(v, d) {
          var p = s.getItemGraphicEl(d);
          if (!o.hasValue(v)) {
            i.remove(p);
            return;
          }
          var g = eI(o, v), y = qM(o, v, g, c), m = aI(o, y);
          p && m !== p.__pictorialShapeStr && (i.remove(p), o.setItemGraphicEl(v, null), p = null), p ? l6(p, c, y) : p = rI(o, c, y, !0), o.setItemGraphicEl(v, p), p.__pictorialSymbolMeta = y, i.add(p), iI(p, c, y);
        }).remove(function(v) {
          var d = s.getItemGraphicEl(v);
          d && nI(s, v, d.__pictorialSymbolMeta.animationModel, d);
        }).execute(), this._data = o, this.group;
      }, e.prototype.remove = function(t, n) {
        var a = this.group, i = this._data;
        t.get("animation") ? i && i.eachItemGraphicEl(function(o) {
          nI(i, gt(o).dataIndex, t, o);
        }) : a.removeAll();
      }, e.type = "pictorialBar", e;
    }($t)
  );
  function qM(r, e, t, n) {
    var a = r.getItemLayout(e), i = t.get("symbolRepeat"), o = t.get("symbolClip"), s = t.get("symbolPosition") || "start", l = t.get("symbolRotate"), u = (l || 0) * Math.PI / 180 || 0, f = t.get("symbolPatternSize") || 2, h = t.isAnimationEnabled(), c = {
      dataIndex: e,
      layout: a,
      itemModel: t,
      symbolType: r.getItemVisual(e, "symbol") || "circle",
      style: r.getItemVisual(e, "style"),
      symbolClip: o,
      symbolRepeat: i,
      symbolRepeatDirection: t.get("symbolRepeatDirection"),
      symbolPatternSize: f,
      rotation: u,
      animationModel: h ? t : null,
      hoverScale: h && t.get(["emphasis", "scale"]),
      z2: t.getShallow("z", !0) || 0
    };
    r6(t, i, a, n, c), n6(r, e, a, i, o, c.boundingLength, c.pxSign, f, n, c), a6(t, c.symbolScale, u, n, c);
    var v = c.symbolSize, d = os(t.get("symbolOffset"), v);
    return i6(t, v, a, i, o, d, s, c.valueLineWidth, c.boundingLength, c.repeatCutLength, n, c), c;
  }
  function r6(r, e, t, n, a) {
    var i = n.valueDim, o = r.get("symbolBoundingData"), s = n.coordSys.getOtherAxis(n.coordSys.getBaseAxis()), l = s.toGlobalCoord(s.dataToCoord(0)), u = 1 - +(t[i.wh] <= 0), f;
    if (U(o)) {
      var h = [$m(s, o[0]) - l, $m(s, o[1]) - l];
      h[1] < h[0] && h.reverse(), f = h[u];
    } else
      o != null ? f = $m(s, o) - l : e ? f = n.coordSysExtent[i.index][u] - l : f = t[i.wh];
    a.boundingLength = f, e && (a.repeatCutLength = t[i.wh]), a.pxSign = f > 0 ? 1 : -1;
  }
  function $m(r, e) {
    return r.toGlobalCoord(r.dataToCoord(r.scale.parse(e)));
  }
  function n6(r, e, t, n, a, i, o, s, l, u) {
    var f = l.valueDim, h = l.categoryDim, c = Math.abs(t[h.wh]), v = r.getItemVisual(e, "symbolSize"), d;
    U(v) ? d = v.slice() : v == null ? d = ["100%", "100%"] : d = [v, v], d[h.index] = Z(d[h.index], c), d[f.index] = Z(d[f.index], n ? c : Math.abs(i)), u.symbolSize = d;
    var p = u.symbolScale = [d[0] / s, d[1] / s];
    p[f.index] *= (l.isHorizontal ? -1 : 1) * o;
  }
  function a6(r, e, t, n, a) {
    var i = r.get(t6) || 0;
    i && (Ym.attr({
      scaleX: e[0],
      scaleY: e[1],
      rotation: t
    }), Ym.updateTransform(), i /= Ym.getLineScale(), i *= e[n.valueDim.index]), a.valueLineWidth = i || 0;
  }
  function i6(r, e, t, n, a, i, o, s, l, u, f, h) {
    var c = f.categoryDim, v = f.valueDim, d = h.pxSign, p = Math.max(e[v.index] + s, 0), g = p;
    if (n) {
      var y = Math.abs(l), m = he(r.get("symbolMargin"), "15%") + "", _ = !1;
      m.lastIndexOf("!") === m.length - 1 && (_ = !0, m = m.slice(0, m.length - 1));
      var S = Z(m, e[v.index]), b = Math.max(p + S * 2, 0), w = _ ? 0 : S * 2, T = Bf(n), C = T ? n : oI((y + w) / b), I = y - C * p;
      S = I / 2 / (_ ? C : Math.max(C - 1, 1)), b = p + S * 2, w = _ ? 0 : S * 2, !T && n !== "fixed" && (C = u ? oI((Math.abs(u) + w) / b) : 0), g = C * b - w, h.repeatTimes = C, h.symbolMargin = S;
    }
    var L = d * (g / 2), P = h.pathPosition = [];
    P[c.index] = t[c.wh] / 2, P[v.index] = o === "start" ? L : o === "end" ? l - L : l / 2, i && (P[0] += i[0], P[1] += i[1]);
    var E = h.bundlePosition = [];
    E[c.index] = t[c.xy], E[v.index] = t[v.xy];
    var R = h.barRectShape = H({}, t);
    R[v.wh] = d * Math.max(Math.abs(t[v.wh]), Math.abs(P[v.index] + L)), R[c.wh] = t[c.wh];
    var k = h.clipShape = {};
    k[c.xy] = -t[c.xy], k[c.wh] = f.ecSize[c.wh], k[v.xy] = 0, k[v.wh] = t[v.wh];
  }
  function KM(r) {
    var e = r.symbolPatternSize, t = ve(
      // Consider texture img, make a big size.
      r.symbolType,
      -e / 2,
      -e / 2,
      e,
      e
    );
    return t.attr({
      culling: !0
    }), t.type !== "image" && t.setStyle({
      strokeNoScale: !0
    }), t;
  }
  function jM(r, e, t, n) {
    var a = r.__pictorialBundle, i = t.symbolSize, o = t.valueLineWidth, s = t.pathPosition, l = e.valueDim, u = t.repeatTimes || 0, f = 0, h = i[e.valueDim.index] + o + t.symbolMargin * 2;
    for (Xm(r, function(p) {
      p.__pictorialAnimationIndex = f, p.__pictorialRepeatTimes = u, f < u ? Cs(p, null, d(f), t, n) : Cs(p, null, {
        scaleX: 0,
        scaleY: 0
      }, t, n, function() {
        a.remove(p);
      }), f++;
    }); f < u; f++) {
      var c = KM(t);
      c.__pictorialAnimationIndex = f, c.__pictorialRepeatTimes = u, a.add(c);
      var v = d(f);
      Cs(c, {
        x: v.x,
        y: v.y,
        scaleX: 0,
        scaleY: 0
      }, {
        scaleX: v.scaleX,
        scaleY: v.scaleY,
        rotation: v.rotation
      }, t, n);
    }
    function d(p) {
      var g = s.slice(), y = t.pxSign, m = p;
      return (t.symbolRepeatDirection === "start" ? y > 0 : y < 0) && (m = u - 1 - p), g[l.index] = h * (m - u / 2 + 0.5) + s[l.index], {
        x: g[0],
        y: g[1],
        scaleX: t.symbolScale[0],
        scaleY: t.symbolScale[1],
        rotation: t.rotation
      };
    }
  }
  function JM(r, e, t, n) {
    var a = r.__pictorialBundle, i = r.__pictorialMainPath;
    i ? Cs(i, null, {
      x: t.pathPosition[0],
      y: t.pathPosition[1],
      scaleX: t.symbolScale[0],
      scaleY: t.symbolScale[1],
      rotation: t.rotation
    }, t, n) : (i = r.__pictorialMainPath = KM(t), a.add(i), Cs(i, {
      x: t.pathPosition[0],
      y: t.pathPosition[1],
      scaleX: 0,
      scaleY: 0,
      rotation: t.rotation
    }, {
      scaleX: t.symbolScale[0],
      scaleY: t.symbolScale[1]
    }, t, n));
  }
  function QM(r, e, t) {
    var n = H({}, e.barRectShape), a = r.__pictorialBarRect;
    a ? Cs(a, null, {
      shape: n
    }, e, t) : (a = r.__pictorialBarRect = new Rt({
      z2: 2,
      shape: n,
      silent: !0,
      style: {
        stroke: "transparent",
        fill: "transparent",
        lineWidth: 0
      }
    }), a.disableMorphing = !0, r.add(a));
  }
  function tI(r, e, t, n) {
    if (t.symbolClip) {
      var a = r.__pictorialClipPath, i = H({}, t.clipShape), o = e.valueDim, s = t.animationModel, l = t.dataIndex;
      if (a)
        Vt(a, {
          shape: i
        }, s, l);
      else {
        i[o.wh] = 0, a = new Rt({
          shape: i
        }), r.__pictorialBundle.setClipPath(a), r.__pictorialClipPath = a;
        var u = {};
        u[o.wh] = t.clipShape[o.wh], Ol[n ? "updateProps" : "initProps"](a, {
          shape: u
        }, s, l);
      }
    }
  }
  function eI(r, e) {
    var t = r.getItemModel(e);
    return t.getAnimationDelayParams = o6, t.isAnimationEnabled = s6, t;
  }
  function o6(r) {
    return {
      index: r.__pictorialAnimationIndex,
      count: r.__pictorialRepeatTimes
    };
  }
  function s6() {
    return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
  }
  function rI(r, e, t, n) {
    var a = new ct(), i = new ct();
    return a.add(i), a.__pictorialBundle = i, i.x = t.bundlePosition[0], i.y = t.bundlePosition[1], t.symbolRepeat ? jM(a, e, t) : JM(a, e, t), QM(a, t, n), tI(a, e, t, n), a.__pictorialShapeStr = aI(r, t), a.__pictorialSymbolMeta = t, a;
  }
  function l6(r, e, t) {
    var n = t.animationModel, a = t.dataIndex, i = r.__pictorialBundle;
    Vt(i, {
      x: t.bundlePosition[0],
      y: t.bundlePosition[1]
    }, n, a), t.symbolRepeat ? jM(r, e, t, !0) : JM(r, e, t, !0), QM(r, t, !0), tI(r, e, t, !0);
  }
  function nI(r, e, t, n) {
    var a = n.__pictorialBarRect;
    a && a.removeTextContent();
    var i = [];
    Xm(n, function(o) {
      i.push(o);
    }), n.__pictorialMainPath && i.push(n.__pictorialMainPath), n.__pictorialClipPath && (t = null), M(i, function(o) {
      Ia(o, {
        scaleX: 0,
        scaleY: 0
      }, t, e, function() {
        n.parent && n.parent.remove(n);
      });
    }), r.setItemGraphicEl(e, null);
  }
  function aI(r, e) {
    return [r.getItemVisual(e.dataIndex, "symbol") || "none", !!e.symbolRepeat, !!e.symbolClip].join(":");
  }
  function Xm(r, e, t) {
    M(r.__pictorialBundle.children(), function(n) {
      n !== r.__pictorialBarRect && e.call(t, n);
    });
  }
  function Cs(r, e, t, n, a, i) {
    e && r.attr(e), n.symbolClip && !a ? t && r.attr(t) : t && Ol[a ? "updateProps" : "initProps"](r, t, n.animationModel, n.dataIndex, i);
  }
  function iI(r, e, t) {
    var n = t.dataIndex, a = t.itemModel, i = a.getModel("emphasis"), o = i.getModel("itemStyle").getItemStyle(), s = a.getModel(["blur", "itemStyle"]).getItemStyle(), l = a.getModel(["select", "itemStyle"]).getItemStyle(), u = a.getShallow("cursor"), f = i.get("focus"), h = i.get("blurScope"), c = i.get("scale");
    Xm(r, function(p) {
      if (p instanceof Te) {
        var g = p.style;
        p.useStyle(H({
          // TODO other properties like dx, dy ?
          image: g.image,
          x: g.x,
          y: g.y,
          width: g.width,
          height: g.height
        }, t.style));
      } else
        p.useStyle(t.style);
      var y = p.ensureState("emphasis");
      y.style = o, c && (y.scaleX = p.scaleX * 1.1, y.scaleY = p.scaleY * 1.1), p.ensureState("blur").style = s, p.ensureState("select").style = l, u && (p.cursor = u), p.z2 = t.z2;
    });
    var v = e.valueDim.posDesc[+(t.boundingLength > 0)], d = r.__pictorialBarRect;
    ke(d, Ce(a), {
      labelFetcher: e.seriesModel,
      labelDataIndex: n,
      defaultText: ps(e.seriesModel.getData(), n),
      inheritColor: t.style.fill,
      defaultOpacity: t.style.opacity,
      defaultOutsidePosition: v
    }), oe(r, f, h, i.get("disabled"));
  }
  function oI(r) {
    var e = Math.round(r);
    return Math.abs(r - e) < 1e-4 ? e : Math.ceil(r);
  }
  var u6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.hasSymbolVisual = !0, t.defaultSymbol = "roundRect", t;
      }
      return e.prototype.getInitialData = function(t) {
        return t.stack = null, r.prototype.getInitialData.apply(this, arguments);
      }, e.type = "series.pictorialBar", e.dependencies = ["grid"], e.defaultOption = Ea(_u.defaultOption, {
        symbol: "circle",
        symbolSize: null,
        symbolRotate: null,
        symbolPosition: null,
        symbolOffset: null,
        symbolMargin: null,
        symbolRepeat: !1,
        symbolRepeatDirection: "end",
        symbolClip: !1,
        symbolBoundingData: null,
        symbolPatternSize: 400,
        barGap: "-100%",
        // z can be set in data item, which is z2 actually.
        // Disable progressive
        progressive: 0,
        emphasis: {
          // By default pictorialBar do not hover scale. Hover scale is not suitable
          // for the case that both has foreground and background.
          scale: !1
        },
        select: {
          itemStyle: {
            borderColor: "#212121"
          }
        }
      }), e;
    }(_u)
  );
  function f6(r) {
    r.registerChartView(e6), r.registerSeriesModel(u6), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, yt(DT, "pictorialBar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, MT("pictorialBar"));
  }
  var h6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._layers = [], t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = t.getData(), o = this, s = this.group, l = t.getLayerSeries(), u = i.getLayout("layoutInfo"), f = u.rect, h = u.boundaryGap;
        s.x = 0, s.y = f.y + h[0];
        function c(g) {
          return g.name;
        }
        var v = new ea(this._layersSeries || [], l, c, c), d = [];
        v.add(J(p, this, "add")).update(J(p, this, "update")).remove(J(p, this, "remove")).execute();
        function p(g, y, m) {
          var _ = o._layers;
          if (g === "remove") {
            s.remove(_[y]);
            return;
          }
          for (var S = [], b = [], w, T = l[y].indices, C = 0; C < T.length; C++) {
            var I = i.getItemLayout(T[C]), L = I.x, P = I.y0, E = I.y;
            S.push(L, P), b.push(L, P + E), w = i.getItemVisual(T[C], "style");
          }
          var R, k = i.getItemLayout(T[0]), O = t.getModel("label"), N = O.get("margin"), F = t.getModel("emphasis");
          if (g === "add") {
            var G = d[y] = new ct();
            R = new FC({
              shape: {
                points: S,
                stackedOnPoints: b,
                smooth: 0.4,
                stackedOnSmooth: 0.4,
                smoothConstraint: !1
              },
              z2: 0
            }), G.add(R), s.add(G), t.isAnimationEnabled() && R.setClipPath(c6(R.getBoundingRect(), t, function() {
              R.removeClipPath();
            }));
          } else {
            var G = _[m];
            R = G.childAt(0), s.add(G), d[y] = G, Vt(R, {
              shape: {
                points: S,
                stackedOnPoints: b
              }
            }, t), an(R);
          }
          ke(R, Ce(t), {
            labelDataIndex: T[C - 1],
            defaultText: i.getName(T[C - 1]),
            inheritColor: w.fill
          }, {
            normal: {
              verticalAlign: "middle"
              // align: 'right'
            }
          }), R.setTextConfig({
            position: null,
            local: !0
          });
          var W = R.getTextContent();
          W && (W.x = k.x - N, W.y = k.y0 + k.y / 2), R.useStyle(w), i.setItemGraphicEl(y, R), Re(R, t), oe(R, F.get("focus"), F.get("blurScope"), F.get("disabled"));
        }
        this._layersSeries = l, this._layers = d;
      }, e.type = "themeRiver", e;
    }($t)
  );
  function c6(r, e, t) {
    var n = new Rt({
      shape: {
        x: r.x - 10,
        y: r.y - 10,
        width: 0,
        height: r.height + 20
      }
    });
    return te(n, {
      shape: {
        x: r.x - 50,
        width: r.width + 100,
        height: r.height + 20
      }
    }, e, t), n;
  }
  var Zm = 2, v6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t) {
        r.prototype.init.apply(this, arguments), this.legendVisualProvider = new xu(J(this.getData, this), J(this.getRawData, this));
      }, e.prototype.fixData = function(t) {
        var n = t.length, a = {}, i = Gd(t, function(c) {
          return a.hasOwnProperty(c[0] + "") || (a[c[0] + ""] = -1), c[2];
        }), o = [];
        i.buckets.each(function(c, v) {
          o.push({
            name: v,
            dataList: c
          });
        });
        for (var s = o.length, l = 0; l < s; ++l) {
          for (var u = o[l].name, f = 0; f < o[l].dataList.length; ++f) {
            var h = o[l].dataList[f][0] + "";
            a[h] = l;
          }
          for (var h in a)
            a.hasOwnProperty(h) && a[h] !== l && (a[h] = l, t[n] = [h, 0, u], n++);
        }
        return t;
      }, e.prototype.getInitialData = function(t, n) {
        for (var a = this.getReferringComponents("singleAxis", ge).models[0], i = a.get("type"), o = Ht(t.data, function(d) {
          return d[2] !== void 0;
        }), s = this.fixData(o || []), l = [], u = this.nameMap = nt(), f = 0, h = 0; h < s.length; ++h)
          l.push(s[h][Zm]), u.get(s[h][Zm]) || (u.set(s[h][Zm], f), f++);
        var c = hs(s, {
          coordDimensions: ["single"],
          dimensionsDefine: [{
            name: "time",
            type: Xh(i)
          }, {
            name: "value",
            type: "float"
          }, {
            name: "name",
            type: "ordinal"
          }],
          encodeDefine: {
            single: 0,
            value: 1,
            itemName: 2
          }
        }).dimensions, v = new Ue(c, this);
        return v.initData(s), v;
      }, e.prototype.getLayerSeries = function() {
        for (var t = this.getData(), n = t.count(), a = [], i = 0; i < n; ++i)
          a[i] = i;
        var o = t.mapDimension("single"), s = Gd(a, function(u) {
          return t.get("name", u);
        }), l = [];
        return s.buckets.each(function(u, f) {
          u.sort(function(h, c) {
            return t.get(o, h) - t.get(o, c);
          }), l.push({
            name: f,
            indices: u
          });
        }), l;
      }, e.prototype.getAxisTooltipData = function(t, n, a) {
        U(t) || (t = t ? [t] : []);
        for (var i = this.getData(), o = this.getLayerSeries(), s = [], l = o.length, u, f = 0; f < l; ++f) {
          for (var h = Number.MAX_VALUE, c = -1, v = o[f].indices.length, d = 0; d < v; ++d) {
            var p = i.get(t[0], o[f].indices[d]), g = Math.abs(p - n);
            g <= h && (u = p, h = g, c = o[f].indices[d]);
          }
          s.push(c);
        }
        return {
          dataIndices: s,
          nestestValue: u
        };
      }, e.prototype.formatTooltip = function(t, n, a) {
        var i = this.getData(), o = i.getName(t), s = i.get(i.mapDimension("value"), t);
        return Ae("nameValue", {
          name: o,
          value: s
        });
      }, e.type = "series.themeRiver", e.dependencies = ["singleAxis"], e.defaultOption = {
        // zlevel: 0,
        z: 2,
        colorBy: "data",
        coordinateSystem: "singleAxis",
        // gap in axis's orthogonal orientation
        boundaryGap: ["10%", "10%"],
        // legendHoverLink: true,
        singleAxisIndex: 0,
        animationEasing: "linear",
        label: {
          margin: 4,
          show: !0,
          position: "left",
          fontSize: 11
        },
        emphasis: {
          label: {
            show: !0
          }
        }
      }, e;
    }(Zt)
  );
  function d6(r, e) {
    r.eachSeriesByType("themeRiver", function(t) {
      var n = t.getData(), a = t.coordinateSystem, i = {}, o = a.getRect();
      i.rect = o;
      var s = t.get("boundaryGap"), l = a.getAxis();
      if (i.boundaryGap = s, l.orient === "horizontal") {
        s[0] = Z(s[0], o.height), s[1] = Z(s[1], o.height);
        var u = o.height - s[0] - s[1];
        sI(n, t, u);
      } else {
        s[0] = Z(s[0], o.width), s[1] = Z(s[1], o.width);
        var f = o.width - s[0] - s[1];
        sI(n, t, f);
      }
      n.setLayout("layoutInfo", i);
    });
  }
  function sI(r, e, t) {
    if (r.count())
      for (var n = e.coordinateSystem, a = e.getLayerSeries(), i = r.mapDimension("single"), o = r.mapDimension("value"), s = Y(a, function(g) {
        return Y(g.indices, function(y) {
          var m = n.dataToPoint(r.get(i, y));
          return m[1] = r.get(o, y), m;
        });
      }), l = p6(s), u = l.y0, f = t / l.max, h = a.length, c = a[0].indices.length, v, d = 0; d < c; ++d) {
        v = u[d] * f, r.setItemLayout(a[0].indices[d], {
          layerIndex: 0,
          x: s[0][d][0],
          y0: v,
          y: s[0][d][1] * f
        });
        for (var p = 1; p < h; ++p)
          v += s[p - 1][d][1] * f, r.setItemLayout(a[p].indices[d], {
            layerIndex: p,
            x: s[p][d][0],
            y0: v,
            y: s[p][d][1] * f
          });
      }
  }
  function p6(r) {
    for (var e = r.length, t = r[0].length, n = [], a = [], i = 0, o = 0; o < t; ++o) {
      for (var s = 0, l = 0; l < e; ++l)
        s += r[l][o][1];
      s > i && (i = s), n.push(s);
    }
    for (var u = 0; u < t; ++u)
      a[u] = (i - n[u]) / 2;
    i = 0;
    for (var f = 0; f < t; ++f) {
      var h = n[f] + a[f];
      h > i && (i = h);
    }
    return {
      y0: a,
      max: i
    };
  }
  function g6(r) {
    r.registerChartView(h6), r.registerSeriesModel(v6), r.registerLayout(d6), r.registerProcessor(Su("themeRiver"));
  }
  var y6 = 2, m6 = 4, lI = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i) {
        var o = r.call(this) || this;
        o.z2 = y6, o.textConfig = {
          inside: !0
        }, gt(o).seriesIndex = n.seriesIndex;
        var s = new kt({
          z2: m6,
          silent: t.getModel().get(["label", "silent"])
        });
        return o.setTextContent(s), o.updateData(!0, t, n, a, i), o;
      }
      return e.prototype.updateData = function(t, n, a, i, o) {
        this.node = n, n.piece = this, a = a || this._seriesModel, i = i || this._ecModel;
        var s = this;
        gt(s).dataIndex = n.dataIndex;
        var l = n.getModel(), u = l.getModel("emphasis"), f = n.getLayout(), h = H({}, f);
        h.label = null;
        var c = n.getVisual("style");
        c.lineJoin = "bevel";
        var v = n.getVisual("decal");
        v && (c.decal = ls(v, o));
        var d = gs(l.getModel("itemStyle"), h, !0);
        H(h, d), M(Je, function(m) {
          var _ = s.ensureState(m), S = l.getModel([m, "itemStyle"]);
          _.style = S.getItemStyle();
          var b = gs(S, h);
          b && (_.shape = b);
        }), t ? (s.setShape(h), s.shape.r = f.r0, Vt(s, {
          shape: {
            r: f.r
          }
        }, a, n.dataIndex)) : (Vt(s, {
          shape: h
        }, a), an(s)), s.useStyle(c), this._updateLabel(a);
        var p = l.getShallow("cursor");
        p && s.attr("cursor", p), this._seriesModel = a || this._seriesModel, this._ecModel = i || this._ecModel;
        var g = u.get("focus"), y = g === "ancestor" ? n.getAncestorsIndices() : g === "descendant" ? n.getDescendantIndices() : g;
        oe(this, y, u.get("blurScope"), u.get("disabled"));
      }, e.prototype._updateLabel = function(t) {
        var n = this, a = this.node.getModel(), i = a.getModel("label"), o = this.node.getLayout(), s = o.endAngle - o.startAngle, l = (o.startAngle + o.endAngle) / 2, u = Math.cos(l), f = Math.sin(l), h = this, c = h.getTextContent(), v = this.node.dataIndex, d = i.get("minAngle") / 180 * Math.PI, p = i.get("show") && !(d != null && Math.abs(s) < d);
        c.ignore = !p, M(bl, function(y) {
          var m = y === "normal" ? a.getModel("label") : a.getModel([y, "label"]), _ = y === "normal", S = _ ? c : c.ensureState(y), b = t.getFormattedLabel(v, y);
          _ && (b = b || n.node.name), S.style = jt(m, {}, null, y !== "normal", !0), b && (S.style.text = b);
          var w = m.get("show");
          w != null && !_ && (S.ignore = !w);
          var T = g(m, "position"), C = _ ? h : h.states[y], I = C.style.fill;
          C.textConfig = {
            outsideFill: m.get("color") === "inherit" ? I : null,
            inside: T !== "outside"
          };
          var L, P = g(m, "distance") || 0, E = g(m, "align");
          T === "outside" ? (L = o.r + P, E = l > Math.PI / 2 ? "right" : "left") : !E || E === "center" ? (s === 2 * Math.PI && o.r0 === 0 ? L = 0 : L = (o.r + o.r0) / 2, E = "center") : E === "left" ? (L = o.r0 + P, l > Math.PI / 2 && (E = "right")) : E === "right" && (L = o.r - P, l > Math.PI / 2 && (E = "left")), S.style.align = E, S.style.verticalAlign = g(m, "verticalAlign") || "middle", S.x = L * u + o.cx, S.y = L * f + o.cy;
          var R = g(m, "rotate"), k = 0;
          R === "radial" ? (k = -l, k < -Math.PI / 2 && (k += Math.PI)) : R === "tangential" ? (k = Math.PI / 2 - l, k > Math.PI / 2 ? k -= Math.PI : k < -Math.PI / 2 && (k += Math.PI)) : Ot(R) && (k = R * Math.PI / 180), S.rotation = k;
        });
        function g(y, m) {
          var _ = y.get(m);
          return _ ?? i.get(m);
        }
        c.dirtyStyle();
      }, e;
    }(Be)
  ), qm = "sunburstRootToNode", uI = "sunburstHighlight", _6 = "sunburstUnhighlight";
  function S6(r) {
    r.registerAction({
      type: qm,
      update: "updateView"
    }, function(e, t) {
      t.eachComponent({
        mainType: "series",
        subType: "sunburst",
        query: e
      }, n);
      function n(a, i) {
        var o = Mu(e, [qm], a);
        if (o) {
          var s = a.getViewRoot();
          s && (e.direction = Ky(s, o.node) ? "rollUp" : "drillDown"), a.resetViewRoot(o.node);
        }
      }
    }), r.registerAction({
      type: uI,
      update: "none"
    }, function(e, t, n) {
      e = H({}, e), t.eachComponent({
        mainType: "series",
        subType: "sunburst",
        query: e
      }, a);
      function a(i) {
        var o = Mu(e, [uI], i);
        o && (e.dataIndex = o.node.dataIndex);
      }
      ce("sunburstHighlight", "highlight"), n.dispatchAction(H(e, {
        type: "highlight"
      }));
    }), r.registerAction({
      type: _6,
      update: "updateView"
    }, function(e, t, n) {
      e = H({}, e), ce("sunburstUnhighlight", "downplay"), n.dispatchAction(H(e, {
        type: "downplay"
      }));
    });
  }
  var x6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        var o = this;
        this.seriesModel = t, this.api = a, this.ecModel = n;
        var s = t.getData(), l = s.tree.root, u = t.getViewRoot(), f = this.group, h = t.get("renderLabelForZeroData"), c = [];
        u.eachNode(function(m) {
          c.push(m);
        });
        var v = this._oldChildren || [];
        d(c, v), y(l, u), this._initEvents(), this._oldChildren = c;
        function d(m, _) {
          if (m.length === 0 && _.length === 0)
            return;
          new ea(_, m, S, S).add(b).update(b).remove(yt(b, null)).execute();
          function S(w) {
            return w.getId();
          }
          function b(w, T) {
            var C = w == null ? null : m[w], I = T == null ? null : _[T];
            p(C, I);
          }
        }
        function p(m, _) {
          if (!h && m && !m.getValue() && (m = null), m !== l && _ !== l) {
            if (_ && _.piece)
              m ? (_.piece.updateData(!1, m, t, n, a), s.setItemGraphicEl(m.dataIndex, _.piece)) : g(_);
            else if (m) {
              var S = new lI(m, t, n, a);
              f.add(S), s.setItemGraphicEl(m.dataIndex, S);
            }
          }
        }
        function g(m) {
          m && m.piece && (f.remove(m.piece), m.piece = null);
        }
        function y(m, _) {
          _.depth > 0 ? (o.virtualPiece ? o.virtualPiece.updateData(!1, m, t, n, a) : (o.virtualPiece = new lI(m, t, n, a), f.add(o.virtualPiece)), _.piece.off("click"), o.virtualPiece.on("click", function(S) {
            o._rootToNode(_.parentNode);
          })) : o.virtualPiece && (f.remove(o.virtualPiece), o.virtualPiece = null);
        }
      }, e.prototype._initEvents = function() {
        var t = this;
        this.group.off("click"), this.group.on("click", function(n) {
          var a = !1, i = t.seriesModel.getViewRoot();
          i.eachNode(function(o) {
            if (!a && o.piece && o.piece === n.target) {
              var s = o.getModel().get("nodeClick");
              if (s === "rootToNode")
                t._rootToNode(o);
              else if (s === "link") {
                var l = o.getModel(), u = l.get("link");
                if (u) {
                  var f = l.get("target", !0) || "_blank";
                  Sh(u, f);
                }
              }
              a = !0;
            }
          });
        });
      }, e.prototype._rootToNode = function(t) {
        t !== this.seriesModel.getViewRoot() && this.api.dispatchAction({
          type: qm,
          from: this.uid,
          seriesId: this.seriesModel.id,
          targetNode: t
        });
      }, e.prototype.containPoint = function(t, n) {
        var a = n.getData(), i = a.getItemLayout(0);
        if (i) {
          var o = t[0] - i.cx, s = t[1] - i.cy, l = Math.sqrt(o * o + s * s);
          return l <= i.r && l >= i.r0;
        }
      }, e.type = "sunburst", e;
    }($t)
  ), w6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.ignoreStyleOnData = !0, t;
      }
      return e.prototype.getInitialData = function(t, n) {
        var a = {
          name: t.name,
          children: t.data
        };
        fI(a);
        var i = this._levelModels = Y(t.levels || [], function(l) {
          return new Gt(l, this, n);
        }, this), o = qy.createTree(a, this, s);
        function s(l) {
          l.wrapMethod("getItemModel", function(u, f) {
            var h = o.getNodeByDataIndex(f), c = i[h.depth];
            return c && (u.parentModel = c), u;
          });
        }
        return o.data;
      }, e.prototype.optionUpdated = function() {
        this.resetViewRoot();
      }, e.prototype.getDataParams = function(t) {
        var n = r.prototype.getDataParams.apply(this, arguments), a = this.getData().tree.getNodeByDataIndex(t);
        return n.treePathInfo = Ac(a, this), n;
      }, e.prototype.getLevelModel = function(t) {
        return this._levelModels && this._levelModels[t.depth];
      }, e.prototype.getViewRoot = function() {
        return this._viewRoot;
      }, e.prototype.resetViewRoot = function(t) {
        t ? this._viewRoot = t : t = this._viewRoot;
        var n = this.getRawData().tree.root;
        (!t || t !== n && !n.contains(t)) && (this._viewRoot = n);
      }, e.prototype.enableAriaDecal = function() {
        bD(this);
      }, e.type = "series.sunburst", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        // 默认全局居中
        center: ["50%", "50%"],
        radius: [0, "75%"],
        // 默认顺时针
        clockwise: !0,
        startAngle: 90,
        // 最小角度改为0
        minAngle: 0,
        // If still show when all data zero.
        stillShowZeroSum: !0,
        // 'rootToNode', 'link', or false
        nodeClick: "rootToNode",
        renderLabelForZeroData: !1,
        label: {
          // could be: 'radial', 'tangential', or 'none'
          rotate: "radial",
          show: !0,
          opacity: 1,
          // 'left' is for inner side of inside, and 'right' is for outer
          // side for inside
          align: "center",
          position: "inside",
          distance: 5,
          silent: !0
        },
        itemStyle: {
          borderWidth: 1,
          borderColor: "white",
          borderType: "solid",
          shadowBlur: 0,
          shadowColor: "rgba(0, 0, 0, 0.2)",
          shadowOffsetX: 0,
          shadowOffsetY: 0,
          opacity: 1
        },
        emphasis: {
          focus: "descendant"
        },
        blur: {
          itemStyle: {
            opacity: 0.2
          },
          label: {
            opacity: 0.1
          }
        },
        // Animation type can be expansion, scale.
        animationType: "expansion",
        animationDuration: 1e3,
        animationDurationUpdate: 500,
        data: [],
        /**
         * Sort order.
         *
         * Valid values: 'desc', 'asc', null, or callback function.
         * 'desc' and 'asc' for descend and ascendant order;
         * null for not sorting;
         * example of callback function:
         * function(nodeA, nodeB) {
         *     return nodeA.getValue() - nodeB.getValue();
         * }
         */
        sort: "desc"
      }, e;
    }(Zt)
  );
  function fI(r) {
    var e = 0;
    M(r.children, function(n) {
      fI(n);
      var a = n.value;
      U(a) && (a = a[0]), e += a;
    });
    var t = r.value;
    U(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), U(r.value) ? r.value[0] = t : r.value = t;
  }
  var hI = Math.PI / 180;
  function b6(r, e, t) {
    e.eachSeriesByType(r, function(n) {
      var a = n.get("center"), i = n.get("radius");
      U(i) || (i = [0, i]), U(a) || (a = [a, a]);
      var o = t.getWidth(), s = t.getHeight(), l = Math.min(o, s), u = Z(a[0], o), f = Z(a[1], s), h = Z(i[0], l / 2), c = Z(i[1], l / 2), v = -n.get("startAngle") * hI, d = n.get("minAngle") * hI, p = n.getData().tree.root, g = n.getViewRoot(), y = g.depth, m = n.get("sort");
      m != null && cI(g, m);
      var _ = 0;
      M(g.children, function(N) {
        !isNaN(N.getValue()) && _++;
      });
      var S = g.getValue(), b = Math.PI / (S || _) * 2, w = g.depth > 0, T = g.height - (w ? -1 : 1), C = (c - h) / (T || 1), I = n.get("clockwise"), L = n.get("stillShowZeroSum"), P = I ? 1 : -1, E = function(N, F) {
        if (N) {
          var G = F;
          if (N !== p) {
            var W = N.getValue(), X = S === 0 && L ? b : W * b;
            X < d && (X = d), G = F + P * X;
            var K = N.depth - y - (w ? -1 : 1), et = h + C * K, lt = h + C * (K + 1), ft = n.getLevelModel(N);
            if (ft) {
              var It = ft.get("r0", !0), zt = ft.get("r", !0), Mt = ft.get("radius", !0);
              Mt != null && (It = Mt[0], zt = Mt[1]), It != null && (et = Z(It, l / 2)), zt != null && (lt = Z(zt, l / 2));
            }
            N.setLayout({
              angle: X,
              startAngle: F,
              endAngle: G,
              clockwise: I,
              cx: u,
              cy: f,
              r0: et,
              r: lt
            });
          }
          if (N.children && N.children.length) {
            var dt = 0;
            M(N.children, function(Lt) {
              dt += E(Lt, F + dt);
            });
          }
          return G - F;
        }
      };
      if (w) {
        var R = h, k = h + C, O = Math.PI * 2;
        p.setLayout({
          angle: O,
          startAngle: v,
          endAngle: v + O,
          clockwise: I,
          cx: u,
          cy: f,
          r0: R,
          r: k
        });
      }
      E(g, v);
    });
  }
  function cI(r, e) {
    var t = r.children || [];
    r.children = T6(t, e), t.length && M(r.children, function(n) {
      cI(n, e);
    });
  }
  function T6(r, e) {
    if (rt(e)) {
      var t = Y(r, function(a, i) {
        var o = a.getValue();
        return {
          params: {
            depth: a.depth,
            height: a.height,
            dataIndex: a.dataIndex,
            getValue: function() {
              return o;
            }
          },
          index: i
        };
      });
      return t.sort(function(a, i) {
        return e(a.params, i.params);
      }), Y(t, function(a) {
        return r[a.index];
      });
    } else {
      var n = e === "asc";
      return r.sort(function(a, i) {
        var o = (a.getValue() - i.getValue()) * (n ? 1 : -1);
        return o === 0 ? (a.dataIndex - i.dataIndex) * (n ? -1 : 1) : o;
      });
    }
  }
  function C6(r) {
    var e = {};
    function t(n, a, i) {
      for (var o = n; o && o.depth > 1; )
        o = o.parentNode;
      var s = a.getColorFromPalette(o.name || o.dataIndex + "", e);
      return n.depth > 1 && j(s) && (s = wf(s, (n.depth - 1) / (i - 1) * 0.5)), s;
    }
    r.eachSeriesByType("sunburst", function(n) {
      var a = n.getData(), i = a.tree;
      i.eachNode(function(o) {
        var s = o.getModel(), l = s.getModel("itemStyle").getItemStyle();
        l.fill || (l.fill = t(o, n, i.root.height));
        var u = a.ensureUniqueItemVisual(o.dataIndex, "style");
        H(u, l);
      });
    });
  }
  function A6(r) {
    r.registerChartView(x6), r.registerSeriesModel(w6), r.registerLayout(yt(b6, "sunburst")), r.registerProcessor(yt(Su, "sunburst")), r.registerVisual(C6), S6(r);
  }
  var vI = {
    color: "fill",
    borderColor: "stroke"
  }, D6 = {
    symbol: 1,
    symbolSize: 1,
    symbolKeepAspect: 1,
    legendIcon: 1,
    visualMeta: 1,
    liftZ: 1,
    decal: 1
  }, oa = Nt(), M6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.optionUpdated = function() {
        this.currentZLevel = this.get("zlevel", !0), this.currentZ = this.get("z", !0);
      }, e.prototype.getInitialData = function(t, n) {
        return Ln(null, this);
      }, e.prototype.getDataParams = function(t, n, a) {
        var i = r.prototype.getDataParams.call(this, t, n);
        return a && (i.info = oa(a).info), i;
      }, e.type = "series.custom", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
        coordinateSystem: "cartesian2d",
        // zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        // Custom series will not clip by default.
        // Some case will use custom series to draw label
        // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight
        clip: !1
        // Cartesian coordinate system
        // xAxisIndex: 0,
        // yAxisIndex: 0,
        // Polar coordinate system
        // polarIndex: 0,
        // Geo coordinate system
        // geoIndex: 0,
      }, e;
    }(Zt)
  );
  function I6(r, e) {
    return e = e || [0, 0], Y(["x", "y"], function(t, n) {
      var a = this.getAxis(t), i = e[n], o = r[n] / 2;
      return a.type === "category" ? a.getBandWidth() : Math.abs(a.dataToCoord(i - o) - a.dataToCoord(i + o));
    }, this);
  }
  function L6(r) {
    var e = r.master.getRect();
    return {
      coordSys: {
        // The name exposed to user is always 'cartesian2d' but not 'grid'.
        type: "cartesian2d",
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height
      },
      api: {
        coord: function(t) {
          return r.dataToPoint(t);
        },
        size: J(I6, r)
      }
    };
  }
  function P6(r, e) {
    return e = e || [0, 0], Y([0, 1], function(t) {
      var n = e[t], a = r[t] / 2, i = [], o = [];
      return i[t] = n - a, o[t] = n + a, i[1 - t] = o[1 - t] = e[1 - t], Math.abs(this.dataToPoint(i)[t] - this.dataToPoint(o)[t]);
    }, this);
  }
  function E6(r) {
    var e = r.getBoundingRect();
    return {
      coordSys: {
        type: "geo",
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height,
        zoom: r.getZoom()
      },
      api: {
        coord: function(t) {
          return r.dataToPoint(t);
        },
        size: J(P6, r)
      }
    };
  }
  function R6(r, e) {
    var t = this.getAxis(), n = e instanceof Array ? e[0] : e, a = (r instanceof Array ? r[0] : r) / 2;
    return t.type === "category" ? t.getBandWidth() : Math.abs(t.dataToCoord(n - a) - t.dataToCoord(n + a));
  }
  function k6(r) {
    var e = r.getRect();
    return {
      coordSys: {
        type: "singleAxis",
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height
      },
      api: {
        coord: function(t) {
          return r.dataToPoint(t);
        },
        size: J(R6, r)
      }
    };
  }
  function O6(r, e) {
    return e = e || [0, 0], Y(["Radius", "Angle"], function(t, n) {
      var a = "get" + t + "Axis", i = this[a](), o = e[n], s = r[n] / 2, l = i.type === "category" ? i.getBandWidth() : Math.abs(i.dataToCoord(o - s) - i.dataToCoord(o + s));
      return t === "Angle" && (l = l * Math.PI / 180), l;
    }, this);
  }
  function N6(r) {
    var e = r.getRadiusAxis(), t = r.getAngleAxis(), n = e.getExtent();
    return n[0] > n[1] && n.reverse(), {
      coordSys: {
        type: "polar",
        cx: r.cx,
        cy: r.cy,
        r: n[1],
        r0: n[0]
      },
      api: {
        coord: function(a) {
          var i = e.dataToRadius(a[0]), o = t.dataToAngle(a[1]), s = r.coordToPoint([i, o]);
          return s.push(i, o * Math.PI / 180), s;
        },
        size: J(O6, r)
      }
    };
  }
  function V6(r) {
    var e = r.getRect(), t = r.getRangeInfo();
    return {
      coordSys: {
        type: "calendar",
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height,
        cellWidth: r.getCellWidth(),
        cellHeight: r.getCellHeight(),
        rangeInfo: {
          start: t.start,
          end: t.end,
          weeks: t.weeks,
          dayCount: t.allDay
        }
      },
      api: {
        coord: function(n, a) {
          return r.dataToPoint(n, a);
        }
      }
    };
  }
  var dI = {};
  function pI(r, e, t, n) {
    return r && (r.legacy || r.legacy !== !1 && !t && !n && e !== "tspan" && (e === "text" || Q(r, "text")));
  }
  function gI(r, e, t) {
    var n = r, a, i, o;
    if (e === "text")
      o = n;
    else {
      o = {}, Q(n, "text") && (o.text = n.text), Q(n, "rich") && (o.rich = n.rich), Q(n, "textFill") && (o.fill = n.textFill), Q(n, "textStroke") && (o.stroke = n.textStroke), Q(n, "fontFamily") && (o.fontFamily = n.fontFamily), Q(n, "fontSize") && (o.fontSize = n.fontSize), Q(n, "fontStyle") && (o.fontStyle = n.fontStyle), Q(n, "fontWeight") && (o.fontWeight = n.fontWeight), i = {
        type: "text",
        style: o,
        // ec4 does not support rectText trigger.
        // And when text position is different in normal and emphasis
        // => hover text trigger emphasis;
        // => text position changed, leave mouse pointer immediately;
        // That might cause incorrect state.
        silent: !0
      }, a = {};
      var s = Q(n, "textPosition");
      t ? a.position = s ? n.textPosition : "inside" : s && (a.position = n.textPosition), Q(n, "textPosition") && (a.position = n.textPosition), Q(n, "textOffset") && (a.offset = n.textOffset), Q(n, "textRotation") && (a.rotation = n.textRotation), Q(n, "textDistance") && (a.distance = n.textDistance);
    }
    return yI(o, r), M(o.rich, function(l) {
      yI(l, l);
    }), {
      textConfig: a,
      textContent: i
    };
  }
  function yI(r, e) {
    e && (e.font = e.textFont || e.font, Q(e, "textStrokeWidth") && (r.lineWidth = e.textStrokeWidth), Q(e, "textAlign") && (r.align = e.textAlign), Q(e, "textVerticalAlign") && (r.verticalAlign = e.textVerticalAlign), Q(e, "textLineHeight") && (r.lineHeight = e.textLineHeight), Q(e, "textWidth") && (r.width = e.textWidth), Q(e, "textHeight") && (r.height = e.textHeight), Q(e, "textBackgroundColor") && (r.backgroundColor = e.textBackgroundColor), Q(e, "textPadding") && (r.padding = e.textPadding), Q(e, "textBorderColor") && (r.borderColor = e.textBorderColor), Q(e, "textBorderWidth") && (r.borderWidth = e.textBorderWidth), Q(e, "textBorderRadius") && (r.borderRadius = e.textBorderRadius), Q(e, "textBoxShadowColor") && (r.shadowColor = e.textBoxShadowColor), Q(e, "textBoxShadowBlur") && (r.shadowBlur = e.textBoxShadowBlur), Q(e, "textBoxShadowOffsetX") && (r.shadowOffsetX = e.textBoxShadowOffsetX), Q(e, "textBoxShadowOffsetY") && (r.shadowOffsetY = e.textBoxShadowOffsetY));
  }
  function mI(r, e, t) {
    var n = r;
    n.textPosition = n.textPosition || t.position || "inside", t.offset != null && (n.textOffset = t.offset), t.rotation != null && (n.textRotation = t.rotation), t.distance != null && (n.textDistance = t.distance);
    var a = n.textPosition.indexOf("inside") >= 0, i = r.fill || "#000";
    _I(n, e);
    var o = n.textFill == null;
    return a ? o && (n.textFill = t.insideFill || "#fff", !n.textStroke && t.insideStroke && (n.textStroke = t.insideStroke), !n.textStroke && (n.textStroke = i), n.textStrokeWidth == null && (n.textStrokeWidth = 2)) : (o && (n.textFill = r.fill || t.outsideFill || "#000"), !n.textStroke && t.outsideStroke && (n.textStroke = t.outsideStroke)), n.text = e.text, n.rich = e.rich, M(e.rich, function(s) {
      _I(s, s);
    }), n;
  }
  function _I(r, e) {
    e && (Q(e, "fill") && (r.textFill = e.fill), Q(e, "stroke") && (r.textStroke = e.fill), Q(e, "lineWidth") && (r.textStrokeWidth = e.lineWidth), Q(e, "font") && (r.font = e.font), Q(e, "fontStyle") && (r.fontStyle = e.fontStyle), Q(e, "fontWeight") && (r.fontWeight = e.fontWeight), Q(e, "fontSize") && (r.fontSize = e.fontSize), Q(e, "fontFamily") && (r.fontFamily = e.fontFamily), Q(e, "align") && (r.textAlign = e.align), Q(e, "verticalAlign") && (r.textVerticalAlign = e.verticalAlign), Q(e, "lineHeight") && (r.textLineHeight = e.lineHeight), Q(e, "width") && (r.textWidth = e.width), Q(e, "height") && (r.textHeight = e.height), Q(e, "backgroundColor") && (r.textBackgroundColor = e.backgroundColor), Q(e, "padding") && (r.textPadding = e.padding), Q(e, "borderColor") && (r.textBorderColor = e.borderColor), Q(e, "borderWidth") && (r.textBorderWidth = e.borderWidth), Q(e, "borderRadius") && (r.textBorderRadius = e.borderRadius), Q(e, "shadowColor") && (r.textBoxShadowColor = e.shadowColor), Q(e, "shadowBlur") && (r.textBoxShadowBlur = e.shadowBlur), Q(e, "shadowOffsetX") && (r.textBoxShadowOffsetX = e.shadowOffsetX), Q(e, "shadowOffsetY") && (r.textBoxShadowOffsetY = e.shadowOffsetY), Q(e, "textShadowColor") && (r.textShadowColor = e.textShadowColor), Q(e, "textShadowBlur") && (r.textShadowBlur = e.textShadowBlur), Q(e, "textShadowOffsetX") && (r.textShadowOffsetX = e.textShadowOffsetX), Q(e, "textShadowOffsetY") && (r.textShadowOffsetY = e.textShadowOffsetY));
  }
  function SI(r, e) {
    {
      var t = r + "^_^" + e;
      dI[t] || (console.warn('[ECharts] DEPRECATED: "' + r + '" has been deprecated. ' + e), dI[t] = !0);
    }
  }
  var xI = {
    position: ["x", "y"],
    scale: ["scaleX", "scaleY"],
    origin: ["originX", "originY"]
  }, wI = Pt(xI), zc = Ar(Sn, function(r, e) {
    return r[e] = 1, r;
  }, {}), bI = Sn.join(", "), Gc = ["", "style", "shape", "extra"], As = Nt();
  function Km(r, e, t, n, a) {
    var i = r + "Animation", o = Wo(r, n, a) || {}, s = As(e).userDuring;
    return o.duration > 0 && (o.during = s ? J(H6, {
      el: e,
      userDuring: s
    }) : null, o.setToFinal = !0, o.scope = r), H(o, t[i]), o;
  }
  function Fc(r, e, t, n) {
    n = n || {};
    var a = n.dataIndex, i = n.isInit, o = n.clearStyle, s = t.isAnimationEnabled(), l = As(r), u = e.style;
    l.userDuring = e.during;
    var f = {}, h = {};
    if (U6(r, e, h), AI("shape", e, h), AI("extra", e, h), !i && s && (W6(r, e, f), CI("shape", r, e, f), CI("extra", r, e, f), Y6(r, e, u, f)), h.style = u, B6(r, h, o), G6(r, e), s)
      if (i) {
        var c = {};
        M(Gc, function(d) {
          var p = d ? e[d] : e;
          p && p.enterFrom && (d && (c[d] = c[d] || {}), H(d ? c[d] : c, p.enterFrom));
        });
        var v = Km("enter", r, e, t, a);
        v.duration > 0 && r.animateFrom(c, v);
      } else
        z6(r, e, a || 0, t, f);
    TI(r, e), u ? r.dirty() : r.markRedraw();
  }
  function TI(r, e) {
    for (var t = As(r).leaveToProps, n = 0; n < Gc.length; n++) {
      var a = Gc[n], i = a ? e[a] : e;
      i && i.leaveTo && (t || (t = As(r).leaveToProps = {}), a && (t[a] = t[a] || {}), H(a ? t[a] : t, i.leaveTo));
    }
  }
  function Hc(r, e, t, n) {
    if (r) {
      var a = r.parent, i = As(r).leaveToProps;
      if (i) {
        var o = Km("update", r, e, t, 0);
        o.done = function() {
          a.remove(r), n && n();
        }, r.animateTo(i, o);
      } else
        a.remove(r), n && n();
    }
  }
  function ho(r) {
    return r === "all";
  }
  function B6(r, e, t) {
    var n = e.style;
    if (!r.isGroup && n) {
      if (t) {
        r.useStyle({});
        for (var a = r.animators, i = 0; i < a.length; i++) {
          var o = a[i];
          o.targetName === "style" && o.changeTarget(r.style);
        }
      }
      r.setStyle(n);
    }
    e && (e.style = null, e && r.attr(e), e.style = n);
  }
  function z6(r, e, t, n, a) {
    if (a) {
      var i = Km("update", r, e, n, t);
      i.duration > 0 && r.animateFrom(a, i);
    }
  }
  function G6(r, e) {
    Q(e, "silent") && (r.silent = e.silent), Q(e, "ignore") && (r.ignore = e.ignore), r instanceof kr && Q(e, "invisible") && (r.invisible = e.invisible), r instanceof Dt && Q(e, "autoBatch") && (r.autoBatch = e.autoBatch);
  }
  var Nn = {}, F6 = {
    // Usually other props do not need to be changed in animation during.
    setTransform: function(r, e) {
      return st(Q(zc, r), "Only " + bI + " available in `setTransform`."), Nn.el[r] = e, this;
    },
    getTransform: function(r) {
      return st(Q(zc, r), "Only " + bI + " available in `getTransform`."), Nn.el[r];
    },
    setShape: function(r, e) {
      Ds(r);
      var t = Nn.el, n = t.shape || (t.shape = {});
      return n[r] = e, t.dirtyShape && t.dirtyShape(), this;
    },
    getShape: function(r) {
      Ds(r);
      var e = Nn.el.shape;
      if (e)
        return e[r];
    },
    setStyle: function(r, e) {
      Ds(r);
      var t = Nn.el, n = t.style;
      return n && (ca(e) && ae("style." + r + " must not be assigned with NaN."), n[r] = e, t.dirtyStyle && t.dirtyStyle()), this;
    },
    getStyle: function(r) {
      Ds(r);
      var e = Nn.el.style;
      if (e)
        return e[r];
    },
    setExtra: function(r, e) {
      Ds(r);
      var t = Nn.el.extra || (Nn.el.extra = {});
      return t[r] = e, this;
    },
    getExtra: function(r) {
      Ds(r);
      var e = Nn.el.extra;
      if (e)
        return e[r];
    }
  };
  function Ds(r) {
    if (r === "transition" || r === "enterFrom" || r === "leaveTo")
      throw new Error('key must not be "' + r + '"');
  }
  function H6() {
    var r = this, e = r.el;
    if (e) {
      var t = As(e).userDuring, n = r.userDuring;
      if (t !== n) {
        r.el = r.userDuring = null;
        return;
      }
      Nn.el = e, n(F6);
    }
  }
  function CI(r, e, t, n) {
    var a = t[r];
    if (a) {
      var i = e[r], o;
      if (i) {
        var s = t.transition, l = a.transition;
        if (l)
          if (!o && (o = n[r] = {}), ho(l))
            H(o, i);
          else
            for (var u = Xt(l), f = 0; f < u.length; f++) {
              var h = u[f], c = i[h];
              o[h] = c;
            }
        else if (ho(s) || bt(s, r) >= 0) {
          !o && (o = n[r] = {});
          for (var v = Pt(i), f = 0; f < v.length; f++) {
            var h = v[f], c = i[h];
            $6(a[h], c) && (o[h] = c);
          }
        }
      }
    }
  }
  function AI(r, e, t) {
    var n = e[r];
    if (n)
      for (var a = t[r] = {}, i = Pt(n), o = 0; o < i.length; o++) {
        var s = i[o];
        a[s] = ul(n[s]);
      }
  }
  function W6(r, e, t) {
    for (var n = e.transition, a = ho(n) ? Sn : Xt(n || []), i = 0; i < a.length; i++) {
      var o = a[i];
      if (!(o === "style" || o === "shape" || o === "extra")) {
        var s = r[o];
        DI(o, "el.transition"), t[o] = s;
      }
    }
  }
  function U6(r, e, t) {
    for (var n = 0; n < wI.length; n++) {
      var a = wI[n], i = xI[a], o = e[a];
      o && (t[i[0]] = o[0], t[i[1]] = o[1]);
    }
    for (var n = 0; n < Sn.length; n++) {
      var s = Sn[n];
      e[s] != null && (t[s] = e[s]);
    }
  }
  function Y6(r, e, t, n) {
    if (t) {
      var a = r.style, i;
      if (a) {
        var o = t.transition, s = e.transition;
        if (o && !ho(o)) {
          var l = Xt(o);
          !i && (i = n.style = {});
          for (var u = 0; u < l.length; u++) {
            var f = l[u], h = a[f];
            i[f] = h;
          }
        } else if (r.getAnimationStyleProps && (ho(s) || ho(o) || bt(s, "style") >= 0)) {
          var c = r.getAnimationStyleProps(), v = c ? c.style : null;
          if (v) {
            !i && (i = n.style = {});
            for (var d = Pt(t), u = 0; u < d.length; u++) {
              var f = d[u];
              if (v[f]) {
                var h = a[f];
                i[f] = h;
              }
            }
          }
        }
      }
    }
  }
  function $6(r, e) {
    return Pe(r) ? r !== e : r != null && isFinite(r);
  }
  var DI;
  DI = function(r, e) {
    Q(zc, r) || ae("Prop `" + r + "` is not a permitted in `" + e + "`. Only `" + Pt(zc).join("`, `") + "` are permitted.");
  };
  var MI = Nt(), X6 = ["percent", "easing", "shape", "style", "extra"];
  function II(r) {
    r.stopAnimation("keyframe"), r.attr(MI(r));
  }
  function Wc(r, e, t) {
    if (!(!t.isAnimationEnabled() || !e)) {
      if (U(e)) {
        M(e, function(s) {
          Wc(r, s, t);
        });
        return;
      }
      var n = e.keyframes, a = e.duration;
      if (t && a == null) {
        var i = Wo("enter", t, 0);
        a = i && i.duration;
      }
      if (!(!n || !a)) {
        var o = MI(r);
        M(Gc, function(s) {
          if (!(s && !r[s])) {
            var l, u = !1;
            n.sort(function(f, h) {
              return f.percent - h.percent;
            }), M(n, function(f) {
              var h = r.animators, c = s ? f[s] : f;
              if (f.percent >= 1 && (u = !0), !!c) {
                var v = Pt(c);
                if (s || (v = Ht(v, function(g) {
                  return bt(X6, g) < 0;
                })), !!v.length) {
                  l || (l = r.animate(s, e.loop, !0), l.scope = "keyframe");
                  for (var d = 0; d < h.length; d++)
                    h[d] !== l && h[d].targetName === l.targetName && h[d].stopTracks(v);
                  s && (o[s] = o[s] || {});
                  var p = s ? o[s] : o;
                  M(v, function(g) {
                    p[g] = ((s ? r[s] : r) || {})[g];
                  }), l.whenWithKeys(a * f.percent, c, v, f.easing);
                }
              }
            }), l && (u || ae("End frame with percent: 1 is missing in the keyframeAnimation.", !0), l.delay(e.delay || 0).duration(a).start(e.easing));
          }
        });
      }
    }
  }
  var sa = "emphasis", Ya = "normal", jm = "blur", Jm = "select", $a = [Ya, sa, jm, Jm], Qm = {
    normal: ["itemStyle"],
    emphasis: [sa, "itemStyle"],
    blur: [jm, "itemStyle"],
    select: [Jm, "itemStyle"]
  }, t0 = {
    normal: ["label"],
    emphasis: [sa, "label"],
    blur: [jm, "label"],
    select: [Jm, "label"]
  }, Z6 = ["x", "y"], q6 = "e\0\0", Zr = {
    normal: {},
    emphasis: {},
    blur: {},
    select: {}
  }, LI = {
    cartesian2d: L6,
    geo: E6,
    single: k6,
    polar: N6,
    calendar: V6
  };
  function Uc(r) {
    return r instanceof Dt;
  }
  function e0(r) {
    return r instanceof kr;
  }
  function K6(r, e) {
    e.copyTransform(r), e0(e) && e0(r) && (e.setStyle(r.style), e.z = r.z, e.z2 = r.z2, e.zlevel = r.zlevel, e.invisible = r.invisible, e.ignore = r.ignore, Uc(e) && Uc(r) && e.setShape(r.shape));
  }
  var j6 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        this._progressiveEls = null;
        var o = this._data, s = t.getData(), l = this.group, u = EI(t, s, n, a);
        o || l.removeAll(), s.diff(o).add(function(h) {
          a0(a, null, h, u(h, i), t, l, s);
        }).remove(function(h) {
          var c = o.getItemGraphicEl(h);
          c && Hc(c, oa(c).option, t);
        }).update(function(h, c) {
          var v = o.getItemGraphicEl(c);
          a0(a, v, h, u(h, i), t, l, s);
        }).execute();
        var f = t.get("clip", !0) ? vc(t.coordinateSystem, !1, t) : null;
        f ? l.setClipPath(f) : l.removeClipPath(), this._data = s;
      }, e.prototype.incrementalPrepareRender = function(t, n, a) {
        this.group.removeAll(), this._data = null;
      }, e.prototype.incrementalRender = function(t, n, a, i, o) {
        var s = n.getData(), l = EI(n, s, a, i), u = this._progressiveEls = [];
        function f(v) {
          v.isGroup || (v.incremental = !0, v.ensureState("emphasis").hoverLayer = !0);
        }
        for (var h = t.start; h < t.end; h++) {
          var c = a0(null, null, h, l(h, o), n, this.group, s);
          c && (c.traverse(f), u.push(c));
        }
      }, e.prototype.eachRendered = function(t) {
        Pa(this._progressiveEls || this.group, t);
      }, e.prototype.filterForExposedEvent = function(t, n, a, i) {
        var o = n.element;
        if (o == null || a.name === o)
          return !0;
        for (; (a = a.__hostTarget || a.parent) && a !== this.group; )
          if (a.name === o)
            return !0;
        return !1;
      }, e.type = "custom", e;
    }($t)
  );
  function r0(r) {
    var e = r.type, t;
    if (e === "path") {
      var n = r.shape, a = n.width != null && n.height != null ? {
        x: n.x || 0,
        y: n.y || 0,
        width: n.width,
        height: n.height
      } : null, i = VI(n);
      t = El(i, null, a, n.layout || "center"), oa(t).customPathData = i;
    } else if (e === "image")
      t = new Te({}), oa(t).customImagePath = r.style.image;
    else if (e === "text")
      t = new kt({});
    else if (e === "group")
      t = new ct();
    else {
      if (e === "compoundPath")
        throw new Error('"compoundPath" is not supported yet.');
      var o = lh(e);
      if (!o) {
        var s = "";
        s = 'graphic type "' + e + '" can not be found.', Ft(s);
      }
      t = new o();
    }
    return oa(t).customGraphicType = e, t.name = r.name, t.z2EmphasisLift = 1, t.z2SelectLift = 1, t;
  }
  function n0(r, e, t, n, a, i, o) {
    II(e);
    var s = a && a.normal.cfg;
    s && e.setTextConfig(s), n && n.transition == null && (n.transition = Z6);
    var l = n && n.style;
    if (l) {
      if (e.type === "text") {
        var u = l;
        Q(u, "textFill") && (u.fill = u.textFill), Q(u, "textStroke") && (u.stroke = u.textStroke);
      }
      var f = void 0, h = Uc(e) ? l.decal : null;
      r && h && (h.dirty = !0, f = ls(h, r)), l.__decalPattern = f;
    }
    if (e0(e) && l) {
      var f = l.__decalPattern;
      f && (l.decal = f);
    }
    Fc(e, n, i, {
      dataIndex: t,
      isInit: o,
      clearStyle: !0
    }), Wc(e, n.keyframeAnimation, i);
  }
  function PI(r, e, t, n, a) {
    var i = e.isGroup ? null : e, o = a && a[r].cfg;
    if (i) {
      var s = i.ensureState(r);
      if (n === !1) {
        var l = i.getState(r);
        l && (l.style = null);
      } else
        s.style = n || null;
      o && (s.textConfig = o), Ii(i);
    }
  }
  function J6(r, e, t) {
    if (!r.isGroup) {
      var n = r, a = t.currentZ, i = t.currentZLevel;
      n.z = a, n.zlevel = i;
      var o = e.z2;
      o != null && (n.z2 = o || 0);
      for (var s = 0; s < $a.length; s++)
        Q6(n, e, $a[s]);
    }
  }
  function Q6(r, e, t) {
    var n = t === Ya, a = n ? e : Yc(e, t), i = a ? a.z2 : null, o;
    i != null && (o = n ? r : r.ensureState(t), o.z2 = i || 0);
  }
  function EI(r, e, t, n) {
    var a = r.get("renderItem"), i = r.coordinateSystem, o = {};
    i && (st(a, "series.render is required."), st(i.prepareCustoms || LI[i.type], "This coordSys does not support custom series."), o = i.prepareCustoms ? i.prepareCustoms(i) : LI[i.type](i));
    for (var s = ot({
      getWidth: n.getWidth,
      getHeight: n.getHeight,
      getZr: n.getZr,
      getDevicePixelRatio: n.getDevicePixelRatio,
      value: S,
      style: w,
      ordinalRawValue: b,
      styleEmphasis: T,
      visual: L,
      barLayout: P,
      currentSeriesIndices: E,
      font: R
    }, o.api || {}), l = {
      // The life cycle of context: current round of rendering.
      // The global life cycle is probably not necessary, because
      // user can store global status by themselves.
      context: {},
      seriesId: r.id,
      seriesName: r.name,
      seriesIndex: r.seriesIndex,
      coordSys: o.coordSys,
      dataInsideLength: e.count(),
      encode: tY(r.getData())
    }, u, f, h = {}, c = {}, v = {}, d = {}, p = 0; p < $a.length; p++) {
      var g = $a[p];
      v[g] = r.getModel(Qm[g]), d[g] = r.getModel(t0[g]);
    }
    function y(k) {
      return k === u ? f || (f = e.getItemModel(k)) : e.getItemModel(k);
    }
    function m(k, O) {
      return e.hasItemOption ? k === u ? h[O] || (h[O] = y(k).getModel(Qm[O])) : y(k).getModel(Qm[O]) : v[O];
    }
    function _(k, O) {
      return e.hasItemOption ? k === u ? c[O] || (c[O] = y(k).getModel(t0[O])) : y(k).getModel(t0[O]) : d[O];
    }
    return function(k, O) {
      return u = k, f = null, h = {}, c = {}, a && a(ot({
        dataIndexInside: k,
        dataIndex: e.getRawIndex(k),
        // Can be used for optimization when zoom or roam.
        actionType: O ? O.type : null
      }, l), s);
    };
    function S(k, O) {
      return O == null && (O = u), e.getStore().get(e.getDimensionIndex(k || 0), O);
    }
    function b(k, O) {
      O == null && (O = u), k = k || 0;
      var N = e.getDimensionInfo(k);
      if (!N) {
        var F = e.getDimensionIndex(k);
        return F >= 0 ? e.getStore().get(F, O) : void 0;
      }
      var G = e.get(N.name, O), W = N && N.ordinalMeta;
      return W ? W.categories[G] : G;
    }
    function w(k, O) {
      SI("api.style", "Please write literal style directly instead."), O == null && (O = u);
      var N = e.getItemVisual(O, "style"), F = N && N.fill, G = N && N.opacity, W = m(O, Ya).getItemStyle();
      F != null && (W.fill = F), G != null && (W.opacity = G);
      var X = {
        inheritColor: j(F) ? F : "#000"
      }, K = _(O, Ya), et = jt(K, null, X, !1, !0);
      et.text = K.getShallow("show") ? _t(r.getFormattedLabel(O, Ya), ps(e, O)) : null;
      var lt = ch(K, X, !1);
      return I(k, W), W = mI(W, et, lt), k && C(W, k), W.legacy = !0, W;
    }
    function T(k, O) {
      SI("api.styleEmphasis", "Please write literal style directly instead."), O == null && (O = u);
      var N = m(O, sa).getItemStyle(), F = _(O, sa), G = jt(F, null, null, !0, !0);
      G.text = F.getShallow("show") ? Dr(r.getFormattedLabel(O, sa), r.getFormattedLabel(O, Ya), ps(e, O)) : null;
      var W = ch(F, null, !0);
      return I(k, N), N = mI(N, G, W), k && C(N, k), N.legacy = !0, N;
    }
    function C(k, O) {
      for (var N in O)
        Q(O, N) && (k[N] = O[N]);
    }
    function I(k, O) {
      k && (k.textFill && (O.textFill = k.textFill), k.textPosition && (O.textPosition = k.textPosition));
    }
    function L(k, O) {
      if (O == null && (O = u), Q(vI, k)) {
        var N = e.getItemVisual(O, "style");
        return N ? N[vI[k]] : null;
      }
      if (Q(D6, k))
        return e.getItemVisual(O, k);
    }
    function P(k) {
      if (i.type === "cartesian2d") {
        var O = i.getBaseAxis();
        return Ez(ot({
          axis: O
        }, k));
      }
    }
    function E() {
      return t.getCurrentSeriesIndices();
    }
    function R(k) {
      return Px(k, t);
    }
  }
  function tY(r) {
    var e = {};
    return M(r.dimensions, function(t) {
      var n = r.getDimensionInfo(t);
      if (!n.isExtraCoord) {
        var a = n.coordDim, i = e[a] = e[a] || [];
        i[n.coordDimIndex] = r.getDimensionIndex(t);
      }
    }), e;
  }
  function a0(r, e, t, n, a, i, o) {
    if (!n) {
      i.remove(e);
      return;
    }
    var s = i0(r, e, t, n, a, i);
    return s && o.setItemGraphicEl(t, s), s && oe(s, n.focus, n.blurScope, n.emphasisDisabled), s;
  }
  function i0(r, e, t, n, a, i) {
    st(n, "should not have an null/undefined element setting");
    var o = -1, s = e;
    e && RI(e, n, a) && (o = bt(i.childrenRef(), e), e = null);
    var l = !e, u = e;
    u ? u.clearStates() : (u = r0(n), s && K6(s, u)), n.morph === !1 ? u.disableMorphing = !0 : u.disableMorphing && (u.disableMorphing = !1), Zr.normal.cfg = Zr.normal.conOpt = Zr.emphasis.cfg = Zr.emphasis.conOpt = Zr.blur.cfg = Zr.blur.conOpt = Zr.select.cfg = Zr.select.conOpt = null, Zr.isLegacy = !1, rY(u, t, n, a, l, Zr), eY(u, t, n, a, l), n0(r, u, t, n, Zr, a, l), Q(n, "info") && (oa(u).info = n.info);
    for (var f = 0; f < $a.length; f++) {
      var h = $a[f];
      if (h !== Ya) {
        var c = Yc(n, h), v = o0(n, c, h);
        PI(h, u, c, v, Zr);
      }
    }
    return J6(u, n, a), n.type === "group" && nY(r, u, t, n, a), o >= 0 ? i.replaceAt(u, o) : i.add(u), u;
  }
  function RI(r, e, t) {
    var n = oa(r), a = e.type, i = e.shape, o = e.style;
    return (
      // Always create new if universal transition is enabled.
      // Because we do transition after render. It needs to know what old element is. Replacement will loose it.
      t.isUniversalTransitionEnabled() || a != null && a !== n.customGraphicType || a === "path" && sY(i) && VI(i) !== n.customPathData || a === "image" && Q(o, "image") && o.image !== n.customImagePath
    );
  }
  function eY(r, e, t, n, a) {
    var i = t.clipPath;
    if (i === !1)
      r && r.getClipPath() && r.removeClipPath();
    else if (i) {
      var o = r.getClipPath();
      o && RI(o, i, n) && (o = null), o || (o = r0(i), st(Uc(o), "Only any type of `path` can be used in `clipPath`, rather than " + o.type + "."), r.setClipPath(o)), n0(null, o, e, i, null, n, a);
    }
  }
  function rY(r, e, t, n, a, i) {
    if (!r.isGroup) {
      kI(t, null, i), kI(t, sa, i);
      var o = i.normal.conOpt, s = i.emphasis.conOpt, l = i.blur.conOpt, u = i.select.conOpt;
      if (o != null || s != null || u != null || l != null) {
        var f = r.getTextContent();
        if (o === !1)
          f && r.removeTextContent();
        else {
          o = i.normal.conOpt = o || {
            type: "text"
          }, f ? f.clearStates() : (f = r0(o), r.setTextContent(f)), n0(null, f, e, o, null, n, a);
          for (var h = o && o.style, c = 0; c < $a.length; c++) {
            var v = $a[c];
            if (v !== Ya) {
              var d = i[v].conOpt;
              PI(v, f, d, o0(o, d, v), null);
            }
          }
          h ? f.dirty() : f.markRedraw();
        }
      }
    }
  }
  function kI(r, e, t) {
    var n = e ? Yc(r, e) : r, a = e ? o0(r, n, sa) : r.style, i = r.type, o = n ? n.textConfig : null, s = r.textContent, l = s ? e ? Yc(s, e) : s : null;
    if (a && // Because emphasis style has little info to detect legacy,
    // if normal is legacy, emphasis is trade as legacy.
    (t.isLegacy || pI(a, i, !!o, !!l))) {
      t.isLegacy = !0;
      var u = gI(a, i, !e);
      !o && u.textConfig && (o = u.textConfig), !l && u.textContent && (l = u.textContent);
    }
    if (!e && l) {
      var f = l;
      !f.type && (f.type = "text"), st(f.type === "text", 'textContent.type must be "text"');
    }
    var h = e ? t[e] : t.normal;
    h.cfg = o, h.conOpt = l;
  }
  function Yc(r, e) {
    return e ? r ? r[e] : null : r;
  }
  function o0(r, e, t) {
    var n = e && e.style;
    return n == null && t === sa && r && (n = r.styleEmphasis), n;
  }
  function nY(r, e, t, n, a) {
    var i = n.children, o = i ? i.length : 0, s = n.$mergeChildren, l = s === "byName" || n.diffChildrenByName, u = s === !1;
    if (!(!o && !l && !u)) {
      if (l) {
        iY({
          api: r,
          oldChildren: e.children() || [],
          newChildren: i || [],
          dataIndex: t,
          seriesModel: a,
          group: e
        });
        return;
      }
      u && e.removeAll();
      for (var f = 0; f < o; f++) {
        var h = i[f], c = e.childAt(f);
        h ? (h.ignore == null && (h.ignore = !1), i0(r, c, t, h, a, e)) : (st(c, "renderItem should not return a group containing elements as null/undefined/{} if they do not exist before."), c.ignore = !0);
      }
      for (var v = e.childCount() - 1; v >= f; v--) {
        var d = e.childAt(v);
        aY(e, d, a);
      }
    }
  }
  function aY(r, e, t) {
    e && Hc(e, oa(r).option, t);
  }
  function iY(r) {
    new ea(r.oldChildren, r.newChildren, OI, OI, r).add(NI).update(NI).remove(oY).execute();
  }
  function OI(r, e) {
    var t = r && r.name;
    return t ?? q6 + e;
  }
  function NI(r, e) {
    var t = this.context, n = r != null ? t.newChildren[r] : null, a = e != null ? t.oldChildren[e] : null;
    i0(t.api, a, t.dataIndex, n, t.seriesModel, t.group);
  }
  function oY(r) {
    var e = this.context, t = e.oldChildren[r];
    t && Hc(t, oa(t).option, e.seriesModel);
  }
  function VI(r) {
    return r && (r.pathData || r.d);
  }
  function sY(r) {
    return r && (Q(r, "pathData") || Q(r, "d"));
  }
  function lY(r) {
    r.registerChartView(j6), r.registerSeriesModel(M6);
  }
  var co = Nt(), BI = ht, s0 = J, l0 = (
    /** @class */
    function() {
      function r() {
        this._dragging = !1, this.animationThreshold = 15;
      }
      return r.prototype.render = function(e, t, n, a) {
        var i = t.get("value"), o = t.get("status");
        if (this._axisModel = e, this._axisPointerModel = t, this._api = n, !(!a && this._lastValue === i && this._lastStatus === o)) {
          this._lastValue = i, this._lastStatus = o;
          var s = this._group, l = this._handle;
          if (!o || o === "hide") {
            s && s.hide(), l && l.hide();
            return;
          }
          s && s.show(), l && l.show();
          var u = {};
          this.makeElOption(u, i, e, t, n);
          var f = u.graphicKey;
          f !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = f;
          var h = this._moveAnimation = this.determineAnimation(e, t);
          if (!s)
            s = this._group = new ct(), this.createPointerEl(s, u, e, t), this.createLabelEl(s, u, e, t), n.getZr().add(s);
          else {
            var c = yt(zI, t, h);
            this.updatePointerEl(s, u, c), this.updateLabelEl(s, u, c, t);
          }
          HI(s, t, !0), this._renderHandle(i);
        }
      }, r.prototype.remove = function(e) {
        this.clear(e);
      }, r.prototype.dispose = function(e) {
        this.clear(e);
      }, r.prototype.determineAnimation = function(e, t) {
        var n = t.get("animation"), a = e.axis, i = a.type === "category", o = t.get("snap");
        if (!o && !i)
          return !1;
        if (n === "auto" || n == null) {
          var s = this.animationThreshold;
          if (i && a.getBandWidth() > s)
            return !0;
          if (o) {
            var l = Py(e).seriesDataCount, u = a.getExtent();
            return Math.abs(u[0] - u[1]) / l > s;
          }
          return !1;
        }
        return n === !0;
      }, r.prototype.makeElOption = function(e, t, n, a, i) {
      }, r.prototype.createPointerEl = function(e, t, n, a) {
        var i = t.pointer;
        if (i) {
          var o = co(e).pointerEl = new Ol[i.type](BI(t.pointer));
          e.add(o);
        }
      }, r.prototype.createLabelEl = function(e, t, n, a) {
        if (t.label) {
          var i = co(e).labelEl = new kt(BI(t.label));
          e.add(i), FI(i, a);
        }
      }, r.prototype.updatePointerEl = function(e, t, n) {
        var a = co(e).pointerEl;
        a && t.pointer && (a.setStyle(t.pointer.style), n(a, {
          shape: t.pointer.shape
        }));
      }, r.prototype.updateLabelEl = function(e, t, n, a) {
        var i = co(e).labelEl;
        i && (i.setStyle(t.label.style), n(i, {
          // Consider text length change in vertical axis, animation should
          // be used on shape, otherwise the effect will be weird.
          // TODOTODO
          // shape: elOption.label.shape,
          x: t.label.x,
          y: t.label.y
        }), FI(i, a));
      }, r.prototype._renderHandle = function(e) {
        if (!(this._dragging || !this.updateHandleTransform)) {
          var t = this._axisPointerModel, n = this._api.getZr(), a = this._handle, i = t.getModel("handle"), o = t.get("status");
          if (!i.get("show") || !o || o === "hide") {
            a && n.remove(a), this._handle = null;
            return;
          }
          var s;
          this._handle || (s = !0, a = this._handle = $o(i.get("icon"), {
            cursor: "move",
            draggable: !0,
            onmousemove: function(u) {
              Yn(u.event);
            },
            onmousedown: s0(this._onHandleDragMove, this, 0, 0),
            drift: s0(this._onHandleDragMove, this),
            ondragend: s0(this._onHandleDragEnd, this)
          }), n.add(a)), HI(a, t, !1), a.setStyle(i.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
          var l = i.get("size");
          U(l) || (l = [l, l]), a.scaleX = l[0] / 2, a.scaleY = l[1] / 2, as(this, "_doDispatchAxisPointer", i.get("throttle") || 0, "fixRate"), this._moveHandleToValue(e, s);
        }
      }, r.prototype._moveHandleToValue = function(e, t) {
        zI(this._axisPointerModel, !t && this._moveAnimation, this._handle, u0(this.getHandleTransform(e, this._axisModel, this._axisPointerModel)));
      }, r.prototype._onHandleDragMove = function(e, t) {
        var n = this._handle;
        if (n) {
          this._dragging = !0;
          var a = this.updateHandleTransform(u0(n), [e, t], this._axisModel, this._axisPointerModel);
          this._payloadInfo = a, n.stopAnimation(), n.attr(u0(a)), co(n).lastProp = null, this._doDispatchAxisPointer();
        }
      }, r.prototype._doDispatchAxisPointer = function() {
        var e = this._handle;
        if (e) {
          var t = this._payloadInfo, n = this._axisModel;
          this._api.dispatchAction({
            type: "updateAxisPointer",
            x: t.cursorPoint[0],
            y: t.cursorPoint[1],
            tooltipOption: t.tooltipOption,
            axesInfo: [{
              axisDim: n.axis.dim,
              axisIndex: n.componentIndex
            }]
          });
        }
      }, r.prototype._onHandleDragEnd = function() {
        this._dragging = !1;
        var e = this._handle;
        if (e) {
          var t = this._axisPointerModel.get("value");
          this._moveHandleToValue(t), this._api.dispatchAction({
            type: "hideTip"
          });
        }
      }, r.prototype.clear = function(e) {
        this._lastValue = null, this._lastStatus = null;
        var t = e.getZr(), n = this._group, a = this._handle;
        t && n && (this._lastGraphicKey = null, n && t.remove(n), a && t.remove(a), this._group = null, this._handle = null, this._payloadInfo = null), ql(this, "_doDispatchAxisPointer");
      }, r.prototype.doClear = function() {
      }, r.prototype.buildLabel = function(e, t, n) {
        return n = n || 0, {
          x: e[n],
          y: e[1 - n],
          width: t[n],
          height: t[1 - n]
        };
      }, r;
    }()
  );
  function zI(r, e, t, n) {
    GI(co(t).lastProp, n) || (co(t).lastProp = n, e ? Vt(t, n, r) : (t.stopAnimation(), t.attr(n)));
  }
  function GI(r, e) {
    if (it(r) && it(e)) {
      var t = !0;
      return M(e, function(n, a) {
        t = t && GI(r[a], n);
      }), !!t;
    } else
      return r === e;
  }
  function FI(r, e) {
    r[e.get(["label", "show"]) ? "show" : "hide"]();
  }
  function u0(r) {
    return {
      x: r.x || 0,
      y: r.y || 0,
      rotation: r.rotation || 0
    };
  }
  function HI(r, e, t) {
    var n = e.get("z"), a = e.get("zlevel");
    r && r.traverse(function(i) {
      i.type !== "group" && (n != null && (i.z = n), a != null && (i.zlevel = a), i.silent = t);
    });
  }
  function f0(r) {
    var e = r.get("type"), t = r.getModel(e + "Style"), n;
    return e === "line" ? (n = t.getLineStyle(), n.fill = null) : e === "shadow" && (n = t.getAreaStyle(), n.stroke = null), n;
  }
  function WI(r, e, t, n, a) {
    var i = t.get("value"), o = UI(i, e.axis, e.ecModel, t.get("seriesDataIndices"), {
      precision: t.get(["label", "precision"]),
      formatter: t.get(["label", "formatter"])
    }), s = t.getModel("label"), l = ki(s.get("padding") || 0), u = s.getFont(), f = cl(o, u), h = a.position, c = f.width + l[1] + l[3], v = f.height + l[0] + l[2], d = a.align;
    d === "right" && (h[0] -= c), d === "center" && (h[0] -= c / 2);
    var p = a.verticalAlign;
    p === "bottom" && (h[1] -= v), p === "middle" && (h[1] -= v / 2), uY(h, c, v, n);
    var g = s.get("backgroundColor");
    (!g || g === "auto") && (g = e.get(["axisLine", "lineStyle", "color"])), r.label = {
      // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},
      x: h[0],
      y: h[1],
      style: jt(s, {
        text: o,
        font: u,
        fill: s.getTextColor(),
        padding: l,
        backgroundColor: g
      }),
      // Lable should be over axisPointer.
      z2: 10
    };
  }
  function uY(r, e, t, n) {
    var a = n.getWidth(), i = n.getHeight();
    r[0] = Math.min(r[0] + e, a) - e, r[1] = Math.min(r[1] + t, i) - t, r[0] = Math.max(r[0], 0), r[1] = Math.max(r[1], 0);
  }
  function UI(r, e, t, n, a) {
    r = e.scale.parse(r);
    var i = e.scale.getLabel({
      value: r
    }, {
      // If `precision` is set, width can be fixed (like '12.00500'), which
      // helps to debounce when when moving label.
      precision: a.precision
    }), o = a.formatter;
    if (o) {
      var s = {
        value: jg(e, {
          value: r
        }),
        axisDimension: e.dim,
        axisIndex: e.index,
        seriesData: []
      };
      M(n, function(l) {
        var u = t.getSeriesByIndex(l.seriesIndex), f = l.dataIndexInside, h = u && u.getDataParams(f);
        h && s.seriesData.push(h);
      }), j(o) ? i = o.replace("{value}", i) : rt(o) && (i = o(s));
    }
    return i;
  }
  function h0(r, e, t) {
    var n = dr();
    return ga(n, n, t.rotation), jr(n, n, t.position), on([r.dataToCoord(e), (t.labelOffset || 0) + (t.labelDirection || 1) * (t.labelMargin || 0)], n);
  }
  function YI(r, e, t, n, a, i) {
    var o = er.innerTextLayout(t.rotation, 0, t.labelDirection);
    t.labelMargin = a.get(["label", "margin"]), WI(e, n, a, i, {
      position: h0(n.axis, r, t),
      align: o.textAlign,
      verticalAlign: o.textVerticalAlign
    });
  }
  function c0(r, e, t) {
    return t = t || 0, {
      x1: r[t],
      y1: r[1 - t],
      x2: e[t],
      y2: e[1 - t]
    };
  }
  function $I(r, e, t) {
    return t = t || 0, {
      x: r[t],
      y: r[1 - t],
      width: e[t],
      height: e[1 - t]
    };
  }
  function XI(r, e, t, n, a, i) {
    return {
      cx: r,
      cy: e,
      r0: t,
      r: n,
      startAngle: a,
      endAngle: i,
      clockwise: !0
    };
  }
  var fY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.makeElOption = function(t, n, a, i, o) {
        var s = a.axis, l = s.grid, u = i.get("type"), f = ZI(l, s).getOtherAxis(s).getGlobalExtent(), h = s.toGlobalCoord(s.dataToCoord(n, !0));
        if (u && u !== "none") {
          var c = f0(i), v = hY[u](s, h, f);
          v.style = c, t.graphicKey = v.type, t.pointer = v;
        }
        var d = Dy(l.model, a);
        YI(
          // @ts-ignore
          n,
          t,
          d,
          a,
          i,
          o
        );
      }, e.prototype.getHandleTransform = function(t, n, a) {
        var i = Dy(n.axis.grid.model, n, {
          labelInside: !1
        });
        i.labelMargin = a.get(["handle", "margin"]);
        var o = h0(n.axis, t, i);
        return {
          x: o[0],
          y: o[1],
          rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
        };
      }, e.prototype.updateHandleTransform = function(t, n, a, i) {
        var o = a.axis, s = o.grid, l = o.getGlobalExtent(!0), u = ZI(s, o).getOtherAxis(o).getGlobalExtent(), f = o.dim === "x" ? 0 : 1, h = [t.x, t.y];
        h[f] += n[f], h[f] = Math.min(l[1], h[f]), h[f] = Math.max(l[0], h[f]);
        var c = (u[1] + u[0]) / 2, v = [c, c];
        v[f] = h[f];
        var d = [{
          verticalAlign: "middle"
        }, {
          align: "center"
        }];
        return {
          x: h[0],
          y: h[1],
          rotation: t.rotation,
          cursorPoint: v,
          tooltipOption: d[f]
        };
      }, e;
    }(l0)
  );
  function ZI(r, e) {
    var t = {};
    return t[e.dim + "AxisIndex"] = e.index, r.getCartesian(t);
  }
  var hY = {
    line: function(r, e, t) {
      var n = c0([e, t[0]], [e, t[1]], qI(r));
      return {
        type: "Line",
        subPixelOptimize: !0,
        shape: n
      };
    },
    shadow: function(r, e, t) {
      var n = Math.max(1, r.getBandWidth()), a = t[1] - t[0];
      return {
        type: "Rect",
        shape: $I([e - n / 2, t[0]], [n, a], qI(r))
      };
    }
  };
  function qI(r) {
    return r.dim === "x" ? 0 : 1;
  }
  var cY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "axisPointer", e.defaultOption = {
        // 'auto' means that show when triggered by tooltip or handle.
        show: "auto",
        // zlevel: 0,
        z: 50,
        type: "line",
        // axispointer triggered by tootip determine snap automatically,
        // see `modelHelper`.
        snap: !1,
        triggerTooltip: !0,
        value: null,
        status: null,
        link: [],
        // Do not set 'auto' here, otherwise global animation: false
        // will not effect at this axispointer.
        animation: null,
        animationDurationUpdate: 200,
        lineStyle: {
          color: "#B9BEC9",
          width: 1,
          type: "dashed"
        },
        shadowStyle: {
          color: "rgba(210,219,238,0.2)"
        },
        label: {
          show: !0,
          formatter: null,
          precision: "auto",
          margin: 3,
          color: "#fff",
          padding: [5, 7, 5, 7],
          backgroundColor: "auto",
          borderColor: null,
          borderWidth: 0,
          borderRadius: 3
        },
        handle: {
          show: !1,
          // eslint-disable-next-line
          icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
          size: 45,
          // handle margin is from symbol center to axis, which is stable when circular move.
          margin: 50,
          // color: '#1b8bbd'
          // color: '#2f4554'
          color: "#333",
          shadowBlur: 3,
          shadowColor: "#aaa",
          shadowOffsetX: 0,
          shadowOffsetY: 2,
          // For mobile performance
          throttle: 40
        }
      }, e;
    }(Ct)
  ), la = Nt(), vY = M;
  function KI(r, e, t) {
    if (!z.node) {
      var n = e.getZr();
      la(n).records || (la(n).records = {}), dY(n, e);
      var a = la(n).records[r] || (la(n).records[r] = {});
      a.handler = t;
    }
  }
  function dY(r, e) {
    if (la(r).initialized)
      return;
    la(r).initialized = !0, t("click", yt(jI, "click")), t("mousemove", yt(jI, "mousemove")), t("globalout", gY);
    function t(n, a) {
      r.on(n, function(i) {
        var o = yY(e);
        vY(la(r).records, function(s) {
          s && a(s, i, o.dispatchAction);
        }), pY(o.pendings, e);
      });
    }
  }
  function pY(r, e) {
    var t = r.showTip.length, n = r.hideTip.length, a;
    t ? a = r.showTip[t - 1] : n && (a = r.hideTip[n - 1]), a && (a.dispatchAction = null, e.dispatchAction(a));
  }
  function gY(r, e, t) {
    r.handler("leave", null, t);
  }
  function jI(r, e, t, n) {
    e.handler(r, t, n);
  }
  function yY(r) {
    var e = {
      showTip: [],
      hideTip: []
    }, t = function(n) {
      var a = e[n.type];
      a ? a.push(n) : (n.dispatchAction = t, r.dispatchAction(n));
    };
    return {
      dispatchAction: t,
      pendings: e
    };
  }
  function v0(r, e) {
    if (!z.node) {
      var t = e.getZr(), n = (la(t).records || {})[r];
      n && (la(t).records[r] = null);
    }
  }
  var mY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = n.getComponent("tooltip"), o = t.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
        KI("axisPointer", a, function(s, l, u) {
          o !== "none" && (s === "leave" || o.indexOf(s) >= 0) && u({
            type: "updateAxisPointer",
            currTrigger: s,
            x: l && l.offsetX,
            y: l && l.offsetY
          });
        });
      }, e.prototype.remove = function(t, n) {
        v0("axisPointer", n);
      }, e.prototype.dispose = function(t, n) {
        v0("axisPointer", n);
      }, e.type = "axisPointer", e;
    }(Jt)
  );
  function JI(r, e) {
    var t = [], n = r.seriesIndex, a;
    if (n == null || !(a = e.getSeriesByIndex(n)))
      return {
        point: []
      };
    var i = a.getData(), o = yi(i, r);
    if (o == null || o < 0 || U(o))
      return {
        point: []
      };
    var s = i.getItemGraphicEl(o), l = a.coordinateSystem;
    if (a.getTooltipPosition)
      t = a.getTooltipPosition(o) || [];
    else if (l && l.dataToPoint)
      if (r.isStacked) {
        var u = l.getBaseAxis(), f = l.getOtherAxis(u), h = f.dim, c = u.dim, v = h === "x" || h === "radius" ? 1 : 0, d = i.mapDimension(c), p = [];
        p[v] = i.get(d, o), p[1 - v] = i.get(i.getCalculationInfo("stackResultDimension"), o), t = l.dataToPoint(p) || [];
      } else
        t = l.dataToPoint(i.getValues(Y(l.dimensions, function(y) {
          return i.mapDimension(y);
        }), o)) || [];
    else if (s) {
      var g = s.getBoundingRect().clone();
      g.applyTransform(s.transform), t = [g.x + g.width / 2, g.y + g.height / 2];
    }
    return {
      point: t,
      el: s
    };
  }
  var QI = Nt();
  function _Y(r, e, t) {
    var n = r.currTrigger, a = [r.x, r.y], i = r, o = r.dispatchAction || J(t.dispatchAction, t), s = e.getComponent("axisPointer").coordSysAxesInfo;
    if (s) {
      $c(a) && (a = JI({
        seriesIndex: i.seriesIndex,
        // Do not use dataIndexInside from other ec instance.
        // FIXME: auto detect it?
        dataIndex: i.dataIndex
      }, e).point);
      var l = $c(a), u = i.axesInfo, f = s.axesInfo, h = n === "leave" || $c(a), c = {}, v = {}, d = {
        list: [],
        map: {}
      }, p = {
        showPointer: yt(xY, v),
        showTooltip: yt(wY, d)
      };
      M(s.coordSysMap, function(y, m) {
        var _ = l || y.containPoint(a);
        M(s.coordSysAxesInfo[m], function(S, b) {
          var w = S.axis, T = AY(u, S);
          if (!h && _ && (!u || T)) {
            var C = T && T.value;
            C == null && !l && (C = w.pointToData(a)), C != null && tL(S, C, p, !1, c);
          }
        });
      });
      var g = {};
      return M(f, function(y, m) {
        var _ = y.linkGroup;
        _ && !v[m] && M(_.axesInfo, function(S, b) {
          var w = v[b];
          if (S !== y && w) {
            var T = w.value;
            _.mapper && (T = y.axis.scale.parse(_.mapper(T, eL(S), eL(y)))), g[y.key] = T;
          }
        });
      }), M(g, function(y, m) {
        tL(f[m], y, p, !0, c);
      }), bY(v, f, c), TY(d, a, r, o), CY(f, o, t), c;
    }
  }
  function tL(r, e, t, n, a) {
    var i = r.axis;
    if (!(i.scale.isBlank() || !i.containData(e))) {
      if (!r.involveSeries) {
        t.showPointer(r, e);
        return;
      }
      var o = SY(e, r), s = o.payloadBatch, l = o.snapToValue;
      s[0] && a.seriesIndex == null && H(a, s[0]), !n && r.snap && i.containData(l) && l != null && (e = l), t.showPointer(r, e, s), t.showTooltip(r, o, l);
    }
  }
  function SY(r, e) {
    var t = e.axis, n = t.dim, a = r, i = [], o = Number.MAX_VALUE, s = -1;
    return M(e.seriesModels, function(l, u) {
      var f = l.getData().mapDimensionsAll(n), h, c;
      if (l.getAxisTooltipData) {
        var v = l.getAxisTooltipData(f, r, t);
        c = v.dataIndices, h = v.nestestValue;
      } else {
        if (c = l.getData().indicesOfNearest(
          f[0],
          r,
          // Add a threshold to avoid find the wrong dataIndex
          // when data length is not same.
          // false,
          t.type === "category" ? 0.5 : null
        ), !c.length)
          return;
        h = l.getData().get(f[0], c[0]);
      }
      if (!(h == null || !isFinite(h))) {
        var d = r - h, p = Math.abs(d);
        p <= o && ((p < o || d >= 0 && s < 0) && (o = p, s = d, a = h, i.length = 0), M(c, function(g) {
          i.push({
            seriesIndex: l.seriesIndex,
            dataIndexInside: g,
            dataIndex: l.getData().getRawIndex(g)
          });
        }));
      }
    }), {
      payloadBatch: i,
      snapToValue: a
    };
  }
  function xY(r, e, t, n) {
    r[e.key] = {
      value: t,
      payloadBatch: n
    };
  }
  function wY(r, e, t, n) {
    var a = t.payloadBatch, i = e.axis, o = i.model, s = e.axisPointerModel;
    if (!(!e.triggerTooltip || !a.length)) {
      var l = e.coordSys.model, u = wu(l), f = r.map[u];
      f || (f = r.map[u] = {
        coordSysId: l.id,
        coordSysIndex: l.componentIndex,
        coordSysType: l.type,
        coordSysMainType: l.mainType,
        dataByAxis: []
      }, r.list.push(f)), f.dataByAxis.push({
        axisDim: i.dim,
        axisIndex: o.componentIndex,
        axisType: o.type,
        axisId: o.id,
        value: n,
        // Caustion: viewHelper.getValueLabel is actually on "view stage", which
        // depends that all models have been updated. So it should not be performed
        // here. Considering axisPointerModel used here is volatile, which is hard
        // to be retrieve in TooltipView, we prepare parameters here.
        valueLabelOpt: {
          precision: s.get(["label", "precision"]),
          formatter: s.get(["label", "formatter"])
        },
        seriesDataIndices: a.slice()
      });
    }
  }
  function bY(r, e, t) {
    var n = t.axesInfo = [];
    M(e, function(a, i) {
      var o = a.axisPointerModel.option, s = r[i];
      s ? (!a.useHandle && (o.status = "show"), o.value = s.value, o.seriesDataIndices = (s.payloadBatch || []).slice()) : !a.useHandle && (o.status = "hide"), o.status === "show" && n.push({
        axisDim: a.axis.dim,
        axisIndex: a.axis.model.componentIndex,
        value: o.value
      });
    });
  }
  function TY(r, e, t, n) {
    if ($c(e) || !r.list.length) {
      n({
        type: "hideTip"
      });
      return;
    }
    var a = ((r.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
    n({
      type: "showTip",
      escapeConnect: !0,
      x: e[0],
      y: e[1],
      tooltipOption: t.tooltipOption,
      position: t.position,
      dataIndexInside: a.dataIndexInside,
      dataIndex: a.dataIndex,
      seriesIndex: a.seriesIndex,
      dataByCoordSys: r.list
    });
  }
  function CY(r, e, t) {
    var n = t.getZr(), a = "axisPointerLastHighlights", i = QI(n)[a] || {}, o = QI(n)[a] = {};
    M(r, function(u, f) {
      var h = u.axisPointerModel.option;
      h.status === "show" && M(h.seriesDataIndices, function(c) {
        var v = c.seriesIndex + " | " + c.dataIndex;
        o[v] = c;
      });
    });
    var s = [], l = [];
    M(i, function(u, f) {
      !o[f] && l.push(u);
    }), M(o, function(u, f) {
      !i[f] && s.push(u);
    }), l.length && t.dispatchAction({
      type: "downplay",
      escapeConnect: !0,
      // Not blur others when highlight in axisPointer.
      notBlur: !0,
      batch: l
    }), s.length && t.dispatchAction({
      type: "highlight",
      escapeConnect: !0,
      // Not blur others when highlight in axisPointer.
      notBlur: !0,
      batch: s
    });
  }
  function AY(r, e) {
    for (var t = 0; t < (r || []).length; t++) {
      var n = r[t];
      if (e.axis.dim === n.axisDim && e.axis.model.componentIndex === n.axisIndex)
        return n;
    }
  }
  function eL(r) {
    var e = r.axis.model, t = {}, n = t.axisDim = r.axis.dim;
    return t.axisIndex = t[n + "AxisIndex"] = e.componentIndex, t.axisName = t[n + "AxisName"] = e.name, t.axisId = t[n + "AxisId"] = e.id, t;
  }
  function $c(r) {
    return !r || r[0] == null || isNaN(r[0]) || r[1] == null || isNaN(r[1]);
  }
  function Gu(r) {
    ro.registerAxisPointerClass("CartesianAxisPointer", fY), r.registerComponentModel(cY), r.registerComponentView(mY), r.registerPreprocessor(function(e) {
      if (e) {
        (!e.axisPointer || e.axisPointer.length === 0) && (e.axisPointer = {});
        var t = e.axisPointer.link;
        t && !U(t) && (e.axisPointer.link = [t]);
      }
    }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, function(e, t) {
      e.getComponent("axisPointer").coordSysAxesInfo = VF(e, t);
    }), r.registerAction({
      type: "updateAxisPointer",
      event: "updateAxisPointer",
      update: ":updateAxisPointer"
    }, _Y);
  }
  function DY(r) {
    At(EA), At(Gu);
  }
  var MY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.makeElOption = function(t, n, a, i, o) {
        var s = a.axis;
        s.dim === "angle" && (this.animationThreshold = Math.PI / 18);
        var l = s.polar, u = l.getOtherAxis(s), f = u.getExtent(), h = s.dataToCoord(n), c = i.get("type");
        if (c && c !== "none") {
          var v = f0(i), d = LY[c](s, l, h, f);
          d.style = v, t.graphicKey = d.type, t.pointer = d;
        }
        var p = i.get(["label", "margin"]), g = IY(n, a, i, l, p);
        WI(t, a, i, o, g);
      }, e;
    }(l0)
  );
  function IY(r, e, t, n, a) {
    var i = e.axis, o = i.dataToCoord(r), s = n.getAngleAxis().getExtent()[0];
    s = s / 180 * Math.PI;
    var l = n.getRadiusAxis().getExtent(), u, f, h;
    if (i.dim === "radius") {
      var c = dr();
      ga(c, c, s), jr(c, c, [n.cx, n.cy]), u = on([o, -a], c);
      var v = e.getModel("axisLabel").get("rotate") || 0, d = er.innerTextLayout(s, v * Math.PI / 180, -1);
      f = d.textAlign, h = d.textVerticalAlign;
    } else {
      var p = l[1];
      u = n.coordToPoint([p + a, o]);
      var g = n.cx, y = n.cy;
      f = Math.abs(u[0] - g) / p < 0.3 ? "center" : u[0] > g ? "left" : "right", h = Math.abs(u[1] - y) / p < 0.3 ? "middle" : u[1] > y ? "top" : "bottom";
    }
    return {
      position: u,
      align: f,
      verticalAlign: h
    };
  }
  var LY = {
    line: function(r, e, t, n) {
      return r.dim === "angle" ? {
        type: "Line",
        shape: c0(e.coordToPoint([n[0], t]), e.coordToPoint([n[1], t]))
      } : {
        type: "Circle",
        shape: {
          cx: e.cx,
          cy: e.cy,
          r: t
        }
      };
    },
    shadow: function(r, e, t, n) {
      var a = Math.max(1, r.getBandWidth()), i = Math.PI / 180;
      return r.dim === "angle" ? {
        type: "Sector",
        shape: XI(
          e.cx,
          e.cy,
          n[0],
          n[1],
          // In ECharts y is negative if angle is positive
          (-t - a / 2) * i,
          (-t + a / 2) * i
        )
      } : {
        type: "Sector",
        shape: XI(e.cx, e.cy, t - a / 2, t + a / 2, 0, Math.PI * 2)
      };
    }
  }, PY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.findAxisModel = function(t) {
        var n, a = this.ecModel;
        return a.eachComponent(t, function(i) {
          i.getCoordSysModel() === this && (n = i);
        }, this), n;
      }, e.type = "polar", e.dependencies = ["radiusAxis", "angleAxis"], e.defaultOption = {
        // zlevel: 0,
        z: 0,
        center: ["50%", "50%"],
        radius: "80%"
      }, e;
    }(Ct)
  ), d0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.getCoordSysModel = function() {
        return this.getReferringComponents("polar", ge).models[0];
      }, e.type = "polarAxis", e;
    }(Ct)
  );
  le(d0, vs);
  var EY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "angleAxis", e;
    }(d0)
  ), RY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "radiusAxis", e;
    }(d0)
  ), p0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n) {
        return r.call(this, "radius", t, n) || this;
      }
      return e.prototype.pointToData = function(t, n) {
        return this.polar.pointToData(t, n)[this.dim === "radius" ? 0 : 1];
      }, e;
    }(Ur)
  );
  p0.prototype.dataToRadius = Ur.prototype.dataToCoord, p0.prototype.radiusToData = Ur.prototype.coordToData;
  var kY = Nt(), g0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n) {
        return r.call(this, "angle", t, n || [0, 360]) || this;
      }
      return e.prototype.pointToData = function(t, n) {
        return this.polar.pointToData(t, n)[this.dim === "radius" ? 0 : 1];
      }, e.prototype.calculateCategoryInterval = function() {
        var t = this, n = t.getLabelModel(), a = t.scale, i = a.getExtent(), o = a.count();
        if (i[1] - i[0] < 1)
          return 0;
        var s = i[0], l = t.dataToCoord(s + 1) - t.dataToCoord(s), u = Math.abs(l), f = cl(s == null ? "" : s + "", n.getFont(), "center", "top"), h = Math.max(f.height, 7), c = h / u;
        isNaN(c) && (c = 1 / 0);
        var v = Math.max(0, Math.floor(c)), d = kY(t.model), p = d.lastAutoInterval, g = d.lastTickCount;
        return p != null && g != null && Math.abs(p - v) <= 1 && Math.abs(g - o) <= 1 && p > v ? v = p : (d.lastTickCount = o, d.lastAutoInterval = v), v;
      }, e;
    }(Ur)
  );
  g0.prototype.dataToAngle = Ur.prototype.dataToCoord, g0.prototype.angleToData = Ur.prototype.coordToData;
  var rL = ["radius", "angle"], OY = (
    /** @class */
    function() {
      function r(e) {
        this.dimensions = rL, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new p0(), this._angleAxis = new g0(), this.axisPointerEnabled = !0, this.name = e || "", this._radiusAxis.polar = this._angleAxis.polar = this;
      }
      return r.prototype.containPoint = function(e) {
        var t = this.pointToCoord(e);
        return this._radiusAxis.contain(t[0]) && this._angleAxis.contain(t[1]);
      }, r.prototype.containData = function(e) {
        return this._radiusAxis.containData(e[0]) && this._angleAxis.containData(e[1]);
      }, r.prototype.getAxis = function(e) {
        var t = "_" + e + "Axis";
        return this[t];
      }, r.prototype.getAxes = function() {
        return [this._radiusAxis, this._angleAxis];
      }, r.prototype.getAxesByScale = function(e) {
        var t = [], n = this._angleAxis, a = this._radiusAxis;
        return n.scale.type === e && t.push(n), a.scale.type === e && t.push(a), t;
      }, r.prototype.getAngleAxis = function() {
        return this._angleAxis;
      }, r.prototype.getRadiusAxis = function() {
        return this._radiusAxis;
      }, r.prototype.getOtherAxis = function(e) {
        var t = this._angleAxis;
        return e === t ? this._radiusAxis : t;
      }, r.prototype.getBaseAxis = function() {
        return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
      }, r.prototype.getTooltipAxes = function(e) {
        var t = e != null && e !== "auto" ? this.getAxis(e) : this.getBaseAxis();
        return {
          baseAxes: [t],
          otherAxes: [this.getOtherAxis(t)]
        };
      }, r.prototype.dataToPoint = function(e, t) {
        return this.coordToPoint([this._radiusAxis.dataToRadius(e[0], t), this._angleAxis.dataToAngle(e[1], t)]);
      }, r.prototype.pointToData = function(e, t) {
        var n = this.pointToCoord(e);
        return [this._radiusAxis.radiusToData(n[0], t), this._angleAxis.angleToData(n[1], t)];
      }, r.prototype.pointToCoord = function(e) {
        var t = e[0] - this.cx, n = e[1] - this.cy, a = this.getAngleAxis(), i = a.getExtent(), o = Math.min(i[0], i[1]), s = Math.max(i[0], i[1]);
        a.inverse ? o = s - 360 : s = o + 360;
        var l = Math.sqrt(t * t + n * n);
        t /= l, n /= l;
        for (var u = Math.atan2(-n, t) / Math.PI * 180, f = u < o ? 1 : -1; u < o || u > s; )
          u += f * 360;
        return [l, u];
      }, r.prototype.coordToPoint = function(e) {
        var t = e[0], n = e[1] / 180 * Math.PI, a = Math.cos(n) * t + this.cx, i = -Math.sin(n) * t + this.cy;
        return [a, i];
      }, r.prototype.getArea = function() {
        var e = this.getAngleAxis(), t = this.getRadiusAxis(), n = t.getExtent().slice();
        n[0] > n[1] && n.reverse();
        var a = e.getExtent(), i = Math.PI / 180;
        return {
          cx: this.cx,
          cy: this.cy,
          r0: n[0],
          r: n[1],
          startAngle: -a[0] * i,
          endAngle: -a[1] * i,
          clockwise: e.inverse,
          contain: function(o, s) {
            var l = o - this.cx, u = s - this.cy, f = l * l + u * u - 1e-4, h = this.r, c = this.r0;
            return f <= h * h && f >= c * c;
          }
        };
      }, r.prototype.convertToPixel = function(e, t, n) {
        var a = nL(t);
        return a === this ? this.dataToPoint(n) : null;
      }, r.prototype.convertFromPixel = function(e, t, n) {
        var a = nL(t);
        return a === this ? this.pointToData(n) : null;
      }, r;
    }()
  );
  function nL(r) {
    var e = r.seriesModel, t = r.polarModel;
    return t && t.coordinateSystem || e && e.coordinateSystem;
  }
  function NY(r, e, t) {
    var n = e.get("center"), a = t.getWidth(), i = t.getHeight();
    r.cx = Z(n[0], a), r.cy = Z(n[1], i);
    var o = r.getRadiusAxis(), s = Math.min(a, i) / 2, l = e.get("radius");
    l == null ? l = [0, "100%"] : U(l) || (l = [0, l]);
    var u = [Z(l[0], s), Z(l[1], s)];
    o.inverse ? o.setExtent(u[1], u[0]) : o.setExtent(u[0], u[1]);
  }
  function VY(r, e) {
    var t = this, n = t.getAngleAxis(), a = t.getRadiusAxis();
    if (n.scale.setExtent(1 / 0, -1 / 0), a.scale.setExtent(1 / 0, -1 / 0), r.eachSeries(function(s) {
      if (s.coordinateSystem === t) {
        var l = s.getData();
        M(ic(l, "radius"), function(u) {
          a.scale.unionExtentFromData(l, u);
        }), M(ic(l, "angle"), function(u) {
          n.scale.unionExtentFromData(l, u);
        });
      }
    }), Xi(n.scale, n.model), Xi(a.scale, a.model), n.type === "category" && !n.onBand) {
      var i = n.getExtent(), o = 360 / n.scale.count();
      n.inverse ? i[1] += o : i[1] -= o, n.setExtent(i[0], i[1]);
    }
  }
  function BY(r) {
    return r.mainType === "angleAxis";
  }
  function aL(r, e) {
    if (r.type = e.get("type"), r.scale = lu(e), r.onBand = e.get("boundaryGap") && r.type === "category", r.inverse = e.get("inverse"), BY(e)) {
      r.inverse = r.inverse !== e.get("clockwise");
      var t = e.get("startAngle");
      r.setExtent(t, t + (r.inverse ? -360 : 360));
    }
    e.axis = r, r.model = e;
  }
  var zY = {
    dimensions: rL,
    create: function(r, e) {
      var t = [];
      return r.eachComponent("polar", function(n, a) {
        var i = new OY(a + "");
        i.update = VY;
        var o = i.getRadiusAxis(), s = i.getAngleAxis(), l = n.findAxisModel("radiusAxis"), u = n.findAxisModel("angleAxis");
        aL(o, l), aL(s, u), NY(i, n, e), t.push(i), n.coordinateSystem = i, i.model = n;
      }), r.eachSeries(function(n) {
        if (n.get("coordinateSystem") === "polar") {
          var a = n.getReferringComponents("polar", ge).models[0];
          if (!a)
            throw new Error('Polar "' + he(n.get("polarIndex"), n.get("polarId"), 0) + '" not found');
          n.coordinateSystem = a.coordinateSystem;
        }
      }), t;
    }
  }, GY = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
  function Xc(r, e, t) {
    e[1] > e[0] && (e = e.slice().reverse());
    var n = r.coordToPoint([e[0], t]), a = r.coordToPoint([e[1], t]);
    return {
      x1: n[0],
      y1: n[1],
      x2: a[0],
      y2: a[1]
    };
  }
  function Zc(r) {
    var e = r.getRadiusAxis();
    return e.inverse ? 0 : 1;
  }
  function iL(r) {
    var e = r[0], t = r[r.length - 1];
    e && t && Math.abs(Math.abs(e.coord - t.coord) - 360) < 1e-4 && r.pop();
  }
  var FY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
      }
      return e.prototype.render = function(t, n) {
        if (this.group.removeAll(), !!t.get("show")) {
          var a = t.axis, i = a.polar, o = i.getRadiusAxis().getExtent(), s = a.getTicksCoords(), l = a.getMinorTicksCoords(), u = Y(a.getViewLabels(), function(f) {
            f = ht(f);
            var h = a.scale, c = h.type === "ordinal" ? h.getRawOrdinalNumber(f.tickValue) : f.tickValue;
            return f.coord = a.dataToCoord(c), f;
          });
          iL(u), iL(s), M(GY, function(f) {
            t.get([f, "show"]) && (!a.scale.isBlank() || f === "axisLine") && HY[f](this.group, t, i, s, l, o, u);
          }, this);
        }
      }, e.type = "angleAxis", e;
    }(ro)
  ), HY = {
    axisLine: function(r, e, t, n, a, i) {
      var o = e.getModel(["axisLine", "lineStyle"]), s = Zc(t), l = s ? 0 : 1, u;
      i[l] === 0 ? u = new Nr({
        shape: {
          cx: t.cx,
          cy: t.cy,
          r: i[s]
        },
        style: o.getLineStyle(),
        z2: 1,
        silent: !0
      }) : u = new Go({
        shape: {
          cx: t.cx,
          cy: t.cy,
          r: i[s],
          r0: i[l]
        },
        style: o.getLineStyle(),
        z2: 1,
        silent: !0
      }), u.style.fill = null, r.add(u);
    },
    axisTick: function(r, e, t, n, a, i) {
      var o = e.getModel("axisTick"), s = (o.get("inside") ? -1 : 1) * o.get("length"), l = i[Zc(t)], u = Y(n, function(f) {
        return new Se({
          shape: Xc(t, [l, l + s], f.coord)
        });
      });
      r.add(_r(u, {
        style: ot(o.getModel("lineStyle").getLineStyle(), {
          stroke: e.get(["axisLine", "lineStyle", "color"])
        })
      }));
    },
    minorTick: function(r, e, t, n, a, i) {
      if (a.length) {
        for (var o = e.getModel("axisTick"), s = e.getModel("minorTick"), l = (o.get("inside") ? -1 : 1) * s.get("length"), u = i[Zc(t)], f = [], h = 0; h < a.length; h++)
          for (var c = 0; c < a[h].length; c++)
            f.push(new Se({
              shape: Xc(t, [u, u + l], a[h][c].coord)
            }));
        r.add(_r(f, {
          style: ot(s.getModel("lineStyle").getLineStyle(), ot(o.getLineStyle(), {
            stroke: e.get(["axisLine", "lineStyle", "color"])
          }))
        }));
      }
    },
    axisLabel: function(r, e, t, n, a, i, o) {
      var s = e.getCategories(!0), l = e.getModel("axisLabel"), u = l.get("margin"), f = e.get("triggerEvent");
      M(o, function(h, c) {
        var v = l, d = h.tickValue, p = i[Zc(t)], g = t.coordToPoint([p + u, h.coord]), y = t.cx, m = t.cy, _ = Math.abs(g[0] - y) / p < 0.3 ? "center" : g[0] > y ? "left" : "right", S = Math.abs(g[1] - m) / p < 0.3 ? "middle" : g[1] > m ? "top" : "bottom";
        if (s && s[d]) {
          var b = s[d];
          it(b) && b.textStyle && (v = new Gt(b.textStyle, l, l.ecModel));
        }
        var w = new kt({
          silent: er.isLabelSilent(e),
          style: jt(v, {
            x: g[0],
            y: g[1],
            fill: v.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
            text: h.formattedLabel,
            align: _,
            verticalAlign: S
          })
        });
        if (r.add(w), f) {
          var T = er.makeAxisEventDataBase(e);
          T.targetType = "axisLabel", T.value = h.rawLabel, gt(w).eventData = T;
        }
      }, this);
    },
    splitLine: function(r, e, t, n, a, i) {
      var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var f = [], h = 0; h < n.length; h++) {
        var c = u++ % l.length;
        f[c] = f[c] || [], f[c].push(new Se({
          shape: Xc(t, i, n[h].coord)
        }));
      }
      for (var h = 0; h < f.length; h++)
        r.add(_r(f[h], {
          style: ot({
            stroke: l[h % l.length]
          }, s.getLineStyle()),
          silent: !0,
          z: e.get("z")
        }));
    },
    minorSplitLine: function(r, e, t, n, a, i) {
      if (a.length) {
        for (var o = e.getModel("minorSplitLine"), s = o.getModel("lineStyle"), l = [], u = 0; u < a.length; u++)
          for (var f = 0; f < a[u].length; f++)
            l.push(new Se({
              shape: Xc(t, i, a[u][f].coord)
            }));
        r.add(_r(l, {
          style: s.getLineStyle(),
          silent: !0,
          z: e.get("z")
        }));
      }
    },
    splitArea: function(r, e, t, n, a, i) {
      if (n.length) {
        var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
        l = l instanceof Array ? l : [l];
        for (var f = [], h = Math.PI / 180, c = -n[0].coord * h, v = Math.min(i[0], i[1]), d = Math.max(i[0], i[1]), p = e.get("clockwise"), g = 1, y = n.length; g <= y; g++) {
          var m = g === y ? n[0].coord : n[g].coord, _ = u++ % l.length;
          f[_] = f[_] || [], f[_].push(new Be({
            shape: {
              cx: t.cx,
              cy: t.cy,
              r0: v,
              r: d,
              startAngle: c,
              endAngle: -m * h,
              clockwise: p
            },
            silent: !0
          })), c = -m * h;
        }
        for (var g = 0; g < f.length; g++)
          r.add(_r(f[g], {
            style: ot({
              fill: l[g % l.length]
            }, s.getAreaStyle()),
            silent: !0
          }));
      }
    }
  }, WY = ["axisLine", "axisTickLabel", "axisName"], UY = ["splitLine", "splitArea", "minorSplitLine"], YY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
      }
      return e.prototype.render = function(t, n) {
        if (this.group.removeAll(), !!t.get("show")) {
          var a = this._axisGroup, i = this._axisGroup = new ct();
          this.group.add(i);
          var o = t.axis, s = o.polar, l = s.getAngleAxis(), u = o.getTicksCoords(), f = o.getMinorTicksCoords(), h = l.getExtent()[0], c = o.getExtent(), v = XY(s, t, h), d = new er(t, v);
          M(WY, d.add, d), i.add(d.getGroup()), Rl(a, i, t), M(UY, function(p) {
            t.get([p, "show"]) && !o.scale.isBlank() && $Y[p](this.group, t, s, h, c, u, f);
          }, this);
        }
      }, e.type = "radiusAxis", e;
    }(ro)
  ), $Y = {
    splitLine: function(r, e, t, n, a, i) {
      var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var f = [], h = 0; h < i.length; h++) {
        var c = u++ % l.length;
        f[c] = f[c] || [], f[c].push(new Nr({
          shape: {
            cx: t.cx,
            cy: t.cy,
            // ensure circle radius >= 0
            r: Math.max(i[h].coord, 0)
          }
        }));
      }
      for (var h = 0; h < f.length; h++)
        r.add(_r(f[h], {
          style: ot({
            stroke: l[h % l.length],
            fill: null
          }, s.getLineStyle()),
          silent: !0
        }));
    },
    minorSplitLine: function(r, e, t, n, a, i, o) {
      if (o.length) {
        for (var s = e.getModel("minorSplitLine"), l = s.getModel("lineStyle"), u = [], f = 0; f < o.length; f++)
          for (var h = 0; h < o[f].length; h++)
            u.push(new Nr({
              shape: {
                cx: t.cx,
                cy: t.cy,
                r: o[f][h].coord
              }
            }));
        r.add(_r(u, {
          style: ot({
            fill: null
          }, l.getLineStyle()),
          silent: !0
        }));
      }
    },
    splitArea: function(r, e, t, n, a, i) {
      if (i.length) {
        var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
        l = l instanceof Array ? l : [l];
        for (var f = [], h = i[0].coord, c = 1; c < i.length; c++) {
          var v = u++ % l.length;
          f[v] = f[v] || [], f[v].push(new Be({
            shape: {
              cx: t.cx,
              cy: t.cy,
              r0: h,
              r: i[c].coord,
              startAngle: 0,
              endAngle: Math.PI * 2
            },
            silent: !0
          })), h = i[c].coord;
        }
        for (var c = 0; c < f.length; c++)
          r.add(_r(f[c], {
            style: ot({
              fill: l[c % l.length]
            }, s.getAreaStyle()),
            silent: !0
          }));
      }
    }
  };
  function XY(r, e, t) {
    return {
      position: [r.cx, r.cy],
      rotation: t / 180 * Math.PI,
      labelDirection: -1,
      tickDirection: -1,
      nameDirection: 1,
      labelRotate: e.getModel("axisLabel").get("rotate"),
      // Over splitLine and splitArea
      z2: 1
    };
  }
  function oL(r) {
    return r.get("stack") || "__ec_stack_" + r.seriesIndex;
  }
  function sL(r, e) {
    return e.dim + r.model.componentIndex;
  }
  function ZY(r, e, t) {
    var n = {}, a = qY(Ht(e.getSeriesByType(r), function(i) {
      return !e.isSeriesFiltered(i) && i.coordinateSystem && i.coordinateSystem.type === "polar";
    }));
    e.eachSeriesByType(r, function(i) {
      if (i.coordinateSystem.type === "polar") {
        var o = i.getData(), s = i.coordinateSystem, l = s.getBaseAxis(), u = sL(s, l), f = oL(i), h = a[u][f], c = h.offset, v = h.width, d = s.getOtherAxis(l), p = i.coordinateSystem.cx, g = i.coordinateSystem.cy, y = i.get("barMinHeight") || 0, m = i.get("barMinAngle") || 0;
        n[f] = n[f] || [];
        for (var _ = o.mapDimension(d.dim), S = o.mapDimension(l.dim), b = ra(
          o,
          _
          /* , baseDim */
        ), w = l.dim !== "radius" || !i.get("roundCap", !0), T = d.dataToCoord(0), C = 0, I = o.count(); C < I; C++) {
          var L = o.get(_, C), P = o.get(S, C), E = L >= 0 ? "p" : "n", R = T;
          b && (n[f][P] || (n[f][P] = {
            p: T,
            n: T
            // Negative stack
          }), R = n[f][P][E]);
          var k = void 0, O = void 0, N = void 0, F = void 0;
          if (d.dim === "radius") {
            var G = d.dataToCoord(L) - T, W = l.dataToCoord(P);
            Math.abs(G) < y && (G = (G < 0 ? -1 : 1) * y), k = R, O = R + G, N = W - c, F = N - v, b && (n[f][P][E] = O);
          } else {
            var X = d.dataToCoord(L, w) - T, K = l.dataToCoord(P);
            Math.abs(X) < m && (X = (X < 0 ? -1 : 1) * m), k = K + c, O = k + v, N = R, F = R + X, b && (n[f][P][E] = F);
          }
          o.setItemLayout(C, {
            cx: p,
            cy: g,
            r0: k,
            r: O,
            // Consider that positive angle is anti-clockwise,
            // while positive radian of sector is clockwise
            startAngle: -N * Math.PI / 180,
            endAngle: -F * Math.PI / 180,
            /**
             * Keep the same logic with bar in catesion: use end value to
             * control direction. Notice that if clockwise is true (by
             * default), the sector will always draw clockwisely, no matter
             * whether endAngle is greater or less than startAngle.
             */
            clockwise: N >= F
          });
        }
      }
    });
  }
  function qY(r) {
    var e = {};
    M(r, function(n, a) {
      var i = n.getData(), o = n.coordinateSystem, s = o.getBaseAxis(), l = sL(o, s), u = s.getExtent(), f = s.type === "category" ? s.getBandWidth() : Math.abs(u[1] - u[0]) / i.count(), h = e[l] || {
        bandWidth: f,
        remainedWidth: f,
        autoWidthCount: 0,
        categoryGap: "20%",
        gap: "30%",
        stacks: {}
      }, c = h.stacks;
      e[l] = h;
      var v = oL(n);
      c[v] || h.autoWidthCount++, c[v] = c[v] || {
        width: 0,
        maxWidth: 0
      };
      var d = Z(n.get("barWidth"), f), p = Z(n.get("barMaxWidth"), f), g = n.get("barGap"), y = n.get("barCategoryGap");
      d && !c[v].width && (d = Math.min(h.remainedWidth, d), c[v].width = d, h.remainedWidth -= d), p && (c[v].maxWidth = p), g != null && (h.gap = g), y != null && (h.categoryGap = y);
    });
    var t = {};
    return M(e, function(n, a) {
      t[a] = {};
      var i = n.stacks, o = n.bandWidth, s = Z(n.categoryGap, o), l = Z(n.gap, 1), u = n.remainedWidth, f = n.autoWidthCount, h = (u - s) / (f + (f - 1) * l);
      h = Math.max(h, 0), M(i, function(p, g) {
        var y = p.maxWidth;
        y && y < h && (y = Math.min(y, u), p.width && (y = Math.min(y, p.width)), u -= y, p.width = y, f--);
      }), h = (u - s) / (f + (f - 1) * l), h = Math.max(h, 0);
      var c = 0, v;
      M(i, function(p, g) {
        p.width || (p.width = h), v = p, c += p.width * (1 + l);
      }), v && (c -= v.width * l);
      var d = -c / 2;
      M(i, function(p, g) {
        t[a][g] = t[a][g] || {
          offset: d,
          width: p.width
        }, d += p.width * (1 + l);
      });
    }), t;
  }
  var KY = {
    startAngle: 90,
    clockwise: !0,
    splitNumber: 12,
    axisLabel: {
      rotate: 0
    }
  }, jY = {
    splitNumber: 5
  }, JY = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "polar", e;
    }(Jt)
  );
  function QY(r) {
    At(Gu), ro.registerAxisPointerClass("PolarAxisPointer", MY), r.registerCoordinateSystem("polar", zY), r.registerComponentModel(PY), r.registerComponentView(JY), ms(r, "angle", EY, KY), ms(r, "radius", RY, jY), r.registerComponentView(FY), r.registerComponentView(YY), r.registerLayout(yt(ZY, "bar"));
  }
  function y0(r, e) {
    e = e || {};
    var t = r.coordinateSystem, n = r.axis, a = {}, i = n.position, o = n.orient, s = t.getRect(), l = [s.x, s.x + s.width, s.y, s.y + s.height], u = {
      horizontal: {
        top: l[2],
        bottom: l[3]
      },
      vertical: {
        left: l[0],
        right: l[1]
      }
    };
    a.position = [o === "vertical" ? u.vertical[i] : l[0], o === "horizontal" ? u.horizontal[i] : l[3]];
    var f = {
      horizontal: 0,
      vertical: 1
    };
    a.rotation = Math.PI / 2 * f[o];
    var h = {
      top: -1,
      bottom: 1,
      right: 1,
      left: -1
    };
    a.labelDirection = a.tickDirection = a.nameDirection = h[i], r.get(["axisTick", "inside"]) && (a.tickDirection = -a.tickDirection), he(e.labelInside, r.get(["axisLabel", "inside"])) && (a.labelDirection = -a.labelDirection);
    var c = e.rotate;
    return c == null && (c = r.get(["axisLabel", "rotate"])), a.labelRotation = i === "top" ? -c : c, a.z2 = 1, a;
  }
  var t8 = ["axisLine", "axisTickLabel", "axisName"], e8 = ["splitArea", "splitLine"], r8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.axisPointerClass = "SingleAxisPointer", t;
      }
      return e.prototype.render = function(t, n, a, i) {
        var o = this.group;
        o.removeAll();
        var s = this._axisGroup;
        this._axisGroup = new ct();
        var l = y0(t), u = new er(t, l);
        M(t8, u.add, u), o.add(this._axisGroup), o.add(u.getGroup()), M(e8, function(f) {
          t.get([f, "show"]) && n8[f](this, this.group, this._axisGroup, t);
        }, this), Rl(s, this._axisGroup, t), r.prototype.render.call(this, t, n, a, i);
      }, e.prototype.remove = function() {
        MA(this);
      }, e.type = "singleAxis", e;
    }(ro)
  ), n8 = {
    splitLine: function(r, e, t, n) {
      var a = n.axis;
      if (!a.scale.isBlank()) {
        var i = n.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
        s = s instanceof Array ? s : [s];
        for (var l = o.get("width"), u = n.coordinateSystem.getRect(), f = a.isHorizontal(), h = [], c = 0, v = a.getTicksCoords({
          tickModel: i
        }), d = [], p = [], g = 0; g < v.length; ++g) {
          var y = a.toGlobalCoord(v[g].coord);
          f ? (d[0] = y, d[1] = u.y, p[0] = y, p[1] = u.y + u.height) : (d[0] = u.x, d[1] = y, p[0] = u.x + u.width, p[1] = y);
          var m = new Se({
            shape: {
              x1: d[0],
              y1: d[1],
              x2: p[0],
              y2: p[1]
            },
            silent: !0
          });
          Yo(m.shape, l);
          var _ = c++ % s.length;
          h[_] = h[_] || [], h[_].push(m);
        }
        for (var S = o.getLineStyle(["color"]), g = 0; g < h.length; ++g)
          e.add(_r(h[g], {
            style: ot({
              stroke: s[g % s.length]
            }, S),
            silent: !0
          }));
      }
    },
    splitArea: function(r, e, t, n) {
      DA(r, t, n, n);
    }
  }, qc = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.getCoordSysModel = function() {
        return this;
      }, e.type = "singleAxis", e.layoutMode = "box", e.defaultOption = {
        left: "5%",
        top: "5%",
        right: "5%",
        bottom: "5%",
        type: "value",
        position: "bottom",
        orient: "horizontal",
        axisLine: {
          show: !0,
          lineStyle: {
            width: 1,
            type: "solid"
          }
        },
        // Single coordinate system and single axis is the,
        // which is used as the parent tooltip model.
        // same model, so we set default tooltip show as true.
        tooltip: {
          show: !0
        },
        axisTick: {
          show: !0,
          length: 6,
          lineStyle: {
            width: 1
          }
        },
        axisLabel: {
          show: !0,
          interval: "auto"
        },
        splitLine: {
          show: !0,
          lineStyle: {
            type: "dashed",
            opacity: 0.2
          }
        }
      }, e;
    }(Ct)
  );
  le(qc, vs.prototype);
  var a8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i, o) {
        var s = r.call(this, t, n, a) || this;
        return s.type = i || "value", s.position = o || "bottom", s;
      }
      return e.prototype.isHorizontal = function() {
        var t = this.position;
        return t === "top" || t === "bottom";
      }, e.prototype.pointToData = function(t, n) {
        return this.coordinateSystem.pointToData(t)[0];
      }, e;
    }(Ur)
  ), lL = ["single"], i8 = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.type = "single", this.dimension = "single", this.dimensions = lL, this.axisPointerEnabled = !0, this.model = e, this._init(e, t, n);
      }
      return r.prototype._init = function(e, t, n) {
        var a = this.dimension, i = new a8(a, lu(e), [0, 0], e.get("type"), e.get("position")), o = i.type === "category";
        i.onBand = o && e.get("boundaryGap"), i.inverse = e.get("inverse"), i.orient = e.get("orient"), e.axis = i, i.model = e, i.coordinateSystem = this, this._axis = i;
      }, r.prototype.update = function(e, t) {
        e.eachSeries(function(n) {
          if (n.coordinateSystem === this) {
            var a = n.getData();
            M(a.mapDimensionsAll(this.dimension), function(i) {
              this._axis.scale.unionExtentFromData(a, i);
            }, this), Xi(this._axis.scale, this._axis.model);
          }
        }, this);
      }, r.prototype.resize = function(e, t) {
        this._rect = ye({
          left: e.get("left"),
          top: e.get("top"),
          right: e.get("right"),
          bottom: e.get("bottom"),
          width: e.get("width"),
          height: e.get("height")
        }, {
          width: t.getWidth(),
          height: t.getHeight()
        }), this._adjustAxis();
      }, r.prototype.getRect = function() {
        return this._rect;
      }, r.prototype._adjustAxis = function() {
        var e = this._rect, t = this._axis, n = t.isHorizontal(), a = n ? [0, e.width] : [0, e.height], i = t.inverse ? 1 : 0;
        t.setExtent(a[i], a[1 - i]), this._updateAxisTransform(t, n ? e.x : e.y);
      }, r.prototype._updateAxisTransform = function(e, t) {
        var n = e.getExtent(), a = n[0] + n[1], i = e.isHorizontal();
        e.toGlobalCoord = i ? function(o) {
          return o + t;
        } : function(o) {
          return a - o + t;
        }, e.toLocalCoord = i ? function(o) {
          return o - t;
        } : function(o) {
          return a - o + t;
        };
      }, r.prototype.getAxis = function() {
        return this._axis;
      }, r.prototype.getBaseAxis = function() {
        return this._axis;
      }, r.prototype.getAxes = function() {
        return [this._axis];
      }, r.prototype.getTooltipAxes = function() {
        return {
          baseAxes: [this.getAxis()],
          // Empty otherAxes
          otherAxes: []
        };
      }, r.prototype.containPoint = function(e) {
        var t = this.getRect(), n = this.getAxis(), a = n.orient;
        return a === "horizontal" ? n.contain(n.toLocalCoord(e[0])) && e[1] >= t.y && e[1] <= t.y + t.height : n.contain(n.toLocalCoord(e[1])) && e[0] >= t.y && e[0] <= t.y + t.height;
      }, r.prototype.pointToData = function(e) {
        var t = this.getAxis();
        return [t.coordToData(t.toLocalCoord(e[t.orient === "horizontal" ? 0 : 1]))];
      }, r.prototype.dataToPoint = function(e) {
        var t = this.getAxis(), n = this.getRect(), a = [], i = t.orient === "horizontal" ? 0 : 1;
        return e instanceof Array && (e = e[0]), a[i] = t.toGlobalCoord(t.dataToCoord(+e)), a[1 - i] = i === 0 ? n.y + n.height / 2 : n.x + n.width / 2, a;
      }, r.prototype.convertToPixel = function(e, t, n) {
        var a = uL(t);
        return a === this ? this.dataToPoint(n) : null;
      }, r.prototype.convertFromPixel = function(e, t, n) {
        var a = uL(t);
        return a === this ? this.pointToData(n) : null;
      }, r;
    }()
  );
  function uL(r) {
    var e = r.seriesModel, t = r.singleAxisModel;
    return t && t.coordinateSystem || e && e.coordinateSystem;
  }
  function o8(r, e) {
    var t = [];
    return r.eachComponent("singleAxis", function(n, a) {
      var i = new i8(n, r, e);
      i.name = "single_" + a, i.resize(n, e), n.coordinateSystem = i, t.push(i);
    }), r.eachSeries(function(n) {
      if (n.get("coordinateSystem") === "singleAxis") {
        var a = n.getReferringComponents("singleAxis", ge).models[0];
        n.coordinateSystem = a && a.coordinateSystem;
      }
    }), t;
  }
  var s8 = {
    create: o8,
    dimensions: lL
  }, fL = ["x", "y"], l8 = ["width", "height"], u8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.makeElOption = function(t, n, a, i, o) {
        var s = a.axis, l = s.coordinateSystem, u = m0(l, 1 - Kc(s)), f = l.dataToPoint(n)[0], h = i.get("type");
        if (h && h !== "none") {
          var c = f0(i), v = f8[h](s, f, u);
          v.style = c, t.graphicKey = v.type, t.pointer = v;
        }
        var d = y0(a);
        YI(
          // @ts-ignore
          n,
          t,
          d,
          a,
          i,
          o
        );
      }, e.prototype.getHandleTransform = function(t, n, a) {
        var i = y0(n, {
          labelInside: !1
        });
        i.labelMargin = a.get(["handle", "margin"]);
        var o = h0(n.axis, t, i);
        return {
          x: o[0],
          y: o[1],
          rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
        };
      }, e.prototype.updateHandleTransform = function(t, n, a, i) {
        var o = a.axis, s = o.coordinateSystem, l = Kc(o), u = m0(s, l), f = [t.x, t.y];
        f[l] += n[l], f[l] = Math.min(u[1], f[l]), f[l] = Math.max(u[0], f[l]);
        var h = m0(s, 1 - l), c = (h[1] + h[0]) / 2, v = [c, c];
        return v[l] = f[l], {
          x: f[0],
          y: f[1],
          rotation: t.rotation,
          cursorPoint: v,
          tooltipOption: {
            verticalAlign: "middle"
          }
        };
      }, e;
    }(l0)
  ), f8 = {
    line: function(r, e, t) {
      var n = c0([e, t[0]], [e, t[1]], Kc(r));
      return {
        type: "Line",
        subPixelOptimize: !0,
        shape: n
      };
    },
    shadow: function(r, e, t) {
      var n = r.getBandWidth(), a = t[1] - t[0];
      return {
        type: "Rect",
        shape: $I([e - n / 2, t[0]], [n, a], Kc(r))
      };
    }
  };
  function Kc(r) {
    return r.isHorizontal() ? 0 : 1;
  }
  function m0(r, e) {
    var t = r.getRect();
    return [t[fL[e]], t[fL[e]] + t[l8[e]]];
  }
  var h8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "single", e;
    }(Jt)
  );
  function c8(r) {
    At(Gu), ro.registerAxisPointerClass("SingleAxisPointer", u8), r.registerComponentView(h8), r.registerComponentView(r8), r.registerComponentModel(qc), ms(r, "single", qc, qc.defaultOption), r.registerCoordinateSystem("single", s8);
  }
  var v8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n, a) {
        var i = Jo(t);
        r.prototype.init.apply(this, arguments), hL(t, i);
      }, e.prototype.mergeOption = function(t) {
        r.prototype.mergeOption.apply(this, arguments), hL(this.option, t);
      }, e.prototype.getCellSize = function() {
        return this.option.cellSize;
      }, e.type = "calendar", e.defaultOption = {
        // zlevel: 0,
        z: 2,
        left: 80,
        top: 60,
        cellSize: 20,
        // horizontal vertical
        orient: "horizontal",
        // month separate line style
        splitLine: {
          show: !0,
          lineStyle: {
            color: "#000",
            width: 1,
            type: "solid"
          }
        },
        // rect style  temporarily unused emphasis
        itemStyle: {
          color: "#fff",
          borderWidth: 1,
          borderColor: "#ccc"
        },
        // week text style
        dayLabel: {
          show: !0,
          firstDay: 0,
          // start end
          position: "start",
          margin: "50%",
          color: "#000"
        },
        // month text style
        monthLabel: {
          show: !0,
          // start end
          position: "start",
          margin: 5,
          // center or left
          align: "center",
          formatter: null,
          color: "#000"
        },
        // year text style
        yearLabel: {
          show: !0,
          // top bottom left right
          position: null,
          margin: 30,
          formatter: null,
          color: "#ccc",
          fontFamily: "sans-serif",
          fontWeight: "bolder",
          fontSize: 20
        }
      }, e;
    }(Ct)
  );
  function hL(r, e) {
    var t = r.cellSize, n;
    U(t) ? n = t : n = r.cellSize = [t, t], n.length === 1 && (n[1] = n[0]);
    var a = Y([0, 1], function(i) {
      return mN(e, i) && (n[i] = "auto"), n[i] != null && n[i] !== "auto";
    });
    Ra(r, e, {
      type: "box",
      ignoreSize: a
    });
  }
  var d8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        var i = this.group;
        i.removeAll();
        var o = t.coordinateSystem, s = o.getRangeInfo(), l = o.getOrient(), u = n.getLocaleModel();
        this._renderDayRect(t, s, i), this._renderLines(t, s, l, i), this._renderYearText(t, s, l, i), this._renderMonthText(t, u, l, i), this._renderWeekText(t, u, s, l, i);
      }, e.prototype._renderDayRect = function(t, n, a) {
        for (var i = t.coordinateSystem, o = t.getModel("itemStyle").getItemStyle(), s = i.getCellWidth(), l = i.getCellHeight(), u = n.start.time; u <= n.end.time; u = i.getNextNDay(u, 1).time) {
          var f = i.dataToRect([u], !1).tl, h = new Rt({
            shape: {
              x: f[0],
              y: f[1],
              width: s,
              height: l
            },
            cursor: "default",
            style: o
          });
          a.add(h);
        }
      }, e.prototype._renderLines = function(t, n, a, i) {
        var o = this, s = t.coordinateSystem, l = t.getModel(["splitLine", "lineStyle"]).getLineStyle(), u = t.get(["splitLine", "show"]), f = l.lineWidth;
        this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
        for (var h = n.start, c = 0; h.time <= n.end.time; c++) {
          d(h.formatedDate), c === 0 && (h = s.getDateInfo(n.start.y + "-" + n.start.m));
          var v = h.date;
          v.setMonth(v.getMonth() + 1), h = s.getDateInfo(v);
        }
        d(s.getNextNDay(n.end.time, 1).formatedDate);
        function d(p) {
          o._firstDayOfMonth.push(s.getDateInfo(p)), o._firstDayPoints.push(s.dataToRect([p], !1).tl);
          var g = o._getLinePointsOfOneWeek(t, p, a);
          o._tlpoints.push(g[0]), o._blpoints.push(g[g.length - 1]), u && o._drawSplitline(g, l, i);
        }
        u && this._drawSplitline(o._getEdgesPoints(o._tlpoints, f, a), l, i), u && this._drawSplitline(o._getEdgesPoints(o._blpoints, f, a), l, i);
      }, e.prototype._getEdgesPoints = function(t, n, a) {
        var i = [t[0].slice(), t[t.length - 1].slice()], o = a === "horizontal" ? 0 : 1;
        return i[0][o] = i[0][o] - n / 2, i[1][o] = i[1][o] + n / 2, i;
      }, e.prototype._drawSplitline = function(t, n, a) {
        var i = new Ge({
          z2: 20,
          shape: {
            points: t
          },
          style: n
        });
        a.add(i);
      }, e.prototype._getLinePointsOfOneWeek = function(t, n, a) {
        for (var i = t.coordinateSystem, o = i.getDateInfo(n), s = [], l = 0; l < 7; l++) {
          var u = i.getNextNDay(o.time, l), f = i.dataToRect([u.time], !1);
          s[2 * u.day] = f.tl, s[2 * u.day + 1] = f[a === "horizontal" ? "bl" : "tr"];
        }
        return s;
      }, e.prototype._formatterLabel = function(t, n) {
        return j(t) && t ? dN(t, n) : rt(t) ? t(n) : n.nameMap;
      }, e.prototype._yearTextPositionControl = function(t, n, a, i, o) {
        var s = n[0], l = n[1], u = ["center", "bottom"];
        i === "bottom" ? (l += o, u = ["center", "top"]) : i === "left" ? s -= o : i === "right" ? (s += o, u = ["center", "top"]) : l -= o;
        var f = 0;
        return (i === "left" || i === "right") && (f = Math.PI / 2), {
          rotation: f,
          x: s,
          y: l,
          style: {
            align: u[0],
            verticalAlign: u[1]
          }
        };
      }, e.prototype._renderYearText = function(t, n, a, i) {
        var o = t.getModel("yearLabel");
        if (o.get("show")) {
          var s = o.get("margin"), l = o.get("position");
          l || (l = a !== "horizontal" ? "top" : "left");
          var u = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], f = (u[0][0] + u[1][0]) / 2, h = (u[0][1] + u[1][1]) / 2, c = a === "horizontal" ? 0 : 1, v = {
            top: [f, u[c][1]],
            bottom: [f, u[1 - c][1]],
            left: [u[1 - c][0], h],
            right: [u[c][0], h]
          }, d = n.start.y;
          +n.end.y > +n.start.y && (d = d + "-" + n.end.y);
          var p = o.get("formatter"), g = {
            start: n.start.y,
            end: n.end.y,
            nameMap: d
          }, y = this._formatterLabel(p, g), m = new kt({
            z2: 30,
            style: jt(o, {
              text: y
            })
          });
          m.attr(this._yearTextPositionControl(m, v[l], a, l, s)), i.add(m);
        }
      }, e.prototype._monthTextPositionControl = function(t, n, a, i, o) {
        var s = "left", l = "top", u = t[0], f = t[1];
        return a === "horizontal" ? (f = f + o, n && (s = "center"), i === "start" && (l = "bottom")) : (u = u + o, n && (l = "middle"), i === "start" && (s = "right")), {
          x: u,
          y: f,
          align: s,
          verticalAlign: l
        };
      }, e.prototype._renderMonthText = function(t, n, a, i) {
        var o = t.getModel("monthLabel");
        if (o.get("show")) {
          var s = o.get("nameMap"), l = o.get("margin"), u = o.get("position"), f = o.get("align"), h = [this._tlpoints, this._blpoints];
          (!s || j(s)) && (s && (n = Ep(s) || n), s = n.get(["time", "monthAbbr"]) || []);
          var c = u === "start" ? 0 : 1, v = a === "horizontal" ? 0 : 1;
          l = u === "start" ? -l : l;
          for (var d = f === "center", p = 0; p < h[c].length - 1; p++) {
            var g = h[c][p].slice(), y = this._firstDayOfMonth[p];
            if (d) {
              var m = this._firstDayPoints[p];
              g[v] = (m[v] + h[0][p + 1][v]) / 2;
            }
            var _ = o.get("formatter"), S = s[+y.m - 1], b = {
              yyyy: y.y,
              yy: (y.y + "").slice(2),
              MM: y.m,
              M: +y.m,
              nameMap: S
            }, w = this._formatterLabel(_, b), T = new kt({
              z2: 30,
              style: H(jt(o, {
                text: w
              }), this._monthTextPositionControl(g, d, a, u, l))
            });
            i.add(T);
          }
        }
      }, e.prototype._weekTextPositionControl = function(t, n, a, i, o) {
        var s = "center", l = "middle", u = t[0], f = t[1], h = a === "start";
        return n === "horizontal" ? (u = u + i + (h ? 1 : -1) * o[0] / 2, s = h ? "right" : "left") : (f = f + i + (h ? 1 : -1) * o[1] / 2, l = h ? "bottom" : "top"), {
          x: u,
          y: f,
          align: s,
          verticalAlign: l
        };
      }, e.prototype._renderWeekText = function(t, n, a, i, o) {
        var s = t.getModel("dayLabel");
        if (s.get("show")) {
          var l = t.coordinateSystem, u = s.get("position"), f = s.get("nameMap"), h = s.get("margin"), c = l.getFirstDayOfWeek();
          if (!f || j(f)) {
            f && (n = Ep(f) || n);
            var v = n.get(["time", "dayOfWeekShort"]);
            f = v || Y(n.get(["time", "dayOfWeekAbbr"]), function(b) {
              return b[0];
            });
          }
          var d = l.getNextNDay(a.end.time, 7 - a.lweek).time, p = [l.getCellWidth(), l.getCellHeight()];
          h = Z(h, Math.min(p[1], p[0])), u === "start" && (d = l.getNextNDay(a.start.time, -(7 + a.fweek)).time, h = -h);
          for (var g = 0; g < 7; g++) {
            var y = l.getNextNDay(d, g), m = l.dataToRect([y.time], !1).center, _ = g;
            _ = Math.abs((g + c) % 7);
            var S = new kt({
              z2: 30,
              style: H(jt(s, {
                text: f[_]
              }), this._weekTextPositionControl(m, i, u, h, p))
            });
            o.add(S);
          }
        }
      }, e.type = "calendar", e;
    }(Jt)
  ), _0 = 864e5, p8 = (
    /** @class */
    function() {
      function r(e, t, n) {
        this.type = "calendar", this.dimensions = r.dimensions, this.getDimensionsInfo = r.getDimensionsInfo, this._model = e;
      }
      return r.getDimensionsInfo = function() {
        return [{
          name: "time",
          type: "time"
        }, "value"];
      }, r.prototype.getRangeInfo = function() {
        return this._rangeInfo;
      }, r.prototype.getModel = function() {
        return this._model;
      }, r.prototype.getRect = function() {
        return this._rect;
      }, r.prototype.getCellWidth = function() {
        return this._sw;
      }, r.prototype.getCellHeight = function() {
        return this._sh;
      }, r.prototype.getOrient = function() {
        return this._orient;
      }, r.prototype.getFirstDayOfWeek = function() {
        return this._firstDayOfWeek;
      }, r.prototype.getDateInfo = function(e) {
        e = mr(e);
        var t = e.getFullYear(), n = e.getMonth() + 1, a = n < 10 ? "0" + n : "" + n, i = e.getDate(), o = i < 10 ? "0" + i : "" + i, s = e.getDay();
        return s = Math.abs((s + 7 - this.getFirstDayOfWeek()) % 7), {
          y: t + "",
          m: a,
          d: o,
          day: s,
          time: e.getTime(),
          formatedDate: t + "-" + a + "-" + o,
          date: e
        };
      }, r.prototype.getNextNDay = function(e, t) {
        return t = t || 0, t === 0 ? this.getDateInfo(e) : (e = new Date(this.getDateInfo(e).time), e.setDate(e.getDate() + t), this.getDateInfo(e));
      }, r.prototype.update = function(e, t) {
        this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
        var n = this._rangeInfo.weeks || 1, a = ["width", "height"], i = this._model.getCellSize().slice(), o = this._model.getBoxLayoutParams(), s = this._orient === "horizontal" ? [n, 7] : [7, n];
        M([0, 1], function(h) {
          f(i, h) && (o[a[h]] = i[h] * s[h]);
        });
        var l = {
          width: t.getWidth(),
          height: t.getHeight()
        }, u = this._rect = ye(o, l);
        M([0, 1], function(h) {
          f(i, h) || (i[h] = u[a[h]] / s[h]);
        });
        function f(h, c) {
          return h[c] != null && h[c] !== "auto";
        }
        this._sw = i[0], this._sh = i[1];
      }, r.prototype.dataToPoint = function(e, t) {
        U(e) && (e = e[0]), t == null && (t = !0);
        var n = this.getDateInfo(e), a = this._rangeInfo, i = n.formatedDate;
        if (t && !(n.time >= a.start.time && n.time < a.end.time + _0))
          return [NaN, NaN];
        var o = n.day, s = this._getRangeInfo([a.start.time, i]).nthWeek;
        return this._orient === "vertical" ? [this._rect.x + o * this._sw + this._sw / 2, this._rect.y + s * this._sh + this._sh / 2] : [this._rect.x + s * this._sw + this._sw / 2, this._rect.y + o * this._sh + this._sh / 2];
      }, r.prototype.pointToData = function(e) {
        var t = this.pointToDate(e);
        return t && t.time;
      }, r.prototype.dataToRect = function(e, t) {
        var n = this.dataToPoint(e, t);
        return {
          contentShape: {
            x: n[0] - (this._sw - this._lineWidth) / 2,
            y: n[1] - (this._sh - this._lineWidth) / 2,
            width: this._sw - this._lineWidth,
            height: this._sh - this._lineWidth
          },
          center: n,
          tl: [n[0] - this._sw / 2, n[1] - this._sh / 2],
          tr: [n[0] + this._sw / 2, n[1] - this._sh / 2],
          br: [n[0] + this._sw / 2, n[1] + this._sh / 2],
          bl: [n[0] - this._sw / 2, n[1] + this._sh / 2]
        };
      }, r.prototype.pointToDate = function(e) {
        var t = Math.floor((e[0] - this._rect.x) / this._sw) + 1, n = Math.floor((e[1] - this._rect.y) / this._sh) + 1, a = this._rangeInfo.range;
        return this._orient === "vertical" ? this._getDateByWeeksAndDay(n, t - 1, a) : this._getDateByWeeksAndDay(t, n - 1, a);
      }, r.prototype.convertToPixel = function(e, t, n) {
        var a = cL(t);
        return a === this ? a.dataToPoint(n) : null;
      }, r.prototype.convertFromPixel = function(e, t, n) {
        var a = cL(t);
        return a === this ? a.pointToData(n) : null;
      }, r.prototype.containPoint = function(e) {
        return console.warn("Not implemented."), !1;
      }, r.prototype._initRangeOption = function() {
        var e = this._model.get("range"), t;
        if (U(e) && e.length === 1 && (e = e[0]), U(e))
          t = e;
        else {
          var n = e.toString();
          if (/^\d{4}$/.test(n) && (t = [n + "-01-01", n + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(n)) {
            var a = this.getDateInfo(n), i = a.date;
            i.setMonth(i.getMonth() + 1);
            var o = this.getNextNDay(i, -1);
            t = [a.formatedDate, o.formatedDate];
          }
          /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(n) && (t = [n, n]);
        }
        if (!t)
          return Cr("Invalid date range."), e;
        var s = this._getRangeInfo(t);
        return s.start.time > s.end.time && t.reverse(), t;
      }, r.prototype._getRangeInfo = function(e) {
        var t = [this.getDateInfo(e[0]), this.getDateInfo(e[1])], n;
        t[0].time > t[1].time && (n = !0, t.reverse());
        var a = Math.floor(t[1].time / _0) - Math.floor(t[0].time / _0) + 1, i = new Date(t[0].time), o = i.getDate(), s = t[1].date.getDate();
        i.setDate(o + a - 1);
        var l = i.getDate();
        if (l !== s)
          for (var u = i.getTime() - t[1].time > 0 ? 1 : -1; (l = i.getDate()) !== s && (i.getTime() - t[1].time) * u > 0; )
            a -= u, i.setDate(l - u);
        var f = Math.floor((a + t[0].day + 6) / 7), h = n ? -f + 1 : f - 1;
        return n && t.reverse(), {
          range: [t[0].formatedDate, t[1].formatedDate],
          start: t[0],
          end: t[1],
          allDay: a,
          weeks: f,
          // From 0.
          nthWeek: h,
          fweek: t[0].day,
          lweek: t[1].day
        };
      }, r.prototype._getDateByWeeksAndDay = function(e, t, n) {
        var a = this._getRangeInfo(n);
        if (e > a.weeks || e === 0 && t < a.fweek || e === a.weeks && t > a.lweek)
          return null;
        var i = (e - 1) * 7 - a.fweek + t, o = new Date(a.start.time);
        return o.setDate(+a.start.d + i), this.getDateInfo(o);
      }, r.create = function(e, t) {
        var n = [];
        return e.eachComponent("calendar", function(a) {
          var i = new r(a);
          n.push(i), a.coordinateSystem = i;
        }), e.eachSeries(function(a) {
          a.get("coordinateSystem") === "calendar" && (a.coordinateSystem = n[a.get("calendarIndex") || 0]);
        }), n;
      }, r.dimensions = ["time", "value"], r;
    }()
  );
  function cL(r) {
    var e = r.calendarModel, t = r.seriesModel, n = e ? e.coordinateSystem : t ? t.coordinateSystem : null;
    return n;
  }
  function g8(r) {
    r.registerComponentModel(v8), r.registerComponentView(d8), r.registerCoordinateSystem("calendar", p8);
  }
  function y8(r, e) {
    var t = r.existing;
    if (e.id = r.keyInfo.id, !e.type && t && (e.type = t.type), e.parentId == null) {
      var n = e.parentOption;
      n ? e.parentId = n.id : t && (e.parentId = t.parentId);
    }
    e.parentOption = null;
  }
  function vL(r, e) {
    var t;
    return M(e, function(n) {
      r[n] != null && r[n] !== "auto" && (t = !0);
    }), t;
  }
  function m8(r, e, t) {
    var n = H({}, t), a = r[e], i = t.$action || "merge";
    if (i === "merge")
      if (a) {
        {
          var o = t.type;
          st(!o || a.type === o, 'Please set $action: "replace" to change `type`');
        }
        mt(a, n, !0), Ra(a, n, {
          ignoreSize: !0
        }), jx(t, a), jc(t, a), jc(t, a, "shape"), jc(t, a, "style"), jc(t, a, "extra"), t.clipPath = a.clipPath;
      } else
        r[e] = n;
    else
      i === "replace" ? r[e] = n : i === "remove" && a && (r[e] = null);
  }
  var dL = ["transition", "enterFrom", "leaveTo"], _8 = dL.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
  function jc(r, e, t) {
    if (t && (!r[t] && e[t] && (r[t] = {}), r = r[t], e = e[t]), !(!r || !e))
      for (var n = t ? dL : _8, a = 0; a < n.length; a++) {
        var i = n[a];
        r[i] == null && e[i] != null && (r[i] = e[i]);
      }
  }
  function S8(r, e) {
    if (r && (r.hv = e.hv = [
      // Rigid body, don't care about `width`.
      vL(e, ["left", "right"]),
      // Rigid body, don't care about `height`.
      vL(e, ["top", "bottom"])
    ], r.type === "group")) {
      var t = r, n = e;
      t.width == null && (t.width = n.width = 0), t.height == null && (t.height = n.height = 0);
    }
  }
  var x8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.preventAutoZ = !0, t;
      }
      return e.prototype.mergeOption = function(t, n) {
        var a = this.option.elements;
        this.option.elements = null, r.prototype.mergeOption.call(this, t, n), this.option.elements = a;
      }, e.prototype.optionUpdated = function(t, n) {
        var a = this.option, i = (n ? a : t).elements, o = a.elements = n ? [] : a.elements, s = [];
        this._flatten(i, s, null);
        var l = eS(o, s, "normalMerge"), u = this._elOptionsToUpdate = [];
        M(l, function(f, h) {
          var c = f.newOption;
          st(it(c) || f.existing, "Empty graphic option definition"), c && (u.push(c), y8(f, c), m8(o, h, c), S8(o[h], c));
        }, this), a.elements = Ht(o, function(f) {
          return f && delete f.$action, f != null;
        });
      }, e.prototype._flatten = function(t, n, a) {
        M(t, function(i) {
          if (i) {
            a && (i.parentOption = a), n.push(i);
            var o = i.children;
            o && o.length && this._flatten(o, n, i), delete i.children;
          }
        }, this);
      }, e.prototype.useElOptionsToUpdate = function() {
        var t = this._elOptionsToUpdate;
        return this._elOptionsToUpdate = null, t;
      }, e.type = "graphic", e.defaultOption = {
        elements: []
        // parentId: null
      }, e;
    }(Ct)
  ), pL = {
    // Reserved but not supported in graphic component.
    path: null,
    compoundPath: null,
    // Supported in graphic component.
    group: ct,
    image: Te,
    text: kt
  }, qr = Nt(), w8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function() {
        this._elMap = nt();
      }, e.prototype.render = function(t, n, a) {
        t !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = t, this._updateElements(t), this._relocate(t, a);
      }, e.prototype._updateElements = function(t) {
        var n = t.useElOptionsToUpdate();
        if (n) {
          var a = this._elMap, i = this.group, o = t.get("z"), s = t.get("zlevel");
          M(n, function(l) {
            var u = _e(l.id, null), f = u != null ? a.get(u) : null, h = _e(l.parentId, null), c = h != null ? a.get(h) : i, v = l.type, d = l.style;
            v === "text" && d && l.hv && l.hv[1] && (d.textVerticalAlign = d.textBaseline = d.verticalAlign = d.align = null);
            var p = l.textContent, g = l.textConfig;
            if (d && pI(d, v, !!g, !!p)) {
              var y = gI(d, v, !0);
              !g && y.textConfig && (g = l.textConfig = y.textConfig), !p && y.textContent && (p = y.textContent);
            }
            var m = b8(l);
            f && st(c === f.parent, "Changing parent is not supported.");
            var _ = l.$action || "merge", S = _ === "merge", b = _ === "replace";
            if (S) {
              var w = !f, T = f;
              w ? T = gL(u, c, l.type, a) : (T && (qr(T).isNew = !1), II(T)), T && (Fc(T, m, t, {
                isInit: w
              }), yL(T, l, o, s));
            } else if (b) {
              Jc(f, l, a, t);
              var C = gL(u, c, l.type, a);
              C && (Fc(C, m, t, {
                isInit: !0
              }), yL(C, l, o, s));
            } else
              _ === "remove" && (TI(f, l), Jc(f, l, a, t));
            var I = a.get(u);
            if (I && p)
              if (S) {
                var L = I.getTextContent();
                L ? L.attr(p) : I.setTextContent(new kt(p));
              } else
                b && I.setTextContent(new kt(p));
            if (I) {
              var P = l.clipPath;
              if (P) {
                var E = P.type, R = void 0, w = !1;
                if (S) {
                  var k = I.getClipPath();
                  w = !k || qr(k).type !== E, R = w ? S0(E) : k;
                } else
                  b && (w = !0, R = S0(E));
                I.setClipPath(R), Fc(R, P, t, {
                  isInit: w
                }), Wc(R, P.keyframeAnimation, t);
              }
              var O = qr(I);
              I.setTextConfig(g), O.option = l, T8(I, t, l), Xo({
                el: I,
                componentModel: t,
                itemName: I.name,
                itemTooltipOption: l.tooltip
              }), Wc(I, l.keyframeAnimation, t);
            }
          });
        }
      }, e.prototype._relocate = function(t, n) {
        for (var a = t.option.elements, i = this.group, o = this._elMap, s = n.getWidth(), l = n.getHeight(), u = ["x", "y"], f = 0; f < a.length; f++) {
          var h = a[f], c = _e(h.id, null), v = c != null ? o.get(c) : null;
          if (!(!v || !v.isGroup)) {
            var d = v.parent, p = d === i, g = qr(v), y = qr(d);
            g.width = Z(g.option.width, p ? s : y.width) || 0, g.height = Z(g.option.height, p ? l : y.height) || 0;
          }
        }
        for (var f = a.length - 1; f >= 0; f--) {
          var h = a[f], c = _e(h.id, null), v = c != null ? o.get(c) : null;
          if (v) {
            var d = v.parent, y = qr(d), m = d === i ? {
              width: s,
              height: l
            } : {
              width: y.width,
              height: y.height
            }, _ = {}, S = wh(v, h, m, null, {
              hv: h.hv,
              boundingMode: h.bounding
            }, _);
            if (!qr(v).isNew && S) {
              for (var b = h.transition, w = {}, T = 0; T < u.length; T++) {
                var C = u[T], I = _[C];
                b && (ho(b) || bt(b, C) >= 0) ? w[C] = I : v[C] = I;
              }
              Vt(v, w, t, 0);
            } else
              v.attr(_);
          }
        }
      }, e.prototype._clear = function() {
        var t = this, n = this._elMap;
        n.each(function(a) {
          Jc(a, qr(a).option, n, t._lastGraphicModel);
        }), this._elMap = nt();
      }, e.prototype.dispose = function() {
        this._clear();
      }, e.type = "graphic", e;
    }(Jt)
  );
  function S0(r) {
    st(r, "graphic type MUST be set");
    var e = Q(pL, r) ? pL[r] : lh(r);
    st(e, "graphic type " + r + " can not be found");
    var t = new e({});
    return qr(t).type = r, t;
  }
  function gL(r, e, t, n) {
    var a = S0(t);
    return e.add(a), n.set(r, a), qr(a).id = r, qr(a).isNew = !0, a;
  }
  function Jc(r, e, t, n) {
    var a = r && r.parent;
    a && (r.type === "group" && r.traverse(function(i) {
      Jc(i, e, t, n);
    }), Hc(r, e, n), t.removeKey(qr(r).id));
  }
  function yL(r, e, t, n) {
    r.isGroup || M([
      ["cursor", kr.prototype.cursor],
      // We should not support configure z and zlevel in the element level.
      // But seems we didn't limit it previously. So here still use it to avoid breaking.
      ["zlevel", n || 0],
      ["z", t || 0],
      // z2 must not be null/undefined, otherwise sort error may occur.
      ["z2", 0]
    ], function(a) {
      var i = a[0];
      Q(e, i) ? r[i] = _t(e[i], a[1]) : r[i] == null && (r[i] = a[1]);
    }), M(Pt(e), function(a) {
      if (a.indexOf("on") === 0) {
        var i = e[a];
        r[a] = rt(i) ? i : null;
      }
    }), Q(e, "draggable") && (r.draggable = e.draggable), e.name != null && (r.name = e.name), e.id != null && (r.id = e.id);
  }
  function b8(r) {
    return r = H({}, r), M(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(Kx), function(e) {
      delete r[e];
    }), r;
  }
  function T8(r, e, t) {
    var n = gt(r).eventData;
    !r.silent && !r.ignore && !n && (n = gt(r).eventData = {
      componentType: "graphic",
      componentIndex: e.componentIndex,
      name: r.name
    }), n && (n.info = t.info);
  }
  function C8(r) {
    r.registerComponentModel(x8), r.registerComponentView(w8), r.registerPreprocessor(function(e) {
      var t = e.graphic;
      U(t) ? !t[0] || !t[0].elements ? e.graphic = [{
        elements: t
      }] : e.graphic = [e.graphic[0]] : t && !t.elements && (e.graphic = [{
        elements: [t]
      }]);
    });
  }
  var mL = ["x", "y", "radius", "angle", "single"], A8 = ["cartesian2d", "polar", "singleAxis"];
  function D8(r) {
    var e = r.get("coordinateSystem");
    return bt(A8, e) >= 0;
  }
  function Xa(r) {
    return st(r), r + "Axis";
  }
  function M8(r, e) {
    var t = nt(), n = [], a = nt();
    r.eachComponent({
      mainType: "dataZoom",
      query: e
    }, function(f) {
      a.get(f.uid) || s(f);
    });
    var i;
    do
      i = !1, r.eachComponent("dataZoom", o);
    while (i);
    function o(f) {
      !a.get(f.uid) && l(f) && (s(f), i = !0);
    }
    function s(f) {
      a.set(f.uid, !0), n.push(f), u(f);
    }
    function l(f) {
      var h = !1;
      return f.eachTargetAxis(function(c, v) {
        var d = t.get(c);
        d && d[v] && (h = !0);
      }), h;
    }
    function u(f) {
      f.eachTargetAxis(function(h, c) {
        (t.get(h) || t.set(h, []))[c] = !0;
      });
    }
    return n;
  }
  function _L(r) {
    var e = r.ecModel, t = {
      infoList: [],
      infoMap: nt()
    };
    return r.eachTargetAxis(function(n, a) {
      var i = e.getComponent(Xa(n), a);
      if (i) {
        var o = i.getCoordSysModel();
        if (o) {
          var s = o.uid, l = t.infoMap.get(s);
          l || (l = {
            model: o,
            axisModels: []
          }, t.infoList.push(l), t.infoMap.set(s, l)), l.axisModels.push(i);
        }
      }
    }), t;
  }
  var x0 = (
    /** @class */
    function() {
      function r() {
        this.indexList = [], this.indexMap = [];
      }
      return r.prototype.add = function(e) {
        this.indexMap[e] || (this.indexList.push(e), this.indexMap[e] = !0);
      }, r;
    }()
  ), Fu = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._autoThrottle = !0, t._noTarget = !0, t._rangePropMode = ["percent", "percent"], t;
      }
      return e.prototype.init = function(t, n, a) {
        var i = SL(t);
        this.settledOption = i, this.mergeDefaultAndTheme(t, a), this._doInit(i);
      }, e.prototype.mergeOption = function(t) {
        var n = SL(t);
        mt(this.option, t, !0), mt(this.settledOption, n, !0), this._doInit(n);
      }, e.prototype._doInit = function(t) {
        var n = this.option;
        this._setDefaultThrottle(t), this._updateRangeUse(t);
        var a = this.settledOption;
        M([["start", "startValue"], ["end", "endValue"]], function(i, o) {
          this._rangePropMode[o] === "value" && (n[i[0]] = a[i[0]] = null);
        }, this), this._resetTarget();
      }, e.prototype._resetTarget = function() {
        var t = this.get("orient", !0), n = this._targetAxisInfoMap = nt(), a = this._fillSpecifiedTargetAxis(n);
        a ? this._orient = t || this._makeAutoOrientByTargetAxis() : (this._orient = t || "horizontal", this._fillAutoTargetAxisByOrient(n, this._orient)), this._noTarget = !0, n.each(function(i) {
          i.indexList.length && (this._noTarget = !1);
        }, this);
      }, e.prototype._fillSpecifiedTargetAxis = function(t) {
        var n = !1;
        return M(mL, function(a) {
          var i = this.getReferringComponents(Xa(a), sk);
          if (i.specified) {
            n = !0;
            var o = new x0();
            M(i.models, function(s) {
              o.add(s.componentIndex);
            }), t.set(a, o);
          }
        }, this), n;
      }, e.prototype._fillAutoTargetAxisByOrient = function(t, n) {
        var a = this.ecModel, i = !0;
        if (i) {
          var o = n === "vertical" ? "y" : "x", s = a.findComponents({
            mainType: o + "Axis"
          });
          l(s, o);
        }
        if (i) {
          var s = a.findComponents({
            mainType: "singleAxis",
            filter: function(f) {
              return f.get("orient", !0) === n;
            }
          });
          l(s, "single");
        }
        function l(u, f) {
          var h = u[0];
          if (h) {
            var c = new x0();
            if (c.add(h.componentIndex), t.set(f, c), i = !1, f === "x" || f === "y") {
              var v = h.getReferringComponents("grid", ge).models[0];
              v && M(u, function(d) {
                h.componentIndex !== d.componentIndex && v === d.getReferringComponents("grid", ge).models[0] && c.add(d.componentIndex);
              });
            }
          }
        }
        i && M(mL, function(u) {
          if (i) {
            var f = a.findComponents({
              mainType: Xa(u),
              filter: function(c) {
                return c.get("type", !0) === "category";
              }
            });
            if (f[0]) {
              var h = new x0();
              h.add(f[0].componentIndex), t.set(u, h), i = !1;
            }
          }
        }, this);
      }, e.prototype._makeAutoOrientByTargetAxis = function() {
        var t;
        return this.eachTargetAxis(function(n) {
          !t && (t = n);
        }, this), t === "y" ? "vertical" : "horizontal";
      }, e.prototype._setDefaultThrottle = function(t) {
        if (t.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
          var n = this.ecModel.option;
          this.option.throttle = n.animation && n.animationDurationUpdate > 0 ? 100 : 20;
        }
      }, e.prototype._updateRangeUse = function(t) {
        var n = this._rangePropMode, a = this.get("rangeMode");
        M([["start", "startValue"], ["end", "endValue"]], function(i, o) {
          var s = t[i[0]] != null, l = t[i[1]] != null;
          s && !l ? n[o] = "percent" : !s && l ? n[o] = "value" : a ? n[o] = a[o] : s && (n[o] = "percent");
        });
      }, e.prototype.noTarget = function() {
        return this._noTarget;
      }, e.prototype.getFirstTargetAxisModel = function() {
        var t;
        return this.eachTargetAxis(function(n, a) {
          t == null && (t = this.ecModel.getComponent(Xa(n), a));
        }, this), t;
      }, e.prototype.eachTargetAxis = function(t, n) {
        this._targetAxisInfoMap.each(function(a, i) {
          M(a.indexList, function(o) {
            t.call(n, i, o);
          });
        });
      }, e.prototype.getAxisProxy = function(t, n) {
        var a = this.getAxisModel(t, n);
        if (a)
          return a.__dzAxisProxy;
      }, e.prototype.getAxisModel = function(t, n) {
        st(t && n != null);
        var a = this._targetAxisInfoMap.get(t);
        if (a && a.indexMap[n])
          return this.ecModel.getComponent(Xa(t), n);
      }, e.prototype.setRawRange = function(t) {
        var n = this.option, a = this.settledOption;
        M([["start", "startValue"], ["end", "endValue"]], function(i) {
          (t[i[0]] != null || t[i[1]] != null) && (n[i[0]] = a[i[0]] = t[i[0]], n[i[1]] = a[i[1]] = t[i[1]]);
        }, this), this._updateRangeUse(t);
      }, e.prototype.setCalculatedRange = function(t) {
        var n = this.option;
        M(["start", "startValue", "end", "endValue"], function(a) {
          n[a] = t[a];
        });
      }, e.prototype.getPercentRange = function() {
        var t = this.findRepresentativeAxisProxy();
        if (t)
          return t.getDataPercentWindow();
      }, e.prototype.getValueRange = function(t, n) {
        if (t == null && n == null) {
          var a = this.findRepresentativeAxisProxy();
          if (a)
            return a.getDataValueWindow();
        } else
          return this.getAxisProxy(t, n).getDataValueWindow();
      }, e.prototype.findRepresentativeAxisProxy = function(t) {
        if (t)
          return t.__dzAxisProxy;
        for (var n, a = this._targetAxisInfoMap.keys(), i = 0; i < a.length; i++)
          for (var o = a[i], s = this._targetAxisInfoMap.get(o), l = 0; l < s.indexList.length; l++) {
            var u = this.getAxisProxy(o, s.indexList[l]);
            if (u.hostedBy(this))
              return u;
            n || (n = u);
          }
        return n;
      }, e.prototype.getRangePropMode = function() {
        return this._rangePropMode.slice();
      }, e.prototype.getOrient = function() {
        return st(this._orient), this._orient;
      }, e.type = "dataZoom", e.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], e.defaultOption = {
        // zlevel: 0,
        z: 4,
        filterMode: "filter",
        start: 0,
        end: 100
      }, e;
    }(Ct)
  );
  function SL(r) {
    var e = {};
    return M(["start", "end", "startValue", "endValue", "throttle"], function(t) {
      r.hasOwnProperty(t) && (e[t] = r[t]);
    }), e;
  }
  var I8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "dataZoom.select", e;
    }(Fu)
  ), w0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a, i) {
        this.dataZoomModel = t, this.ecModel = n, this.api = a;
      }, e.type = "dataZoom", e;
    }(Jt)
  ), L8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "dataZoom.select", e;
    }(w0)
  ), Ms = M, xL = yr, P8 = (
    /** @class */
    function() {
      function r(e, t, n, a) {
        this._dimName = e, this._axisIndex = t, this.ecModel = a, this._dataZoomModel = n;
      }
      return r.prototype.hostedBy = function(e) {
        return this._dataZoomModel === e;
      }, r.prototype.getDataValueWindow = function() {
        return this._valueWindow.slice();
      }, r.prototype.getDataPercentWindow = function() {
        return this._percentWindow.slice();
      }, r.prototype.getTargetSeriesModels = function() {
        var e = [];
        return this.ecModel.eachSeries(function(t) {
          if (D8(t)) {
            var n = Xa(this._dimName), a = t.getReferringComponents(n, ge).models[0];
            a && this._axisIndex === a.componentIndex && e.push(t);
          }
        }, this), e;
      }, r.prototype.getAxisModel = function() {
        return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
      }, r.prototype.getMinMaxSpan = function() {
        return ht(this._minMaxSpan);
      }, r.prototype.calculateDataWindow = function(e) {
        var t = this._dataExtent, n = this.getAxisModel(), a = n.axis.scale, i = this._dataZoomModel.getRangePropMode(), o = [0, 100], s = [], l = [], u;
        Ms(["start", "end"], function(c, v) {
          var d = e[c], p = e[c + "Value"];
          i[v] === "percent" ? (d == null && (d = o[v]), p = a.parse(Wt(d, o, t))) : (u = !0, p = p == null ? t[v] : a.parse(p), d = Wt(p, t, o)), l[v] = p == null || isNaN(p) ? t[v] : p, s[v] = d == null || isNaN(d) ? o[v] : d;
        }), xL(l), xL(s);
        var f = this._minMaxSpan;
        u ? h(l, s, t, o, !1) : h(s, l, o, t, !0);
        function h(c, v, d, p, g) {
          var y = g ? "Span" : "ValueSpan";
          lo(0, c, d, "all", f["min" + y], f["max" + y]);
          for (var m = 0; m < 2; m++)
            v[m] = Wt(c[m], d, p, !0), g && (v[m] = a.parse(v[m]));
        }
        return {
          valueWindow: l,
          percentWindow: s
        };
      }, r.prototype.reset = function(e) {
        if (e === this._dataZoomModel) {
          var t = this.getTargetSeriesModels();
          this._dataExtent = E8(this, this._dimName, t), this._updateMinMaxSpan();
          var n = this.calculateDataWindow(e.settledOption);
          this._valueWindow = n.valueWindow, this._percentWindow = n.percentWindow, this._setAxisModel();
        }
      }, r.prototype.filterData = function(e, t) {
        if (e !== this._dataZoomModel)
          return;
        var n = this._dimName, a = this.getTargetSeriesModels(), i = e.get("filterMode"), o = this._valueWindow;
        if (i === "none")
          return;
        Ms(a, function(l) {
          var u = l.getData(), f = u.mapDimensionsAll(n);
          if (f.length) {
            if (i === "weakFilter") {
              var h = u.getStore(), c = Y(f, function(v) {
                return u.getDimensionIndex(v);
              }, u);
              u.filterSelf(function(v) {
                for (var d, p, g, y = 0; y < f.length; y++) {
                  var m = h.get(c[y], v), _ = !isNaN(m), S = m < o[0], b = m > o[1];
                  if (_ && !S && !b)
                    return !0;
                  _ && (g = !0), S && (d = !0), b && (p = !0);
                }
                return g && d && p;
              });
            } else
              Ms(f, function(v) {
                if (i === "empty")
                  l.setData(u = u.map(v, function(p) {
                    return s(p) ? p : NaN;
                  }));
                else {
                  var d = {};
                  d[v] = o, u.selectRange(d);
                }
              });
            Ms(f, function(v) {
              u.setApproximateExtent(o, v);
            });
          }
        });
        function s(l) {
          return l >= o[0] && l <= o[1];
        }
      }, r.prototype._updateMinMaxSpan = function() {
        var e = this._minMaxSpan = {}, t = this._dataZoomModel, n = this._dataExtent;
        Ms(["min", "max"], function(a) {
          var i = t.get(a + "Span"), o = t.get(a + "ValueSpan");
          o != null && (o = this.getAxisModel().axis.scale.parse(o)), o != null ? i = Wt(n[0] + o, n, [0, 100], !0) : i != null && (o = Wt(i, [0, 100], n, !0) - n[0]), e[a + "Span"] = i, e[a + "ValueSpan"] = o;
        }, this);
      }, r.prototype._setAxisModel = function() {
        var e = this.getAxisModel(), t = this._percentWindow, n = this._valueWindow;
        if (t) {
          var a = Rd(n, [0, 500]);
          a = Math.min(a, 20);
          var i = e.axis.scale.rawExtentInfo;
          t[0] !== 0 && i.setDeterminedMinMax("min", +n[0].toFixed(a)), t[1] !== 100 && i.setDeterminedMinMax("max", +n[1].toFixed(a)), i.freeze();
        }
      }, r;
    }()
  );
  function E8(r, e, t) {
    var n = [1 / 0, -1 / 0];
    Ms(t, function(o) {
      t5(n, o.getData(), e);
    });
    var a = r.getAxisModel(), i = kT(a.axis.scale, a, n).calculate();
    return [i.min, i.max];
  }
  var R8 = {
    // `dataZoomProcessor` will only be performed in needed series. Consider if
    // there is a line series and a pie series, it is better not to update the
    // line series if only pie series is needed to be updated.
    getTargetSeries: function(r) {
      function e(a) {
        r.eachComponent("dataZoom", function(i) {
          i.eachTargetAxis(function(o, s) {
            var l = r.getComponent(Xa(o), s);
            a(o, s, l, i);
          });
        });
      }
      e(function(a, i, o, s) {
        o.__dzAxisProxy = null;
      });
      var t = [];
      e(function(a, i, o, s) {
        o.__dzAxisProxy || (o.__dzAxisProxy = new P8(a, i, s, r), t.push(o.__dzAxisProxy));
      });
      var n = nt();
      return M(t, function(a) {
        M(a.getTargetSeriesModels(), function(i) {
          n.set(i.uid, i);
        });
      }), n;
    },
    // Consider appendData, where filter should be performed. Because data process is
    // in block mode currently, it is not need to worry about that the overallProgress
    // execute every frame.
    overallReset: function(r, e) {
      r.eachComponent("dataZoom", function(t) {
        t.eachTargetAxis(function(n, a) {
          t.getAxisProxy(n, a).reset(t);
        }), t.eachTargetAxis(function(n, a) {
          t.getAxisProxy(n, a).filterData(t, e);
        });
      }), r.eachComponent("dataZoom", function(t) {
        var n = t.findRepresentativeAxisProxy();
        if (n) {
          var a = n.getDataPercentWindow(), i = n.getDataValueWindow();
          t.setCalculatedRange({
            start: a[0],
            end: a[1],
            startValue: i[0],
            endValue: i[1]
          });
        }
      });
    }
  };
  function k8(r) {
    r.registerAction("dataZoom", function(e, t) {
      var n = M8(t, e);
      M(n, function(a) {
        a.setRawRange({
          start: e.start,
          end: e.end,
          startValue: e.startValue,
          endValue: e.endValue
        });
      });
    });
  }
  var wL = !1;
  function b0(r) {
    wL || (wL = !0, r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, R8), k8(r), r.registerSubTypeDefaulter("dataZoom", function() {
      return "slider";
    }));
  }
  function O8(r) {
    r.registerComponentModel(I8), r.registerComponentView(L8), b0(r);
  }
  var Kr = (
    /** @class */
    function() {
      function r() {
      }
      return r;
    }()
  ), bL = {};
  function Is(r, e) {
    bL[r] = e;
  }
  function TL(r) {
    return bL[r];
  }
  var N8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.optionUpdated = function() {
        r.prototype.optionUpdated.apply(this, arguments);
        var t = this.ecModel;
        M(this.option.feature, function(n, a) {
          var i = TL(a);
          i && (i.getDefaultOption && (i.defaultOption = i.getDefaultOption(t)), mt(n, i.defaultOption));
        });
      }, e.type = "toolbox", e.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, e.defaultOption = {
        show: !0,
        z: 6,
        // zlevel: 0,
        orient: "horizontal",
        left: "right",
        top: "top",
        // right
        // bottom
        backgroundColor: "transparent",
        borderColor: "#ccc",
        borderRadius: 0,
        borderWidth: 0,
        padding: 5,
        itemSize: 15,
        itemGap: 8,
        showTitle: !0,
        iconStyle: {
          borderColor: "#666",
          color: "none"
        },
        emphasis: {
          iconStyle: {
            borderColor: "#3E98C5"
          }
        },
        // textStyle: {},
        // feature
        tooltip: {
          show: !1,
          position: "bottom"
        }
      }, e;
    }(Ct)
  );
  function V8(r, e, t) {
    var n = e.getBoxLayoutParams(), a = e.get("padding"), i = {
      width: t.getWidth(),
      height: t.getHeight()
    }, o = ye(n, i, a);
    Vi(e.get("orient"), r, e.get("itemGap"), o.width, o.height), wh(r, n, i, a);
  }
  function CL(r, e) {
    var t = ki(e.get("padding")), n = e.getItemStyle(["color", "opacity"]);
    return n.fill = e.get("backgroundColor"), r = new Rt({
      shape: {
        x: r.x - t[3],
        y: r.y - t[0],
        width: r.width + t[1] + t[3],
        height: r.height + t[0] + t[2],
        r: e.get("borderRadius")
      },
      style: n,
      silent: !0,
      z2: -1
    }), r;
  }
  var B8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.render = function(t, n, a, i) {
        var o = this.group;
        if (o.removeAll(), !t.get("show"))
          return;
        var s = +t.get("itemSize"), l = t.get("orient") === "vertical", u = t.get("feature") || {}, f = this._features || (this._features = {}), h = [];
        M(u, function(d, p) {
          h.push(p);
        }), new ea(this._featureNames || [], h).add(c).update(c).remove(yt(c, null)).execute(), this._featureNames = h;
        function c(d, p) {
          var g = h[d], y = h[p], m = u[g], _ = new Gt(m, t, t.ecModel), S;
          if (i && i.newTitle != null && i.featureName === g && (m.title = i.newTitle), g && !y) {
            if (z8(g))
              S = {
                onclick: _.option.onclick,
                featureName: g
              };
            else {
              var b = TL(g);
              if (!b)
                return;
              S = new b();
            }
            f[g] = S;
          } else if (S = f[y], !S)
            return;
          S.uid = qo("toolbox-feature"), S.model = _, S.ecModel = n, S.api = a;
          var w = S instanceof Kr;
          if (!g && y) {
            w && S.dispose && S.dispose(n, a);
            return;
          }
          if (!_.get("show") || w && S.unusable) {
            w && S.remove && S.remove(n, a);
            return;
          }
          v(_, S, g), _.setIconStatus = function(T, C) {
            var I = this.option, L = this.iconPaths;
            I.iconStatus = I.iconStatus || {}, I.iconStatus[T] = C, L[T] && (C === "emphasis" ? jn : Jn)(L[T]);
          }, S instanceof Kr && S.render && S.render(_, n, a, i);
        }
        function v(d, p, g) {
          var y = d.getModel("iconStyle"), m = d.getModel(["emphasis", "iconStyle"]), _ = p instanceof Kr && p.getIcons ? p.getIcons() : d.get("icon"), S = d.get("title") || {}, b, w;
          j(_) ? (b = {}, b[g] = _) : b = _, j(S) ? (w = {}, w[g] = S) : w = S;
          var T = d.iconPaths = {};
          M(b, function(C, I) {
            var L = $o(C, {}, {
              x: -s / 2,
              y: -s / 2,
              width: s,
              height: s
            });
            L.setStyle(y.getItemStyle());
            var P = L.ensureState("emphasis");
            P.style = m.getItemStyle();
            var E = new kt({
              style: {
                text: w[I],
                align: m.get("textAlign"),
                borderRadius: m.get("textBorderRadius"),
                padding: m.get("textPadding"),
                fill: null
              },
              ignore: !0
            });
            L.setTextContent(E), Xo({
              el: L,
              componentModel: t,
              itemName: I,
              formatterParamsExtra: {
                title: w[I]
              }
            }), L.__title = w[I], L.on("mouseover", function() {
              var R = m.getItemStyle(), k = l ? t.get("right") == null && t.get("left") !== "right" ? "right" : "left" : t.get("bottom") == null && t.get("top") !== "bottom" ? "bottom" : "top";
              E.setStyle({
                fill: m.get("textFill") || R.fill || R.stroke || "#000",
                backgroundColor: m.get("textBackgroundColor")
              }), L.setTextConfig({
                position: m.get("textPosition") || k
              }), E.ignore = !t.get("showTitle"), a.enterEmphasis(this);
            }).on("mouseout", function() {
              d.get(["iconStatus", I]) !== "emphasis" && a.leaveEmphasis(this), E.hide();
            }), (d.get(["iconStatus", I]) === "emphasis" ? jn : Jn)(L), o.add(L), L.on("click", J(p.onclick, p, n, a, I)), T[I] = L;
          });
        }
        V8(o, t, a), o.add(CL(o.getBoundingRect(), t)), l || o.eachChild(function(d) {
          var p = d.__title, g = d.ensureState("emphasis"), y = g.textConfig || (g.textConfig = {}), m = d.getTextContent(), _ = m && m.ensureState("emphasis");
          if (_ && !rt(_) && p) {
            var S = _.style || (_.style = {}), b = cl(p, kt.makeFont(S)), w = d.x + o.x, T = d.y + o.y + s, C = !1;
            T + b.height > a.getHeight() && (y.position = "top", C = !0);
            var I = C ? -5 - b.height : s + 10;
            w + b.width / 2 > a.getWidth() ? (y.position = ["100%", I], S.align = "right") : w - b.width / 2 < 0 && (y.position = [0, I], S.align = "left");
          }
        });
      }, e.prototype.updateView = function(t, n, a, i) {
        M(this._features, function(o) {
          o instanceof Kr && o.updateView && o.updateView(o.model, n, a, i);
        });
      }, e.prototype.remove = function(t, n) {
        M(this._features, function(a) {
          a instanceof Kr && a.remove && a.remove(t, n);
        }), this.group.removeAll();
      }, e.prototype.dispose = function(t, n) {
        M(this._features, function(a) {
          a instanceof Kr && a.dispose && a.dispose(t, n);
        });
      }, e.type = "toolbox", e;
    }(Jt)
  );
  function z8(r) {
    return r.indexOf("my") === 0;
  }
  var G8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.onclick = function(t, n) {
        var a = this.model, i = a.get("name") || t.get("title.0.text") || "echarts", o = n.getZr().painter.getType() === "svg", s = o ? "svg" : a.get("type", !0) || "png", l = n.getConnectedDataURL({
          type: s,
          backgroundColor: a.get("backgroundColor", !0) || t.get("backgroundColor") || "#fff",
          connectedBackgroundColor: a.get("connectedBackgroundColor"),
          excludeComponents: a.get("excludeComponents"),
          pixelRatio: a.get("pixelRatio")
        }), u = z.browser;
        if (rt(MouseEvent) && (u.newEdge || !u.ie && !u.edge)) {
          var f = document.createElement("a");
          f.download = i + "." + s, f.target = "_blank", f.href = l;
          var h = new MouseEvent("click", {
            // some micro front-end framework， window maybe is a Proxy
            view: document.defaultView,
            bubbles: !0,
            cancelable: !1
          });
          f.dispatchEvent(h);
        } else if (window.navigator.msSaveOrOpenBlob || o) {
          var c = l.split(","), v = c[0].indexOf("base64") > -1, d = o ? decodeURIComponent(c[1]) : c[1];
          v && (d = window.atob(d));
          var p = i + "." + s;
          if (window.navigator.msSaveOrOpenBlob) {
            for (var g = d.length, y = new Uint8Array(g); g--; )
              y[g] = d.charCodeAt(g);
            var m = new Blob([y]);
            window.navigator.msSaveOrOpenBlob(m, p);
          } else {
            var _ = document.createElement("iframe");
            document.body.appendChild(_);
            var S = _.contentWindow, b = S.document;
            b.open("image/svg+xml", "replace"), b.write(d), b.close(), S.focus(), b.execCommand("SaveAs", !0, p), document.body.removeChild(_);
          }
        } else {
          var w = a.get("lang"), T = '<body style="margin:0;"><img src="' + l + '" style="max-width:100%;" title="' + (w && w[0] || "") + '" /></body>', C = window.open();
          C.document.write(T), C.document.title = i;
        }
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
          title: t.getLocaleModel().get(["toolbox", "saveAsImage", "title"]),
          type: "png",
          // Default use option.backgroundColor
          // backgroundColor: '#fff',
          connectedBackgroundColor: "#fff",
          name: "",
          excludeComponents: ["toolbox"],
          // use current pixel ratio of device by default
          // pixelRatio: 1,
          lang: t.getLocaleModel().get(["toolbox", "saveAsImage", "lang"])
        };
        return n;
      }, e;
    }(Kr)
  ), AL = "__ec_magicType_stack__", F8 = [["line", "bar"], ["stack"]], H8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.getIcons = function() {
        var t = this.model, n = t.get("icon"), a = {};
        return M(t.get("type"), function(i) {
          n[i] && (a[i] = n[i]);
        }), a;
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          type: [],
          // Icon group
          icon: {
            line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
            bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
            // eslint-disable-next-line
            stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z"
            // jshint ignore:line
          },
          // `line`, `bar`, `stack`, `tiled`
          title: t.getLocaleModel().get(["toolbox", "magicType", "title"]),
          option: {},
          seriesIndex: {}
        };
        return n;
      }, e.prototype.onclick = function(t, n, a) {
        var i = this.model, o = i.get(["seriesIndex", a]);
        if (DL[a]) {
          var s = {
            series: []
          }, l = function(h) {
            var c = h.subType, v = h.id, d = DL[a](c, v, h, i);
            d && (ot(d, h.option), s.series.push(d));
            var p = h.coordinateSystem;
            if (p && p.type === "cartesian2d" && (a === "line" || a === "bar")) {
              var g = p.getAxesByScale("ordinal")[0];
              if (g) {
                var y = g.dim, m = y + "Axis", _ = h.getReferringComponents(m, ge).models[0], S = _.componentIndex;
                s[m] = s[m] || [];
                for (var b = 0; b <= S; b++)
                  s[m][S] = s[m][S] || {};
                s[m][S].boundaryGap = a === "bar";
              }
            }
          };
          M(F8, function(h) {
            bt(h, a) >= 0 && M(h, function(c) {
              i.setIconStatus(c, "normal");
            });
          }), i.setIconStatus(a, "emphasis"), t.eachComponent({
            mainType: "series",
            query: o == null ? null : {
              seriesIndex: o
            }
          }, l);
          var u, f = a;
          a === "stack" && (u = mt({
            stack: i.option.title.tiled,
            tiled: i.option.title.stack
          }, i.option.title), i.get(["iconStatus", a]) !== "emphasis" && (f = "tiled")), n.dispatchAction({
            type: "changeMagicType",
            currentType: f,
            newOption: s,
            newTitle: u,
            featureName: "magicType"
          });
        }
      }, e;
    }(Kr)
  ), DL = {
    line: function(r, e, t, n) {
      if (r === "bar")
        return mt({
          id: e,
          type: "line",
          // Preserve data related option
          data: t.get("data"),
          stack: t.get("stack"),
          markPoint: t.get("markPoint"),
          markLine: t.get("markLine")
        }, n.get(["option", "line"]) || {}, !0);
    },
    bar: function(r, e, t, n) {
      if (r === "line")
        return mt({
          id: e,
          type: "bar",
          // Preserve data related option
          data: t.get("data"),
          stack: t.get("stack"),
          markPoint: t.get("markPoint"),
          markLine: t.get("markLine")
        }, n.get(["option", "bar"]) || {}, !0);
    },
    stack: function(r, e, t, n) {
      var a = t.get("stack") === AL;
      if (r === "line" || r === "bar")
        return n.setIconStatus("stack", a ? "normal" : "emphasis"), mt({
          id: e,
          stack: a ? "" : AL
        }, n.get(["option", "stack"]) || {}, !0);
    }
  };
  ln({
    type: "changeMagicType",
    event: "magicTypeChanged",
    update: "prepareAndUpdate"
  }, function(r, e) {
    e.mergeOption(r.newOption);
  });
  var Qc = new Array(60).join("-"), Ls = "	";
  function W8(r) {
    var e = {}, t = [], n = [];
    return r.eachRawSeries(function(a) {
      var i = a.coordinateSystem;
      if (i && (i.type === "cartesian2d" || i.type === "polar")) {
        var o = i.getBaseAxis();
        if (o.type === "category") {
          var s = o.dim + "_" + o.index;
          e[s] || (e[s] = {
            categoryAxis: o,
            valueAxis: i.getOtherAxis(o),
            series: []
          }, n.push({
            axisDim: o.dim,
            axisIndex: o.index
          })), e[s].series.push(a);
        } else
          t.push(a);
      } else
        t.push(a);
    }), {
      seriesGroupByCategoryAxis: e,
      other: t,
      meta: n
    };
  }
  function U8(r) {
    var e = [];
    return M(r, function(t, n) {
      var a = t.categoryAxis, i = t.valueAxis, o = i.dim, s = [" "].concat(Y(t.series, function(v) {
        return v.name;
      })), l = [a.model.getCategories()];
      M(t.series, function(v) {
        var d = v.getRawData();
        l.push(v.getRawData().mapArray(d.mapDimension(o), function(p) {
          return p;
        }));
      });
      for (var u = [s.join(Ls)], f = 0; f < l[0].length; f++) {
        for (var h = [], c = 0; c < l.length; c++)
          h.push(l[c][f]);
        u.push(h.join(Ls));
      }
      e.push(u.join(`
`));
    }), e.join(`

` + Qc + `

`);
  }
  function Y8(r) {
    return Y(r, function(e) {
      var t = e.getRawData(), n = [e.name], a = [];
      return t.each(t.dimensions, function() {
        for (var i = arguments.length, o = arguments[i - 1], s = t.getName(o), l = 0; l < i - 1; l++)
          a[l] = arguments[l];
        n.push((s ? s + Ls : "") + a.join(Ls));
      }), n.join(`
`);
    }).join(`

` + Qc + `

`);
  }
  function $8(r) {
    var e = W8(r);
    return {
      value: Ht([U8(e.seriesGroupByCategoryAxis), Y8(e.other)], function(t) {
        return !!t.replace(/[\n\t\s]/g, "");
      }).join(`

` + Qc + `

`),
      meta: e.meta
    };
  }
  function tv(r) {
    return r.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
  }
  function X8(r) {
    var e = r.slice(0, r.indexOf(`
`));
    if (e.indexOf(Ls) >= 0)
      return !0;
  }
  var T0 = new RegExp("[" + Ls + "]+", "g");
  function Z8(r) {
    for (var e = r.split(/\n+/g), t = tv(e.shift()).split(T0), n = [], a = Y(t, function(l) {
      return {
        name: l,
        data: []
      };
    }), i = 0; i < e.length; i++) {
      var o = tv(e[i]).split(T0);
      n.push(o.shift());
      for (var s = 0; s < o.length; s++)
        a[s] && (a[s].data[i] = o[s]);
    }
    return {
      series: a,
      categories: n
    };
  }
  function q8(r) {
    for (var e = r.split(/\n+/g), t = tv(e.shift()), n = [], a = 0; a < e.length; a++) {
      var i = tv(e[a]);
      if (i) {
        var o = i.split(T0), s = "", l = void 0, u = !1;
        isNaN(o[0]) ? (u = !0, s = o[0], o = o.slice(1), n[a] = {
          name: s,
          value: []
        }, l = n[a].value) : l = n[a] = [];
        for (var f = 0; f < o.length; f++)
          l.push(+o[f]);
        l.length === 1 && (u ? n[a].value = l[0] : n[a] = l[0]);
      }
    }
    return {
      name: t,
      data: n
    };
  }
  function K8(r, e) {
    var t = r.split(new RegExp(`
*` + Qc + `
*`, "g")), n = {
      series: []
    };
    return M(t, function(a, i) {
      if (X8(a)) {
        var o = Z8(a), s = e[i], l = s.axisDim + "Axis";
        s && (n[l] = n[l] || [], n[l][s.axisIndex] = {
          data: o.categories
        }, n.series = n.series.concat(o.series));
      } else {
        var o = q8(a);
        n.series.push(o);
      }
    }), n;
  }
  var j8 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.onclick = function(t, n) {
        setTimeout(function() {
          n.dispatchAction({
            type: "hideTip"
          });
        });
        var a = n.getDom(), i = this.model;
        this._dom && a.removeChild(this._dom);
        var o = document.createElement("div");
        o.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", o.style.backgroundColor = i.get("backgroundColor") || "#fff";
        var s = document.createElement("h4"), l = i.get("lang") || [];
        s.innerHTML = l[0] || i.get("title"), s.style.cssText = "margin:10px 20px", s.style.color = i.get("textColor");
        var u = document.createElement("div"), f = document.createElement("textarea");
        u.style.cssText = "overflow:auto";
        var h = i.get("optionToContent"), c = i.get("contentToOption"), v = $8(t);
        if (rt(h)) {
          var d = h(n.getOption());
          j(d) ? u.innerHTML = d : ii(d) && u.appendChild(d);
        } else {
          f.readOnly = i.get("readOnly");
          var p = f.style;
          p.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", p.color = i.get("textColor"), p.borderColor = i.get("textareaBorderColor"), p.backgroundColor = i.get("textareaColor"), f.value = v.value, u.appendChild(f);
        }
        var g = v.meta, y = document.createElement("div");
        y.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
        var m = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", _ = document.createElement("div"), S = document.createElement("div");
        m += ";background-color:" + i.get("buttonColor"), m += ";color:" + i.get("buttonTextColor");
        var b = this;
        function w() {
          a.removeChild(o), b._dom = null;
        }
        Kv(_, "click", w), Kv(S, "click", function() {
          if (c == null && h != null || c != null && h == null) {
            ae("It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored."), w();
            return;
          }
          var T;
          try {
            rt(c) ? T = c(u, n.getOption()) : T = K8(f.value, g);
          } catch (C) {
            throw w(), new Error("Data view format error " + C);
          }
          T && n.dispatchAction({
            type: "changeDataView",
            newOption: T
          }), w();
        }), _.innerHTML = l[1], S.innerHTML = l[2], S.style.cssText = _.style.cssText = m, !i.get("readOnly") && y.appendChild(S), y.appendChild(_), o.appendChild(s), o.appendChild(u), o.appendChild(y), u.style.height = a.clientHeight - 80 + "px", a.appendChild(o), this._dom = o;
      }, e.prototype.remove = function(t, n) {
        this._dom && n.getDom().removeChild(this._dom);
      }, e.prototype.dispose = function(t, n) {
        this.remove(t, n);
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          readOnly: !1,
          optionToContent: null,
          contentToOption: null,
          // eslint-disable-next-line
          icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
          title: t.getLocaleModel().get(["toolbox", "dataView", "title"]),
          lang: t.getLocaleModel().get(["toolbox", "dataView", "lang"]),
          backgroundColor: "#fff",
          textColor: "#000",
          textareaColor: "#fff",
          textareaBorderColor: "#333",
          buttonColor: "#c23531",
          buttonTextColor: "#fff"
        };
        return n;
      }, e;
    }(Kr)
  );
  function J8(r, e) {
    return Y(r, function(t, n) {
      var a = e && e[n];
      if (it(a) && !U(a)) {
        var i = it(t) && !U(t);
        i || (t = {
          value: t
        });
        var o = a.name != null && t.name == null;
        return t = ot(t, a), o && delete t.name, t;
      } else
        return t;
    });
  }
  ln({
    type: "changeDataView",
    event: "dataViewChanged",
    update: "prepareAndUpdate"
  }, function(r, e) {
    var t = [];
    M(r.newOption.series, function(n) {
      var a = e.getSeriesByName(n.name)[0];
      if (!a)
        t.push(H({
          // Default is scatter
          type: "scatter"
        }, n));
      else {
        var i = a.get("data");
        t.push({
          name: n.name,
          data: J8(n.data, i)
        });
      }
    }), e.mergeOption(ot({
      series: t
    }, r.newOption));
  });
  var ML = M, IL = Nt();
  function Q8(r, e) {
    var t = C0(r);
    ML(e, function(n, a) {
      for (var i = t.length - 1; i >= 0; i--) {
        var o = t[i];
        if (o[a])
          break;
      }
      if (i < 0) {
        var s = r.queryComponents({
          mainType: "dataZoom",
          subType: "select",
          id: a
        })[0];
        if (s) {
          var l = s.getPercentRange();
          t[0][a] = {
            dataZoomId: a,
            start: l[0],
            end: l[1]
          };
        }
      }
    }), t.push(e);
  }
  function t$(r) {
    var e = C0(r), t = e[e.length - 1];
    e.length > 1 && e.pop();
    var n = {};
    return ML(t, function(a, i) {
      for (var o = e.length - 1; o >= 0; o--)
        if (a = e[o][i], a) {
          n[i] = a;
          break;
        }
    }), n;
  }
  function e$(r) {
    IL(r).snapshots = null;
  }
  function r$(r) {
    return C0(r).length;
  }
  function C0(r) {
    var e = IL(r);
    return e.snapshots || (e.snapshots = [{}]), e.snapshots;
  }
  var n$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.onclick = function(t, n) {
        e$(t), n.dispatchAction({
          type: "restore",
          from: this.uid
        });
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          // eslint-disable-next-line
          icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
          title: t.getLocaleModel().get(["toolbox", "restore", "title"])
        };
        return n;
      }, e;
    }(Kr)
  );
  ln({
    type: "restore",
    event: "restore",
    update: "prepareAndUpdate"
  }, function(r, e) {
    e.resetOption("recreate");
  });
  var a$ = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"], A0 = (
    /** @class */
    function() {
      function r(e, t, n) {
        var a = this;
        this._targetInfoList = [];
        var i = LL(t, e);
        M(i$, function(o, s) {
          (!n || !n.include || bt(n.include, s) >= 0) && o(i, a._targetInfoList);
        });
      }
      return r.prototype.setOutputRanges = function(e, t) {
        return this.matchOutputRanges(e, t, function(n, a, i) {
          if ((n.coordRanges || (n.coordRanges = [])).push(a), !n.coordRange) {
            n.coordRange = a;
            var o = M0[n.brushType](0, i, a);
            n.__rangeOffset = {
              offset: kL[n.brushType](o.values, n.range, [1, 1]),
              xyMinMax: o.xyMinMax
            };
          }
        }), e;
      }, r.prototype.matchOutputRanges = function(e, t, n) {
        M(e, function(a) {
          var i = this.findTargetInfo(a, t);
          i && i !== !0 && M(i.coordSyses, function(o) {
            var s = M0[a.brushType](1, o, a.range, !0);
            n(a, s.values, o, t);
          });
        }, this);
      }, r.prototype.setInputRanges = function(e, t) {
        M(e, function(n) {
          var a = this.findTargetInfo(n, t);
          if (st(!a || a === !0 || n.coordRange, "coordRange must be specified when coord index specified."), st(!a || a !== !0 || n.range, "range must be specified in global brush."), n.range = n.range || [], a && a !== !0) {
            n.panelId = a.panelId;
            var i = M0[n.brushType](0, a.coordSys, n.coordRange), o = n.__rangeOffset;
            n.range = o ? kL[n.brushType](i.values, o.offset, o$(i.xyMinMax, o.xyMinMax)) : i.values;
          }
        }, this);
      }, r.prototype.makePanelOpts = function(e, t) {
        return Y(this._targetInfoList, function(n) {
          var a = n.getPanelRect();
          return {
            panelId: n.panelId,
            defaultBrushType: t ? t(n) : null,
            clipPath: IM(a),
            isTargetByCursor: PM(a, e, n.coordSysModel),
            getLinearBrushOtherExtent: LM(a)
          };
        });
      }, r.prototype.controlSeries = function(e, t, n) {
        var a = this.findTargetInfo(e, n);
        return a === !0 || a && bt(a.coordSyses, t.coordinateSystem) >= 0;
      }, r.prototype.findTargetInfo = function(e, t) {
        for (var n = this._targetInfoList, a = LL(t, e), i = 0; i < n.length; i++) {
          var o = n[i], s = e.panelId;
          if (s) {
            if (o.panelId === s)
              return o;
          } else
            for (var l = 0; l < PL.length; l++)
              if (PL[l](a, o))
                return o;
        }
        return !0;
      }, r;
    }()
  );
  function D0(r) {
    return r[0] > r[1] && r.reverse(), r;
  }
  function LL(r, e) {
    return ml(r, e, {
      includeMainTypes: a$
    });
  }
  var i$ = {
    grid: function(r, e) {
      var t = r.xAxisModels, n = r.yAxisModels, a = r.gridModels, i = nt(), o = {}, s = {};
      !t && !n && !a || (M(t, function(l) {
        var u = l.axis.grid.model;
        i.set(u.id, u), o[u.id] = !0;
      }), M(n, function(l) {
        var u = l.axis.grid.model;
        i.set(u.id, u), s[u.id] = !0;
      }), M(a, function(l) {
        i.set(l.id, l), o[l.id] = !0, s[l.id] = !0;
      }), i.each(function(l) {
        var u = l.coordinateSystem, f = [];
        M(u.getCartesians(), function(h, c) {
          (bt(t, h.getAxis("x").model) >= 0 || bt(n, h.getAxis("y").model) >= 0) && f.push(h);
        }), e.push({
          panelId: "grid--" + l.id,
          gridModel: l,
          coordSysModel: l,
          // Use the first one as the representitive coordSys.
          coordSys: f[0],
          coordSyses: f,
          getPanelRect: EL.grid,
          xAxisDeclared: o[l.id],
          yAxisDeclared: s[l.id]
        });
      }));
    },
    geo: function(r, e) {
      M(r.geoModels, function(t) {
        var n = t.coordinateSystem;
        e.push({
          panelId: "geo--" + t.id,
          geoModel: t,
          coordSysModel: t,
          coordSys: n,
          coordSyses: [n],
          getPanelRect: EL.geo
        });
      });
    }
  }, PL = [
    // grid
    function(r, e) {
      var t = r.xAxisModel, n = r.yAxisModel, a = r.gridModel;
      return !a && t && (a = t.axis.grid.model), !a && n && (a = n.axis.grid.model), a && a === e.gridModel;
    },
    // geo
    function(r, e) {
      var t = r.geoModel;
      return t && t === e.geoModel;
    }
  ], EL = {
    grid: function() {
      return this.coordSys.master.getRect().clone();
    },
    geo: function() {
      var r = this.coordSys, e = r.getBoundingRect().clone();
      return e.applyTransform(La(r)), e;
    }
  }, M0 = {
    lineX: yt(RL, 0),
    lineY: yt(RL, 1),
    rect: function(r, e, t, n) {
      var a = r ? e.pointToData([t[0][0], t[1][0]], n) : e.dataToPoint([t[0][0], t[1][0]], n), i = r ? e.pointToData([t[0][1], t[1][1]], n) : e.dataToPoint([t[0][1], t[1][1]], n), o = [D0([a[0], i[0]]), D0([a[1], i[1]])];
      return {
        values: o,
        xyMinMax: o
      };
    },
    polygon: function(r, e, t, n) {
      var a = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]], i = Y(t, function(o) {
        var s = r ? e.pointToData(o, n) : e.dataToPoint(o, n);
        return a[0][0] = Math.min(a[0][0], s[0]), a[1][0] = Math.min(a[1][0], s[1]), a[0][1] = Math.max(a[0][1], s[0]), a[1][1] = Math.max(a[1][1], s[1]), s;
      });
      return {
        values: i,
        xyMinMax: a
      };
    }
  };
  function RL(r, e, t, n) {
    st(t.type === "cartesian2d", "lineX/lineY brush is available only in cartesian2d.");
    var a = t.getAxis(["x", "y"][r]), i = D0(Y([0, 1], function(s) {
      return e ? a.coordToData(a.toLocalCoord(n[s]), !0) : a.toGlobalCoord(a.dataToCoord(n[s]));
    })), o = [];
    return o[r] = i, o[1 - r] = [NaN, NaN], {
      values: i,
      xyMinMax: o
    };
  }
  var kL = {
    lineX: yt(OL, 0),
    lineY: yt(OL, 1),
    rect: function(r, e, t) {
      return [[r[0][0] - t[0] * e[0][0], r[0][1] - t[0] * e[0][1]], [r[1][0] - t[1] * e[1][0], r[1][1] - t[1] * e[1][1]]];
    },
    polygon: function(r, e, t) {
      return Y(r, function(n, a) {
        return [n[0] - t[0] * e[a][0], n[1] - t[1] * e[a][1]];
      });
    }
  };
  function OL(r, e, t, n) {
    return [e[0] - n[r] * t[0], e[1] - n[r] * t[1]];
  }
  function o$(r, e) {
    var t = NL(r), n = NL(e), a = [t[0] / n[0], t[1] / n[1]];
    return isNaN(a[0]) && (a[0] = 1), isNaN(a[1]) && (a[1] = 1), a;
  }
  function NL(r) {
    return r ? [r[0][1] - r[0][0], r[1][1] - r[1][0]] : [NaN, NaN];
  }
  var I0 = M, s$ = rk("toolbox-dataZoom_"), l$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.render = function(t, n, a, i) {
        this._brushController || (this._brushController = new Mm(a.getZr()), this._brushController.on("brush", J(this._onBrush, this)).mount()), h$(t, n, this, i, a), f$(t, n);
      }, e.prototype.onclick = function(t, n, a) {
        u$[a].call(this);
      }, e.prototype.remove = function(t, n) {
        this._brushController && this._brushController.unmount();
      }, e.prototype.dispose = function(t, n) {
        this._brushController && this._brushController.dispose();
      }, e.prototype._onBrush = function(t) {
        var n = t.areas;
        if (!t.isEnd || !n.length)
          return;
        var a = {}, i = this.ecModel;
        this._brushController.updateCovers([]);
        var o = new A0(L0(this.model), i, {
          include: ["grid"]
        });
        o.matchOutputRanges(n, i, function(u, f, h) {
          if (h.type === "cartesian2d") {
            var c = u.brushType;
            c === "rect" ? (s("x", h, f[0]), s("y", h, f[1])) : s({
              lineX: "x",
              lineY: "y"
            }[c], h, f);
          }
        }), Q8(i, a), this._dispatchZoomAction(a);
        function s(u, f, h) {
          var c = f.getAxis(u), v = c.model, d = l(u, v, i), p = d.findRepresentativeAxisProxy(v).getMinMaxSpan();
          (p.minValueSpan != null || p.maxValueSpan != null) && (h = lo(0, h.slice(), c.scale.getExtent(), 0, p.minValueSpan, p.maxValueSpan)), d && (a[d.id] = {
            dataZoomId: d.id,
            startValue: h[0],
            endValue: h[1]
          });
        }
        function l(u, f, h) {
          var c;
          return h.eachComponent({
            mainType: "dataZoom",
            subType: "select"
          }, function(v) {
            var d = v.getAxisModel(u, f.componentIndex);
            d && (c = v);
          }), c;
        }
      }, e.prototype._dispatchZoomAction = function(t) {
        var n = [];
        I0(t, function(a, i) {
          n.push(ht(a));
        }), n.length && this.api.dispatchAction({
          type: "dataZoom",
          from: this.uid,
          batch: n
        });
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          filterMode: "filter",
          // Icon group
          icon: {
            zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
            back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
          },
          // `zoom`, `back`
          title: t.getLocaleModel().get(["toolbox", "dataZoom", "title"]),
          brushStyle: {
            borderWidth: 0,
            color: "rgba(210,219,238,0.2)"
          }
        };
        return n;
      }, e;
    }(Kr)
  ), u$ = {
    zoom: function() {
      var r = !this._isZoomActive;
      this.api.dispatchAction({
        type: "takeGlobalCursor",
        key: "dataZoomSelect",
        dataZoomSelectActive: r
      });
    },
    back: function() {
      this._dispatchZoomAction(t$(this.ecModel));
    }
  };
  function L0(r) {
    var e = {
      xAxisIndex: r.get("xAxisIndex", !0),
      yAxisIndex: r.get("yAxisIndex", !0),
      xAxisId: r.get("xAxisId", !0),
      yAxisId: r.get("yAxisId", !0)
    };
    return e.xAxisIndex == null && e.xAxisId == null && (e.xAxisIndex = "all"), e.yAxisIndex == null && e.yAxisId == null && (e.yAxisIndex = "all"), e;
  }
  function f$(r, e) {
    r.setIconStatus("back", r$(e) > 1 ? "emphasis" : "normal");
  }
  function h$(r, e, t, n, a) {
    var i = t._isZoomActive;
    n && n.type === "takeGlobalCursor" && (i = n.key === "dataZoomSelect" ? n.dataZoomSelectActive : !1), t._isZoomActive = i, r.setIconStatus("zoom", i ? "emphasis" : "normal");
    var o = new A0(L0(r), e, {
      include: ["grid"]
    }), s = o.makePanelOpts(a, function(l) {
      return l.xAxisDeclared && !l.yAxisDeclared ? "lineX" : !l.xAxisDeclared && l.yAxisDeclared ? "lineY" : "rect";
    });
    t._brushController.setPanels(s).enableBrush(i && s.length ? {
      brushType: "auto",
      brushStyle: r.getModel("brushStyle").getItemStyle()
    } : !1);
  }
  TN("dataZoom", function(r) {
    var e = r.getComponent("toolbox", 0), t = ["feature", "dataZoom"];
    if (!e || e.get(t) == null)
      return;
    var n = e.getModel(t), a = [], i = L0(n), o = ml(r, i);
    I0(o.xAxisModels, function(l) {
      return s(l, "xAxis", "xAxisIndex");
    }), I0(o.yAxisModels, function(l) {
      return s(l, "yAxis", "yAxisIndex");
    });
    function s(l, u, f) {
      var h = l.componentIndex, c = {
        type: "select",
        $fromToolbox: !0,
        // Default to be filter
        filterMode: n.get("filterMode", !0) || "filter",
        // Id for merge mapping.
        id: s$ + u + h
      };
      c[f] = h, a.push(c);
    }
    return a;
  });
  function c$(r) {
    r.registerComponentModel(N8), r.registerComponentView(B8), Is("saveAsImage", G8), Is("magicType", H8), Is("dataView", j8), Is("dataZoom", l$), Is("restore", n$), At(O8);
  }
  var v$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "tooltip", e.dependencies = ["axisPointer"], e.defaultOption = {
        // zlevel: 0,
        z: 60,
        show: !0,
        // tooltip main content
        showContent: !0,
        // 'trigger' only works on coordinate system.
        // 'item' | 'axis' | 'none'
        trigger: "item",
        // 'click' | 'mousemove' | 'none'
        triggerOn: "mousemove|click",
        alwaysShowContent: !1,
        displayMode: "single",
        renderMode: "auto",
        // whether restraint content inside viewRect.
        // If renderMode: 'richText', default true.
        // If renderMode: 'html', defaut false (for backward compat).
        confine: null,
        showDelay: 0,
        hideDelay: 100,
        // Animation transition time, unit is second
        transitionDuration: 0.4,
        enterable: !1,
        backgroundColor: "#fff",
        // box shadow
        shadowBlur: 10,
        shadowColor: "rgba(0, 0, 0, .2)",
        shadowOffsetX: 1,
        shadowOffsetY: 2,
        // tooltip border radius, unit is px, default is 4
        borderRadius: 4,
        // tooltip border width, unit is px, default is 0 (no border)
        borderWidth: 1,
        // Tooltip inside padding, default is 5 for all direction
        // Array is allowed to set up, right, bottom, left, same with css
        // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.
        padding: null,
        // Extra css text
        extraCssText: "",
        // axis indicator, trigger by axis
        axisPointer: {
          // default is line
          // legal values: 'line' | 'shadow' | 'cross'
          type: "line",
          // Valid when type is line, appoint tooltip line locate on which line. Optional
          // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'
          // default is 'auto', chose the axis which type is category.
          // for multiply y axis, cartesian coord chose x axis, polar chose angle axis
          axis: "auto",
          animation: "auto",
          animationDurationUpdate: 200,
          animationEasingUpdate: "exponentialOut",
          crossStyle: {
            color: "#999",
            width: 1,
            type: "dashed",
            // TODO formatter
            textStyle: {}
          }
          // lineStyle and shadowStyle should not be specified here,
          // otherwise it will always override those styles on option.axisPointer.
        },
        textStyle: {
          color: "#666",
          fontSize: 14
        }
      }, e;
    }(Ct)
  );
  function VL(r) {
    var e = r.get("confine");
    return e != null ? !!e : r.get("renderMode") === "richText";
  }
  function BL(r) {
    if (z.domSupported) {
      for (var e = document.documentElement.style, t = 0, n = r.length; t < n; t++)
        if (r[t] in e)
          return r[t];
    }
  }
  var zL = BL(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]), d$ = BL(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]);
  function GL(r, e) {
    if (!r)
      return e;
    e = Bp(e, !0);
    var t = r.indexOf(e);
    return r = t === -1 ? e : "-" + r.slice(0, t) + "-" + e, r.toLowerCase();
  }
  function p$(r, e) {
    var t = r.currentStyle || document.defaultView && document.defaultView.getComputedStyle(r);
    return t ? e ? t[e] : t : null;
  }
  var g$ = GL(d$, "transition"), P0 = GL(zL, "transform"), y$ = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (z.transform3dSupported ? "will-change:transform;" : "");
  function m$(r) {
    return r = r === "left" ? "right" : r === "right" ? "left" : r === "top" ? "bottom" : "top", r;
  }
  function _$(r, e, t) {
    if (!j(t) || t === "inside")
      return "";
    var n = r.get("backgroundColor"), a = r.get("borderWidth");
    e = Oi(e);
    var i = m$(t), o = Math.max(Math.round(a) * 1.5, 6), s = "", l = P0 + ":", u;
    bt(["left", "right"], i) > -1 ? (s += "top:50%", l += "translateY(-50%) rotate(" + (u = i === "left" ? -225 : -45) + "deg)") : (s += "left:50%", l += "translateX(-50%) rotate(" + (u = i === "top" ? 225 : 45) + "deg)");
    var f = u * Math.PI / 180, h = o + a, c = h * Math.abs(Math.cos(f)) + h * Math.abs(Math.sin(f)), v = Math.round(((c - Math.SQRT2 * a) / 2 + Math.SQRT2 * a - (c - h) / 2) * 100) / 100;
    s += ";" + i + ":-" + v + "px";
    var d = e + " solid " + a + "px;", p = ["position:absolute;width:" + o + "px;height:" + o + "px;z-index:-1;", s + ";" + l + ";", "border-bottom:" + d, "border-right:" + d, "background-color:" + n + ";"];
    return '<div style="' + p.join("") + '"></div>';
  }
  function S$(r, e) {
    var t = "cubic-bezier(0.23,1,0.32,1)", n = " " + r / 2 + "s " + t, a = "opacity" + n + ",visibility" + n;
    return e || (n = " " + r + "s " + t, a += z.transformSupported ? "," + P0 + n : ",left" + n + ",top" + n), g$ + ":" + a;
  }
  function FL(r, e, t) {
    var n = r.toFixed(0) + "px", a = e.toFixed(0) + "px";
    if (!z.transformSupported)
      return t ? "top:" + a + ";left:" + n + ";" : [["top", a], ["left", n]];
    var i = z.transform3dSupported, o = "translate" + (i ? "3d" : "") + "(" + n + "," + a + (i ? ",0" : "") + ")";
    return t ? "top:0;left:0;" + P0 + ":" + o + ";" : [["top", 0], ["left", 0], [zL, o]];
  }
  function x$(r) {
    var e = [], t = r.get("fontSize"), n = r.getTextColor();
    n && e.push("color:" + n), e.push("font:" + r.getFont()), t && e.push("line-height:" + Math.round(t * 3 / 2) + "px");
    var a = r.get("textShadowColor"), i = r.get("textShadowBlur") || 0, o = r.get("textShadowOffsetX") || 0, s = r.get("textShadowOffsetY") || 0;
    return a && i && e.push("text-shadow:" + o + "px " + s + "px " + i + "px " + a), M(["decoration", "align"], function(l) {
      var u = r.get(l);
      u && e.push("text-" + l + ":" + u);
    }), e.join(";");
  }
  function w$(r, e, t) {
    var n = [], a = r.get("transitionDuration"), i = r.get("backgroundColor"), o = r.get("shadowBlur"), s = r.get("shadowColor"), l = r.get("shadowOffsetX"), u = r.get("shadowOffsetY"), f = r.getModel("textStyle"), h = jw(r, "html"), c = l + "px " + u + "px " + o + "px " + s;
    return n.push("box-shadow:" + c), e && a && n.push(S$(a, t)), i && n.push("background-color:" + i), M(["width", "color", "radius"], function(v) {
      var d = "border-" + v, p = Bp(d), g = r.get(p);
      g != null && n.push(d + ":" + g + (v === "color" ? "" : "px"));
    }), n.push(x$(f)), h != null && n.push("padding:" + ki(h).join("px ") + "px"), n.join(";") + ";";
  }
  function HL(r, e, t, n, a) {
    var i = e && e.painter;
    if (t) {
      var o = i && i.getViewportRoot();
      o && DE(r, o, document.body, n, a);
    } else {
      r[0] = n, r[1] = a;
      var s = i && i.getViewportRootOffset();
      s && (r[0] += s.offsetLeft, r[1] += s.offsetTop);
    }
    r[2] = r[0] / e.getWidth(), r[3] = r[1] / e.getHeight();
  }
  var b$ = (
    /** @class */
    function() {
      function r(e, t, n) {
        if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._firstShow = !0, this._longHide = !0, z.wxa)
          return null;
        var a = document.createElement("div");
        a.domBelongToZr = !0, this.el = a;
        var i = this._zr = t.getZr(), o = this._appendToBody = n && n.appendToBody;
        HL(this._styleCoord, i, o, t.getWidth() / 2, t.getHeight() / 2), o ? document.body.appendChild(a) : e.appendChild(a), this._container = e;
        var s = this;
        a.onmouseenter = function() {
          s._enterable && (clearTimeout(s._hideTimeout), s._show = !0), s._inContent = !0;
        }, a.onmousemove = function(l) {
          if (l = l || window.event, !s._enterable) {
            var u = i.handler, f = i.painter.getViewportRoot();
            Lr(f, l, !0), u.dispatch("mousemove", l);
          }
        }, a.onmouseleave = function() {
          s._inContent = !1, s._enterable && s._show && s.hideLater(s._hideDelay);
        };
      }
      return r.prototype.update = function(e) {
        var t = this._container, n = p$(t, "position"), a = t.style;
        a.position !== "absolute" && n !== "absolute" && (a.position = "relative");
        var i = e.get("alwaysShowContent");
        i && this._moveIfResized(), this.el.className = e.get("className") || "";
      }, r.prototype.show = function(e, t) {
        clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
        var n = this.el, a = n.style, i = this._styleCoord;
        n.innerHTML ? a.cssText = y$ + w$(e, !this._firstShow, this._longHide) + FL(i[0], i[1], !0) + ("border-color:" + Oi(t) + ";") + (e.get("extraCssText") || "") + (";pointer-events:" + (this._enterable ? "auto" : "none")) : a.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1;
      }, r.prototype.setContent = function(e, t, n, a, i) {
        var o = this.el;
        if (e == null) {
          o.innerHTML = "";
          return;
        }
        var s = "";
        if (j(i) && n.get("trigger") === "item" && !VL(n) && (s = _$(n, a, i)), j(e))
          o.innerHTML = e + s;
        else if (e) {
          o.innerHTML = "", U(e) || (e = [e]);
          for (var l = 0; l < e.length; l++)
            ii(e[l]) && e[l].parentNode !== o && o.appendChild(e[l]);
          if (s && o.childNodes.length) {
            var u = document.createElement("div");
            u.innerHTML = s, o.appendChild(u);
          }
        }
      }, r.prototype.setEnterable = function(e) {
        this._enterable = e;
      }, r.prototype.getSize = function() {
        var e = this.el;
        return [e.offsetWidth, e.offsetHeight];
      }, r.prototype.moveTo = function(e, t) {
        var n = this._styleCoord;
        if (HL(n, this._zr, this._appendToBody, e, t), n[0] != null && n[1] != null) {
          var a = this.el.style, i = FL(n[0], n[1]);
          M(i, function(o) {
            a[o[0]] = o[1];
          });
        }
      }, r.prototype._moveIfResized = function() {
        var e = this._styleCoord[2], t = this._styleCoord[3];
        this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
      }, r.prototype.hide = function() {
        var e = this, t = this.el.style;
        t.visibility = "hidden", t.opacity = "0", z.transform3dSupported && (t.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function() {
          return e._longHide = !0;
        }, 500);
      }, r.prototype.hideLater = function(e) {
        this._show && !(this._inContent && this._enterable) && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(J(this.hide, this), e)) : this.hide());
      }, r.prototype.isShow = function() {
        return this._show;
      }, r.prototype.dispose = function() {
        this.el.parentNode.removeChild(this.el);
      }, r;
    }()
  ), T$ = (
    /** @class */
    function() {
      function r(e) {
        this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._zr = e.getZr(), UL(this._styleCoord, this._zr, e.getWidth() / 2, e.getHeight() / 2);
      }
      return r.prototype.update = function(e) {
        var t = e.get("alwaysShowContent");
        t && this._moveIfResized();
      }, r.prototype.show = function() {
        this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0;
      }, r.prototype.setContent = function(e, t, n, a, i) {
        var o = this;
        it(e) && Ft("Passing DOM nodes as content is not supported in richText tooltip!"), this.el && this._zr.remove(this.el);
        var s = n.getModel("textStyle");
        this.el = new kt({
          style: {
            rich: t.richTextStyles,
            text: e,
            lineHeight: 22,
            borderWidth: 1,
            borderColor: a,
            textShadowColor: s.get("textShadowColor"),
            fill: n.get(["textStyle", "color"]),
            padding: jw(n, "richText"),
            verticalAlign: "top",
            align: "left"
          },
          z: n.get("z")
        }), M(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(u) {
          o.el.style[u] = n.get(u);
        }), M(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(u) {
          o.el.style[u] = s.get(u) || 0;
        }), this._zr.add(this.el);
        var l = this;
        this.el.on("mouseover", function() {
          l._enterable && (clearTimeout(l._hideTimeout), l._show = !0), l._inContent = !0;
        }), this.el.on("mouseout", function() {
          l._enterable && l._show && l.hideLater(l._hideDelay), l._inContent = !1;
        });
      }, r.prototype.setEnterable = function(e) {
        this._enterable = e;
      }, r.prototype.getSize = function() {
        var e = this.el, t = this.el.getBoundingRect(), n = WL(e.style);
        return [t.width + n.left + n.right, t.height + n.top + n.bottom];
      }, r.prototype.moveTo = function(e, t) {
        var n = this.el;
        if (n) {
          var a = this._styleCoord;
          UL(a, this._zr, e, t), e = a[0], t = a[1];
          var i = n.style, o = Za(i.borderWidth || 0), s = WL(i);
          n.x = e + o + s.left, n.y = t + o + s.top, n.markRedraw();
        }
      }, r.prototype._moveIfResized = function() {
        var e = this._styleCoord[2], t = this._styleCoord[3];
        this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
      }, r.prototype.hide = function() {
        this.el && this.el.hide(), this._show = !1;
      }, r.prototype.hideLater = function(e) {
        this._show && !(this._inContent && this._enterable) && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(J(this.hide, this), e)) : this.hide());
      }, r.prototype.isShow = function() {
        return this._show;
      }, r.prototype.dispose = function() {
        this._zr.remove(this.el);
      }, r;
    }()
  );
  function Za(r) {
    return Math.max(0, r);
  }
  function WL(r) {
    var e = Za(r.shadowBlur || 0), t = Za(r.shadowOffsetX || 0), n = Za(r.shadowOffsetY || 0);
    return {
      left: Za(e - t),
      right: Za(e + t),
      top: Za(e - n),
      bottom: Za(e + n)
    };
  }
  function UL(r, e, t, n) {
    r[0] = t, r[1] = n, r[2] = r[0] / e.getWidth(), r[3] = r[1] / e.getHeight();
  }
  var C$ = new Rt({
    shape: {
      x: -1,
      y: -1,
      width: 2,
      height: 2
    }
  }), A$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n) {
        if (!(z.node || !n.getDom())) {
          var a = t.getComponent("tooltip"), i = this._renderMode = uk(a.get("renderMode"));
          this._tooltipContent = i === "richText" ? new T$(n) : new b$(n.getDom(), n, {
            appendToBody: a.get("appendToBody", !0)
          });
        }
      }, e.prototype.render = function(t, n, a) {
        if (!(z.node || !a.getDom())) {
          this.group.removeAll(), this._tooltipModel = t, this._ecModel = n, this._api = a, this._alwaysShowContent = t.get("alwaysShowContent");
          var i = this._tooltipContent;
          i.update(t), i.setEnterable(t.get("enterable")), this._initGlobalListener(), this._keepShow(), this._renderMode !== "richText" && t.get("transitionDuration") ? as(this, "_updatePosition", 50, "fixRate") : ql(this, "_updatePosition");
        }
      }, e.prototype._initGlobalListener = function() {
        var t = this._tooltipModel, n = t.get("triggerOn");
        KI("itemTooltip", this._api, J(function(a, i, o) {
          n !== "none" && (n.indexOf(a) >= 0 ? this._tryShow(i, o) : a === "leave" && this._hide(o));
        }, this));
      }, e.prototype._keepShow = function() {
        var t = this._tooltipModel, n = this._ecModel, a = this._api, i = t.get("triggerOn");
        if (this._lastX != null && this._lastY != null && i !== "none" && i !== "click") {
          var o = this;
          clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
            !a.isDisposed() && o.manuallyShowTip(t, n, a, {
              x: o._lastX,
              y: o._lastY,
              dataByCoordSys: o._lastDataByCoordSys
            });
          });
        }
      }, e.prototype.manuallyShowTip = function(t, n, a, i) {
        if (!(i.from === this.uid || z.node || !a.getDom())) {
          var o = YL(i, a);
          this._ticket = "";
          var s = i.dataByCoordSys, l = L$(i, n, a);
          if (l) {
            var u = l.el.getBoundingRect().clone();
            u.applyTransform(l.el.transform), this._tryShow({
              offsetX: u.x + u.width / 2,
              offsetY: u.y + u.height / 2,
              target: l.el,
              position: i.position,
              // When manully trigger, the mouse is not on the el, so we'd better to
              // position tooltip on the bottom of the el and display arrow is possible.
              positionDefault: "bottom"
            }, o);
          } else if (i.tooltip && i.x != null && i.y != null) {
            var f = C$;
            f.x = i.x, f.y = i.y, f.update(), gt(f).tooltipConfig = {
              name: null,
              option: i.tooltip
            }, this._tryShow({
              offsetX: i.x,
              offsetY: i.y,
              target: f
            }, o);
          } else if (s)
            this._tryShow({
              offsetX: i.x,
              offsetY: i.y,
              position: i.position,
              dataByCoordSys: s,
              tooltipOption: i.tooltipOption
            }, o);
          else if (i.seriesIndex != null) {
            if (this._manuallyAxisShowTip(t, n, a, i))
              return;
            var h = JI(i, n), c = h.point[0], v = h.point[1];
            c != null && v != null && this._tryShow({
              offsetX: c,
              offsetY: v,
              target: h.el,
              position: i.position,
              // When manully trigger, the mouse is not on the el, so we'd better to
              // position tooltip on the bottom of the el and display arrow is possible.
              positionDefault: "bottom"
            }, o);
          } else
            i.x != null && i.y != null && (a.dispatchAction({
              type: "updateAxisPointer",
              x: i.x,
              y: i.y
            }), this._tryShow({
              offsetX: i.x,
              offsetY: i.y,
              position: i.position,
              target: a.getZr().findHover(i.x, i.y).target
            }, o));
        }
      }, e.prototype.manuallyHideTip = function(t, n, a, i) {
        var o = this._tooltipContent;
        !this._alwaysShowContent && this._tooltipModel && o.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i.from !== this.uid && this._hide(YL(i, a));
      }, e.prototype._manuallyAxisShowTip = function(t, n, a, i) {
        var o = i.seriesIndex, s = i.dataIndex, l = n.getComponent("axisPointer").coordSysAxesInfo;
        if (!(o == null || s == null || l == null)) {
          var u = n.getSeriesByIndex(o);
          if (u) {
            var f = u.getData(), h = Hu([f.getItemModel(s), u, (u.coordinateSystem || {}).model], this._tooltipModel);
            if (h.get("trigger") === "axis")
              return a.dispatchAction({
                type: "updateAxisPointer",
                seriesIndex: o,
                dataIndex: s,
                position: i.position
              }), !0;
          }
        }
      }, e.prototype._tryShow = function(t, n) {
        var a = t.target, i = this._tooltipModel;
        if (i) {
          this._lastX = t.offsetX, this._lastY = t.offsetY;
          var o = t.dataByCoordSys;
          if (o && o.length)
            this._showAxisTooltip(o, t);
          else if (a) {
            this._lastDataByCoordSys = null;
            var s, l;
            Hi(a, function(u) {
              if (gt(u).dataIndex != null)
                return s = u, !0;
              if (gt(u).tooltipConfig != null)
                return l = u, !0;
            }, !0), s ? this._showSeriesItemTooltip(t, s, n) : l ? this._showComponentItemTooltip(t, l, n) : this._hide(n);
          } else
            this._lastDataByCoordSys = null, this._hide(n);
        }
      }, e.prototype._showOrMove = function(t, n) {
        var a = t.get("showDelay");
        n = J(n, this), clearTimeout(this._showTimout), a > 0 ? this._showTimout = setTimeout(n, a) : n();
      }, e.prototype._showAxisTooltip = function(t, n) {
        var a = this._ecModel, i = this._tooltipModel, o = [n.offsetX, n.offsetY], s = Hu([n.tooltipOption], i), l = this._renderMode, u = [], f = Ae("section", {
          blocks: [],
          noHeader: !0
        }), h = [], c = new hg();
        M(t, function(m) {
          M(m.dataByAxis, function(_) {
            var S = a.getComponent(_.axisDim + "Axis", _.axisIndex), b = _.value;
            if (!(!S || b == null)) {
              var w = UI(b, S.axis, a, _.seriesDataIndices, _.valueLabelOpt), T = Ae("section", {
                header: w,
                noHeader: !Mr(w),
                sortBlocks: !0,
                blocks: []
              });
              f.blocks.push(T), M(_.seriesDataIndices, function(C) {
                var I = a.getSeriesByIndex(C.seriesIndex), L = C.dataIndexInside, P = I.getDataParams(L);
                if (!(P.dataIndex < 0)) {
                  P.axisDim = _.axisDim, P.axisIndex = _.axisIndex, P.axisType = _.axisType, P.axisId = _.axisId, P.axisValue = jg(S.axis, {
                    value: b
                  }), P.axisValueLabel = w, P.marker = c.makeTooltipMarker("item", Oi(P.color), l);
                  var E = Pw(I.formatTooltip(L, !0, null)), R = E.frag;
                  if (R) {
                    var k = Hu([I], i).get("valueFormatter");
                    T.blocks.push(k ? H({
                      valueFormatter: k
                    }, R) : R);
                  }
                  E.text && h.push(E.text), u.push(P);
                }
              });
            }
          });
        }), f.blocks.reverse(), h.reverse();
        var v = n.position, d = s.get("order"), p = Zw(f, c, l, d, a.get("useUTC"), s.get("textStyle"));
        p && h.unshift(p);
        var g = l === "richText" ? `

` : "<br/>", y = h.join(g);
        this._showOrMove(s, function() {
          this._updateContentNotChangedOnAxis(t, u) ? this._updatePosition(s, v, o[0], o[1], this._tooltipContent, u) : this._showTooltipContent(s, y, u, Math.random() + "", o[0], o[1], v, null, c);
        });
      }, e.prototype._showSeriesItemTooltip = function(t, n, a) {
        var i = this._ecModel, o = gt(n), s = o.seriesIndex, l = i.getSeriesByIndex(s), u = o.dataModel || l, f = o.dataIndex, h = o.dataType, c = u.getData(h), v = this._renderMode, d = t.positionDefault, p = Hu([c.getItemModel(f), u, l && (l.coordinateSystem || {}).model], this._tooltipModel, d ? {
          position: d
        } : null), g = p.get("trigger");
        if (!(g != null && g !== "item")) {
          var y = u.getDataParams(f, h), m = new hg();
          y.marker = m.makeTooltipMarker("item", Oi(y.color), v);
          var _ = Pw(u.formatTooltip(f, !1, h)), S = p.get("order"), b = p.get("valueFormatter"), w = _.frag, T = w ? Zw(b ? H({
            valueFormatter: b
          }, w) : w, m, v, S, i.get("useUTC"), p.get("textStyle")) : _.text, C = "item_" + u.name + "_" + f;
          this._showOrMove(p, function() {
            this._showTooltipContent(p, T, y, C, t.offsetX, t.offsetY, t.position, t.target, m);
          }), a({
            type: "showTip",
            dataIndexInside: f,
            dataIndex: c.getRawIndex(f),
            seriesIndex: s,
            from: this.uid
          });
        }
      }, e.prototype._showComponentItemTooltip = function(t, n, a) {
        var i = gt(n), o = i.tooltipConfig, s = o.option || {};
        if (j(s)) {
          var l = s;
          s = {
            content: l,
            // Fixed formatter
            formatter: l
          };
        }
        var u = [s], f = this._ecModel.getComponent(i.componentMainType, i.componentIndex);
        f && u.push(f), u.push({
          formatter: s.content
        });
        var h = t.positionDefault, c = Hu(u, this._tooltipModel, h ? {
          position: h
        } : null), v = c.get("content"), d = Math.random() + "", p = new hg();
        this._showOrMove(c, function() {
          var g = ht(c.get("formatterParams") || {});
          this._showTooltipContent(c, v, g, d, t.offsetX, t.offsetY, t.position, n, p);
        }), a({
          type: "showTip",
          from: this.uid
        });
      }, e.prototype._showTooltipContent = function(t, n, a, i, o, s, l, u, f) {
        if (this._ticket = "", !(!t.get("showContent") || !t.get("show"))) {
          var h = this._tooltipContent;
          h.setEnterable(t.get("enterable"));
          var c = t.get("formatter");
          l = l || t.get("position");
          var v = n, d = this._getNearestPoint([o, s], a, t.get("trigger"), t.get("borderColor")), p = d.color;
          if (c)
            if (j(c)) {
              var g = t.ecModel.get("useUTC"), y = U(a) ? a[0] : a, m = y && y.axisType && y.axisType.indexOf("time") >= 0;
              v = c, m && (v = zl(y.axisValue, v, g)), v = Fp(v, a, !0);
            } else if (rt(c)) {
              var _ = J(function(S, b) {
                S === this._ticket && (h.setContent(b, f, t, p, l), this._updatePosition(t, l, o, s, h, a, u));
              }, this);
              this._ticket = i, v = c(a, i, _);
            } else
              v = c;
          h.setContent(v, f, t, p, l), h.show(t, p), this._updatePosition(t, l, o, s, h, a, u);
        }
      }, e.prototype._getNearestPoint = function(t, n, a, i) {
        if (a === "axis" || U(n))
          return {
            color: i || (this._renderMode === "html" ? "#fff" : "none")
          };
        if (!U(n))
          return {
            color: i || n.color || n.borderColor
          };
      }, e.prototype._updatePosition = function(t, n, a, i, o, s, l) {
        var u = this._api.getWidth(), f = this._api.getHeight();
        n = n || t.get("position");
        var h = o.getSize(), c = t.get("align"), v = t.get("verticalAlign"), d = l && l.getBoundingRect().clone();
        if (l && d.applyTransform(l.transform), rt(n) && (n = n([a, i], s, o.el, d, {
          viewSize: [u, f],
          contentSize: h.slice()
        })), U(n))
          a = Z(n[0], u), i = Z(n[1], f);
        else if (it(n)) {
          var p = n;
          p.width = h[0], p.height = h[1];
          var g = ye(p, {
            width: u,
            height: f
          });
          a = g.x, i = g.y, c = null, v = null;
        } else if (j(n) && l) {
          var y = I$(n, d, h, t.get("borderWidth"));
          a = y[0], i = y[1];
        } else {
          var y = D$(a, i, o, u, f, c ? null : 20, v ? null : 20);
          a = y[0], i = y[1];
        }
        if (c && (a -= $L(c) ? h[0] / 2 : c === "right" ? h[0] : 0), v && (i -= $L(v) ? h[1] / 2 : v === "bottom" ? h[1] : 0), VL(t)) {
          var y = M$(a, i, o, u, f);
          a = y[0], i = y[1];
        }
        o.moveTo(a, i);
      }, e.prototype._updateContentNotChangedOnAxis = function(t, n) {
        var a = this._lastDataByCoordSys, i = this._cbParamsList, o = !!a && a.length === t.length;
        return o && M(a, function(s, l) {
          var u = s.dataByAxis || [], f = t[l] || {}, h = f.dataByAxis || [];
          o = o && u.length === h.length, o && M(u, function(c, v) {
            var d = h[v] || {}, p = c.seriesDataIndices || [], g = d.seriesDataIndices || [];
            o = o && c.value === d.value && c.axisType === d.axisType && c.axisId === d.axisId && p.length === g.length, o && M(p, function(y, m) {
              var _ = g[m];
              o = o && y.seriesIndex === _.seriesIndex && y.dataIndex === _.dataIndex;
            }), i && M(c.seriesDataIndices, function(y) {
              var m = y.seriesIndex, _ = n[m], S = i[m];
              _ && S && S.data !== _.data && (o = !1);
            });
          });
        }), this._lastDataByCoordSys = t, this._cbParamsList = n, !!o;
      }, e.prototype._hide = function(t) {
        this._lastDataByCoordSys = null, t({
          type: "hideTip",
          from: this.uid
        });
      }, e.prototype.dispose = function(t, n) {
        z.node || !n.getDom() || (ql(this, "_updatePosition"), this._tooltipContent.dispose(), v0("itemTooltip", n));
      }, e.type = "tooltip", e;
    }(Jt)
  );
  function Hu(r, e, t) {
    var n = e.ecModel, a;
    t ? (a = new Gt(t, n, n), a = new Gt(e.option, a, n)) : a = e;
    for (var i = r.length - 1; i >= 0; i--) {
      var o = r[i];
      o && (o instanceof Gt && (o = o.get("tooltip", !0)), j(o) && (o = {
        formatter: o
      }), o && (a = new Gt(o, a, n)));
    }
    return a;
  }
  function YL(r, e) {
    return r.dispatchAction || J(e.dispatchAction, e);
  }
  function D$(r, e, t, n, a, i, o) {
    var s = t.getSize(), l = s[0], u = s[1];
    return i != null && (r + l + i + 2 > n ? r -= l + i : r += i), o != null && (e + u + o > a ? e -= u + o : e += o), [r, e];
  }
  function M$(r, e, t, n, a) {
    var i = t.getSize(), o = i[0], s = i[1];
    return r = Math.min(r + o, n) - o, e = Math.min(e + s, a) - s, r = Math.max(r, 0), e = Math.max(e, 0), [r, e];
  }
  function I$(r, e, t, n) {
    var a = t[0], i = t[1], o = Math.ceil(Math.SQRT2 * n) + 8, s = 0, l = 0, u = e.width, f = e.height;
    switch (r) {
      case "inside":
        s = e.x + u / 2 - a / 2, l = e.y + f / 2 - i / 2;
        break;
      case "top":
        s = e.x + u / 2 - a / 2, l = e.y - i - o;
        break;
      case "bottom":
        s = e.x + u / 2 - a / 2, l = e.y + f + o;
        break;
      case "left":
        s = e.x - a - o, l = e.y + f / 2 - i / 2;
        break;
      case "right":
        s = e.x + u + o, l = e.y + f / 2 - i / 2;
    }
    return [s, l];
  }
  function $L(r) {
    return r === "center" || r === "middle";
  }
  function L$(r, e, t) {
    var n = zd(r).queryOptionMap, a = n.keys()[0];
    if (!(!a || a === "series")) {
      var i = _l(e, a, n.get(a), {
        useDefault: !1,
        enableAll: !1,
        enableNone: !1
      }), o = i.models[0];
      if (o) {
        var s = t.getViewOfComponentModel(o), l;
        if (s.group.traverse(function(u) {
          var f = gt(u).tooltipConfig;
          if (f && f.name === r.name)
            return l = u, !0;
        }), l)
          return {
            componentMainType: a,
            componentIndex: o.componentIndex,
            el: l
          };
      }
    }
  }
  function P$(r) {
    At(Gu), r.registerComponentModel(v$), r.registerComponentView(A$), r.registerAction({
      type: "showTip",
      event: "showTip",
      update: "tooltip:manuallyShowTip"
    }, ue), r.registerAction({
      type: "hideTip",
      event: "hideTip",
      update: "tooltip:manuallyHideTip"
    }, ue);
  }
  var E$ = ["rect", "polygon", "keep", "clear"];
  function R$(r, e) {
    var t = Xt(r ? r.brush : []);
    if (t.length) {
      var n = [];
      M(t, function(l) {
        var u = l.hasOwnProperty("toolbox") ? l.toolbox : [];
        u instanceof Array && (n = n.concat(u));
      });
      var a = r && r.toolbox;
      U(a) && (a = a[0]), a || (a = {
        feature: {}
      }, r.toolbox = [a]);
      var i = a.feature || (a.feature = {}), o = i.brush || (i.brush = {}), s = o.type || (o.type = []);
      s.push.apply(s, n), k$(s), e && !s.length && s.push.apply(s, E$);
    }
  }
  function k$(r) {
    var e = {};
    M(r, function(t) {
      e[t] = 1;
    }), r.length = 0, M(e, function(t, n) {
      r.push(n);
    });
  }
  var XL = M;
  function ZL(r) {
    if (r) {
      for (var e in r)
        if (r.hasOwnProperty(e))
          return !0;
    }
  }
  function E0(r, e, t) {
    var n = {};
    return XL(e, function(i) {
      var o = n[i] = a();
      XL(r[i], function(s, l) {
        if (Me.isValidType(l)) {
          var u = {
            type: l,
            visual: s
          };
          t && t(u, i), o[l] = new Me(u), l === "opacity" && (u = ht(u), u.type = "colorAlpha", o.__hidden.__alphaForOpacity = new Me(u));
        }
      });
    }), n;
    function a() {
      var i = function() {
      };
      i.prototype.__hidden = i.prototype;
      var o = new i();
      return o;
    }
  }
  function qL(r, e, t) {
    var n;
    M(t, function(a) {
      e.hasOwnProperty(a) && ZL(e[a]) && (n = !0);
    }), n && M(t, function(a) {
      e.hasOwnProperty(a) && ZL(e[a]) ? r[a] = ht(e[a]) : delete r[a];
    });
  }
  function O$(r, e, t, n, a, i) {
    var o = {};
    M(r, function(h) {
      var c = Me.prepareVisualTypes(e[h]);
      o[h] = c;
    });
    var s;
    function l(h) {
      return dg(t, s, h);
    }
    function u(h, c) {
      _b(t, s, h, c);
    }
    i == null ? t.each(f) : t.each([i], f);
    function f(h, c) {
      s = i == null ? h : c;
      var v = t.getRawDataItem(s);
      if (!(v && v.visualMap === !1))
        for (var d = n.call(a, h), p = e[d], g = o[d], y = 0, m = g.length; y < m; y++) {
          var _ = g[y];
          p[_] && p[_].applyVisual(h, l, u);
        }
    }
  }
  function N$(r, e, t, n) {
    var a = {};
    return M(r, function(i) {
      var o = Me.prepareVisualTypes(e[i]);
      a[i] = o;
    }), {
      progress: function(o, s) {
        var l;
        n != null && (l = s.getDimensionIndex(n));
        function u(b) {
          return dg(s, h, b);
        }
        function f(b, w) {
          _b(s, h, b, w);
        }
        for (var h, c = s.getStore(); (h = o.next()) != null; ) {
          var v = s.getRawDataItem(h);
          if (!(v && v.visualMap === !1))
            for (var d = n != null ? c.get(l, h) : h, p = t(d), g = e[p], y = a[p], m = 0, _ = y.length; m < _; m++) {
              var S = y[m];
              g[S] && g[S].applyVisual(d, u, f);
            }
        }
      }
    };
  }
  function V$(r) {
    var e = r.brushType, t = {
      point: function(n) {
        return KL[e].point(n, t, r);
      },
      rect: function(n) {
        return KL[e].rect(n, t, r);
      }
    };
    return t;
  }
  var KL = {
    lineX: jL(0),
    lineY: jL(1),
    rect: {
      point: function(r, e, t) {
        return r && t.boundingRect.contain(r[0], r[1]);
      },
      rect: function(r, e, t) {
        return r && t.boundingRect.intersect(r);
      }
    },
    polygon: {
      point: function(r, e, t) {
        return r && t.boundingRect.contain(r[0], r[1]) && Zi(t.range, r[0], r[1]);
      },
      rect: function(r, e, t) {
        var n = t.range;
        if (!r || n.length <= 1)
          return !1;
        var a = r.x, i = r.y, o = r.width, s = r.height, l = n[0];
        if (Zi(n, a, i) || Zi(n, a + o, i) || Zi(n, a, i + s) || Zi(n, a + o, i + s) || xt.create(r).contain(l[0], l[1]) || kl(a, i, a + o, i, n) || kl(a, i, a, i + s, n) || kl(a + o, i, a + o, i + s, n) || kl(a, i + s, a + o, i + s, n))
          return !0;
      }
    }
  };
  function jL(r) {
    var e = ["x", "y"], t = ["width", "height"];
    return {
      point: function(n, a, i) {
        if (n) {
          var o = i.range, s = n[r];
          return Wu(s, o);
        }
      },
      rect: function(n, a, i) {
        if (n) {
          var o = i.range, s = [n[e[r]], n[e[r]] + n[t[r]]];
          return s[1] < s[0] && s.reverse(), Wu(s[0], o) || Wu(s[1], o) || Wu(o[0], s) || Wu(o[1], s);
        }
      }
    };
  }
  function Wu(r, e) {
    return e[0] <= r && r <= e[1];
  }
  var JL = ["inBrush", "outOfBrush"], R0 = "__ecBrushSelect", k0 = "__ecInBrushSelectEvent";
  function QL(r) {
    r.eachComponent({
      mainType: "brush"
    }, function(e) {
      var t = e.brushTargetManager = new A0(e.option, r);
      t.setInputRanges(e.areas, r);
    });
  }
  function B$(r, e, t) {
    var n = [], a, i;
    r.eachComponent({
      mainType: "brush"
    }, function(o) {
      t && t.type === "takeGlobalCursor" && o.setBrushOption(t.key === "brush" ? t.brushOption : {
        brushType: !1
      });
    }), QL(r), r.eachComponent({
      mainType: "brush"
    }, function(o, s) {
      var l = {
        brushId: o.id,
        brushIndex: s,
        brushName: o.name,
        areas: ht(o.areas),
        selected: []
      };
      n.push(l);
      var u = o.option, f = u.brushLink, h = [], c = [], v = [], d = !1;
      s || (a = u.throttleType, i = u.throttleDelay);
      var p = Y(o.areas, function(b) {
        var w = H$[b.brushType], T = ot({
          boundingRect: w ? w(b) : void 0
        }, b);
        return T.selectors = V$(T), T;
      }), g = E0(o.option, JL, function(b) {
        b.mappingMethod = "fixed";
      });
      U(f) && M(f, function(b) {
        h[b] = 1;
      });
      function y(b) {
        return f === "all" || !!h[b];
      }
      function m(b) {
        return !!b.length;
      }
      r.eachSeries(function(b, w) {
        var T = v[w] = [];
        b.subType === "parallel" ? _(b, w) : S(b, w, T);
      });
      function _(b, w) {
        var T = b.coordinateSystem;
        d = d || T.hasAxisBrushed(), y(w) && T.eachActiveState(b.getData(), function(C, I) {
          C === "active" && (c[I] = 1);
        });
      }
      function S(b, w, T) {
        if (!(!b.brushSelector || F$(o, w)) && (M(p, function(I) {
          o.brushTargetManager.controlSeries(I, b, r) && T.push(I), d = d || m(T);
        }), y(w) && m(T))) {
          var C = b.getData();
          C.each(function(I) {
            t2(b, T, C, I) && (c[I] = 1);
          });
        }
      }
      r.eachSeries(function(b, w) {
        var T = {
          seriesId: b.id,
          seriesIndex: w,
          seriesName: b.name,
          dataIndex: []
        };
        l.selected.push(T);
        var C = v[w], I = b.getData(), L = y(w) ? function(P) {
          return c[P] ? (T.dataIndex.push(I.getRawIndex(P)), "inBrush") : "outOfBrush";
        } : function(P) {
          return t2(b, C, I, P) ? (T.dataIndex.push(I.getRawIndex(P)), "inBrush") : "outOfBrush";
        };
        (y(w) ? d : m(C)) && O$(JL, g, I, L);
      });
    }), z$(e, a, i, n, t);
  }
  function z$(r, e, t, n, a) {
    if (a) {
      var i = r.getZr();
      if (!i[k0]) {
        i[R0] || (i[R0] = G$);
        var o = as(i, R0, t, e);
        o(r, n);
      }
    }
  }
  function G$(r, e) {
    if (!r.isDisposed()) {
      var t = r.getZr();
      t[k0] = !0, r.dispatchAction({
        type: "brushSelect",
        batch: e
      }), t[k0] = !1;
    }
  }
  function t2(r, e, t, n) {
    for (var a = 0, i = e.length; a < i; a++) {
      var o = e[a];
      if (r.brushSelector(n, t, o.selectors, o))
        return !0;
    }
  }
  function F$(r, e) {
    var t = r.option.seriesIndex;
    return t != null && t !== "all" && (U(t) ? bt(t, e) < 0 : e !== t);
  }
  var H$ = {
    rect: function(r) {
      return e2(r.range);
    },
    polygon: function(r) {
      for (var e, t = r.range, n = 0, a = t.length; n < a; n++) {
        e = e || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
        var i = t[n];
        i[0] < e[0][0] && (e[0][0] = i[0]), i[0] > e[0][1] && (e[0][1] = i[0]), i[1] < e[1][0] && (e[1][0] = i[1]), i[1] > e[1][1] && (e[1][1] = i[1]);
      }
      return e && e2(e);
    }
  };
  function e2(r) {
    return new xt(r[0][0], r[1][0], r[0][1] - r[0][0], r[1][1] - r[1][0]);
  }
  var W$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n) {
        this.ecModel = t, this.api = n, this.model, (this._brushController = new Mm(n.getZr())).on("brush", J(this._onBrush, this)).mount();
      }, e.prototype.render = function(t, n, a, i) {
        this.model = t, this._updateController(t, n, a, i);
      }, e.prototype.updateTransform = function(t, n, a, i) {
        QL(n), this._updateController(t, n, a, i);
      }, e.prototype.updateVisual = function(t, n, a, i) {
        this.updateTransform(t, n, a, i);
      }, e.prototype.updateView = function(t, n, a, i) {
        this._updateController(t, n, a, i);
      }, e.prototype._updateController = function(t, n, a, i) {
        (!i || i.$from !== t.id) && this._brushController.setPanels(t.brushTargetManager.makePanelOpts(a)).enableBrush(t.brushOption).updateCovers(t.areas.slice());
      }, e.prototype.dispose = function() {
        this._brushController.dispose();
      }, e.prototype._onBrush = function(t) {
        var n = this.model.id, a = this.model.brushTargetManager.setOutputRanges(t.areas, this.ecModel);
        (!t.isEnd || t.removeOnClick) && this.api.dispatchAction({
          type: "brush",
          brushId: n,
          areas: ht(a),
          $from: n
        }), t.isEnd && this.api.dispatchAction({
          type: "brushEnd",
          brushId: n,
          areas: ht(a),
          $from: n
        });
      }, e.type = "brush", e;
    }(Jt)
  ), U$ = "#ddd", Y$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.areas = [], t.brushOption = {}, t;
      }
      return e.prototype.optionUpdated = function(t, n) {
        var a = this.option;
        !n && qL(a, t, ["inBrush", "outOfBrush"]);
        var i = a.inBrush = a.inBrush || {};
        a.outOfBrush = a.outOfBrush || {
          color: U$
        }, i.hasOwnProperty("liftZ") || (i.liftZ = 5);
      }, e.prototype.setAreas = function(t) {
        st(U(t)), M(t, function(n) {
          st(n.brushType, "Illegal areas");
        }), t && (this.areas = Y(t, function(n) {
          return r2(this.option, n);
        }, this));
      }, e.prototype.setBrushOption = function(t) {
        this.brushOption = r2(this.option, t), this.brushType = this.brushOption.brushType;
      }, e.type = "brush", e.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], e.defaultOption = {
        seriesIndex: "all",
        brushType: "rect",
        brushMode: "single",
        transformable: !0,
        brushStyle: {
          borderWidth: 1,
          color: "rgba(210,219,238,0.3)",
          borderColor: "#D2DBEE"
        },
        throttleType: "fixRate",
        throttleDelay: 0,
        removeOnClick: !0,
        z: 1e4
      }, e;
    }(Ct)
  );
  function r2(r, e) {
    return mt({
      brushType: r.brushType,
      brushMode: r.brushMode,
      transformable: r.transformable,
      brushStyle: new Gt(r.brushStyle).getItemStyle(),
      removeOnClick: r.removeOnClick,
      z: r.z
    }, e, !0);
  }
  var $$ = ["rect", "polygon", "lineX", "lineY", "keep", "clear"], X$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        return r !== null && r.apply(this, arguments) || this;
      }
      return e.prototype.render = function(t, n, a) {
        var i, o, s;
        n.eachComponent({
          mainType: "brush"
        }, function(l) {
          i = l.brushType, o = l.brushOption.brushMode || "single", s = s || !!l.areas.length;
        }), this._brushType = i, this._brushMode = o, M(t.get("type", !0), function(l) {
          t.setIconStatus(l, (l === "keep" ? o === "multiple" : l === "clear" ? s : l === i) ? "emphasis" : "normal");
        });
      }, e.prototype.updateView = function(t, n, a) {
        this.render(t, n, a);
      }, e.prototype.getIcons = function() {
        var t = this.model, n = t.get("icon", !0), a = {};
        return M(t.get("type", !0), function(i) {
          n[i] && (a[i] = n[i]);
        }), a;
      }, e.prototype.onclick = function(t, n, a) {
        var i = this._brushType, o = this._brushMode;
        a === "clear" ? (n.dispatchAction({
          type: "axisAreaSelect",
          intervals: []
        }), n.dispatchAction({
          type: "brush",
          command: "clear",
          // Clear all areas of all brush components.
          areas: []
        })) : n.dispatchAction({
          type: "takeGlobalCursor",
          key: "brush",
          brushOption: {
            brushType: a === "keep" ? i : i === a ? !1 : a,
            brushMode: a === "keep" ? o === "multiple" ? "single" : "multiple" : o
          }
        });
      }, e.getDefaultOption = function(t) {
        var n = {
          show: !0,
          type: $$.slice(),
          icon: {
            /* eslint-disable */
            rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
            polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
            lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
            lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
            keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
            clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
            // jshint ignore:line
            /* eslint-enable */
          },
          // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`
          title: t.getLocaleModel().get(["toolbox", "brush", "title"])
        };
        return n;
      }, e;
    }(Kr)
  );
  function Z$(r) {
    r.registerComponentView(W$), r.registerComponentModel(Y$), r.registerPreprocessor(R$), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, B$), r.registerAction({
      type: "brush",
      event: "brush",
      update: "updateVisual"
    }, function(e, t) {
      t.eachComponent({
        mainType: "brush",
        query: e
      }, function(n) {
        n.setAreas(e.areas);
      });
    }), r.registerAction({
      type: "brushSelect",
      event: "brushSelected",
      update: "none"
    }, ue), r.registerAction({
      type: "brushEnd",
      event: "brushEnd",
      update: "none"
    }, ue), Is("brush", X$);
  }
  var q$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.layoutMode = {
          type: "box",
          ignoreSize: !0
        }, t;
      }
      return e.type = "title", e.defaultOption = {
        // zlevel: 0,
        z: 6,
        show: !0,
        text: "",
        target: "blank",
        subtext: "",
        subtarget: "blank",
        left: 0,
        top: 0,
        backgroundColor: "rgba(0,0,0,0)",
        borderColor: "#ccc",
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        textStyle: {
          fontSize: 18,
          fontWeight: "bold",
          color: "#464646"
        },
        subtextStyle: {
          fontSize: 12,
          color: "#6E7079"
        }
      }, e;
    }(Ct)
  ), K$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.render = function(t, n, a) {
        if (this.group.removeAll(), !!t.get("show")) {
          var i = this.group, o = t.getModel("textStyle"), s = t.getModel("subtextStyle"), l = t.get("textAlign"), u = _t(t.get("textBaseline"), t.get("textVerticalAlign")), f = new kt({
            style: jt(o, {
              text: t.get("text"),
              fill: o.getTextColor()
            }, {
              disableBox: !0
            }),
            z2: 10
          }), h = f.getBoundingRect(), c = t.get("subtext"), v = new kt({
            style: jt(s, {
              text: c,
              fill: s.getTextColor(),
              y: h.height + t.get("itemGap"),
              verticalAlign: "top"
            }, {
              disableBox: !0
            }),
            z2: 10
          }), d = t.get("link"), p = t.get("sublink"), g = t.get("triggerEvent", !0);
          f.silent = !d && !g, v.silent = !p && !g, d && f.on("click", function() {
            Sh(d, "_" + t.get("target"));
          }), p && v.on("click", function() {
            Sh(p, "_" + t.get("subtarget"));
          }), gt(f).eventData = gt(v).eventData = g ? {
            componentType: "title",
            componentIndex: t.componentIndex
          } : null, i.add(f), c && i.add(v);
          var y = i.getBoundingRect(), m = t.getBoxLayoutParams();
          m.width = y.width, m.height = y.height;
          var _ = ye(m, {
            width: a.getWidth(),
            height: a.getHeight()
          }, t.get("padding"));
          l || (l = t.get("left") || t.get("right"), l === "middle" && (l = "center"), l === "right" ? _.x += _.width : l === "center" && (_.x += _.width / 2)), u || (u = t.get("top") || t.get("bottom"), u === "center" && (u = "middle"), u === "bottom" ? _.y += _.height : u === "middle" && (_.y += _.height / 2), u = u || "top"), i.x = _.x, i.y = _.y, i.markRedraw();
          var S = {
            align: l,
            verticalAlign: u
          };
          f.setStyle(S), v.setStyle(S), y = i.getBoundingRect();
          var b = _.margin, w = t.getItemStyle(["color", "opacity"]);
          w.fill = t.get("backgroundColor");
          var T = new Rt({
            shape: {
              x: y.x - b[3],
              y: y.y - b[0],
              width: y.width + b[1] + b[3],
              height: y.height + b[0] + b[2],
              r: t.get("borderRadius")
            },
            style: w,
            subPixelOptimize: !0,
            silent: !0
          });
          i.add(T);
        }
      }, e.type = "title", e;
    }(Jt)
  );
  function j$(r) {
    r.registerComponentModel(q$), r.registerComponentView(K$);
  }
  var n2 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.layoutMode = "box", t;
      }
      return e.prototype.init = function(t, n, a) {
        this.mergeDefaultAndTheme(t, a), this._initData();
      }, e.prototype.mergeOption = function(t) {
        r.prototype.mergeOption.apply(this, arguments), this._initData();
      }, e.prototype.setCurrentIndex = function(t) {
        t == null && (t = this.option.currentIndex);
        var n = this._data.count();
        this.option.loop ? t = (t % n + n) % n : (t >= n && (t = n - 1), t < 0 && (t = 0)), this.option.currentIndex = t;
      }, e.prototype.getCurrentIndex = function() {
        return this.option.currentIndex;
      }, e.prototype.isIndexMax = function() {
        return this.getCurrentIndex() >= this._data.count() - 1;
      }, e.prototype.setPlayState = function(t) {
        this.option.autoPlay = !!t;
      }, e.prototype.getPlayState = function() {
        return !!this.option.autoPlay;
      }, e.prototype._initData = function() {
        var t = this.option, n = t.data || [], a = t.axisType, i = this._names = [], o;
        a === "category" ? (o = [], M(n, function(u, f) {
          var h = _e(Eo(u), ""), c;
          it(u) ? (c = ht(u), c.value = f) : c = f, o.push(c), i.push(h);
        })) : o = n;
        var s = {
          category: "ordinal",
          time: "time",
          value: "number"
        }[a] || "number", l = this._data = new Ue([{
          name: "value",
          type: s
        }], this);
        l.initData(o, i);
      }, e.prototype.getData = function() {
        return this._data;
      }, e.prototype.getCategories = function() {
        if (this.get("axisType") === "category")
          return this._names.slice();
      }, e.type = "timeline", e.defaultOption = {
        // zlevel: 0,                  // 一级层叠
        z: 4,
        show: !0,
        axisType: "time",
        realtime: !0,
        left: "20%",
        top: null,
        right: "20%",
        bottom: 0,
        width: null,
        height: 40,
        padding: 5,
        controlPosition: "left",
        autoPlay: !1,
        rewind: !1,
        loop: !0,
        playInterval: 2e3,
        currentIndex: 0,
        itemStyle: {},
        label: {
          color: "#000"
        },
        data: []
      }, e;
    }(Ct)
  ), a2 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "timeline.slider", e.defaultOption = Ea(n2.defaultOption, {
        backgroundColor: "rgba(0,0,0,0)",
        borderColor: "#ccc",
        borderWidth: 0,
        orient: "horizontal",
        inverse: !1,
        tooltip: {
          trigger: "item"
          // data item may also have tootip attr.
        },
        symbol: "circle",
        symbolSize: 12,
        lineStyle: {
          show: !0,
          width: 2,
          color: "#DAE1F5"
        },
        label: {
          position: "auto",
          // When using number, label position is not
          // restricted by viewRect.
          // positive: right/bottom, negative: left/top
          show: !0,
          interval: "auto",
          rotate: 0,
          // formatter: null,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#A4B1D7"
        },
        itemStyle: {
          color: "#A4B1D7",
          borderWidth: 1
        },
        checkpointStyle: {
          symbol: "circle",
          symbolSize: 15,
          color: "#316bf3",
          borderColor: "#fff",
          borderWidth: 2,
          shadowBlur: 2,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0, 0, 0, 0.3)",
          // borderColor: 'rgba(194,53,49, 0.5)',
          animation: !0,
          animationDuration: 300,
          animationEasing: "quinticInOut"
        },
        controlStyle: {
          show: !0,
          showPlayBtn: !0,
          showPrevBtn: !0,
          showNextBtn: !0,
          itemSize: 24,
          itemGap: 12,
          position: "left",
          playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
          stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
          // eslint-disable-next-line max-len
          nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z",
          // eslint-disable-next-line max-len
          prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z",
          prevBtnSize: 18,
          nextBtnSize: 18,
          color: "#A4B1D7",
          borderColor: "#A4B1D7",
          borderWidth: 1
        },
        emphasis: {
          label: {
            show: !0,
            // 其余属性默认使用全局文本样式，详见TEXTSTYLE
            color: "#6f778d"
          },
          itemStyle: {
            color: "#316BF3"
          },
          controlStyle: {
            color: "#316BF3",
            borderColor: "#316BF3",
            borderWidth: 2
          }
        },
        progress: {
          lineStyle: {
            color: "#316BF3"
          },
          itemStyle: {
            color: "#316BF3"
          },
          label: {
            color: "#6f778d"
          }
        },
        data: []
      }), e;
    }(n2)
  );
  le(a2, ig.prototype);
  var J$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "timeline", e;
    }(Jt)
  ), Q$ = (
    /** @class */
    function(r) {
      A(e, r);
      function e(t, n, a, i) {
        var o = r.call(this, t, n, a) || this;
        return o.type = i || "value", o;
      }
      return e.prototype.getLabelModel = function() {
        return this.model.getModel("label");
      }, e.prototype.isHorizontal = function() {
        return this.model.get("orient") === "horizontal";
      }, e;
    }(Ur)
  ), O0 = Math.PI, i2 = Nt(), t7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function(t, n) {
        this.api = n;
      }, e.prototype.render = function(t, n, a) {
        if (this.model = t, this.api = a, this.ecModel = n, this.group.removeAll(), t.get("show", !0)) {
          var i = this._layout(t, a), o = this._createGroup("_mainGroup"), s = this._createGroup("_labelGroup"), l = this._axis = this._createAxis(i, t);
          t.formatTooltip = function(u) {
            var f = l.scale.getLabel({
              value: u
            });
            return Ae("nameValue", {
              noName: !0,
              value: f
            });
          }, M(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(u) {
            this["_render" + u](i, o, l, t);
          }, this), this._renderAxisLabel(i, s, l, t), this._position(i, t);
        }
        this._doPlayStop(), this._updateTicksStatus();
      }, e.prototype.remove = function() {
        this._clearTimer(), this.group.removeAll();
      }, e.prototype.dispose = function() {
        this._clearTimer();
      }, e.prototype._layout = function(t, n) {
        var a = t.get(["label", "position"]), i = t.get("orient"), o = r7(t, n), s;
        a == null || a === "auto" ? s = i === "horizontal" ? o.y + o.height / 2 < n.getHeight() / 2 ? "-" : "+" : o.x + o.width / 2 < n.getWidth() / 2 ? "+" : "-" : j(a) ? s = {
          horizontal: {
            top: "-",
            bottom: "+"
          },
          vertical: {
            left: "-",
            right: "+"
          }
        }[i][a] : s = a;
        var l = {
          horizontal: "center",
          vertical: s >= 0 || s === "+" ? "left" : "right"
        }, u = {
          horizontal: s >= 0 || s === "+" ? "top" : "bottom",
          vertical: "middle"
        }, f = {
          horizontal: 0,
          vertical: O0 / 2
        }, h = i === "vertical" ? o.height : o.width, c = t.getModel("controlStyle"), v = c.get("show", !0), d = v ? c.get("itemSize") : 0, p = v ? c.get("itemGap") : 0, g = d + p, y = t.get(["label", "rotate"]) || 0;
        y = y * O0 / 180;
        var m, _, S, b = c.get("position", !0), w = v && c.get("showPlayBtn", !0), T = v && c.get("showPrevBtn", !0), C = v && c.get("showNextBtn", !0), I = 0, L = h;
        b === "left" || b === "bottom" ? (w && (m = [0, 0], I += g), T && (_ = [I, 0], I += g), C && (S = [L - d, 0], L -= g)) : (w && (m = [L - d, 0], L -= g), T && (_ = [0, 0], I += g), C && (S = [L - d, 0], L -= g));
        var P = [I, L];
        return t.get("inverse") && P.reverse(), {
          viewRect: o,
          mainLength: h,
          orient: i,
          rotation: f[i],
          labelRotation: y,
          labelPosOpt: s,
          labelAlign: t.get(["label", "align"]) || l[i],
          labelBaseline: t.get(["label", "verticalAlign"]) || t.get(["label", "baseline"]) || u[i],
          // Based on mainGroup.
          playPosition: m,
          prevBtnPosition: _,
          nextBtnPosition: S,
          axisExtent: P,
          controlSize: d,
          controlGap: p
        };
      }, e.prototype._position = function(t, n) {
        var a = this._mainGroup, i = this._labelGroup, o = t.viewRect;
        if (t.orient === "vertical") {
          var s = dr(), l = o.x, u = o.y + o.height;
          jr(s, s, [-l, -u]), ga(s, s, -O0 / 2), jr(s, s, [l, u]), o = o.clone(), o.applyTransform(s);
        }
        var f = m(o), h = m(a.getBoundingRect()), c = m(i.getBoundingRect()), v = [a.x, a.y], d = [i.x, i.y];
        d[0] = v[0] = f[0][0];
        var p = t.labelPosOpt;
        if (p == null || j(p)) {
          var g = p === "+" ? 0 : 1;
          _(v, h, f, 1, g), _(d, c, f, 1, 1 - g);
        } else {
          var g = p >= 0 ? 0 : 1;
          _(v, h, f, 1, g), d[1] = v[1] + p;
        }
        a.setPosition(v), i.setPosition(d), a.rotation = i.rotation = t.rotation, y(a), y(i);
        function y(S) {
          S.originX = f[0][0] - S.x, S.originY = f[1][0] - S.y;
        }
        function m(S) {
          return [[S.x, S.x + S.width], [S.y, S.y + S.height]];
        }
        function _(S, b, w, T, C) {
          S[T] += w[T][C] - b[T][C];
        }
      }, e.prototype._createAxis = function(t, n) {
        var a = n.getData(), i = n.get("axisType"), o = e7(n, i);
        o.getTicks = function() {
          return a.mapArray(["value"], function(u) {
            return {
              value: u
            };
          });
        };
        var s = a.getDataExtent("value");
        o.setExtent(s[0], s[1]), o.calcNiceTicks();
        var l = new Q$("value", o, t.axisExtent, i);
        return l.model = n, l;
      }, e.prototype._createGroup = function(t) {
        var n = this[t] = new ct();
        return this.group.add(n), n;
      }, e.prototype._renderAxisLine = function(t, n, a, i) {
        var o = a.getExtent();
        if (i.get(["lineStyle", "show"])) {
          var s = new Se({
            shape: {
              x1: o[0],
              y1: 0,
              x2: o[1],
              y2: 0
            },
            style: H({
              lineCap: "round"
            }, i.getModel("lineStyle").getLineStyle()),
            silent: !0,
            z2: 1
          });
          n.add(s);
          var l = this._progressLine = new Se({
            shape: {
              x1: o[0],
              x2: this._currentPointer ? this._currentPointer.x : o[0],
              y1: 0,
              y2: 0
            },
            style: ot({
              lineCap: "round",
              lineWidth: s.style.lineWidth
            }, i.getModel(["progress", "lineStyle"]).getLineStyle()),
            silent: !0,
            z2: 1
          });
          n.add(l);
        }
      }, e.prototype._renderAxisTick = function(t, n, a, i) {
        var o = this, s = i.getData(), l = a.scale.getTicks();
        this._tickSymbols = [], M(l, function(u) {
          var f = a.dataToCoord(u.value), h = s.getItemModel(u.value), c = h.getModel("itemStyle"), v = h.getModel(["emphasis", "itemStyle"]), d = h.getModel(["progress", "itemStyle"]), p = {
            x: f,
            y: 0,
            onclick: J(o._changeTimeline, o, u.value)
          }, g = o2(h, c, n, p);
          g.ensureState("emphasis").style = v.getItemStyle(), g.ensureState("progress").style = d.getItemStyle(), Da(g);
          var y = gt(g);
          h.get("tooltip") ? (y.dataIndex = u.value, y.dataModel = i) : y.dataIndex = y.dataModel = null, o._tickSymbols.push(g);
        });
      }, e.prototype._renderAxisLabel = function(t, n, a, i) {
        var o = this, s = a.getLabelModel();
        if (s.get("show")) {
          var l = i.getData(), u = a.getViewLabels();
          this._tickLabels = [], M(u, function(f) {
            var h = f.tickValue, c = l.getItemModel(h), v = c.getModel("label"), d = c.getModel(["emphasis", "label"]), p = c.getModel(["progress", "label"]), g = a.dataToCoord(f.tickValue), y = new kt({
              x: g,
              y: 0,
              rotation: t.labelRotation - t.rotation,
              onclick: J(o._changeTimeline, o, h),
              silent: !1,
              style: jt(v, {
                text: f.formattedLabel,
                align: t.labelAlign,
                verticalAlign: t.labelBaseline
              })
            });
            y.ensureState("emphasis").style = jt(d), y.ensureState("progress").style = jt(p), n.add(y), Da(y), i2(y).dataIndex = h, o._tickLabels.push(y);
          });
        }
      }, e.prototype._renderControl = function(t, n, a, i) {
        var o = t.controlSize, s = t.rotation, l = i.getModel("controlStyle").getItemStyle(), u = i.getModel(["emphasis", "controlStyle"]).getItemStyle(), f = i.getPlayState(), h = i.get("inverse", !0);
        c(t.nextBtnPosition, "next", J(this._changeTimeline, this, h ? "-" : "+")), c(t.prevBtnPosition, "prev", J(this._changeTimeline, this, h ? "+" : "-")), c(t.playPosition, f ? "stop" : "play", J(this._handlePlayClick, this, !f), !0);
        function c(v, d, p, g) {
          if (v) {
            var y = en(_t(i.get(["controlStyle", d + "BtnSize"]), o), o), m = [0, -y / 2, y, y], _ = n7(i, d + "Icon", m, {
              x: v[0],
              y: v[1],
              originX: o / 2,
              originY: 0,
              rotation: g ? -s : 0,
              rectHover: !0,
              style: l,
              onclick: p
            });
            _.ensureState("emphasis").style = u, n.add(_), Da(_);
          }
        }
      }, e.prototype._renderCurrentPointer = function(t, n, a, i) {
        var o = i.getData(), s = i.getCurrentIndex(), l = o.getItemModel(s).getModel("checkpointStyle"), u = this, f = {
          onCreate: function(h) {
            h.draggable = !0, h.drift = J(u._handlePointerDrag, u), h.ondragend = J(u._handlePointerDragend, u), s2(h, u._progressLine, s, a, i, !0);
          },
          onUpdate: function(h) {
            s2(h, u._progressLine, s, a, i);
          }
        };
        this._currentPointer = o2(l, l, this._mainGroup, {}, this._currentPointer, f);
      }, e.prototype._handlePlayClick = function(t) {
        this._clearTimer(), this.api.dispatchAction({
          type: "timelinePlayChange",
          playState: t,
          from: this.uid
        });
      }, e.prototype._handlePointerDrag = function(t, n, a) {
        this._clearTimer(), this._pointerChangeTimeline([a.offsetX, a.offsetY]);
      }, e.prototype._handlePointerDragend = function(t) {
        this._pointerChangeTimeline([t.offsetX, t.offsetY], !0);
      }, e.prototype._pointerChangeTimeline = function(t, n) {
        var a = this._toAxisCoord(t)[0], i = this._axis, o = yr(i.getExtent().slice());
        a > o[1] && (a = o[1]), a < o[0] && (a = o[0]), this._currentPointer.x = a, this._currentPointer.markRedraw();
        var s = this._progressLine;
        s && (s.shape.x2 = a, s.dirty());
        var l = this._findNearestTick(a), u = this.model;
        (n || l !== u.getCurrentIndex() && u.get("realtime")) && this._changeTimeline(l);
      }, e.prototype._doPlayStop = function() {
        var t = this;
        this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
          var n = t.model;
          t._changeTimeline(n.getCurrentIndex() + (n.get("rewind", !0) ? -1 : 1));
        }, this.model.get("playInterval")));
      }, e.prototype._toAxisCoord = function(t) {
        var n = this._mainGroup.getLocalTransform();
        return on(t, n, !0);
      }, e.prototype._findNearestTick = function(t) {
        var n = this.model.getData(), a = 1 / 0, i, o = this._axis;
        return n.each(["value"], function(s, l) {
          var u = o.dataToCoord(s), f = Math.abs(u - t);
          f < a && (a = f, i = l);
        }), i;
      }, e.prototype._clearTimer = function() {
        this._timer && (clearTimeout(this._timer), this._timer = null);
      }, e.prototype._changeTimeline = function(t) {
        var n = this.model.getCurrentIndex();
        t === "+" ? t = n + 1 : t === "-" && (t = n - 1), this.api.dispatchAction({
          type: "timelineChange",
          currentIndex: t,
          from: this.uid
        });
      }, e.prototype._updateTicksStatus = function() {
        var t = this.model.getCurrentIndex(), n = this._tickSymbols, a = this._tickLabels;
        if (n)
          for (var i = 0; i < n.length; i++)
            n && n[i] && n[i].toggleState("progress", i < t);
        if (a)
          for (var i = 0; i < a.length; i++)
            a && a[i] && a[i].toggleState("progress", i2(a[i]).dataIndex <= t);
      }, e.type = "timeline.slider", e;
    }(J$)
  );
  function e7(r, e) {
    if (e = e || r.get("type"), e)
      switch (e) {
        case "category":
          return new tc({
            ordinalMeta: r.getCategories(),
            extent: [1 / 0, -1 / 0]
          });
        case "time":
          return new qg({
            locale: r.ecModel.getLocaleModel(),
            useUTC: r.ecModel.get("useUTC")
          });
        default:
          return new na();
      }
  }
  function r7(r, e) {
    return ye(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    }, r.get("padding"));
  }
  function n7(r, e, t, n) {
    var a = n.style, i = $o(r.get(["controlStyle", e]), n || {}, new xt(t[0], t[1], t[2], t[3]));
    return a && i.setStyle(a), i;
  }
  function o2(r, e, t, n, a, i) {
    var o = e.get("color");
    if (a)
      a.setColor(o), t.add(a), i && i.onUpdate(a);
    else {
      var s = r.get("symbol");
      a = ve(s, -1, -1, 2, 2, o), a.setStyle("strokeNoScale", !0), t.add(a), i && i.onCreate(a);
    }
    var l = e.getItemStyle(["color"]);
    a.setStyle(l), n = mt({
      rectHover: !0,
      z2: 100
    }, n, !0);
    var u = Ql(r.get("symbolSize"));
    n.scaleX = u[0] / 2, n.scaleY = u[1] / 2;
    var f = os(r.get("symbolOffset"), u);
    f && (n.x = (n.x || 0) + f[0], n.y = (n.y || 0) + f[1]);
    var h = r.get("symbolRotate");
    return n.rotation = (h || 0) * Math.PI / 180 || 0, a.attr(n), a.updateTransform(), a;
  }
  function s2(r, e, t, n, a, i) {
    if (!r.dragging) {
      var o = a.getModel("checkpointStyle"), s = n.dataToCoord(a.getData().get("value", t));
      if (i || !o.get("animation", !0))
        r.attr({
          x: s,
          y: 0
        }), e && e.attr({
          shape: {
            x2: s
          }
        });
      else {
        var l = {
          duration: o.get("animationDuration", !0),
          easing: o.get("animationEasing", !0)
        };
        r.stopAnimation(null, !0), r.animateTo({
          x: s,
          y: 0
        }, l), e && e.animateTo({
          shape: {
            x2: s
          }
        }, l);
      }
    }
  }
  function a7(r) {
    r.registerAction({
      type: "timelineChange",
      event: "timelineChanged",
      update: "prepareAndUpdate"
    }, function(e, t, n) {
      var a = t.getComponent("timeline");
      return a && e.currentIndex != null && (a.setCurrentIndex(e.currentIndex), !a.get("loop", !0) && a.isIndexMax() && a.getPlayState() && (a.setPlayState(!1), n.dispatchAction({
        type: "timelinePlayChange",
        playState: !1,
        from: e.from
      }))), t.resetOption("timeline", {
        replaceMerge: a.get("replaceMerge", !0)
      }), ot({
        currentIndex: a.option.currentIndex
      }, e);
    }), r.registerAction({
      type: "timelinePlayChange",
      event: "timelinePlayChanged",
      update: "update"
    }, function(e, t) {
      var n = t.getComponent("timeline");
      n && e.playState != null && n.setPlayState(e.playState);
    });
  }
  function i7(r) {
    var e = r && r.timeline;
    U(e) || (e = e ? [e] : []), M(e, function(t) {
      t && o7(t);
    });
  }
  function o7(r) {
    var e = r.type, t = {
      number: "value",
      time: "time"
    };
    if (t[e] && (r.axisType = t[e], delete r.type), l2(r), vo(r, "controlPosition")) {
      var n = r.controlStyle || (r.controlStyle = {});
      vo(n, "position") || (n.position = r.controlPosition), n.position === "none" && !vo(n, "show") && (n.show = !1, delete n.position), delete r.controlPosition;
    }
    M(r.data || [], function(a) {
      it(a) && !U(a) && (!vo(a, "value") && vo(a, "name") && (a.value = a.name), l2(a));
    });
  }
  function l2(r) {
    var e = r.itemStyle || (r.itemStyle = {}), t = e.emphasis || (e.emphasis = {}), n = r.label || r.label || {}, a = n.normal || (n.normal = {}), i = {
      normal: 1,
      emphasis: 1
    };
    M(n, function(o, s) {
      !i[s] && !vo(a, s) && (a[s] = o);
    }), t.label && !vo(n, "emphasis") && (n.emphasis = t.label, delete t.label);
  }
  function vo(r, e) {
    return r.hasOwnProperty(e);
  }
  function s7(r) {
    r.registerComponentModel(a2), r.registerComponentView(t7), r.registerSubTypeDefaulter("timeline", function() {
      return "slider";
    }), a7(r), r.registerPreprocessor(i7);
  }
  function N0(r, e) {
    if (!r)
      return !1;
    for (var t = U(r) ? r : [r], n = 0; n < t.length; n++)
      if (t[n] && t[n][e])
        return !0;
    return !1;
  }
  function ev(r) {
    gi(r, "label", ["show"]);
  }
  var rv = Nt(), ua = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.createdBySelf = !1, t;
      }
      return e.prototype.init = function(t, n, a) {
        if (this.type === "marker")
          throw new Error("Marker component is abstract component. Use markLine, markPoint, markArea instead.");
        this.mergeDefaultAndTheme(t, a), this._mergeOption(t, a, !1, !0);
      }, e.prototype.isAnimationEnabled = function() {
        if (z.node)
          return !1;
        var t = this.__hostSeries;
        return this.getShallow("animation") && t && t.isAnimationEnabled();
      }, e.prototype.mergeOption = function(t, n) {
        this._mergeOption(t, n, !1, !1);
      }, e.prototype._mergeOption = function(t, n, a, i) {
        var o = this.mainType;
        a || n.eachSeries(function(s) {
          var l = s.get(this.mainType, !0), u = rv(s)[o];
          if (!l || !l.data) {
            rv(s)[o] = null;
            return;
          }
          u ? u._mergeOption(l, n, !0) : (i && ev(l), M(l.data, function(f) {
            f instanceof Array ? (ev(f[0]), ev(f[1])) : ev(f);
          }), u = this.createMarkerModelFromSeries(l, this, n), H(u, {
            mainType: this.mainType,
            // Use the same series index and name
            seriesIndex: s.seriesIndex,
            name: s.name,
            createdBySelf: !0
          }), u.__hostSeries = s), rv(s)[o] = u;
        }, this);
      }, e.prototype.formatTooltip = function(t, n, a) {
        var i = this.getData(), o = this.getRawValue(t), s = i.getName(t);
        return Ae("section", {
          header: this.name,
          blocks: [Ae("nameValue", {
            name: s,
            value: o,
            noName: !s,
            noValue: o == null
          })]
        });
      }, e.prototype.getData = function() {
        return this._data;
      }, e.prototype.setData = function(t) {
        this._data = t;
      }, e.getMarkerModelFromSeries = function(t, n) {
        return rv(t)[n];
      }, e.type = "marker", e.dependencies = ["series", "grid", "polar", "geo"], e;
    }(Ct)
  );
  le(ua, ig.prototype);
  var l7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.createMarkerModelFromSeries = function(t, n, a) {
        return new e(t, n, a);
      }, e.type = "markPoint", e.defaultOption = {
        // zlevel: 0,
        z: 5,
        symbol: "pin",
        symbolSize: 50,
        // symbolRotate: 0,
        // symbolOffset: [0, 0]
        tooltip: {
          trigger: "item"
        },
        label: {
          show: !0,
          position: "inside"
        },
        itemStyle: {
          borderWidth: 2
        },
        emphasis: {
          label: {
            show: !0
          }
        }
      }, e;
    }(ua)
  );
  function V0(r) {
    return !(isNaN(parseFloat(r.x)) && isNaN(parseFloat(r.y)));
  }
  function u7(r) {
    return !isNaN(parseFloat(r.x)) && !isNaN(parseFloat(r.y));
  }
  function nv(r, e, t, n, a, i) {
    var o = [], s = ra(
      e,
      n
      /* , otherDataDim */
    ), l = s ? e.getCalculationInfo("stackResultDimension") : n, u = z0(e, l, r), f = e.indicesOfNearest(l, u)[0];
    o[a] = e.get(t, f), o[i] = e.get(l, f);
    var h = e.get(n, f), c = rn(e.get(n, f));
    return c = Math.min(c, 20), c >= 0 && (o[i] = +o[i].toFixed(c)), [o, h];
  }
  var B0 = {
    min: yt(nv, "min"),
    max: yt(nv, "max"),
    average: yt(nv, "average"),
    median: yt(nv, "median")
  };
  function Uu(r, e) {
    if (e) {
      var t = r.getData(), n = r.coordinateSystem, a = n.dimensions;
      if (!u7(e) && !U(e.coord) && n) {
        var i = u2(e, t, n, r);
        if (e = ht(e), e.type && B0[e.type] && i.baseAxis && i.valueAxis) {
          var o = bt(a, i.baseAxis.dim), s = bt(a, i.valueAxis.dim), l = B0[e.type](t, i.baseDataDim, i.valueDataDim, o, s);
          e.coord = l[0], e.value = l[1];
        } else
          e.coord = [e.xAxis != null ? e.xAxis : e.radiusAxis, e.yAxis != null ? e.yAxis : e.angleAxis];
      }
      if (e.coord == null)
        e.coord = [];
      else
        for (var u = e.coord, f = 0; f < 2; f++)
          B0[u[f]] && (u[f] = z0(t, t.mapDimension(a[f]), u[f]));
      return e;
    }
  }
  function u2(r, e, t, n) {
    var a = {};
    return r.valueIndex != null || r.valueDim != null ? (a.valueDataDim = r.valueIndex != null ? e.getDimension(r.valueIndex) : r.valueDim, a.valueAxis = t.getAxis(f7(n, a.valueDataDim)), a.baseAxis = t.getOtherAxis(a.valueAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim)) : (a.baseAxis = n.getBaseAxis(), a.valueAxis = t.getOtherAxis(a.baseAxis), a.baseDataDim = e.mapDimension(a.baseAxis.dim), a.valueDataDim = e.mapDimension(a.valueAxis.dim)), a;
  }
  function f7(r, e) {
    var t = r.getData().getDimensionInfo(e);
    return t && t.coordDim;
  }
  function Yu(r, e) {
    return r && r.containData && e.coord && !V0(e) ? r.containData(e.coord) : !0;
  }
  function h7(r, e, t) {
    return r && r.containZone && e.coord && t.coord && !V0(e) && !V0(t) ? r.containZone(e.coord, t.coord) : !0;
  }
  function f2(r, e) {
    return r ? function(t, n, a, i) {
      var o = i < 2 ? t.coord && t.coord[i] : t.value;
      return ka(o, e[i]);
    } : function(t, n, a, i) {
      return ka(t.value, e[i]);
    };
  }
  function z0(r, e, t) {
    if (t === "average") {
      var n = 0, a = 0;
      return r.each(e, function(i, o) {
        isNaN(i) || (n += i, a++);
      }), n / a;
    } else
      return t === "median" ? r.getMedian(e) : r.getDataExtent(e)[t === "max" ? 1 : 0];
  }
  var G0 = Nt(), F0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.init = function() {
        this.markerGroupMap = nt();
      }, e.prototype.render = function(t, n, a) {
        var i = this, o = this.markerGroupMap;
        o.each(function(s) {
          G0(s).keep = !1;
        }), n.eachSeries(function(s) {
          var l = ua.getMarkerModelFromSeries(s, i.type);
          l && i.renderSeries(s, l, n, a);
        }), o.each(function(s) {
          !G0(s).keep && i.group.remove(s.group);
        });
      }, e.prototype.markKeep = function(t) {
        G0(t).keep = !0;
      }, e.prototype.toggleBlurSeries = function(t, n) {
        var a = this;
        M(t, function(i) {
          var o = ua.getMarkerModelFromSeries(i, a.type);
          if (o) {
            var s = o.getData();
            s.eachItemGraphicEl(function(l) {
              l && (n ? XS(l) : up(l));
            });
          }
        });
      }, e.type = "marker", e;
    }(Jt)
  );
  function h2(r, e, t) {
    var n = e.coordinateSystem;
    r.each(function(a) {
      var i = r.getItemModel(a), o, s = Z(i.get("x"), t.getWidth()), l = Z(i.get("y"), t.getHeight());
      if (!isNaN(s) && !isNaN(l))
        o = [s, l];
      else if (e.getMarkerPosition)
        o = e.getMarkerPosition(r.getValues(r.dimensions, a));
      else if (n) {
        var u = r.get(n.dimensions[0], a), f = r.get(n.dimensions[1], a);
        o = n.dataToPoint([u, f]);
      }
      isNaN(s) || (o[0] = s), isNaN(l) || (o[1] = l), r.setItemLayout(a, o);
    });
  }
  var c7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.updateTransform = function(t, n, a) {
        n.eachSeries(function(i) {
          var o = ua.getMarkerModelFromSeries(i, "markPoint");
          o && (h2(o.getData(), i, a), this.markerGroupMap.get(i.id).updateLayout());
        }, this);
      }, e.prototype.renderSeries = function(t, n, a, i) {
        var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, new yu()), h = v7(o, t, n);
        n.setData(h), h2(n.getData(), t, i), h.each(function(c) {
          var v = h.getItemModel(c), d = v.getShallow("symbol"), p = v.getShallow("symbolSize"), g = v.getShallow("symbolRotate"), y = v.getShallow("symbolOffset"), m = v.getShallow("symbolKeepAspect");
          if (rt(d) || rt(p) || rt(g) || rt(y)) {
            var _ = n.getRawValue(c), S = n.getDataParams(c);
            rt(d) && (d = d(_, S)), rt(p) && (p = p(_, S)), rt(g) && (g = g(_, S)), rt(y) && (y = y(_, S));
          }
          var b = v.getModel("itemStyle").getItemStyle(), w = Jl(l, "color");
          b.fill || (b.fill = w), h.setItemVisual(c, {
            symbol: d,
            symbolSize: p,
            symbolRotate: g,
            symbolOffset: y,
            symbolKeepAspect: m,
            style: b
          });
        }), f.updateData(h), this.group.add(f.group), h.eachItemGraphicEl(function(c) {
          c.traverse(function(v) {
            gt(v).dataModel = n;
          });
        }), this.markKeep(f), f.group.silent = n.get("silent") || t.get("silent");
      }, e.type = "markPoint", e;
    }(F0)
  );
  function v7(r, e, t) {
    var n;
    r ? n = Y(r && r.dimensions, function(s) {
      var l = e.getData().getDimensionInfo(e.getData().mapDimension(s)) || {};
      return H(H({}, l), {
        name: s,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    }) : n = [{
      name: "value",
      type: "float"
    }];
    var a = new Ue(n, t), i = Y(t.get("data"), yt(Uu, e));
    r && (i = Ht(i, yt(Yu, r)));
    var o = f2(!!r, n);
    return a.initData(i, null, o), a;
  }
  function d7(r) {
    r.registerComponentModel(l7), r.registerComponentView(c7), r.registerPreprocessor(function(e) {
      N0(e.series, "markPoint") && (e.markPoint = e.markPoint || {});
    });
  }
  var p7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.createMarkerModelFromSeries = function(t, n, a) {
        return new e(t, n, a);
      }, e.type = "markLine", e.defaultOption = {
        // zlevel: 0,
        z: 5,
        symbol: ["circle", "arrow"],
        symbolSize: [8, 16],
        // symbolRotate: 0,
        symbolOffset: 0,
        precision: 2,
        tooltip: {
          trigger: "item"
        },
        label: {
          show: !0,
          position: "end",
          distance: 5
        },
        lineStyle: {
          type: "dashed"
        },
        emphasis: {
          label: {
            show: !0
          },
          lineStyle: {
            width: 3
          }
        },
        animationEasing: "linear"
      }, e;
    }(ua)
  ), av = Nt(), g7 = function(r, e, t, n) {
    var a = r.getData(), i;
    if (U(n))
      i = n;
    else {
      var o = n.type;
      if (o === "min" || o === "max" || o === "average" || o === "median" || n.xAxis != null || n.yAxis != null) {
        var s = void 0, l = void 0;
        if (n.yAxis != null || n.xAxis != null)
          s = e.getAxis(n.yAxis != null ? "y" : "x"), l = he(n.yAxis, n.xAxis);
        else {
          var u = u2(n, a, e, r);
          s = u.valueAxis;
          var f = Hg(a, u.valueDataDim);
          l = z0(a, f, o);
        }
        var h = s.dim === "x" ? 0 : 1, c = 1 - h, v = ht(n), d = {
          coord: []
        };
        v.type = null, v.coord = [], v.coord[c] = -1 / 0, d.coord[c] = 1 / 0;
        var p = t.get("precision");
        p >= 0 && Ot(l) && (l = +l.toFixed(Math.min(p, 20))), v.coord[h] = d.coord[h] = l, i = [v, d, {
          type: o,
          valueIndex: n.valueIndex,
          // Force to use the value of calculated value.
          value: l
        }];
      } else
        Cr("Invalid markLine data."), i = [];
    }
    var g = [Uu(r, i[0]), Uu(r, i[1]), H({}, i[2])];
    return g[2].type = g[2].type || null, mt(g[2], g[0]), mt(g[2], g[1]), g;
  };
  function iv(r) {
    return !isNaN(r) && !isFinite(r);
  }
  function c2(r, e, t, n) {
    var a = 1 - r, i = n.dimensions[r];
    return iv(e[a]) && iv(t[a]) && e[r] === t[r] && n.getAxis(i).containData(e[r]);
  }
  function y7(r, e) {
    if (r.type === "cartesian2d") {
      var t = e[0].coord, n = e[1].coord;
      if (t && n && (c2(1, t, n, r) || c2(0, t, n, r)))
        return !0;
    }
    return Yu(r, e[0]) && Yu(r, e[1]);
  }
  function H0(r, e, t, n, a) {
    var i = n.coordinateSystem, o = r.getItemModel(e), s, l = Z(o.get("x"), a.getWidth()), u = Z(o.get("y"), a.getHeight());
    if (!isNaN(l) && !isNaN(u))
      s = [l, u];
    else {
      if (n.getMarkerPosition)
        s = n.getMarkerPosition(r.getValues(r.dimensions, e));
      else {
        var f = i.dimensions, h = r.get(f[0], e), c = r.get(f[1], e);
        s = i.dataToPoint([h, c]);
      }
      if (eo(i, "cartesian2d")) {
        var v = i.getAxis("x"), d = i.getAxis("y"), f = i.dimensions;
        iv(r.get(f[0], e)) ? s[0] = v.toGlobalCoord(v.getExtent()[t ? 0 : 1]) : iv(r.get(f[1], e)) && (s[1] = d.toGlobalCoord(d.getExtent()[t ? 0 : 1]));
      }
      isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
    }
    r.setItemLayout(e, s);
  }
  var m7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.updateTransform = function(t, n, a) {
        n.eachSeries(function(i) {
          var o = ua.getMarkerModelFromSeries(i, "markLine");
          if (o) {
            var s = o.getData(), l = av(o).from, u = av(o).to;
            l.each(function(f) {
              H0(l, f, !0, i, a), H0(u, f, !1, i, a);
            }), s.each(function(f) {
              s.setItemLayout(f, [l.getItemLayout(f), u.getItemLayout(f)]);
            }), this.markerGroupMap.get(i.id).updateLayout();
          }
        }, this);
      }, e.prototype.renderSeries = function(t, n, a, i) {
        var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, new gm());
        this.group.add(f.group);
        var h = _7(o, t, n), c = h.from, v = h.to, d = h.line;
        av(n).from = c, av(n).to = v, n.setData(d);
        var p = n.get("symbol"), g = n.get("symbolSize"), y = n.get("symbolRotate"), m = n.get("symbolOffset");
        U(p) || (p = [p, p]), U(g) || (g = [g, g]), U(y) || (y = [y, y]), U(m) || (m = [m, m]), h.from.each(function(S) {
          _(c, S, !0), _(v, S, !1);
        }), d.each(function(S) {
          var b = d.getItemModel(S).getModel("lineStyle").getLineStyle();
          d.setItemLayout(S, [c.getItemLayout(S), v.getItemLayout(S)]), b.stroke == null && (b.stroke = c.getItemVisual(S, "style").fill), d.setItemVisual(S, {
            fromSymbolKeepAspect: c.getItemVisual(S, "symbolKeepAspect"),
            fromSymbolOffset: c.getItemVisual(S, "symbolOffset"),
            fromSymbolRotate: c.getItemVisual(S, "symbolRotate"),
            fromSymbolSize: c.getItemVisual(S, "symbolSize"),
            fromSymbol: c.getItemVisual(S, "symbol"),
            toSymbolKeepAspect: v.getItemVisual(S, "symbolKeepAspect"),
            toSymbolOffset: v.getItemVisual(S, "symbolOffset"),
            toSymbolRotate: v.getItemVisual(S, "symbolRotate"),
            toSymbolSize: v.getItemVisual(S, "symbolSize"),
            toSymbol: v.getItemVisual(S, "symbol"),
            style: b
          });
        }), f.updateData(d), h.line.eachItemGraphicEl(function(S) {
          gt(S).dataModel = n, S.traverse(function(b) {
            gt(b).dataModel = n;
          });
        });
        function _(S, b, w) {
          var T = S.getItemModel(b);
          H0(S, b, w, t, i);
          var C = T.getModel("itemStyle").getItemStyle();
          C.fill == null && (C.fill = Jl(l, "color")), S.setItemVisual(b, {
            symbolKeepAspect: T.get("symbolKeepAspect"),
            // `0` should be considered as a valid value, so use `retrieve2` instead of `||`
            symbolOffset: _t(T.get("symbolOffset", !0), m[w ? 0 : 1]),
            symbolRotate: _t(T.get("symbolRotate", !0), y[w ? 0 : 1]),
            // TODO: when 2d array is supported, it should ignore parent
            symbolSize: _t(T.get("symbolSize"), g[w ? 0 : 1]),
            symbol: _t(T.get("symbol", !0), p[w ? 0 : 1]),
            style: C
          });
        }
        this.markKeep(f), f.group.silent = n.get("silent") || t.get("silent");
      }, e.type = "markLine", e;
    }(F0)
  );
  function _7(r, e, t) {
    var n;
    r ? n = Y(r && r.dimensions, function(u) {
      var f = e.getData().getDimensionInfo(e.getData().mapDimension(u)) || {};
      return H(H({}, f), {
        name: u,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    }) : n = [{
      name: "value",
      type: "float"
    }];
    var a = new Ue(n, t), i = new Ue(n, t), o = new Ue([], t), s = Y(t.get("data"), yt(g7, e, r, t));
    r && (s = Ht(s, yt(y7, r)));
    var l = f2(!!r, n);
    return a.initData(Y(s, function(u) {
      return u[0];
    }), null, l), i.initData(Y(s, function(u) {
      return u[1];
    }), null, l), o.initData(Y(s, function(u) {
      return u[2];
    })), o.hasItemOption = !0, {
      from: a,
      to: i,
      line: o
    };
  }
  function S7(r) {
    r.registerComponentModel(p7), r.registerComponentView(m7), r.registerPreprocessor(function(e) {
      N0(e.series, "markLine") && (e.markLine = e.markLine || {});
    });
  }
  var x7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.createMarkerModelFromSeries = function(t, n, a) {
        return new e(t, n, a);
      }, e.type = "markArea", e.defaultOption = {
        // zlevel: 0,
        // PENDING
        z: 1,
        tooltip: {
          trigger: "item"
        },
        // markArea should fixed on the coordinate system
        animation: !1,
        label: {
          show: !0,
          position: "top"
        },
        itemStyle: {
          // color and borderColor default to use color from series
          // color: 'auto'
          // borderColor: 'auto'
          borderWidth: 0
        },
        emphasis: {
          label: {
            show: !0,
            position: "top"
          }
        }
      }, e;
    }(ua)
  ), ov = Nt(), w7 = function(r, e, t, n) {
    var a = n[0], i = n[1];
    if (!(!a || !i)) {
      var o = Uu(r, a), s = Uu(r, i), l = o.coord, u = s.coord;
      l[0] = he(l[0], -1 / 0), l[1] = he(l[1], -1 / 0), u[0] = he(u[0], 1 / 0), u[1] = he(u[1], 1 / 0);
      var f = sf([{}, o, s]);
      return f.coord = [o.coord, s.coord], f.x0 = o.x, f.y0 = o.y, f.x1 = s.x, f.y1 = s.y, f;
    }
  };
  function sv(r) {
    return !isNaN(r) && !isFinite(r);
  }
  function v2(r, e, t, n) {
    var a = 1 - r;
    return sv(e[a]) && sv(t[a]);
  }
  function b7(r, e) {
    var t = e.coord[0], n = e.coord[1], a = {
      coord: t,
      x: e.x0,
      y: e.y0
    }, i = {
      coord: n,
      x: e.x1,
      y: e.y1
    };
    return eo(r, "cartesian2d") ? t && n && (v2(1, t, n) || v2(0, t, n)) ? !0 : h7(r, a, i) : Yu(r, a) || Yu(r, i);
  }
  function d2(r, e, t, n, a) {
    var i = n.coordinateSystem, o = r.getItemModel(e), s, l = Z(o.get(t[0]), a.getWidth()), u = Z(o.get(t[1]), a.getHeight());
    if (!isNaN(l) && !isNaN(u))
      s = [l, u];
    else {
      if (n.getMarkerPosition) {
        var f = r.getValues(["x0", "y0"], e), h = r.getValues(["x1", "y1"], e), c = i.clampData(f), v = i.clampData(h), d = [];
        t[0] === "x0" ? d[0] = c[0] > v[0] ? h[0] : f[0] : d[0] = c[0] > v[0] ? f[0] : h[0], t[1] === "y0" ? d[1] = c[1] > v[1] ? h[1] : f[1] : d[1] = c[1] > v[1] ? f[1] : h[1], s = n.getMarkerPosition(d, t, !0);
      } else {
        var p = r.get(t[0], e), g = r.get(t[1], e), y = [p, g];
        i.clampData && i.clampData(y, y), s = i.dataToPoint(y, !0);
      }
      if (eo(i, "cartesian2d")) {
        var m = i.getAxis("x"), _ = i.getAxis("y"), p = r.get(t[0], e), g = r.get(t[1], e);
        sv(p) ? s[0] = m.toGlobalCoord(m.getExtent()[t[0] === "x0" ? 0 : 1]) : sv(g) && (s[1] = _.toGlobalCoord(_.getExtent()[t[1] === "y0" ? 0 : 1]));
      }
      isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
    }
    return s;
  }
  var p2 = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]], T7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.updateTransform = function(t, n, a) {
        n.eachSeries(function(i) {
          var o = ua.getMarkerModelFromSeries(i, "markArea");
          if (o) {
            var s = o.getData();
            s.each(function(l) {
              var u = Y(p2, function(h) {
                return d2(s, l, h, i, a);
              });
              s.setItemLayout(l, u);
              var f = s.getItemGraphicEl(l);
              f.setShape("points", u);
            });
          }
        }, this);
      }, e.prototype.renderSeries = function(t, n, a, i) {
        var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, {
          group: new ct()
        });
        this.group.add(f.group), this.markKeep(f);
        var h = C7(o, t, n);
        n.setData(h), h.each(function(c) {
          var v = Y(p2, function(C) {
            return d2(h, c, C, t, i);
          }), d = o.getAxis("x").scale, p = o.getAxis("y").scale, g = d.getExtent(), y = p.getExtent(), m = [d.parse(h.get("x0", c)), d.parse(h.get("x1", c))], _ = [p.parse(h.get("y0", c)), p.parse(h.get("y1", c))];
          yr(m), yr(_);
          var S = !(g[0] > m[1] || g[1] < m[0] || y[0] > _[1] || y[1] < _[0]), b = !S;
          h.setItemLayout(c, {
            points: v,
            allClipped: b
          });
          var w = h.getItemModel(c).getModel("itemStyle").getItemStyle(), T = Jl(l, "color");
          w.fill || (w.fill = T, j(w.fill) && (w.fill = ol(w.fill, 0.4))), w.stroke || (w.stroke = T), h.setItemVisual(c, "style", w);
        }), h.diff(ov(f).data).add(function(c) {
          var v = h.getItemLayout(c);
          if (!v.allClipped) {
            var d = new ze({
              shape: {
                points: v.points
              }
            });
            h.setItemGraphicEl(c, d), f.group.add(d);
          }
        }).update(function(c, v) {
          var d = ov(f).data.getItemGraphicEl(v), p = h.getItemLayout(c);
          p.allClipped ? d && f.group.remove(d) : (d ? Vt(d, {
            shape: {
              points: p.points
            }
          }, n, c) : d = new ze({
            shape: {
              points: p.points
            }
          }), h.setItemGraphicEl(c, d), f.group.add(d));
        }).remove(function(c) {
          var v = ov(f).data.getItemGraphicEl(c);
          f.group.remove(v);
        }).execute(), h.eachItemGraphicEl(function(c, v) {
          var d = h.getItemModel(v), p = h.getItemVisual(v, "style");
          c.useStyle(h.getItemVisual(v, "style")), ke(c, Ce(d), {
            labelFetcher: n,
            labelDataIndex: v,
            defaultText: h.getName(v) || "",
            inheritColor: j(p.fill) ? ol(p.fill, 1) : "#000"
          }), Re(c, d), oe(c, null, null, d.get(["emphasis", "disabled"])), gt(c).dataModel = n;
        }), ov(f).data = h, f.group.silent = n.get("silent") || t.get("silent");
      }, e.type = "markArea", e;
    }(F0)
  );
  function C7(r, e, t) {
    var n, a, i = ["x0", "y0", "x1", "y1"];
    if (r) {
      var o = Y(r && r.dimensions, function(u) {
        var f = e.getData(), h = f.getDimensionInfo(f.mapDimension(u)) || {};
        return H(H({}, h), {
          name: u,
          // DON'T use ordinalMeta to parse and collect ordinal.
          ordinalMeta: null
        });
      });
      a = Y(i, function(u, f) {
        return {
          name: u,
          type: o[f % 2].type
        };
      }), n = new Ue(a, t);
    } else
      a = [{
        name: "value",
        type: "float"
      }], n = new Ue(a, t);
    var s = Y(t.get("data"), yt(w7, e, r, t));
    r && (s = Ht(s, yt(b7, r)));
    var l = r ? function(u, f, h, c) {
      var v = u.coord[Math.floor(c / 2)][c % 2];
      return ka(v, a[c]);
    } : function(u, f, h, c) {
      return ka(u.value, a[c]);
    };
    return n.initData(s, null, l), n.hasItemOption = !0, n;
  }
  function A7(r) {
    r.registerComponentModel(x7), r.registerComponentView(T7), r.registerPreprocessor(function(e) {
      N0(e.series, "markArea") && (e.markArea = e.markArea || {});
    });
  }
  var D7 = function(r, e) {
    if (e === "all")
      return {
        type: "all",
        title: r.getLocaleModel().get(["legend", "selector", "all"])
      };
    if (e === "inverse")
      return {
        type: "inverse",
        title: r.getLocaleModel().get(["legend", "selector", "inverse"])
      };
  }, W0 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.layoutMode = {
          type: "box",
          // legend.width/height are maxWidth/maxHeight actually,
          // whereas real width/height is calculated by its content.
          // (Setting {left: 10, right: 10} does not make sense).
          // So consider the case:
          // `setOption({legend: {left: 10});`
          // then `setOption({legend: {right: 10});`
          // The previous `left` should be cleared by setting `ignoreSize`.
          ignoreSize: !0
        }, t;
      }
      return e.prototype.init = function(t, n, a) {
        this.mergeDefaultAndTheme(t, a), t.selected = t.selected || {}, this._updateSelector(t);
      }, e.prototype.mergeOption = function(t, n) {
        r.prototype.mergeOption.call(this, t, n), this._updateSelector(t);
      }, e.prototype._updateSelector = function(t) {
        var n = t.selector, a = this.ecModel;
        n === !0 && (n = t.selector = ["all", "inverse"]), U(n) && M(n, function(i, o) {
          j(i) && (i = {
            type: i
          }), n[o] = mt(i, D7(a, i.type));
        });
      }, e.prototype.optionUpdated = function() {
        this._updateData(this.ecModel);
        var t = this._data;
        if (t[0] && this.get("selectedMode") === "single") {
          for (var n = !1, a = 0; a < t.length; a++) {
            var i = t[a].get("name");
            if (this.isSelected(i)) {
              this.select(i), n = !0;
              break;
            }
          }
          !n && this.select(t[0].get("name"));
        }
      }, e.prototype._updateData = function(t) {
        var n = [], a = [];
        t.eachRawSeries(function(l) {
          var u = l.name;
          a.push(u);
          var f;
          if (l.legendVisualProvider) {
            var h = l.legendVisualProvider, c = h.getAllNames();
            t.isSeriesFiltered(l) || (a = a.concat(c)), c.length ? n = n.concat(c) : f = !0;
          } else
            f = !0;
          f && Bd(l) && n.push(l.name);
        }), this._availableNames = a;
        var i = this.get("data") || n, o = nt(), s = Y(i, function(l) {
          return (j(l) || Ot(l)) && (l = {
            name: l
          }), o.get(l.name) ? null : (o.set(l.name, !0), new Gt(l, this, this.ecModel));
        }, this);
        this._data = Ht(s, function(l) {
          return !!l;
        });
      }, e.prototype.getData = function() {
        return this._data;
      }, e.prototype.select = function(t) {
        var n = this.option.selected, a = this.get("selectedMode");
        if (a === "single") {
          var i = this._data;
          M(i, function(o) {
            n[o.get("name")] = !1;
          });
        }
        n[t] = !0;
      }, e.prototype.unSelect = function(t) {
        this.get("selectedMode") !== "single" && (this.option.selected[t] = !1);
      }, e.prototype.toggleSelected = function(t) {
        var n = this.option.selected;
        n.hasOwnProperty(t) || (n[t] = !0), this[n[t] ? "unSelect" : "select"](t);
      }, e.prototype.allSelect = function() {
        var t = this._data, n = this.option.selected;
        M(t, function(a) {
          n[a.get("name", !0)] = !0;
        });
      }, e.prototype.inverseSelect = function() {
        var t = this._data, n = this.option.selected;
        M(t, function(a) {
          var i = a.get("name", !0);
          n.hasOwnProperty(i) || (n[i] = !0), n[i] = !n[i];
        });
      }, e.prototype.isSelected = function(t) {
        var n = this.option.selected;
        return !(n.hasOwnProperty(t) && !n[t]) && bt(this._availableNames, t) >= 0;
      }, e.prototype.getOrient = function() {
        return this.get("orient") === "vertical" ? {
          index: 1,
          name: "vertical"
        } : {
          index: 0,
          name: "horizontal"
        };
      }, e.type = "legend.plain", e.dependencies = ["series"], e.defaultOption = {
        // zlevel: 0,
        z: 4,
        show: !0,
        orient: "horizontal",
        left: "center",
        // right: 'center',
        top: 0,
        // bottom: null,
        align: "auto",
        backgroundColor: "rgba(0,0,0,0)",
        borderColor: "#ccc",
        borderRadius: 0,
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        itemWidth: 25,
        itemHeight: 14,
        symbolRotate: "inherit",
        symbolKeepAspect: !0,
        inactiveColor: "#ccc",
        inactiveBorderColor: "#ccc",
        inactiveBorderWidth: "auto",
        itemStyle: {
          color: "inherit",
          opacity: "inherit",
          borderColor: "inherit",
          borderWidth: "auto",
          borderCap: "inherit",
          borderJoin: "inherit",
          borderDashOffset: "inherit",
          borderMiterLimit: "inherit"
        },
        lineStyle: {
          width: "auto",
          color: "inherit",
          inactiveColor: "#ccc",
          inactiveWidth: 2,
          opacity: "inherit",
          type: "inherit",
          cap: "inherit",
          join: "inherit",
          dashOffset: "inherit",
          miterLimit: "inherit"
        },
        textStyle: {
          color: "#333"
        },
        selectedMode: !0,
        selector: !1,
        selectorLabel: {
          show: !0,
          borderRadius: 10,
          padding: [3, 5, 3, 5],
          fontSize: 12,
          fontFamily: "sans-serif",
          color: "#666",
          borderWidth: 1,
          borderColor: "#666"
        },
        emphasis: {
          selectorLabel: {
            show: !0,
            color: "#eee",
            backgroundColor: "#666"
          }
        },
        selectorPosition: "auto",
        selectorItemGap: 7,
        selectorButtonGap: 10,
        tooltip: {
          show: !1
        }
      }, e;
    }(Ct)
  ), Ps = yt, U0 = M, lv = ct, g2 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.newlineDisabled = !1, t;
      }
      return e.prototype.init = function() {
        this.group.add(this._contentGroup = new lv()), this.group.add(this._selectorGroup = new lv()), this._isFirstRender = !0;
      }, e.prototype.getContentGroup = function() {
        return this._contentGroup;
      }, e.prototype.getSelectorGroup = function() {
        return this._selectorGroup;
      }, e.prototype.render = function(t, n, a) {
        var i = this._isFirstRender;
        if (this._isFirstRender = !1, this.resetInner(), !!t.get("show", !0)) {
          var o = t.get("align"), s = t.get("orient");
          (!o || o === "auto") && (o = t.get("left") === "right" && s === "vertical" ? "right" : "left");
          var l = t.get("selector", !0), u = t.get("selectorPosition", !0);
          l && (!u || u === "auto") && (u = s === "horizontal" ? "end" : "start"), this.renderInner(o, t, n, a, l, s, u);
          var f = t.getBoxLayoutParams(), h = {
            width: a.getWidth(),
            height: a.getHeight()
          }, c = t.get("padding"), v = ye(f, h, c), d = this.layoutInner(t, o, v, i, l, u), p = ye(ot({
            width: d.width,
            height: d.height
          }, f), h, c);
          this.group.x = p.x - d.x, this.group.y = p.y - d.y, this.group.markRedraw(), this.group.add(this._backgroundEl = CL(d, t));
        }
      }, e.prototype.resetInner = function() {
        this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
      }, e.prototype.renderInner = function(t, n, a, i, o, s, l) {
        var u = this.getContentGroup(), f = nt(), h = n.get("selectedMode"), c = [];
        a.eachRawSeries(function(v) {
          !v.get("legendHoverLink") && c.push(v.id);
        }), U0(n.getData(), function(v, d) {
          var p = v.get("name");
          if (!this.newlineDisabled && (p === "" || p === `
`)) {
            var g = new lv();
            g.newline = !0, u.add(g);
            return;
          }
          var y = a.getSeriesByName(p)[0];
          if (!f.get(p)) {
            if (y) {
              var m = y.getData(), _ = m.getVisual("legendLineStyle") || {}, S = m.getVisual("legendIcon"), b = m.getVisual("style"), w = this._createItem(y, p, d, v, n, t, _, b, S, h, i);
              w.on("click", Ps(y2, p, null, i, c)).on("mouseover", Ps(Y0, y.name, null, i, c)).on("mouseout", Ps($0, y.name, null, i, c)), f.set(p, !0);
            } else
              a.eachRawSeries(function(T) {
                if (!f.get(p) && T.legendVisualProvider) {
                  var C = T.legendVisualProvider;
                  if (!C.containName(p))
                    return;
                  var I = C.indexOfName(p), L = C.getItemVisual(I, "style"), P = C.getItemVisual(I, "legendIcon"), E = qe(L.fill);
                  E && E[3] === 0 && (E[3] = 0.2, L = H(H({}, L), {
                    fill: Qr(E, "rgba")
                  }));
                  var R = this._createItem(T, p, d, v, n, t, {}, L, P, h, i);
                  R.on("click", Ps(y2, null, p, i, c)).on("mouseover", Ps(Y0, null, p, i, c)).on("mouseout", Ps($0, null, p, i, c)), f.set(p, !0);
                }
              }, this);
            f.get(p) || console.warn(p + " series not exists. Legend data should be same with series name or data name.");
          }
        }, this), o && this._createSelector(o, n, i, s, l);
      }, e.prototype._createSelector = function(t, n, a, i, o) {
        var s = this.getSelectorGroup();
        U0(t, function(u) {
          var f = u.type, h = new kt({
            style: {
              x: 0,
              y: 0,
              align: "center",
              verticalAlign: "middle"
            },
            onclick: function() {
              a.dispatchAction({
                type: f === "all" ? "legendAllSelect" : "legendInverseSelect"
              });
            }
          });
          s.add(h);
          var c = n.getModel("selectorLabel"), v = n.getModel(["emphasis", "selectorLabel"]);
          ke(h, {
            normal: c,
            emphasis: v
          }, {
            defaultText: u.title
          }), Da(h);
        });
      }, e.prototype._createItem = function(t, n, a, i, o, s, l, u, f, h, c) {
        var v = t.visualDrawType, d = o.get("itemWidth"), p = o.get("itemHeight"), g = o.isSelected(n), y = i.get("symbolRotate"), m = i.get("symbolKeepAspect"), _ = i.get("icon");
        f = _ || f || "roundRect";
        var S = M7(f, i, l, u, v, g, c), b = new lv(), w = i.getModel("textStyle");
        if (rt(t.getLegendIcon) && (!_ || _ === "inherit"))
          b.add(t.getLegendIcon({
            itemWidth: d,
            itemHeight: p,
            icon: f,
            iconRotate: y,
            itemStyle: S.itemStyle,
            lineStyle: S.lineStyle,
            symbolKeepAspect: m
          }));
        else {
          var T = _ === "inherit" && t.getData().getVisual("symbol") ? y === "inherit" ? t.getData().getVisual("symbolRotate") : y : 0;
          b.add(I7({
            itemWidth: d,
            itemHeight: p,
            icon: f,
            iconRotate: T,
            itemStyle: S.itemStyle,
            lineStyle: S.lineStyle,
            symbolKeepAspect: m
          }));
        }
        var C = s === "left" ? d + 5 : -5, I = s, L = o.get("formatter"), P = n;
        j(L) && L ? P = L.replace("{name}", n ?? "") : rt(L) && (P = L(n));
        var E = i.get("inactiveColor");
        b.add(new kt({
          style: jt(w, {
            text: P,
            x: C,
            y: p / 2,
            fill: g ? w.getTextColor() : E,
            align: I,
            verticalAlign: "middle"
          })
        }));
        var R = new Rt({
          shape: b.getBoundingRect(),
          invisible: !0
        }), k = i.getModel("tooltip");
        return k.get("show") && Xo({
          el: R,
          componentModel: o,
          itemName: n,
          itemTooltipOption: k.option
        }), b.add(R), b.eachChild(function(O) {
          O.silent = !0;
        }), R.silent = !h, this.getContentGroup().add(b), Da(b), b.__legendDataIndex = a, b;
      }, e.prototype.layoutInner = function(t, n, a, i, o, s) {
        var l = this.getContentGroup(), u = this.getSelectorGroup();
        Vi(t.get("orient"), l, t.get("itemGap"), a.width, a.height);
        var f = l.getBoundingRect(), h = [-f.x, -f.y];
        if (u.markRedraw(), l.markRedraw(), o) {
          Vi(
            // Buttons in selectorGroup always layout horizontally
            "horizontal",
            u,
            t.get("selectorItemGap", !0)
          );
          var c = u.getBoundingRect(), v = [-c.x, -c.y], d = t.get("selectorButtonGap", !0), p = t.getOrient().index, g = p === 0 ? "width" : "height", y = p === 0 ? "height" : "width", m = p === 0 ? "y" : "x";
          s === "end" ? v[p] += f[g] + d : h[p] += c[g] + d, v[1 - p] += f[y] / 2 - c[y] / 2, u.x = v[0], u.y = v[1], l.x = h[0], l.y = h[1];
          var _ = {
            x: 0,
            y: 0
          };
          return _[g] = f[g] + d + c[g], _[y] = Math.max(f[y], c[y]), _[m] = Math.min(0, c[m] + v[1 - p]), _;
        } else
          return l.x = h[0], l.y = h[1], this.group.getBoundingRect();
      }, e.prototype.remove = function() {
        this.getContentGroup().removeAll(), this._isFirstRender = !0;
      }, e.type = "legend.plain", e;
    }(Jt)
  );
  function M7(r, e, t, n, a, i, o) {
    function s(g, y) {
      g.lineWidth === "auto" && (g.lineWidth = y.lineWidth > 0 ? 2 : 0), U0(g, function(m, _) {
        g[_] === "inherit" && (g[_] = y[_]);
      });
    }
    var l = e.getModel("itemStyle"), u = l.getItemStyle(), f = r.lastIndexOf("empty", 0) === 0 ? "fill" : "stroke", h = l.getShallow("decal");
    u.decal = !h || h === "inherit" ? n.decal : ls(h, o), u.fill === "inherit" && (u.fill = n[a]), u.stroke === "inherit" && (u.stroke = n[f]), u.opacity === "inherit" && (u.opacity = (a === "fill" ? n : t).opacity), s(u, n);
    var c = e.getModel("lineStyle"), v = c.getLineStyle();
    if (s(v, t), u.fill === "auto" && (u.fill = n.fill), u.stroke === "auto" && (u.stroke = n.fill), v.stroke === "auto" && (v.stroke = n.fill), !i) {
      var d = e.get("inactiveBorderWidth"), p = u[f];
      u.lineWidth = d === "auto" ? n.lineWidth > 0 && p ? 2 : 0 : u.lineWidth, u.fill = e.get("inactiveColor"), u.stroke = e.get("inactiveBorderColor"), v.stroke = c.get("inactiveColor"), v.lineWidth = c.get("inactiveWidth");
    }
    return {
      itemStyle: u,
      lineStyle: v
    };
  }
  function I7(r) {
    var e = r.icon || "roundRect", t = ve(e, 0, 0, r.itemWidth, r.itemHeight, r.itemStyle.fill, r.symbolKeepAspect);
    return t.setStyle(r.itemStyle), t.rotation = (r.iconRotate || 0) * Math.PI / 180, t.setOrigin([r.itemWidth / 2, r.itemHeight / 2]), e.indexOf("empty") > -1 && (t.style.stroke = t.style.fill, t.style.fill = "#fff", t.style.lineWidth = 2), t;
  }
  function y2(r, e, t, n) {
    $0(r, e, t, n), t.dispatchAction({
      type: "legendToggleSelect",
      name: r ?? e
    }), Y0(r, e, t, n);
  }
  function m2(r) {
    for (var e = r.getZr().storage.getDisplayList(), t, n = 0, a = e.length; n < a && !(t = e[n].states.emphasis); )
      n++;
    return t && t.hoverLayer;
  }
  function Y0(r, e, t, n) {
    m2(t) || t.dispatchAction({
      type: "highlight",
      seriesName: r,
      name: e,
      excludeSeriesId: n
    });
  }
  function $0(r, e, t, n) {
    m2(t) || t.dispatchAction({
      type: "downplay",
      seriesName: r,
      name: e,
      excludeSeriesId: n
    });
  }
  function L7(r) {
    var e = r.findComponents({
      mainType: "legend"
    });
    e && e.length && r.filterSeries(function(t) {
      for (var n = 0; n < e.length; n++)
        if (!e[n].isSelected(t.name))
          return !1;
      return !0;
    });
  }
  function $u(r, e, t) {
    var n = {}, a = r === "toggleSelected", i;
    return t.eachComponent("legend", function(o) {
      a && i != null ? o[i ? "select" : "unSelect"](e.name) : r === "allSelect" || r === "inverseSelect" ? o[r]() : (o[r](e.name), i = o.isSelected(e.name));
      var s = o.getData();
      M(s, function(l) {
        var u = l.get("name");
        if (!(u === `
` || u === "")) {
          var f = o.isSelected(u);
          n.hasOwnProperty(u) ? n[u] = n[u] && f : n[u] = f;
        }
      });
    }), r === "allSelect" || r === "inverseSelect" ? {
      selected: n
    } : {
      name: e.name,
      selected: n
    };
  }
  function P7(r) {
    r.registerAction("legendToggleSelect", "legendselectchanged", yt($u, "toggleSelected")), r.registerAction("legendAllSelect", "legendselectall", yt($u, "allSelect")), r.registerAction("legendInverseSelect", "legendinverseselect", yt($u, "inverseSelect")), r.registerAction("legendSelect", "legendselected", yt($u, "select")), r.registerAction("legendUnSelect", "legendunselected", yt($u, "unSelect"));
  }
  function _2(r) {
    r.registerComponentModel(W0), r.registerComponentView(g2), r.registerProcessor(r.PRIORITY.PROCESSOR.SERIES_FILTER, L7), r.registerSubTypeDefaulter("legend", function() {
      return "plain";
    }), P7(r);
  }
  var E7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.setScrollDataIndex = function(t) {
        this.option.scrollDataIndex = t;
      }, e.prototype.init = function(t, n, a) {
        var i = Jo(t);
        r.prototype.init.call(this, t, n, a), S2(this, t, i);
      }, e.prototype.mergeOption = function(t, n) {
        r.prototype.mergeOption.call(this, t, n), S2(this, this.option, t);
      }, e.type = "legend.scroll", e.defaultOption = Ea(W0.defaultOption, {
        scrollDataIndex: 0,
        pageButtonItemGap: 5,
        pageButtonGap: null,
        pageButtonPosition: "end",
        pageFormatter: "{current}/{total}",
        pageIcons: {
          horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
          vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
        },
        pageIconColor: "#2f4554",
        pageIconInactiveColor: "#aaa",
        pageIconSize: 15,
        pageTextStyle: {
          color: "#333"
        },
        animationDurationUpdate: 800
      }), e;
    }(W0)
  );
  function S2(r, e, t) {
    var n = r.getOrient(), a = [1, 1];
    a[n.index] = 0, Ra(e, t, {
      type: "box",
      ignoreSize: !!a
    });
  }
  var x2 = ct, X0 = ["width", "height"], Z0 = ["x", "y"], R7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.newlineDisabled = !0, t._currentIndex = 0, t;
      }
      return e.prototype.init = function() {
        r.prototype.init.call(this), this.group.add(this._containerGroup = new x2()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new x2());
      }, e.prototype.resetInner = function() {
        r.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
      }, e.prototype.renderInner = function(t, n, a, i, o, s, l) {
        var u = this;
        r.prototype.renderInner.call(this, t, n, a, i, o, s, l);
        var f = this._controllerGroup, h = n.get("pageIconSize", !0), c = U(h) ? h : [h, h];
        d("pagePrev", 0);
        var v = n.getModel("pageTextStyle");
        f.add(new kt({
          name: "pageText",
          style: {
            // Placeholder to calculate a proper layout.
            text: "xx/xx",
            fill: v.getTextColor(),
            font: v.getFont(),
            verticalAlign: "middle",
            align: "center"
          },
          silent: !0
        })), d("pageNext", 1);
        function d(p, g) {
          var y = p + "DataIndex", m = $o(n.get("pageIcons", !0)[n.getOrient().name][g], {
            // Buttons will be created in each render, so we do not need
            // to worry about avoiding using legendModel kept in scope.
            onclick: J(u._pageGo, u, y, n, i)
          }, {
            x: -c[0] / 2,
            y: -c[1] / 2,
            width: c[0],
            height: c[1]
          });
          m.name = p, f.add(m);
        }
      }, e.prototype.layoutInner = function(t, n, a, i, o, s) {
        var l = this.getSelectorGroup(), u = t.getOrient().index, f = X0[u], h = Z0[u], c = X0[1 - u], v = Z0[1 - u];
        o && Vi(
          // Buttons in selectorGroup always layout horizontally
          "horizontal",
          l,
          t.get("selectorItemGap", !0)
        );
        var d = t.get("selectorButtonGap", !0), p = l.getBoundingRect(), g = [-p.x, -p.y], y = ht(a);
        o && (y[f] = a[f] - p[f] - d);
        var m = this._layoutContentAndController(t, i, y, u, f, c, v, h);
        if (o) {
          if (s === "end")
            g[u] += m[f] + d;
          else {
            var _ = p[f] + d;
            g[u] -= _, m[h] -= _;
          }
          m[f] += p[f] + d, g[1 - u] += m[v] + m[c] / 2 - p[c] / 2, m[c] = Math.max(m[c], p[c]), m[v] = Math.min(m[v], p[v] + g[1 - u]), l.x = g[0], l.y = g[1], l.markRedraw();
        }
        return m;
      }, e.prototype._layoutContentAndController = function(t, n, a, i, o, s, l, u) {
        var f = this.getContentGroup(), h = this._containerGroup, c = this._controllerGroup;
        Vi(t.get("orient"), f, t.get("itemGap"), i ? a.width : null, i ? null : a.height), Vi(
          // Buttons in controller are layout always horizontally.
          "horizontal",
          c,
          t.get("pageButtonItemGap", !0)
        );
        var v = f.getBoundingRect(), d = c.getBoundingRect(), p = this._showController = v[o] > a[o], g = [-v.x, -v.y];
        n || (g[i] = f[u]);
        var y = [0, 0], m = [-d.x, -d.y], _ = _t(t.get("pageButtonGap", !0), t.get("itemGap", !0));
        if (p) {
          var S = t.get("pageButtonPosition", !0);
          S === "end" ? m[i] += a[o] - d[o] : y[i] += d[o] + _;
        }
        m[1 - i] += v[s] / 2 - d[s] / 2, f.setPosition(g), h.setPosition(y), c.setPosition(m);
        var b = {
          x: 0,
          y: 0
        };
        if (b[o] = p ? a[o] : v[o], b[s] = Math.max(v[s], d[s]), b[l] = Math.min(0, d[l] + m[1 - i]), h.__rectSize = a[o], p) {
          var w = {
            x: 0,
            y: 0
          };
          w[o] = Math.max(a[o] - d[o] - _, 0), w[s] = b[s], h.setClipPath(new Rt({
            shape: w
          })), h.__rectSize = w[o];
        } else
          c.eachChild(function(C) {
            C.attr({
              invisible: !0,
              silent: !0
            });
          });
        var T = this._getPageInfo(t);
        return T.pageIndex != null && Vt(
          f,
          {
            x: T.contentPosition[0],
            y: T.contentPosition[1]
          },
          // When switch from "show controller" to "not show controller", view should be
          // updated immediately without animation, otherwise causes weird effect.
          p ? t : null
        ), this._updatePageInfoView(t, T), b;
      }, e.prototype._pageGo = function(t, n, a) {
        var i = this._getPageInfo(n)[t];
        i != null && a.dispatchAction({
          type: "legendScroll",
          scrollDataIndex: i,
          legendId: n.id
        });
      }, e.prototype._updatePageInfoView = function(t, n) {
        var a = this._controllerGroup;
        M(["pagePrev", "pageNext"], function(f) {
          var h = f + "DataIndex", c = n[h] != null, v = a.childOfName(f);
          v && (v.setStyle("fill", c ? t.get("pageIconColor", !0) : t.get("pageIconInactiveColor", !0)), v.cursor = c ? "pointer" : "default");
        });
        var i = a.childOfName("pageText"), o = t.get("pageFormatter"), s = n.pageIndex, l = s != null ? s + 1 : 0, u = n.pageCount;
        i && o && i.setStyle("text", j(o) ? o.replace("{current}", l == null ? "" : l + "").replace("{total}", u == null ? "" : u + "") : o({
          current: l,
          total: u
        }));
      }, e.prototype._getPageInfo = function(t) {
        var n = t.get("scrollDataIndex", !0), a = this.getContentGroup(), i = this._containerGroup.__rectSize, o = t.getOrient().index, s = X0[o], l = Z0[o], u = this._findTargetItemIndex(n), f = a.children(), h = f[u], c = f.length, v = c ? 1 : 0, d = {
          contentPosition: [a.x, a.y],
          pageCount: v,
          pageIndex: v - 1,
          pagePrevDataIndex: null,
          pageNextDataIndex: null
        };
        if (!h)
          return d;
        var p = S(h);
        d.contentPosition[o] = -p.s;
        for (var g = u + 1, y = p, m = p, _ = null; g <= c; ++g)
          _ = S(f[g]), // Half of the last item is out of the window.
          (!_ && m.e > y.s + i || // If the current item does not intersect with the window, the new page
          // can be started at the current item or the last item.
          _ && !b(_, y.s)) && (m.i > y.i ? y = m : y = _, y && (d.pageNextDataIndex == null && (d.pageNextDataIndex = y.i), ++d.pageCount)), m = _;
        for (var g = u - 1, y = p, m = p, _ = null; g >= -1; --g)
          _ = S(f[g]), // If the the end item does not intersect with the window started
          // from the current item, a page can be settled.
          (!_ || !b(m, _.s)) && // e.g., when page size is smaller than item size.
          y.i < m.i && (m = y, d.pagePrevDataIndex == null && (d.pagePrevDataIndex = y.i), ++d.pageCount, ++d.pageIndex), y = _;
        return d;
        function S(w) {
          if (w) {
            var T = w.getBoundingRect(), C = T[l] + w[l];
            return {
              s: C,
              e: C + T[s],
              i: w.__legendDataIndex
            };
          }
        }
        function b(w, T) {
          return w.e >= T && w.s <= T + i;
        }
      }, e.prototype._findTargetItemIndex = function(t) {
        if (!this._showController)
          return 0;
        var n, a = this.getContentGroup(), i;
        return a.eachChild(function(o, s) {
          var l = o.__legendDataIndex;
          i == null && l != null && (i = s), l === t && (n = s);
        }), n ?? i;
      }, e.type = "legend.scroll", e;
    }(g2)
  );
  function k7(r) {
    r.registerAction("legendScroll", "legendscroll", function(e, t) {
      var n = e.scrollDataIndex;
      n != null && t.eachComponent({
        mainType: "legend",
        subType: "scroll",
        query: e
      }, function(a) {
        a.setScrollDataIndex(n);
      });
    });
  }
  function O7(r) {
    At(_2), r.registerComponentModel(E7), r.registerComponentView(R7), k7(r);
  }
  function N7(r) {
    At(_2), At(O7);
  }
  var V7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "dataZoom.inside", e.defaultOption = Ea(Fu.defaultOption, {
        disabled: !1,
        zoomLock: !1,
        zoomOnMouseWheel: !0,
        moveOnMouseMove: !0,
        moveOnMouseWheel: !1,
        preventDefaultMouseMove: !0
      }), e;
    }(Fu)
  ), q0 = Nt();
  function B7(r, e, t) {
    q0(r).coordSysRecordMap.each(function(n) {
      var a = n.dataZoomInfoMap.get(e.uid);
      a && (a.getRange = t);
    });
  }
  function z7(r, e) {
    for (var t = q0(r).coordSysRecordMap, n = t.keys(), a = 0; a < n.length; a++) {
      var i = n[a], o = t.get(i), s = o.dataZoomInfoMap;
      if (s) {
        var l = e.uid, u = s.get(l);
        u && (s.removeKey(l), s.keys().length || w2(t, o));
      }
    }
  }
  function w2(r, e) {
    if (e) {
      r.removeKey(e.model.uid);
      var t = e.controller;
      t && t.dispose();
    }
  }
  function G7(r, e) {
    var t = {
      model: e,
      containsPoint: yt(H7, e),
      dispatchAction: yt(F7, r),
      dataZoomInfoMap: null,
      controller: null
    }, n = t.controller = new Tu(r.getZr());
    return M(["pan", "zoom", "scrollMove"], function(a) {
      n.on(a, function(i) {
        var o = [];
        t.dataZoomInfoMap.each(function(s) {
          if (i.isAvailableBehavior(s.model.option)) {
            var l = (s.getRange || {})[a], u = l && l(s.dzReferCoordSysInfo, t.model.mainType, t.controller, i);
            !s.model.get("disabled", !0) && u && o.push({
              dataZoomId: s.model.id,
              start: u[0],
              end: u[1]
            });
          }
        }), o.length && t.dispatchAction(o);
      });
    }), t;
  }
  function F7(r, e) {
    r.isDisposed() || r.dispatchAction({
      type: "dataZoom",
      animation: {
        easing: "cubicOut",
        duration: 100
      },
      batch: e
    });
  }
  function H7(r, e, t, n) {
    return r.coordinateSystem.containPoint([t, n]);
  }
  function W7(r) {
    var e, t = "type_", n = {
      type_true: 2,
      type_move: 1,
      type_false: 0,
      type_undefined: -1
    }, a = !0;
    return r.each(function(i) {
      var o = i.model, s = o.get("disabled", !0) ? !1 : o.get("zoomLock", !0) ? "move" : !0;
      n[t + s] > n[t + e] && (e = s), a = a && o.get("preventDefaultMouseMove", !0);
    }), {
      controlType: e,
      opt: {
        // RoamController will enable all of these functionalities,
        // and the final behavior is determined by its event listener
        // provided by each inside zoom.
        zoomOnMouseWheel: !0,
        moveOnMouseMove: !0,
        moveOnMouseWheel: !0,
        preventDefaultMouseMove: !!a
      }
    };
  }
  function U7(r) {
    r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, function(e, t) {
      var n = q0(t), a = n.coordSysRecordMap || (n.coordSysRecordMap = nt());
      a.each(function(i) {
        i.dataZoomInfoMap = null;
      }), e.eachComponent({
        mainType: "dataZoom",
        subType: "inside"
      }, function(i) {
        var o = _L(i);
        M(o.infoList, function(s) {
          var l = s.model.uid, u = a.get(l) || a.set(l, G7(t, s.model)), f = u.dataZoomInfoMap || (u.dataZoomInfoMap = nt());
          f.set(i.uid, {
            dzReferCoordSysInfo: s,
            model: i,
            getRange: null
          });
        });
      }), a.each(function(i) {
        var o = i.controller, s, l = i.dataZoomInfoMap;
        if (l) {
          var u = l.keys()[0];
          u != null && (s = l.get(u));
        }
        if (!s) {
          w2(a, i);
          return;
        }
        var f = W7(l);
        o.enable(f.controlType, f.opt), o.setPointerChecker(i.containsPoint), as(i, "dispatchAction", s.model.get("throttle", !0), "fixRate");
      });
    });
  }
  var Y7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "dataZoom.inside", t;
      }
      return e.prototype.render = function(t, n, a) {
        if (r.prototype.render.apply(this, arguments), t.noTarget()) {
          this._clear();
          return;
        }
        this.range = t.getPercentRange(), B7(a, t, {
          pan: J(K0.pan, this),
          zoom: J(K0.zoom, this),
          scrollMove: J(K0.scrollMove, this)
        });
      }, e.prototype.dispose = function() {
        this._clear(), r.prototype.dispose.apply(this, arguments);
      }, e.prototype._clear = function() {
        z7(this.api, this.dataZoomModel), this.range = null;
      }, e.type = "dataZoom.inside", e;
    }(w0)
  ), K0 = {
    zoom: function(r, e, t, n) {
      var a = this.range, i = a.slice(), o = r.axisModels[0];
      if (o) {
        var s = j0[e](null, [n.originX, n.originY], o, t, r), l = (s.signal > 0 ? s.pixelStart + s.pixelLength - s.pixel : s.pixel - s.pixelStart) / s.pixelLength * (i[1] - i[0]) + i[0], u = Math.max(1 / n.scale, 0);
        i[0] = (i[0] - l) * u + l, i[1] = (i[1] - l) * u + l;
        var f = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
        if (lo(0, i, [0, 100], 0, f.minSpan, f.maxSpan), this.range = i, a[0] !== i[0] || a[1] !== i[1])
          return i;
      }
    },
    pan: b2(function(r, e, t, n, a, i) {
      var o = j0[n]([i.oldX, i.oldY], [i.newX, i.newY], e, a, t);
      return o.signal * (r[1] - r[0]) * o.pixel / o.pixelLength;
    }),
    scrollMove: b2(function(r, e, t, n, a, i) {
      var o = j0[n]([0, 0], [i.scrollDelta, i.scrollDelta], e, a, t);
      return o.signal * (r[1] - r[0]) * i.scrollDelta;
    })
  };
  function b2(r) {
    return function(e, t, n, a) {
      var i = this.range, o = i.slice(), s = e.axisModels[0];
      if (s) {
        var l = r(o, s, e, t, n, a);
        if (lo(l, o, [0, 100], "all"), this.range = o, i[0] !== o[0] || i[1] !== o[1])
          return o;
      }
    };
  }
  var j0 = {
    grid: function(r, e, t, n, a) {
      var i = t.axis, o = {}, s = a.model.coordinateSystem.getRect();
      return r = r || [0, 0], i.dim === "x" ? (o.pixel = e[0] - r[0], o.pixelLength = s.width, o.pixelStart = s.x, o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - r[1], o.pixelLength = s.height, o.pixelStart = s.y, o.signal = i.inverse ? -1 : 1), o;
    },
    polar: function(r, e, t, n, a) {
      var i = t.axis, o = {}, s = a.model.coordinateSystem, l = s.getRadiusAxis().getExtent(), u = s.getAngleAxis().getExtent();
      return r = r ? s.pointToCoord(r) : [0, 0], e = s.pointToCoord(e), t.mainType === "radiusAxis" ? (o.pixel = e[0] - r[0], o.pixelLength = l[1] - l[0], o.pixelStart = l[0], o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - r[1], o.pixelLength = u[1] - u[0], o.pixelStart = u[0], o.signal = i.inverse ? -1 : 1), o;
    },
    singleAxis: function(r, e, t, n, a) {
      var i = t.axis, o = a.model.coordinateSystem.getRect(), s = {};
      return r = r || [0, 0], i.orient === "horizontal" ? (s.pixel = e[0] - r[0], s.pixelLength = o.width, s.pixelStart = o.x, s.signal = i.inverse ? 1 : -1) : (s.pixel = e[1] - r[1], s.pixelLength = o.height, s.pixelStart = o.y, s.signal = i.inverse ? -1 : 1), s;
    }
  };
  function T2(r) {
    b0(r), r.registerComponentModel(V7), r.registerComponentView(Y7), U7(r);
  }
  var $7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.type = "dataZoom.slider", e.layoutMode = "box", e.defaultOption = Ea(Fu.defaultOption, {
        show: !0,
        // deault value can only be drived in view stage.
        right: "ph",
        top: "ph",
        width: "ph",
        height: "ph",
        left: null,
        bottom: null,
        borderColor: "#d2dbee",
        borderRadius: 3,
        backgroundColor: "rgba(47,69,84,0)",
        // dataBackgroundColor: '#ddd',
        dataBackground: {
          lineStyle: {
            color: "#d2dbee",
            width: 0.5
          },
          areaStyle: {
            color: "#d2dbee",
            opacity: 0.2
          }
        },
        selectedDataBackground: {
          lineStyle: {
            color: "#8fb0f7",
            width: 0.5
          },
          areaStyle: {
            color: "#8fb0f7",
            opacity: 0.2
          }
        },
        // Color of selected window.
        fillerColor: "rgba(135,175,274,0.2)",
        handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z",
        // Percent of the slider height
        handleSize: "100%",
        handleStyle: {
          color: "#fff",
          borderColor: "#ACB8D1"
        },
        moveHandleSize: 7,
        moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z",
        moveHandleStyle: {
          color: "#D2DBEE",
          opacity: 0.7
        },
        showDetail: !0,
        showDataShadow: "auto",
        realtime: !0,
        zoomLock: !1,
        textStyle: {
          color: "#6E7079"
        },
        brushSelect: !0,
        brushStyle: {
          color: "rgba(135,175,274,0.15)"
        },
        emphasis: {
          handleStyle: {
            borderColor: "#8FB0F7"
          },
          moveHandleStyle: {
            color: "#8FB0F7"
          }
        }
      }), e;
    }(Fu)
  ), Xu = Rt, C2 = 7, X7 = 1, J0 = 30, Z7 = 7, Zu = "horizontal", A2 = "vertical", q7 = 5, K7 = ["line", "bar", "candlestick", "scatter"], j7 = {
    easing: "cubicOut",
    duration: 100,
    delay: 0
  }, J7 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._displayables = {}, t;
      }
      return e.prototype.init = function(t, n) {
        this.api = n, this._onBrush = J(this._onBrush, this), this._onBrushEnd = J(this._onBrushEnd, this);
      }, e.prototype.render = function(t, n, a, i) {
        if (r.prototype.render.apply(this, arguments), as(this, "_dispatchZoomAction", t.get("throttle"), "fixRate"), this._orient = t.getOrient(), t.get("show") === !1) {
          this.group.removeAll();
          return;
        }
        if (t.noTarget()) {
          this._clear(), this.group.removeAll();
          return;
        }
        (!i || i.type !== "dataZoom" || i.from !== this.uid) && this._buildView(), this._updateView();
      }, e.prototype.dispose = function() {
        this._clear(), r.prototype.dispose.apply(this, arguments);
      }, e.prototype._clear = function() {
        ql(this, "_dispatchZoomAction");
        var t = this.api.getZr();
        t.off("mousemove", this._onBrush), t.off("mouseup", this._onBrushEnd);
      }, e.prototype._buildView = function() {
        var t = this.group;
        t.removeAll(), this._brushing = !1, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
        var n = this._displayables.sliderGroup = new ct();
        this._renderBackground(), this._renderHandle(), this._renderDataShadow(), t.add(n), this._positionGroup();
      }, e.prototype._resetLocation = function() {
        var t = this.dataZoomModel, n = this.api, a = t.get("brushSelect"), i = a ? Z7 : 0, o = this._findCoordRect(), s = {
          width: n.getWidth(),
          height: n.getHeight()
        }, l = this._orient === Zu ? {
          // Why using 'right', because right should be used in vertical,
          // and it is better to be consistent for dealing with position param merge.
          right: s.width - o.x - o.width,
          top: s.height - J0 - C2 - i,
          width: o.width,
          height: J0
        } : {
          right: C2,
          top: o.y,
          width: J0,
          height: o.height
        }, u = Jo(t.option);
        M(["right", "top", "width", "height"], function(h) {
          u[h] === "ph" && (u[h] = l[h]);
        });
        var f = ye(u, s);
        this._location = {
          x: f.x,
          y: f.y
        }, this._size = [f.width, f.height], this._orient === A2 && this._size.reverse();
      }, e.prototype._positionGroup = function() {
        var t = this.group, n = this._location, a = this._orient, i = this.dataZoomModel.getFirstTargetAxisModel(), o = i && i.get("inverse"), s = this._displayables.sliderGroup, l = (this._dataShadowInfo || {}).otherAxisInverse;
        s.attr(a === Zu && !o ? {
          scaleY: l ? 1 : -1,
          scaleX: 1
        } : a === Zu && o ? {
          scaleY: l ? 1 : -1,
          scaleX: -1
        } : a === A2 && !o ? {
          scaleY: l ? -1 : 1,
          scaleX: 1,
          rotation: Math.PI / 2
        } : {
          scaleY: l ? -1 : 1,
          scaleX: -1,
          rotation: Math.PI / 2
        });
        var u = t.getBoundingRect([s]);
        t.x = n.x - u.x, t.y = n.y - u.y, t.markRedraw();
      }, e.prototype._getViewExtent = function() {
        return [0, this._size[0]];
      }, e.prototype._renderBackground = function() {
        var t = this.dataZoomModel, n = this._size, a = this._displayables.sliderGroup, i = t.get("brushSelect");
        a.add(new Xu({
          silent: !0,
          shape: {
            x: 0,
            y: 0,
            width: n[0],
            height: n[1]
          },
          style: {
            fill: t.get("backgroundColor")
          },
          z2: -40
        }));
        var o = new Xu({
          shape: {
            x: 0,
            y: 0,
            width: n[0],
            height: n[1]
          },
          style: {
            fill: "transparent"
          },
          z2: 0,
          onclick: J(this._onClickPanel, this)
        }), s = this.api.getZr();
        i ? (o.on("mousedown", this._onBrushStart, this), o.cursor = "crosshair", s.on("mousemove", this._onBrush), s.on("mouseup", this._onBrushEnd)) : (s.off("mousemove", this._onBrush), s.off("mouseup", this._onBrushEnd)), a.add(o);
      }, e.prototype._renderDataShadow = function() {
        var t = this._dataShadowInfo = this._prepareDataShadowInfo();
        if (this._displayables.dataShadowSegs = [], !t)
          return;
        var n = this._size, a = this._shadowSize || [], i = t.series, o = i.getRawData(), s = i.getShadowDim && i.getShadowDim(), l = s && o.getDimensionInfo(s) ? i.getShadowDim() : t.otherDim;
        if (l == null)
          return;
        var u = this._shadowPolygonPts, f = this._shadowPolylinePts;
        if (o !== this._shadowData || l !== this._shadowDim || n[0] !== a[0] || n[1] !== a[1]) {
          var h = o.getDataExtent(l), c = (h[1] - h[0]) * 0.3;
          h = [h[0] - c, h[1] + c];
          var v = [0, n[1]], d = [0, n[0]], p = [[n[0], 0], [0, 0]], g = [], y = d[1] / (o.count() - 1), m = 0, _ = Math.round(o.count() / n[0]), S;
          o.each([l], function(I, L) {
            if (_ > 0 && L % _) {
              m += y;
              return;
            }
            var P = I == null || isNaN(I) || I === "", E = P ? 0 : Wt(I, h, v, !0);
            P && !S && L ? (p.push([p[p.length - 1][0], 0]), g.push([g[g.length - 1][0], 0])) : !P && S && (p.push([m, 0]), g.push([m, 0])), p.push([m, E]), g.push([m, E]), m += y, S = P;
          }), u = this._shadowPolygonPts = p, f = this._shadowPolylinePts = g;
        }
        this._shadowData = o, this._shadowDim = l, this._shadowSize = [n[0], n[1]];
        var b = this.dataZoomModel;
        function w(I) {
          var L = b.getModel(I ? "selectedDataBackground" : "dataBackground"), P = new ct(), E = new ze({
            shape: {
              points: u
            },
            segmentIgnoreThreshold: 1,
            style: L.getModel("areaStyle").getAreaStyle(),
            silent: !0,
            z2: -20
          }), R = new Ge({
            shape: {
              points: f
            },
            segmentIgnoreThreshold: 1,
            style: L.getModel("lineStyle").getLineStyle(),
            silent: !0,
            z2: -19
          });
          return P.add(E), P.add(R), P;
        }
        for (var T = 0; T < 3; T++) {
          var C = w(T === 1);
          this._displayables.sliderGroup.add(C), this._displayables.dataShadowSegs.push(C);
        }
      }, e.prototype._prepareDataShadowInfo = function() {
        var t = this.dataZoomModel, n = t.get("showDataShadow");
        if (n !== !1) {
          var a, i = this.ecModel;
          return t.eachTargetAxis(function(o, s) {
            var l = t.getAxisProxy(o, s).getTargetSeriesModels();
            M(l, function(u) {
              if (!a && !(n !== !0 && bt(K7, u.get("type")) < 0)) {
                var f = i.getComponent(Xa(o), s).axis, h = Q7(o), c, v = u.coordinateSystem;
                h != null && v.getOtherAxis && (c = v.getOtherAxis(f).inverse), h = u.getData().mapDimension(h), a = {
                  thisAxis: f,
                  series: u,
                  thisDim: o,
                  otherDim: h,
                  otherAxisInverse: c
                };
              }
            }, this);
          }, this), a;
        }
      }, e.prototype._renderHandle = function() {
        var t = this.group, n = this._displayables, a = n.handles = [null, null], i = n.handleLabels = [null, null], o = this._displayables.sliderGroup, s = this._size, l = this.dataZoomModel, u = this.api, f = l.get("borderRadius") || 0, h = l.get("brushSelect"), c = n.filler = new Xu({
          silent: h,
          style: {
            fill: l.get("fillerColor")
          },
          textConfig: {
            position: "inside"
          }
        });
        o.add(c), o.add(new Xu({
          silent: !0,
          subPixelOptimize: !0,
          shape: {
            x: 0,
            y: 0,
            width: s[0],
            height: s[1],
            r: f
          },
          style: {
            // deprecated option
            stroke: l.get("dataBackgroundColor") || l.get("borderColor"),
            lineWidth: X7,
            fill: "rgba(0,0,0,0)"
          }
        })), M([0, 1], function(_) {
          var S = l.get("handleIcon");
          !kh[S] && S.indexOf("path://") < 0 && S.indexOf("image://") < 0 && (S = "path://" + S, Rr("handleIcon now needs 'path://' prefix when using a path string"));
          var b = ve(S, -1, 0, 2, 2, null, !0);
          b.attr({
            cursor: D2(this._orient),
            draggable: !0,
            drift: J(this._onDragMove, this, _),
            ondragend: J(this._onDragEnd, this),
            onmouseover: J(this._showDataInfo, this, !0),
            onmouseout: J(this._showDataInfo, this, !1),
            z2: 5
          });
          var w = b.getBoundingRect(), T = l.get("handleSize");
          this._handleHeight = Z(T, this._size[1]), this._handleWidth = w.width / w.height * this._handleHeight, b.setStyle(l.getModel("handleStyle").getItemStyle()), b.style.strokeNoScale = !0, b.rectHover = !0, b.ensureState("emphasis").style = l.getModel(["emphasis", "handleStyle"]).getItemStyle(), Da(b);
          var C = l.get("handleColor");
          C != null && (b.style.fill = C), o.add(a[_] = b);
          var I = l.getModel("textStyle");
          t.add(i[_] = new kt({
            silent: !0,
            invisible: !0,
            style: jt(I, {
              x: 0,
              y: 0,
              text: "",
              verticalAlign: "middle",
              align: "center",
              fill: I.getTextColor(),
              font: I.getFont()
            }),
            z2: 10
          }));
        }, this);
        var v = c;
        if (h) {
          var d = Z(l.get("moveHandleSize"), s[1]), p = n.moveHandle = new Rt({
            style: l.getModel("moveHandleStyle").getItemStyle(),
            silent: !0,
            shape: {
              r: [0, 0, 2, 2],
              y: s[1] - 0.5,
              height: d
            }
          }), g = d * 0.8, y = n.moveHandleIcon = ve(l.get("moveHandleIcon"), -g / 2, -g / 2, g, g, "#fff", !0);
          y.silent = !0, y.y = s[1] + d / 2 - 0.5, p.ensureState("emphasis").style = l.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
          var m = Math.min(s[1] / 2, Math.max(d, 10));
          v = n.moveZone = new Rt({
            invisible: !0,
            shape: {
              y: s[1] - m,
              height: d + m
            }
          }), v.on("mouseover", function() {
            u.enterEmphasis(p);
          }).on("mouseout", function() {
            u.leaveEmphasis(p);
          }), o.add(p), o.add(y), o.add(v);
        }
        v.attr({
          draggable: !0,
          cursor: D2(this._orient),
          drift: J(this._onDragMove, this, "all"),
          ondragstart: J(this._showDataInfo, this, !0),
          ondragend: J(this._onDragEnd, this),
          onmouseover: J(this._showDataInfo, this, !0),
          onmouseout: J(this._showDataInfo, this, !1)
        });
      }, e.prototype._resetInterval = function() {
        var t = this._range = this.dataZoomModel.getPercentRange(), n = this._getViewExtent();
        this._handleEnds = [Wt(t[0], [0, 100], n, !0), Wt(t[1], [0, 100], n, !0)];
      }, e.prototype._updateInterval = function(t, n) {
        var a = this.dataZoomModel, i = this._handleEnds, o = this._getViewExtent(), s = a.findRepresentativeAxisProxy().getMinMaxSpan(), l = [0, 100];
        lo(n, i, o, a.get("zoomLock") ? "all" : t, s.minSpan != null ? Wt(s.minSpan, l, o, !0) : null, s.maxSpan != null ? Wt(s.maxSpan, l, o, !0) : null);
        var u = this._range, f = this._range = yr([Wt(i[0], o, l, !0), Wt(i[1], o, l, !0)]);
        return !u || u[0] !== f[0] || u[1] !== f[1];
      }, e.prototype._updateView = function(t) {
        var n = this._displayables, a = this._handleEnds, i = yr(a.slice()), o = this._size;
        M([0, 1], function(v) {
          var d = n.handles[v], p = this._handleHeight;
          d.attr({
            scaleX: p / 2,
            scaleY: p / 2,
            // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.
            // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.
            x: a[v] + (v ? -1 : 1),
            y: o[1] / 2 - p / 2
          });
        }, this), n.filler.setShape({
          x: i[0],
          y: 0,
          width: i[1] - i[0],
          height: o[1]
        });
        var s = {
          x: i[0],
          width: i[1] - i[0]
        };
        n.moveHandle && (n.moveHandle.setShape(s), n.moveZone.setShape(s), n.moveZone.getBoundingRect(), n.moveHandleIcon && n.moveHandleIcon.attr("x", s.x + s.width / 2));
        for (var l = n.dataShadowSegs, u = [0, i[0], i[1], o[0]], f = 0; f < l.length; f++) {
          var h = l[f], c = h.getClipPath();
          c || (c = new Rt(), h.setClipPath(c)), c.setShape({
            x: u[f],
            y: 0,
            width: u[f + 1] - u[f],
            height: o[1]
          });
        }
        this._updateDataInfo(t);
      }, e.prototype._updateDataInfo = function(t) {
        var n = this.dataZoomModel, a = this._displayables, i = a.handleLabels, o = this._orient, s = ["", ""];
        if (n.get("showDetail")) {
          var l = n.findRepresentativeAxisProxy();
          if (l) {
            var u = l.getAxisModel().axis, f = this._range, h = t ? l.calculateDataWindow({
              start: f[0],
              end: f[1]
            }).valueWindow : l.getDataValueWindow();
            s = [this._formatLabel(h[0], u), this._formatLabel(h[1], u)];
          }
        }
        var c = yr(this._handleEnds.slice());
        v.call(this, 0), v.call(this, 1);
        function v(d) {
          var p = La(a.handles[d].parent, this.group), g = fh(d === 0 ? "right" : "left", p), y = this._handleWidth / 2 + q7, m = on([c[d] + (d === 0 ? -y : y), this._size[1] / 2], p);
          i[d].setStyle({
            x: m[0],
            y: m[1],
            verticalAlign: o === Zu ? "middle" : g,
            align: o === Zu ? g : "center",
            text: s[d]
          });
        }
      }, e.prototype._formatLabel = function(t, n) {
        var a = this.dataZoomModel, i = a.get("labelFormatter"), o = a.get("labelPrecision");
        (o == null || o === "auto") && (o = n.getPixelPrecision());
        var s = t == null || isNaN(t) ? "" : n.type === "category" || n.type === "time" ? n.scale.getLabel({
          value: Math.round(t)
        }) : t.toFixed(Math.min(o, 20));
        return rt(i) ? i(t, s) : j(i) ? i.replace("{value}", s) : s;
      }, e.prototype._showDataInfo = function(t) {
        t = this._dragging || t;
        var n = this._displayables, a = n.handleLabels;
        a[0].attr("invisible", !t), a[1].attr("invisible", !t), n.moveHandle && this.api[t ? "enterEmphasis" : "leaveEmphasis"](n.moveHandle, 1);
      }, e.prototype._onDragMove = function(t, n, a, i) {
        this._dragging = !0, Yn(i.event);
        var o = this._displayables.sliderGroup.getLocalTransform(), s = on([n, a], o, !0), l = this._updateInterval(t, s[0]), u = this.dataZoomModel.get("realtime");
        this._updateView(!u), l && u && this._dispatchZoomAction(!0);
      }, e.prototype._onDragEnd = function() {
        this._dragging = !1, this._showDataInfo(!1);
        var t = this.dataZoomModel.get("realtime");
        !t && this._dispatchZoomAction(!1);
      }, e.prototype._onClickPanel = function(t) {
        var n = this._size, a = this._displayables.sliderGroup.transformCoordToLocal(t.offsetX, t.offsetY);
        if (!(a[0] < 0 || a[0] > n[0] || a[1] < 0 || a[1] > n[1])) {
          var i = this._handleEnds, o = (i[0] + i[1]) / 2, s = this._updateInterval("all", a[0] - o);
          this._updateView(), s && this._dispatchZoomAction(!1);
        }
      }, e.prototype._onBrushStart = function(t) {
        var n = t.offsetX, a = t.offsetY;
        this._brushStart = new St(n, a), this._brushing = !0, this._brushStartTime = +/* @__PURE__ */ new Date();
      }, e.prototype._onBrushEnd = function(t) {
        if (this._brushing) {
          var n = this._displayables.brushRect;
          if (this._brushing = !1, !!n) {
            n.attr("ignore", !0);
            var a = n.shape, i = +/* @__PURE__ */ new Date();
            if (!(i - this._brushStartTime < 200 && Math.abs(a.width) < 5)) {
              var o = this._getViewExtent(), s = [0, 100];
              this._range = yr([Wt(a.x, o, s, !0), Wt(a.x + a.width, o, s, !0)]), this._handleEnds = [a.x, a.x + a.width], this._updateView(), this._dispatchZoomAction(!1);
            }
          }
        }
      }, e.prototype._onBrush = function(t) {
        this._brushing && (Yn(t.event), this._updateBrushRect(t.offsetX, t.offsetY));
      }, e.prototype._updateBrushRect = function(t, n) {
        var a = this._displayables, i = this.dataZoomModel, o = a.brushRect;
        o || (o = a.brushRect = new Xu({
          silent: !0,
          style: i.getModel("brushStyle").getItemStyle()
        }), a.sliderGroup.add(o)), o.attr("ignore", !1);
        var s = this._brushStart, l = this._displayables.sliderGroup, u = l.transformCoordToLocal(t, n), f = l.transformCoordToLocal(s.x, s.y), h = this._size;
        u[0] = Math.max(Math.min(h[0], u[0]), 0), o.setShape({
          x: f[0],
          y: 0,
          width: u[0] - f[0],
          height: h[1]
        });
      }, e.prototype._dispatchZoomAction = function(t) {
        var n = this._range;
        this.api.dispatchAction({
          type: "dataZoom",
          from: this.uid,
          dataZoomId: this.dataZoomModel.id,
          animation: t ? j7 : null,
          start: n[0],
          end: n[1]
        });
      }, e.prototype._findCoordRect = function() {
        var t, n = _L(this.dataZoomModel).infoList;
        if (!t && n.length) {
          var a = n[0].model.coordinateSystem;
          t = a.getRect && a.getRect();
        }
        if (!t) {
          var i = this.api.getWidth(), o = this.api.getHeight();
          t = {
            x: i * 0.2,
            y: o * 0.2,
            width: i * 0.6,
            height: o * 0.6
          };
        }
        return t;
      }, e.type = "dataZoom.slider", e;
    }(w0)
  );
  function Q7(r) {
    var e = {
      x: "y",
      y: "x",
      radius: "angle",
      angle: "radius"
    };
    return e[r];
  }
  function D2(r) {
    return r === "vertical" ? "ns-resize" : "ew-resize";
  }
  function M2(r) {
    r.registerComponentModel($7), r.registerComponentView(J7), b0(r);
  }
  function t9(r) {
    At(T2), At(M2);
  }
  var I2 = {
    /**
     * @public
     */
    get: function(r, e, t) {
      var n = ht((e9[r] || {})[e]);
      return t && U(n) ? n[n.length - 1] : n;
    }
  }, e9 = {
    color: {
      active: ["#006edd", "#e0ffff"],
      inactive: ["rgba(0,0,0,0)"]
    },
    colorHue: {
      active: [0, 360],
      inactive: [0, 0]
    },
    colorSaturation: {
      active: [0.3, 1],
      inactive: [0, 0]
    },
    colorLightness: {
      active: [0.9, 0.5],
      inactive: [0, 0]
    },
    colorAlpha: {
      active: [0.3, 1],
      inactive: [0, 0]
    },
    opacity: {
      active: [0.3, 1],
      inactive: [0, 0]
    },
    symbol: {
      active: ["circle", "roundRect", "diamond"],
      inactive: ["none"]
    },
    symbolSize: {
      active: [10, 50],
      inactive: [0, 0]
    }
  }, L2 = Me.mapVisual, r9 = Me.eachVisual, n9 = U, P2 = M, a9 = yr, i9 = Wt, uv = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.stateList = ["inRange", "outOfRange"], t.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], t.layoutMode = {
          type: "box",
          ignoreSize: !0
        }, t.dataBound = [-1 / 0, 1 / 0], t.targetVisuals = {}, t.controllerVisuals = {}, t;
      }
      return e.prototype.init = function(t, n, a) {
        this.mergeDefaultAndTheme(t, a);
      }, e.prototype.optionUpdated = function(t, n) {
        var a = this.option;
        !n && qL(a, t, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
      }, e.prototype.resetVisual = function(t) {
        var n = this.stateList;
        t = J(t, this), this.controllerVisuals = E0(this.option.controller, n, t), this.targetVisuals = E0(this.option.target, n, t);
      }, e.prototype.getItemSymbol = function() {
        return null;
      }, e.prototype.getTargetSeriesIndices = function() {
        var t = this.option.seriesIndex, n = [];
        return t == null || t === "all" ? this.ecModel.eachSeries(function(a, i) {
          n.push(i);
        }) : n = Xt(t), n;
      }, e.prototype.eachTargetSeries = function(t, n) {
        M(this.getTargetSeriesIndices(), function(a) {
          var i = this.ecModel.getSeriesByIndex(a);
          i && t.call(n, i);
        }, this);
      }, e.prototype.isTargetSeries = function(t) {
        var n = !1;
        return this.eachTargetSeries(function(a) {
          a === t && (n = !0);
        }), n;
      }, e.prototype.formatValueText = function(t, n, a) {
        var i = this.option, o = i.precision, s = this.dataBound, l = i.formatter, u;
        a = a || ["<", ">"], U(t) && (t = t.slice(), u = !0);
        var f = n ? t : u ? [h(t[0]), h(t[1])] : h(t);
        if (j(l))
          return l.replace("{value}", u ? f[0] : f).replace("{value2}", u ? f[1] : f);
        if (rt(l))
          return u ? l(t[0], t[1]) : l(t);
        if (u)
          return t[0] === s[0] ? a[0] + " " + f[1] : t[1] === s[1] ? a[1] + " " + f[0] : f[0] + " - " + f[1];
        return f;
        function h(c) {
          return c === s[0] ? "min" : c === s[1] ? "max" : (+c).toFixed(Math.min(o, 20));
        }
      }, e.prototype.resetExtent = function() {
        var t = this.option, n = a9([t.min, t.max]);
        this._dataExtent = n;
      }, e.prototype.getDataDimensionIndex = function(t) {
        var n = this.option.dimension;
        if (n != null)
          return t.getDimensionIndex(n);
        for (var a = t.dimensions, i = a.length - 1; i >= 0; i--) {
          var o = a[i], s = t.getDimensionInfo(o);
          if (!s.isCalculationCoord)
            return s.storeDimIndex;
        }
      }, e.prototype.getExtent = function() {
        return this._dataExtent.slice();
      }, e.prototype.completeVisualOption = function() {
        var t = this.ecModel, n = this.option, a = {
          inRange: n.inRange,
          outOfRange: n.outOfRange
        }, i = n.target || (n.target = {}), o = n.controller || (n.controller = {});
        mt(i, a), mt(o, a);
        var s = this.isCategory();
        l.call(this, i), l.call(this, o), u.call(this, i, "inRange", "outOfRange"), f.call(this, o);
        function l(h) {
          n9(n.color) && !h.inRange && (h.inRange = {
            color: n.color.slice().reverse()
          }), h.inRange = h.inRange || {
            color: t.get("gradientColor")
          };
        }
        function u(h, c, v) {
          var d = h[c], p = h[v];
          d && !p && (p = h[v] = {}, P2(d, function(g, y) {
            if (Me.isValidType(y)) {
              var m = I2.get(y, "inactive", s);
              m != null && (p[y] = m, y === "color" && !p.hasOwnProperty("opacity") && !p.hasOwnProperty("colorAlpha") && (p.opacity = [0, 0]));
            }
          }));
        }
        function f(h) {
          var c = (h.inRange || {}).symbol || (h.outOfRange || {}).symbol, v = (h.inRange || {}).symbolSize || (h.outOfRange || {}).symbolSize, d = this.get("inactiveColor"), p = this.getItemSymbol(), g = p || "roundRect";
          P2(this.stateList, function(y) {
            var m = this.itemSize, _ = h[y];
            _ || (_ = h[y] = {
              color: s ? d : [d]
            }), _.symbol == null && (_.symbol = c && ht(c) || (s ? g : [g])), _.symbolSize == null && (_.symbolSize = v && ht(v) || (s ? m[0] : [m[0], m[0]])), _.symbol = L2(_.symbol, function(w) {
              return w === "none" ? g : w;
            });
            var S = _.symbolSize;
            if (S != null) {
              var b = -1 / 0;
              r9(S, function(w) {
                w > b && (b = w);
              }), _.symbolSize = L2(S, function(w) {
                return i9(w, [0, b], [0, m[0]], !0);
              });
            }
          }, this);
        }
      }, e.prototype.resetItemSize = function() {
        this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
      }, e.prototype.isCategory = function() {
        return !!this.option.categories;
      }, e.prototype.setSelected = function(t) {
      }, e.prototype.getSelected = function() {
        return null;
      }, e.prototype.getValueState = function(t) {
        return null;
      }, e.prototype.getVisualMeta = function(t) {
        return null;
      }, e.type = "visualMap", e.dependencies = ["series"], e.defaultOption = {
        show: !0,
        // zlevel: 0,
        z: 4,
        seriesIndex: "all",
        min: 0,
        max: 200,
        left: 0,
        right: null,
        top: null,
        bottom: 0,
        itemWidth: null,
        itemHeight: null,
        inverse: !1,
        orient: "vertical",
        backgroundColor: "rgba(0,0,0,0)",
        borderColor: "#ccc",
        contentColor: "#5793f3",
        inactiveColor: "#aaa",
        borderWidth: 0,
        padding: 5,
        // 接受数组分别设定上右下左边距，同css
        textGap: 10,
        precision: 0,
        textStyle: {
          color: "#333"
          // 值域文字颜色
        }
      }, e;
    }(Ct)
  ), E2 = [20, 140], o9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.optionUpdated = function(t, n) {
        r.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(a) {
          a.mappingMethod = "linear", a.dataExtent = this.getExtent();
        }), this._resetRange();
      }, e.prototype.resetItemSize = function() {
        r.prototype.resetItemSize.apply(this, arguments);
        var t = this.itemSize;
        (t[0] == null || isNaN(t[0])) && (t[0] = E2[0]), (t[1] == null || isNaN(t[1])) && (t[1] = E2[1]);
      }, e.prototype._resetRange = function() {
        var t = this.getExtent(), n = this.option.range;
        !n || n.auto ? (t.auto = 1, this.option.range = t) : U(n) && (n[0] > n[1] && n.reverse(), n[0] = Math.max(n[0], t[0]), n[1] = Math.min(n[1], t[1]));
      }, e.prototype.completeVisualOption = function() {
        r.prototype.completeVisualOption.apply(this, arguments), M(this.stateList, function(t) {
          var n = this.option.controller[t].symbolSize;
          n && n[0] !== n[1] && (n[0] = n[1] / 3);
        }, this);
      }, e.prototype.setSelected = function(t) {
        this.option.range = t.slice(), this._resetRange();
      }, e.prototype.getSelected = function() {
        var t = this.getExtent(), n = yr((this.get("range") || []).slice());
        return n[0] > t[1] && (n[0] = t[1]), n[1] > t[1] && (n[1] = t[1]), n[0] < t[0] && (n[0] = t[0]), n[1] < t[0] && (n[1] = t[0]), n;
      }, e.prototype.getValueState = function(t) {
        var n = this.option.range, a = this.getExtent();
        return (n[0] <= a[0] || n[0] <= t) && (n[1] >= a[1] || t <= n[1]) ? "inRange" : "outOfRange";
      }, e.prototype.findTargetDataIndices = function(t) {
        var n = [];
        return this.eachTargetSeries(function(a) {
          var i = [], o = a.getData();
          o.each(this.getDataDimensionIndex(o), function(s, l) {
            t[0] <= s && s <= t[1] && i.push(l);
          }, this), n.push({
            seriesId: a.id,
            dataIndex: i
          });
        }, this), n;
      }, e.prototype.getVisualMeta = function(t) {
        var n = R2(this, "outOfRange", this.getExtent()), a = R2(this, "inRange", this.option.range.slice()), i = [];
        function o(v, d) {
          i.push({
            value: v,
            color: t(v, d)
          });
        }
        for (var s = 0, l = 0, u = a.length, f = n.length; l < f && (!a.length || n[l] <= a[0]); l++)
          n[l] < a[s] && o(n[l], "outOfRange");
        for (var h = 1; s < u; s++, h = 0)
          h && i.length && o(a[s], "outOfRange"), o(a[s], "inRange");
        for (var h = 1; l < f; l++)
          (!a.length || a[a.length - 1] < n[l]) && (h && (i.length && o(i[i.length - 1].value, "outOfRange"), h = 0), o(n[l], "outOfRange"));
        var c = i.length;
        return {
          stops: i,
          outerColors: [c ? i[0].color : "transparent", c ? i[c - 1].color : "transparent"]
        };
      }, e.type = "visualMap.continuous", e.defaultOption = Ea(uv.defaultOption, {
        align: "auto",
        calculable: !1,
        hoverLink: !0,
        realtime: !0,
        handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z",
        handleSize: "120%",
        handleStyle: {
          borderColor: "#fff",
          borderWidth: 1
        },
        indicatorIcon: "circle",
        indicatorSize: "50%",
        indicatorStyle: {
          borderColor: "#fff",
          borderWidth: 2,
          shadowBlur: 2,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0,0,0,0.2)"
        }
        // emphasis: {
        //     handleStyle: {
        //         shadowBlur: 3,
        //         shadowOffsetX: 1,
        //         shadowOffsetY: 1,
        //         shadowColor: 'rgba(0,0,0,0.2)'
        //     }
        // }
      }), e;
    }(uv)
  );
  function R2(r, e, t) {
    if (t[0] === t[1])
      return t.slice();
    for (var n = 200, a = (t[1] - t[0]) / n, i = t[0], o = [], s = 0; s <= n && i < t[1]; s++)
      o.push(i), i += a;
    return o.push(t[1]), o;
  }
  var k2 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t.autoPositionValues = {
          left: 1,
          right: 1,
          top: 1,
          bottom: 1
        }, t;
      }
      return e.prototype.init = function(t, n) {
        this.ecModel = t, this.api = n;
      }, e.prototype.render = function(t, n, a, i) {
        if (this.visualMapModel = t, t.get("show") === !1) {
          this.group.removeAll();
          return;
        }
        this.doRender(t, n, a, i);
      }, e.prototype.renderBackground = function(t) {
        var n = this.visualMapModel, a = ki(n.get("padding") || 0), i = t.getBoundingRect();
        t.add(new Rt({
          z2: -1,
          silent: !0,
          shape: {
            x: i.x - a[3],
            y: i.y - a[0],
            width: i.width + a[3] + a[1],
            height: i.height + a[0] + a[2]
          },
          style: {
            fill: n.get("backgroundColor"),
            stroke: n.get("borderColor"),
            lineWidth: n.get("borderWidth")
          }
        }));
      }, e.prototype.getControllerVisual = function(t, n, a) {
        a = a || {};
        var i = a.forceState, o = this.visualMapModel, s = {};
        if (n === "color") {
          var l = o.get("contentColor");
          s.color = l;
        }
        function u(v) {
          return s[v];
        }
        function f(v, d) {
          s[v] = d;
        }
        var h = o.controllerVisuals[i || o.getValueState(t)], c = Me.prepareVisualTypes(h);
        return M(c, function(v) {
          var d = h[v];
          a.convertOpacityToAlpha && v === "opacity" && (v = "colorAlpha", d = h.__alphaForOpacity), Me.dependsOn(v, n) && d && d.applyVisual(t, u, f);
        }), s[n];
      }, e.prototype.positionGroup = function(t) {
        var n = this.visualMapModel, a = this.api;
        wh(t, n.getBoxLayoutParams(), {
          width: a.getWidth(),
          height: a.getHeight()
        });
      }, e.prototype.doRender = function(t, n, a, i) {
      }, e.type = "visualMap", e;
    }(Jt)
  ), O2 = [["left", "right", "width"], ["top", "bottom", "height"]];
  function N2(r, e, t) {
    var n = r.option, a = n.align;
    if (a != null && a !== "auto")
      return a;
    for (var i = {
      width: e.getWidth(),
      height: e.getHeight()
    }, o = n.orient === "horizontal" ? 1 : 0, s = O2[o], l = [0, null, 10], u = {}, f = 0; f < 3; f++)
      u[O2[1 - o][f]] = l[f], u[s[f]] = f === 2 ? t[0] : n[s[f]];
    var h = [["x", "width", 3], ["y", "height", 0]][o], c = ye(u, i, n.padding);
    return s[(c.margin[h[2]] || 0) + c[h[0]] + c[h[1]] * 0.5 < i[h[1]] * 0.5 ? 0 : 1];
  }
  function fv(r, e) {
    return M(r || [], function(t) {
      t.dataIndex != null && (t.dataIndexInside = t.dataIndex, t.dataIndex = null), t.highlightKey = "visualMap" + (e ? e.componentIndex : "");
    }), r;
  }
  var Vn = Wt, s9 = M, V2 = Math.min, Q0 = Math.max, l9 = 12, u9 = 6, f9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._shapes = {}, t._dataInterval = [], t._handleEnds = [], t._hoverLinkDataIndices = [], t;
      }
      return e.prototype.doRender = function(t, n, a, i) {
        this._api = a, (!i || i.type !== "selectDataRange" || i.from !== this.uid) && this._buildView();
      }, e.prototype._buildView = function() {
        this.group.removeAll();
        var t = this.visualMapModel, n = this.group;
        this._orient = t.get("orient"), this._useHandle = t.get("calculable"), this._resetInterval(), this._renderBar(n);
        var a = t.get("text");
        this._renderEndsText(n, a, 0), this._renderEndsText(n, a, 1), this._updateView(!0), this.renderBackground(n), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(n);
      }, e.prototype._renderEndsText = function(t, n, a) {
        if (n) {
          var i = n[1 - a];
          i = i != null ? i + "" : "";
          var o = this.visualMapModel, s = o.get("textGap"), l = o.itemSize, u = this._shapes.mainGroup, f = this._applyTransform([l[0] / 2, a === 0 ? -s : l[1] + s], u), h = this._applyTransform(a === 0 ? "bottom" : "top", u), c = this._orient, v = this.visualMapModel.textStyleModel;
          this.group.add(new kt({
            style: jt(v, {
              x: f[0],
              y: f[1],
              verticalAlign: c === "horizontal" ? "middle" : h,
              align: c === "horizontal" ? h : "center",
              text: i
            })
          }));
        }
      }, e.prototype._renderBar = function(t) {
        var n = this.visualMapModel, a = this._shapes, i = n.itemSize, o = this._orient, s = this._useHandle, l = N2(n, this.api, i), u = a.mainGroup = this._createBarGroup(l), f = new ct();
        u.add(f), f.add(a.outOfRange = B2()), f.add(a.inRange = B2(null, s ? G2(this._orient) : null, J(this._dragHandle, this, "all", !1), J(this._dragHandle, this, "all", !0))), f.setClipPath(new Rt({
          shape: {
            x: 0,
            y: 0,
            width: i[0],
            height: i[1],
            r: 3
          }
        }));
        var h = n.textStyleModel.getTextRect("国"), c = Q0(h.width, h.height);
        s && (a.handleThumbs = [], a.handleLabels = [], a.handleLabelPoints = [], this._createHandle(n, u, 0, i, c, o), this._createHandle(n, u, 1, i, c, o)), this._createIndicator(n, u, i, c, o), t.add(u);
      }, e.prototype._createHandle = function(t, n, a, i, o, s) {
        var l = J(this._dragHandle, this, a, !1), u = J(this._dragHandle, this, a, !0), f = en(t.get("handleSize"), i[0]), h = ve(t.get("handleIcon"), -f / 2, -f / 2, f, f, null, !0), c = G2(this._orient);
        h.attr({
          cursor: c,
          draggable: !0,
          drift: l,
          ondragend: u,
          onmousemove: function(y) {
            Yn(y.event);
          }
        }), h.x = i[0] / 2, h.useStyle(t.getModel("handleStyle").getItemStyle()), h.setStyle({
          strokeNoScale: !0,
          strokeFirst: !0
        }), h.style.lineWidth *= 2, h.ensureState("emphasis").style = t.getModel(["emphasis", "handleStyle"]).getItemStyle(), Li(h, !0), n.add(h);
        var v = this.visualMapModel.textStyleModel, d = new kt({
          cursor: c,
          draggable: !0,
          drift: l,
          onmousemove: function(y) {
            Yn(y.event);
          },
          ondragend: u,
          style: jt(v, {
            x: 0,
            y: 0,
            text: ""
          })
        });
        d.ensureState("blur").style = {
          opacity: 0.1
        }, d.stateTransition = {
          duration: 200
        }, this.group.add(d);
        var p = [f, 0], g = this._shapes;
        g.handleThumbs[a] = h, g.handleLabelPoints[a] = p, g.handleLabels[a] = d;
      }, e.prototype._createIndicator = function(t, n, a, i, o) {
        var s = en(t.get("indicatorSize"), a[0]), l = ve(t.get("indicatorIcon"), -s / 2, -s / 2, s, s, null, !0);
        l.attr({
          cursor: "move",
          invisible: !0,
          silent: !0,
          x: a[0] / 2
        });
        var u = t.getModel("indicatorStyle").getItemStyle();
        if (l instanceof Te) {
          var f = l.style;
          l.useStyle(H({
            // TODO other properties like x, y ?
            image: f.image,
            x: f.x,
            y: f.y,
            width: f.width,
            height: f.height
          }, u));
        } else
          l.useStyle(u);
        n.add(l);
        var h = this.visualMapModel.textStyleModel, c = new kt({
          silent: !0,
          invisible: !0,
          style: jt(h, {
            x: 0,
            y: 0,
            text: ""
          })
        });
        this.group.add(c);
        var v = [(o === "horizontal" ? i / 2 : u9) + a[0] / 2, 0], d = this._shapes;
        d.indicator = l, d.indicatorLabel = c, d.indicatorLabelPoint = v, this._firstShowIndicator = !0;
      }, e.prototype._dragHandle = function(t, n, a, i) {
        if (this._useHandle) {
          if (this._dragging = !n, !n) {
            var o = this._applyTransform([a, i], this._shapes.mainGroup, !0);
            this._updateInterval(t, o[1]), this._hideIndicator(), this._updateView();
          }
          n === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
            type: "selectDataRange",
            from: this.uid,
            visualMapId: this.visualMapModel.id,
            selected: this._dataInterval.slice()
          }), n ? !this._hovering && this._clearHoverLinkToSeries() : z2(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[t], !1);
        }
      }, e.prototype._resetInterval = function() {
        var t = this.visualMapModel, n = this._dataInterval = t.getSelected(), a = t.getExtent(), i = [0, t.itemSize[1]];
        this._handleEnds = [Vn(n[0], a, i, !0), Vn(n[1], a, i, !0)];
      }, e.prototype._updateInterval = function(t, n) {
        n = n || 0;
        var a = this.visualMapModel, i = this._handleEnds, o = [0, a.itemSize[1]];
        lo(
          n,
          i,
          o,
          t,
          // cross is forbiden
          0
        );
        var s = a.getExtent();
        this._dataInterval = [Vn(i[0], o, s, !0), Vn(i[1], o, s, !0)];
      }, e.prototype._updateView = function(t) {
        var n = this.visualMapModel, a = n.getExtent(), i = this._shapes, o = [0, n.itemSize[1]], s = t ? o : this._handleEnds, l = this._createBarVisual(this._dataInterval, a, s, "inRange"), u = this._createBarVisual(a, a, o, "outOfRange");
        i.inRange.setStyle({
          fill: l.barColor
          // opacity: visualInRange.opacity
        }).setShape("points", l.barPoints), i.outOfRange.setStyle({
          fill: u.barColor
          // opacity: visualOutOfRange.opacity
        }).setShape("points", u.barPoints), this._updateHandle(s, l);
      }, e.prototype._createBarVisual = function(t, n, a, i) {
        var o = {
          forceState: i,
          convertOpacityToAlpha: !0
        }, s = this._makeColorGradient(t, o), l = [this.getControllerVisual(t[0], "symbolSize", o), this.getControllerVisual(t[1], "symbolSize", o)], u = this._createBarPoints(a, l);
        return {
          barColor: new Ho(0, 0, 0, 1, s),
          barPoints: u,
          handlesColor: [s[0].color, s[s.length - 1].color]
        };
      }, e.prototype._makeColorGradient = function(t, n) {
        var a = 100, i = [], o = (t[1] - t[0]) / a;
        i.push({
          color: this.getControllerVisual(t[0], "color", n),
          offset: 0
        });
        for (var s = 1; s < a; s++) {
          var l = t[0] + o * s;
          if (l > t[1])
            break;
          i.push({
            color: this.getControllerVisual(l, "color", n),
            offset: s / a
          });
        }
        return i.push({
          color: this.getControllerVisual(t[1], "color", n),
          offset: 1
        }), i;
      }, e.prototype._createBarPoints = function(t, n) {
        var a = this.visualMapModel.itemSize;
        return [[a[0] - n[0], t[0]], [a[0], t[0]], [a[0], t[1]], [a[0] - n[1], t[1]]];
      }, e.prototype._createBarGroup = function(t) {
        var n = this._orient, a = this.visualMapModel.get("inverse");
        return new ct(n === "horizontal" && !a ? {
          scaleX: t === "bottom" ? 1 : -1,
          rotation: Math.PI / 2
        } : n === "horizontal" && a ? {
          scaleX: t === "bottom" ? -1 : 1,
          rotation: -Math.PI / 2
        } : n === "vertical" && !a ? {
          scaleX: t === "left" ? 1 : -1,
          scaleY: -1
        } : {
          scaleX: t === "left" ? 1 : -1
        });
      }, e.prototype._updateHandle = function(t, n) {
        if (this._useHandle) {
          var a = this._shapes, i = this.visualMapModel, o = a.handleThumbs, s = a.handleLabels, l = i.itemSize, u = i.getExtent();
          s9([0, 1], function(f) {
            var h = o[f];
            h.setStyle("fill", n.handlesColor[f]), h.y = t[f];
            var c = Vn(t[f], [0, l[1]], u, !0), v = this.getControllerVisual(c, "symbolSize");
            h.scaleX = h.scaleY = v / l[0], h.x = l[0] - v / 2;
            var d = on(a.handleLabelPoints[f], La(h, this.group));
            s[f].setStyle({
              x: d[0],
              y: d[1],
              text: i.formatValueText(this._dataInterval[f]),
              verticalAlign: "middle",
              align: this._orient === "vertical" ? this._applyTransform("left", a.mainGroup) : "center"
            });
          }, this);
        }
      }, e.prototype._showIndicator = function(t, n, a, i) {
        var o = this.visualMapModel, s = o.getExtent(), l = o.itemSize, u = [0, l[1]], f = this._shapes, h = f.indicator;
        if (h) {
          h.attr("invisible", !1);
          var c = {
            convertOpacityToAlpha: !0
          }, v = this.getControllerVisual(t, "color", c), d = this.getControllerVisual(t, "symbolSize"), p = Vn(t, s, u, !0), g = l[0] - d / 2, y = {
            x: h.x,
            y: h.y
          };
          h.y = p, h.x = g;
          var m = on(f.indicatorLabelPoint, La(h, this.group)), _ = f.indicatorLabel;
          _.attr("invisible", !1);
          var S = this._applyTransform("left", f.mainGroup), b = this._orient, w = b === "horizontal";
          _.setStyle({
            text: (a || "") + o.formatValueText(n),
            verticalAlign: w ? S : "middle",
            align: w ? "center" : S
          });
          var T = {
            x: g,
            y: p,
            style: {
              fill: v
            }
          }, C = {
            style: {
              x: m[0],
              y: m[1]
            }
          };
          if (o.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
            var I = {
              duration: 100,
              easing: "cubicInOut",
              additive: !0
            };
            h.x = y.x, h.y = y.y, h.animateTo(T, I), _.animateTo(C, I);
          } else
            h.attr(T), _.attr(C);
          this._firstShowIndicator = !1;
          var L = this._shapes.handleLabels;
          if (L)
            for (var P = 0; P < L.length; P++)
              this._api.enterBlur(L[P]);
        }
      }, e.prototype._enableHoverLinkToSeries = function() {
        var t = this;
        this._shapes.mainGroup.on("mousemove", function(n) {
          if (t._hovering = !0, !t._dragging) {
            var a = t.visualMapModel.itemSize, i = t._applyTransform([n.offsetX, n.offsetY], t._shapes.mainGroup, !0, !0);
            i[1] = V2(Q0(0, i[1]), a[1]), t._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= a[0]);
          }
        }).on("mouseout", function() {
          t._hovering = !1, !t._dragging && t._clearHoverLinkToSeries();
        });
      }, e.prototype._enableHoverLinkFromSeries = function() {
        var t = this.api.getZr();
        this.visualMapModel.option.hoverLink ? (t.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), t.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
      }, e.prototype._doHoverLinkToSeries = function(t, n) {
        var a = this.visualMapModel, i = a.itemSize;
        if (a.option.hoverLink) {
          var o = [0, i[1]], s = a.getExtent();
          t = V2(Q0(o[0], t), o[1]);
          var l = h9(a, s, o), u = [t - l, t + l], f = Vn(t, o, s, !0), h = [Vn(u[0], o, s, !0), Vn(u[1], o, s, !0)];
          u[0] < o[0] && (h[0] = -1 / 0), u[1] > o[1] && (h[1] = 1 / 0), n && (h[0] === -1 / 0 ? this._showIndicator(f, h[1], "< ", l) : h[1] === 1 / 0 ? this._showIndicator(f, h[0], "> ", l) : this._showIndicator(f, f, "≈ ", l));
          var c = this._hoverLinkDataIndices, v = [];
          (n || z2(a)) && (v = this._hoverLinkDataIndices = a.findTargetDataIndices(h));
          var d = ik(c, v);
          this._dispatchHighDown("downplay", fv(d[0], a)), this._dispatchHighDown("highlight", fv(d[1], a));
        }
      }, e.prototype._hoverLinkFromSeriesMouseOver = function(t) {
        var n;
        if (Hi(t.target, function(l) {
          var u = gt(l);
          if (u.dataIndex != null)
            return n = u, !0;
        }, !0), !!n) {
          var a = this.ecModel.getSeriesByIndex(n.seriesIndex), i = this.visualMapModel;
          if (i.isTargetSeries(a)) {
            var o = a.getData(n.dataType), s = o.getStore().get(i.getDataDimensionIndex(o), n.dataIndex);
            isNaN(s) || this._showIndicator(s, s);
          }
        }
      }, e.prototype._hideIndicator = function() {
        var t = this._shapes;
        t.indicator && t.indicator.attr("invisible", !0), t.indicatorLabel && t.indicatorLabel.attr("invisible", !0);
        var n = this._shapes.handleLabels;
        if (n)
          for (var a = 0; a < n.length; a++)
            this._api.leaveBlur(n[a]);
      }, e.prototype._clearHoverLinkToSeries = function() {
        this._hideIndicator();
        var t = this._hoverLinkDataIndices;
        this._dispatchHighDown("downplay", fv(t, this.visualMapModel)), t.length = 0;
      }, e.prototype._clearHoverLinkFromSeries = function() {
        this._hideIndicator();
        var t = this.api.getZr();
        t.off("mouseover", this._hoverLinkFromSeriesMouseOver), t.off("mouseout", this._hideIndicator);
      }, e.prototype._applyTransform = function(t, n, a, i) {
        var o = La(n, i ? null : this.group);
        return U(t) ? on(t, o, a) : fh(t, o, a);
      }, e.prototype._dispatchHighDown = function(t, n) {
        n && n.length && this.api.dispatchAction({
          type: t,
          batch: n
        });
      }, e.prototype.dispose = function() {
        this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
      }, e.prototype.remove = function() {
        this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
      }, e.type = "visualMap.continuous", e;
    }(k2)
  );
  function B2(r, e, t, n) {
    return new ze({
      shape: {
        points: r
      },
      draggable: !!t,
      cursor: e,
      drift: t,
      onmousemove: function(a) {
        Yn(a.event);
      },
      ondragend: n
    });
  }
  function h9(r, e, t) {
    var n = l9 / 2, a = r.get("hoverLinkDataSize");
    return a && (n = Vn(a, e, t, !0) / 2), n;
  }
  function z2(r) {
    var e = r.get("hoverLinkOnHandle");
    return !!(e ?? r.get("realtime"));
  }
  function G2(r) {
    return r === "vertical" ? "ns-resize" : "ew-resize";
  }
  var c9 = {
    type: "selectDataRange",
    event: "dataRangeSelected",
    // FIXME use updateView appears wrong
    update: "update"
  }, v9 = function(r, e) {
    e.eachComponent({
      mainType: "visualMap",
      query: r
    }, function(t) {
      t.setSelected(r.selected);
    });
  }, d9 = [
    {
      createOnAllSeries: !0,
      reset: function(r, e) {
        var t = [];
        return e.eachComponent("visualMap", function(n) {
          var a = r.pipelineContext;
          !n.isTargetSeries(r) || a && a.large || t.push(N$(n.stateList, n.targetVisuals, J(n.getValueState, n), n.getDataDimensionIndex(r.getData())));
        }), t;
      }
    },
    // Only support color.
    {
      createOnAllSeries: !0,
      reset: function(r, e) {
        var t = r.getData(), n = [];
        e.eachComponent("visualMap", function(a) {
          if (a.isTargetSeries(r)) {
            var i = a.getVisualMeta(J(p9, null, r, a)) || {
              stops: [],
              outerColors: []
            }, o = a.getDataDimensionIndex(t);
            o >= 0 && (i.dimension = o, n.push(i));
          }
        }), r.getData().setVisual("visualMeta", n);
      }
    }
  ];
  function p9(r, e, t, n) {
    for (var a = e.targetVisuals[n], i = Me.prepareVisualTypes(a), o = {
      color: Jl(r.getData(), "color")
      // default color.
    }, s = 0, l = i.length; s < l; s++) {
      var u = i[s], f = a[u === "opacity" ? "__alphaForOpacity" : u];
      f && f.applyVisual(t, h, c);
    }
    return o.color;
    function h(v) {
      return o[v];
    }
    function c(v, d) {
      o[v] = d;
    }
  }
  var F2 = M;
  function g9(r) {
    var e = r && r.visualMap;
    U(e) || (e = e ? [e] : []), F2(e, function(t) {
      if (t) {
        Es(t, "splitList") && !Es(t, "pieces") && (t.pieces = t.splitList, delete t.splitList);
        var n = t.pieces;
        n && U(n) && F2(n, function(a) {
          it(a) && (Es(a, "start") && !Es(a, "min") && (a.min = a.start), Es(a, "end") && !Es(a, "max") && (a.max = a.end));
        });
      }
    });
  }
  function Es(r, e) {
    return r && r.hasOwnProperty && r.hasOwnProperty(e);
  }
  var H2 = !1;
  function W2(r) {
    H2 || (H2 = !0, r.registerSubTypeDefaulter("visualMap", function(e) {
      return !e.categories && (!(e.pieces ? e.pieces.length > 0 : e.splitNumber > 0) || e.calculable) ? "continuous" : "piecewise";
    }), r.registerAction(c9, v9), M(d9, function(e) {
      r.registerVisual(r.PRIORITY.VISUAL.COMPONENT, e);
    }), r.registerPreprocessor(g9));
  }
  function U2(r) {
    r.registerComponentModel(o9), r.registerComponentView(f9), W2(r);
  }
  var y9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t._pieceList = [], t;
      }
      return e.prototype.optionUpdated = function(t, n) {
        r.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
        var a = this._mode = this._determineMode();
        this._pieceList = [], m9[this._mode].call(this, this._pieceList), this._resetSelected(t, n);
        var i = this.option.categories;
        this.resetVisual(function(o, s) {
          a === "categories" ? (o.mappingMethod = "category", o.categories = ht(i)) : (o.dataExtent = this.getExtent(), o.mappingMethod = "piecewise", o.pieceList = Y(this._pieceList, function(l) {
            return l = ht(l), s !== "inRange" && (l.visual = null), l;
          }));
        });
      }, e.prototype.completeVisualOption = function() {
        var t = this.option, n = {}, a = Me.listVisualTypes(), i = this.isCategory();
        M(t.pieces, function(s) {
          M(a, function(l) {
            s.hasOwnProperty(l) && (n[l] = 1);
          });
        }), M(n, function(s, l) {
          var u = !1;
          M(this.stateList, function(f) {
            u = u || o(t, f, l) || o(t.target, f, l);
          }, this), !u && M(this.stateList, function(f) {
            (t[f] || (t[f] = {}))[l] = I2.get(l, f === "inRange" ? "active" : "inactive", i);
          });
        }, this);
        function o(s, l, u) {
          return s && s[l] && s[l].hasOwnProperty(u);
        }
        r.prototype.completeVisualOption.apply(this, arguments);
      }, e.prototype._resetSelected = function(t, n) {
        var a = this.option, i = this._pieceList, o = (n ? a : t).selected || {};
        if (a.selected = o, M(i, function(l, u) {
          var f = this.getSelectedMapKey(l);
          o.hasOwnProperty(f) || (o[f] = !0);
        }, this), a.selectedMode === "single") {
          var s = !1;
          M(i, function(l, u) {
            var f = this.getSelectedMapKey(l);
            o[f] && (s ? o[f] = !1 : s = !0);
          }, this);
        }
      }, e.prototype.getItemSymbol = function() {
        return this.get("itemSymbol");
      }, e.prototype.getSelectedMapKey = function(t) {
        return this._mode === "categories" ? t.value + "" : t.index + "";
      }, e.prototype.getPieceList = function() {
        return this._pieceList;
      }, e.prototype._determineMode = function() {
        var t = this.option;
        return t.pieces && t.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
      }, e.prototype.setSelected = function(t) {
        this.option.selected = ht(t);
      }, e.prototype.getValueState = function(t) {
        var n = Me.findPieceIndex(t, this._pieceList);
        return n != null && this.option.selected[this.getSelectedMapKey(this._pieceList[n])] ? "inRange" : "outOfRange";
      }, e.prototype.findTargetDataIndices = function(t) {
        var n = [], a = this._pieceList;
        return this.eachTargetSeries(function(i) {
          var o = [], s = i.getData();
          s.each(this.getDataDimensionIndex(s), function(l, u) {
            var f = Me.findPieceIndex(l, a);
            f === t && o.push(u);
          }, this), n.push({
            seriesId: i.id,
            dataIndex: o
          });
        }, this), n;
      }, e.prototype.getRepresentValue = function(t) {
        var n;
        if (this.isCategory())
          n = t.value;
        else if (t.value != null)
          n = t.value;
        else {
          var a = t.interval || [];
          n = a[0] === -1 / 0 && a[1] === 1 / 0 ? 0 : (a[0] + a[1]) / 2;
        }
        return n;
      }, e.prototype.getVisualMeta = function(t) {
        if (this.isCategory())
          return;
        var n = [], a = ["", ""], i = this;
        function o(f, h) {
          var c = i.getRepresentValue({
            interval: f
          });
          h || (h = i.getValueState(c));
          var v = t(c, h);
          f[0] === -1 / 0 ? a[0] = v : f[1] === 1 / 0 ? a[1] = v : n.push({
            value: f[0],
            color: v
          }, {
            value: f[1],
            color: v
          });
        }
        var s = this._pieceList.slice();
        if (!s.length)
          s.push({
            interval: [-1 / 0, 1 / 0]
          });
        else {
          var l = s[0].interval[0];
          l !== -1 / 0 && s.unshift({
            interval: [-1 / 0, l]
          }), l = s[s.length - 1].interval[1], l !== 1 / 0 && s.push({
            interval: [l, 1 / 0]
          });
        }
        var u = -1 / 0;
        return M(s, function(f) {
          var h = f.interval;
          h && (h[0] > u && o([u, h[0]], "outOfRange"), o(h.slice()), u = h[1]);
        }, this), {
          stops: n,
          outerColors: a
        };
      }, e.type = "visualMap.piecewise", e.defaultOption = Ea(uv.defaultOption, {
        selected: null,
        minOpen: !1,
        maxOpen: !1,
        align: "auto",
        itemWidth: 20,
        itemHeight: 14,
        itemSymbol: "roundRect",
        pieces: null,
        categories: null,
        splitNumber: 5,
        selectedMode: "multiple",
        itemGap: 10,
        hoverLink: !0
        // Enable hover highlight.
      }), e;
    }(uv)
  ), m9 = {
    splitNumber: function(r) {
      var e = this.option, t = Math.min(e.precision, 20), n = this.getExtent(), a = e.splitNumber;
      a = Math.max(parseInt(a, 10), 1), e.splitNumber = a;
      for (var i = (n[1] - n[0]) / a; +i.toFixed(t) !== i && t < 5; )
        t++;
      e.precision = t, i = +i.toFixed(t), e.minOpen && r.push({
        interval: [-1 / 0, n[0]],
        close: [0, 0]
      });
      for (var o = 0, s = n[0]; o < a; s += i, o++) {
        var l = o === a - 1 ? n[1] : s + i;
        r.push({
          interval: [s, l],
          close: [1, 1]
        });
      }
      e.maxOpen && r.push({
        interval: [n[1], 1 / 0],
        close: [0, 0]
      }), Vd(r), M(r, function(u, f) {
        u.index = f, u.text = this.formatValueText(u.interval);
      }, this);
    },
    categories: function(r) {
      var e = this.option;
      M(e.categories, function(t) {
        r.push({
          text: this.formatValueText(t, !0),
          value: t
        });
      }, this), Y2(e, r);
    },
    pieces: function(r) {
      var e = this.option;
      M(e.pieces, function(t, n) {
        it(t) || (t = {
          value: t
        });
        var a = {
          text: "",
          index: n
        };
        if (t.label != null && (a.text = t.label), t.hasOwnProperty("value")) {
          var i = a.value = t.value;
          a.interval = [i, i], a.close = [1, 1];
        } else {
          for (var o = a.interval = [], s = a.close = [0, 0], l = [1, 0, 1], u = [-1 / 0, 1 / 0], f = [], h = 0; h < 2; h++) {
            for (var c = [["gte", "gt", "min"], ["lte", "lt", "max"]][h], v = 0; v < 3 && o[h] == null; v++)
              o[h] = t[c[v]], s[h] = l[v], f[h] = v === 2;
            o[h] == null && (o[h] = u[h]);
          }
          f[0] && o[1] === 1 / 0 && (s[0] = 0), f[1] && o[0] === -1 / 0 && (s[1] = 0), o[0] > o[1] && console.warn("Piece " + n + "is illegal: " + o + " lower bound should not greater then uppper bound."), o[0] === o[1] && s[0] && s[1] && (a.value = o[0]);
        }
        a.visual = Me.retrieveVisuals(t), r.push(a);
      }, this), Y2(e, r), Vd(r), M(r, function(t) {
        var n = t.close, a = [["<", "≤"][n[1]], [">", "≥"][n[0]]];
        t.text = t.text || this.formatValueText(t.value != null ? t.value : t.interval, !1, a);
      }, this);
    }
  };
  function Y2(r, e) {
    var t = r.inverse;
    (r.orient === "vertical" ? !t : t) && e.reverse();
  }
  var _9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = e.type, t;
      }
      return e.prototype.doRender = function() {
        var t = this.group;
        t.removeAll();
        var n = this.visualMapModel, a = n.get("textGap"), i = n.textStyleModel, o = i.getFont(), s = i.getTextColor(), l = this._getItemAlign(), u = n.itemSize, f = this._getViewData(), h = f.endsText, c = he(n.get("showLabel", !0), !h);
        h && this._renderEndsText(t, h[0], u, c, l), M(f.viewPieceList, function(v) {
          var d = v.piece, p = new ct();
          p.onclick = J(this._onItemClick, this, d), this._enableHoverLink(p, v.indexInModelPieceList);
          var g = n.getRepresentValue(d);
          if (this._createItemSymbol(p, g, [0, 0, u[0], u[1]]), c) {
            var y = this.visualMapModel.getValueState(g);
            p.add(new kt({
              style: {
                x: l === "right" ? -a : u[0] + a,
                y: u[1] / 2,
                text: d.text,
                verticalAlign: "middle",
                align: l,
                font: o,
                fill: s,
                opacity: y === "outOfRange" ? 0.5 : 1
              }
            }));
          }
          t.add(p);
        }, this), h && this._renderEndsText(t, h[1], u, c, l), Vi(n.get("orient"), t, n.get("itemGap")), this.renderBackground(t), this.positionGroup(t);
      }, e.prototype._enableHoverLink = function(t, n) {
        var a = this;
        t.on("mouseover", function() {
          return i("highlight");
        }).on("mouseout", function() {
          return i("downplay");
        });
        var i = function(o) {
          var s = a.visualMapModel;
          s.option.hoverLink && a.api.dispatchAction({
            type: o,
            batch: fv(s.findTargetDataIndices(n), s)
          });
        };
      }, e.prototype._getItemAlign = function() {
        var t = this.visualMapModel, n = t.option;
        if (n.orient === "vertical")
          return N2(t, this.api, t.itemSize);
        var a = n.align;
        return (!a || a === "auto") && (a = "left"), a;
      }, e.prototype._renderEndsText = function(t, n, a, i, o) {
        if (n) {
          var s = new ct(), l = this.visualMapModel.textStyleModel;
          s.add(new kt({
            style: jt(l, {
              x: i ? o === "right" ? a[0] : 0 : a[0] / 2,
              y: a[1] / 2,
              verticalAlign: "middle",
              align: i ? o : "center",
              text: n
            })
          })), t.add(s);
        }
      }, e.prototype._getViewData = function() {
        var t = this.visualMapModel, n = Y(t.getPieceList(), function(s, l) {
          return {
            piece: s,
            indexInModelPieceList: l
          };
        }), a = t.get("text"), i = t.get("orient"), o = t.get("inverse");
        return (i === "horizontal" ? o : !o) ? n.reverse() : a && (a = a.slice().reverse()), {
          viewPieceList: n,
          endsText: a
        };
      }, e.prototype._createItemSymbol = function(t, n, a) {
        t.add(ve(
          // symbol will be string
          this.getControllerVisual(n, "symbol"),
          a[0],
          a[1],
          a[2],
          a[3],
          // color will be string
          this.getControllerVisual(n, "color")
        ));
      }, e.prototype._onItemClick = function(t) {
        var n = this.visualMapModel, a = n.option, i = a.selectedMode;
        if (i) {
          var o = ht(a.selected), s = n.getSelectedMapKey(t);
          i === "single" || i === !0 ? (o[s] = !0, M(o, function(l, u) {
            o[u] = u === s;
          })) : o[s] = !o[s], this.api.dispatchAction({
            type: "selectDataRange",
            from: this.uid,
            visualMapId: this.visualMapModel.id,
            selected: o
          });
        }
      }, e.type = "visualMap.piecewise", e;
    }(k2)
  );
  function $2(r) {
    r.registerComponentModel(y9), r.registerComponentView(_9), W2(r);
  }
  function S9(r) {
    At(U2), At($2);
  }
  var x9 = {
    label: {
      enabled: !0
    },
    decal: {
      show: !1
    }
  }, X2 = Nt(), w9 = {};
  function b9(r, e) {
    var t = r.getModel("aria");
    if (!t.get("enabled"))
      return;
    var n = ht(x9);
    mt(n.label, r.getLocaleModel().get("aria"), !1), mt(t.option, n, !1), a(), i();
    function a() {
      var u = t.getModel("decal"), f = u.get("show");
      if (f) {
        var h = nt();
        r.eachSeries(function(c) {
          if (!c.isColorBySeries()) {
            var v = h.get(c.type);
            v || (v = {}, h.set(c.type, v)), X2(c).scope = v;
          }
        }), r.eachRawSeries(function(c) {
          if (r.isSeriesFiltered(c))
            return;
          if (rt(c.enableAriaDecal)) {
            c.enableAriaDecal();
            return;
          }
          var v = c.getData();
          if (c.isColorBySeries()) {
            var m = Zp(c.ecModel, c.name, w9, r.getSeriesCount()), _ = v.getVisual("decal");
            v.setVisual("decal", S(_, m));
          } else {
            var d = c.getRawData(), p = {}, g = X2(c).scope;
            v.each(function(b) {
              var w = v.getRawIndex(b);
              p[w] = b;
            });
            var y = d.count();
            d.each(function(b) {
              var w = p[b], T = d.getName(b) || b + "", C = Zp(c.ecModel, T, g, y), I = v.getItemVisual(w, "decal");
              v.setItemVisual(w, "decal", S(I, C));
            });
          }
          function S(b, w) {
            var T = b ? H(H({}, w), b) : w;
            return T.dirty = !0, T;
          }
        });
      }
    }
    function i() {
      var u = r.getLocaleModel().get("aria"), f = t.getModel("label");
      if (f.option = ot(f.option, u), !!f.get("enabled")) {
        var h = e.getZr().dom;
        if (f.get("description")) {
          h.setAttribute("aria-label", f.get("description"));
          return;
        }
        var c = r.getSeriesCount(), v = f.get(["data", "maxCount"]) || 10, d = f.get(["series", "maxCount"]) || 10, p = Math.min(c, d), g;
        if (!(c < 1)) {
          var y = s();
          if (y) {
            var m = f.get(["general", "withTitle"]);
            g = o(m, {
              title: y
            });
          } else
            g = f.get(["general", "withoutTitle"]);
          var _ = [], S = c > 1 ? f.get(["series", "multiple", "prefix"]) : f.get(["series", "single", "prefix"]);
          g += o(S, {
            seriesCount: c
          }), r.eachSeries(function(C, I) {
            if (I < p) {
              var L = void 0, P = C.get("name"), E = P ? "withName" : "withoutName";
              L = c > 1 ? f.get(["series", "multiple", E]) : f.get(["series", "single", E]), L = o(L, {
                seriesId: C.seriesIndex,
                seriesName: C.get("name"),
                seriesType: l(C.subType)
              });
              var R = C.getData();
              if (R.count() > v) {
                var k = f.get(["data", "partialData"]);
                L += o(k, {
                  displayCnt: v
                });
              } else
                L += f.get(["data", "allData"]);
              for (var O = f.get(["data", "separator", "middle"]), N = f.get(["data", "separator", "end"]), F = [], G = 0; G < R.count(); G++)
                if (G < v) {
                  var W = R.getName(G), X = R.getValues(G), K = f.get(["data", W ? "withName" : "withoutName"]);
                  F.push(o(K, {
                    name: W,
                    value: X.join(O)
                  }));
                }
              L += F.join(O) + N, _.push(L);
            }
          });
          var b = f.getModel(["series", "multiple", "separator"]), w = b.get("middle"), T = b.get("end");
          g += _.join(w) + T, h.setAttribute("aria-label", g);
        }
      }
    }
    function o(u, f) {
      if (!j(u))
        return u;
      var h = u;
      return M(f, function(c, v) {
        h = h.replace(new RegExp("\\{\\s*" + v + "\\s*\\}", "g"), c);
      }), h;
    }
    function s() {
      var u = r.get("title");
      return u && u.length && (u = u[0]), u && u.text;
    }
    function l(u) {
      return r.getLocaleModel().get(["series", "typeNames"])[u] || "自定义图";
    }
  }
  function T9(r) {
    if (!(!r || !r.aria)) {
      var e = r.aria;
      e.show != null && (e.enabled = e.show), e.label = e.label || {}, M(["description", "general", "series", "data"], function(t) {
        e[t] != null && (e.label[t] = e[t]);
      });
    }
  }
  function C9(r) {
    r.registerPreprocessor(T9), r.registerVisual(r.PRIORITY.VISUAL.ARIA, b9);
  }
  var Z2 = {
    value: "eq",
    // PENDING: not good for literal semantic?
    "<": "lt",
    "<=": "lte",
    ">": "gt",
    ">=": "gte",
    "=": "eq",
    "!=": "ne",
    "<>": "ne"
    // Might be misleading for sake of the difference between '==' and '===',
    // so don't support them.
    // '==': 'eq',
    // '===': 'seq',
    // '!==': 'sne'
    // PENDING: Whether support some common alias "ge", "le", "neq"?
    // ge: 'gte',
    // le: 'lte',
    // neq: 'ne',
  }, A9 = (
    /** @class */
    function() {
      function r(e) {
        var t = this._condVal = j(e) ? new RegExp(e) : Gv(e) ? e : null;
        if (t == null) {
          var n = "";
          n = Ke("Illegal regexp", e, "in"), Ft(n);
        }
      }
      return r.prototype.evaluate = function(e) {
        var t = typeof e;
        return j(t) ? this._condVal.test(e) : Ot(t) ? this._condVal.test(e + "") : !1;
      }, r;
    }()
  ), D9 = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.evaluate = function() {
        return this.value;
      }, r;
    }()
  ), M9 = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.evaluate = function() {
        for (var e = this.children, t = 0; t < e.length; t++)
          if (!e[t].evaluate())
            return !1;
        return !0;
      }, r;
    }()
  ), I9 = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.evaluate = function() {
        for (var e = this.children, t = 0; t < e.length; t++)
          if (e[t].evaluate())
            return !0;
        return !1;
      }, r;
    }()
  ), L9 = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.evaluate = function() {
        return !this.child.evaluate();
      }, r;
    }()
  ), P9 = (
    /** @class */
    function() {
      function r() {
      }
      return r.prototype.evaluate = function() {
        for (var e = !!this.valueParser, t = this.getValue, n = t(this.valueGetterParam), a = e ? this.valueParser(n) : null, i = 0; i < this.subCondList.length; i++)
          if (!this.subCondList[i].evaluate(e ? a : n))
            return !1;
        return !0;
      }, r;
    }()
  );
  function t_(r, e) {
    if (r === !0 || r === !1) {
      var t = new D9();
      return t.value = r, t;
    }
    var n = "";
    return K2(r) || (n = Ke("Illegal config. Expect a plain object but actually", r), Ft(n)), r.and ? q2("and", r, e) : r.or ? q2("or", r, e) : r.not ? E9(r, e) : R9(r, e);
  }
  function q2(r, e, t) {
    var n = e[r], a = "";
    a = Ke('"and"/"or" condition should only be `' + r + ": [...]` and must not be empty array.", "Illegal condition:", e), U(n) || Ft(a), n.length || Ft(a);
    var i = r === "and" ? new M9() : new I9();
    return i.children = Y(n, function(o) {
      return t_(o, t);
    }), i.children.length || Ft(a), i;
  }
  function E9(r, e) {
    var t = r.not, n = "";
    n = Ke('"not" condition should only be `not: {}`.', "Illegal condition:", r), K2(t) || Ft(n);
    var a = new L9();
    return a.child = t_(t, e), a.child || Ft(n), a;
  }
  function R9(r, e) {
    for (var t = "", n = e.prepareGetValue(r), a = [], i = Pt(r), o = r.parser, s = o ? Rw(o) : null, l = 0; l < i.length; l++) {
      var u = i[l];
      if (!(u === "parser" || e.valueGetterAttrMap.get(u))) {
        var f = Q(Z2, u) ? Z2[u] : u, h = r[u], c = s ? s(h) : h, v = sV(f, c) || f === "reg" && new A9(c);
        v || (t = Ke('Illegal relational operation: "' + u + '" in condition:', r), Ft(t)), a.push(v);
      }
    }
    a.length || (t = Ke("Relational condition must have at least one operator.", "Illegal condition:", r), Ft(t));
    var d = new P9();
    return d.valueGetterParam = n, d.valueParser = s, d.getValue = e.getValue, d.subCondList = a, d;
  }
  function K2(r) {
    return it(r) && !Pe(r);
  }
  var k9 = (
    /** @class */
    function() {
      function r(e, t) {
        this._cond = t_(e, t);
      }
      return r.prototype.evaluate = function() {
        return this._cond.evaluate();
      }, r;
    }()
  );
  function O9(r, e) {
    return new k9(r, e);
  }
  var N9 = {
    type: "echarts:filter",
    // PEDING: enhance to filter by index rather than create new data
    transform: function(r) {
      for (var e = r.upstream, t, n = O9(r.config, {
        valueGetterAttrMap: nt({
          dimension: !0
        }),
        prepareGetValue: function(s) {
          var l = "", u = s.dimension;
          Q(s, "dimension") || (l = Ke('Relation condition must has prop "dimension" specified.', "Illegal condition:", s), Ft(l));
          var f = e.getDimensionInfo(u);
          return f || (l = Ke("Can not find dimension info via: " + u + `.
`, "Existing dimensions: ", e.cloneAllDimensionInfo(), `.
`, "Illegal condition:", s, `.
`), Ft(l)), {
            dimIdx: f.index
          };
        },
        getValue: function(s) {
          return e.retrieveValueFromItem(t, s.dimIdx);
        }
      }), a = [], i = 0, o = e.count(); i < o; i++)
        t = e.getRawDataItem(i), n.evaluate() && a.push(t);
      return {
        data: a
      };
    }
  }, e_ = "";
  e_ = ["Valid config is like:", '{ dimension: "age", order: "asc" }', 'or [{ dimension: "age", order: "asc"], { dimension: "date", order: "desc" }]'].join(" ");
  var V9 = {
    type: "echarts:sort",
    transform: function(r) {
      var e = r.upstream, t = r.config, n = "", a = Xt(t);
      a.length || (n = "Empty `config` in sort transform.", Ft(n));
      var i = [];
      M(a, function(f) {
        var h = f.dimension, c = f.order, v = f.parser, d = f.incomparable;
        if (h == null && (n = 'Sort transform config must has "dimension" specified.' + e_, Ft(n)), c !== "asc" && c !== "desc" && (n = 'Sort transform config must has "order" specified.' + e_, Ft(n)), d && d !== "min" && d !== "max") {
          var p = "";
          p = 'incomparable must be "min" or "max" rather than "' + d + '".', Ft(p);
        }
        if (c !== "asc" && c !== "desc") {
          var g = "";
          g = 'order must be "asc" or "desc" rather than "' + c + '".', Ft(g);
        }
        var y = e.getDimensionInfo(h);
        y || (n = Ke("Can not find dimension info via: " + h + `.
`, "Existing dimensions: ", e.cloneAllDimensionInfo(), `.
`, "Illegal config:", f, `.
`), Ft(n));
        var m = v ? Rw(v) : null;
        v && !m && (n = Ke("Invalid parser name " + v + `.
`, "Illegal config:", f, `.
`), Ft(n)), i.push({
          dimIdx: y.index,
          parser: m,
          comparator: new Ow(c, d)
        });
      });
      var o = e.sourceFormat;
      o !== Fe && o !== Gr && (n = 'sourceFormat "' + o + '" is not supported yet', Ft(n));
      for (var s = [], l = 0, u = e.count(); l < u; l++)
        s.push(e.getRawDataItem(l));
      return s.sort(function(f, h) {
        for (var c = 0; c < i.length; c++) {
          var v = i[c], d = e.retrieveValueFromItem(f, v.dimIdx), p = e.retrieveValueFromItem(h, v.dimIdx);
          v.parser && (d = v.parser(d), p = v.parser(p));
          var g = v.comparator.evaluate(d, p);
          if (g !== 0)
            return g;
        }
        return 0;
      }), {
        data: s
      };
    }
  };
  function B9(r) {
    r.registerTransform(N9), r.registerTransform(V9);
  }
  var z9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "dataset", t;
      }
      return e.prototype.init = function(t, n, a) {
        r.prototype.init.call(this, t, n, a), this._sourceManager = new Fw(this), Hw(this);
      }, e.prototype.mergeOption = function(t, n) {
        r.prototype.mergeOption.call(this, t, n), Hw(this);
      }, e.prototype.optionUpdated = function() {
        this._sourceManager.dirty();
      }, e.prototype.getSourceManager = function() {
        return this._sourceManager;
      }, e.type = "dataset", e.defaultOption = {
        seriesLayoutBy: In
      }, e;
    }(Ct)
  ), G9 = (
    /** @class */
    function(r) {
      A(e, r);
      function e() {
        var t = r !== null && r.apply(this, arguments) || this;
        return t.type = "dataset", t;
      }
      return e.type = "dataset", e;
    }(Jt)
  );
  function F9(r) {
    r.registerComponentModel(z9), r.registerComponentView(G9);
  }
  var Bn = An.CMD;
  function Rs(r, e) {
    return Math.abs(r - e) < 1e-5;
  }
  function r_(r) {
    var e = r.data, t = r.len(), n = [], a, i = 0, o = 0, s = 0, l = 0;
    function u(R, k) {
      a && a.length > 2 && n.push(a), a = [R, k];
    }
    function f(R, k, O, N) {
      Rs(R, O) && Rs(k, N) || a.push(R, k, O, N, O, N);
    }
    function h(R, k, O, N, F, G) {
      var W = Math.abs(k - R), X = Math.tan(W / 4) * 4 / 3, K = k < R ? -1 : 1, et = Math.cos(R), lt = Math.sin(R), ft = Math.cos(k), It = Math.sin(k), zt = et * F + O, Mt = lt * G + N, dt = ft * F + O, Lt = It * G + N, Tt = F * X * K, at = G * X * K;
      a.push(zt - Tt * lt, Mt + at * et, dt + Tt * It, Lt - at * ft, dt, Lt);
    }
    for (var c, v, d, p, g = 0; g < t; ) {
      var y = e[g++], m = g === 1;
      switch (m && (i = e[g], o = e[g + 1], s = i, l = o, (y === Bn.L || y === Bn.C || y === Bn.Q) && (a = [s, l])), y) {
        case Bn.M:
          i = s = e[g++], o = l = e[g++], u(s, l);
          break;
        case Bn.L:
          c = e[g++], v = e[g++], f(i, o, c, v), i = c, o = v;
          break;
        case Bn.C:
          a.push(e[g++], e[g++], e[g++], e[g++], i = e[g++], o = e[g++]);
          break;
        case Bn.Q:
          c = e[g++], v = e[g++], d = e[g++], p = e[g++], a.push(i + 2 / 3 * (c - i), o + 2 / 3 * (v - o), d + 2 / 3 * (c - d), p + 2 / 3 * (v - p), d, p), i = d, o = p;
          break;
        case Bn.A:
          var _ = e[g++], S = e[g++], b = e[g++], w = e[g++], T = e[g++], C = e[g++] + T;
          g += 1;
          var I = !e[g++];
          c = Math.cos(T) * b + _, v = Math.sin(T) * w + S, m ? (s = c, l = v, u(s, l)) : f(i, o, c, v), i = Math.cos(C) * b + _, o = Math.sin(C) * w + S;
          for (var L = (I ? -1 : 1) * Math.PI / 2, P = T; I ? P > C : P < C; P += L) {
            var E = I ? Math.max(P + L, C) : Math.min(P + L, C);
            h(P, E, _, S, b, w);
          }
          break;
        case Bn.R:
          s = i = e[g++], l = o = e[g++], c = s + e[g++], v = l + e[g++], u(c, l), f(c, l, c, v), f(c, v, s, v), f(s, v, s, l), f(s, l, c, l);
          break;
        case Bn.Z:
          a && f(i, o, s, l), i = s, o = l;
          break;
      }
    }
    return a && a.length > 2 && n.push(a), n;
  }
  function n_(r, e, t, n, a, i, o, s, l, u) {
    if (Rs(r, t) && Rs(e, n) && Rs(a, o) && Rs(i, s)) {
      l.push(o, s);
      return;
    }
    var f = 2 / u, h = f * f, c = o - r, v = s - e, d = Math.sqrt(c * c + v * v);
    c /= d, v /= d;
    var p = t - r, g = n - e, y = a - o, m = i - s, _ = p * p + g * g, S = y * y + m * m;
    if (_ < h && S < h) {
      l.push(o, s);
      return;
    }
    var b = c * p + v * g, w = -c * y - v * m, T = _ - b * b, C = S - w * w;
    if (T < h && b >= 0 && C < h && w >= 0) {
      l.push(o, s);
      return;
    }
    var I = [], L = [];
    _a(r, t, a, o, 0.5, I), _a(e, n, i, s, 0.5, L), n_(I[0], L[0], I[1], L[1], I[2], L[2], I[3], L[3], l, u), n_(I[4], L[4], I[5], L[5], I[6], L[6], I[7], L[7], l, u);
  }
  function H9(r, e) {
    var t = r_(r), n = [];
    e = e || 1;
    for (var a = 0; a < t.length; a++) {
      var i = t[a], o = [], s = i[0], l = i[1];
      o.push(s, l);
      for (var u = 2; u < i.length; ) {
        var f = i[u++], h = i[u++], c = i[u++], v = i[u++], d = i[u++], p = i[u++];
        n_(s, l, f, h, c, v, d, p, o, e), s = d, l = p;
      }
      n.push(o);
    }
    return n;
  }
  function j2(r, e, t) {
    var n = r[e], a = r[1 - e], i = Math.abs(n / a), o = Math.ceil(Math.sqrt(i * t)), s = Math.floor(t / o);
    s === 0 && (s = 1, o = t);
    for (var l = [], u = 0; u < o; u++)
      l.push(s);
    var f = o * s, h = t - f;
    if (h > 0)
      for (var u = 0; u < h; u++)
        l[u % o] += 1;
    return l;
  }
  function J2(r, e, t) {
    for (var n = r.r0, a = r.r, i = r.startAngle, o = r.endAngle, s = Math.abs(o - i), l = s * a, u = a - n, f = l > Math.abs(u), h = j2([l, u], f ? 0 : 1, e), c = (f ? s : u) / h.length, v = 0; v < h.length; v++)
      for (var d = (f ? u : s) / h[v], p = 0; p < h[v]; p++) {
        var g = {};
        f ? (g.startAngle = i + c * v, g.endAngle = i + c * (v + 1), g.r0 = n + d * p, g.r = n + d * (p + 1)) : (g.startAngle = i + d * p, g.endAngle = i + d * (p + 1), g.r0 = n + c * v, g.r = n + c * (v + 1)), g.clockwise = r.clockwise, g.cx = r.cx, g.cy = r.cy, t.push(g);
      }
  }
  function W9(r, e, t) {
    for (var n = r.width, a = r.height, i = n > a, o = j2([n, a], i ? 0 : 1, e), s = i ? "width" : "height", l = i ? "height" : "width", u = i ? "x" : "y", f = i ? "y" : "x", h = r[s] / o.length, c = 0; c < o.length; c++)
      for (var v = r[l] / o[c], d = 0; d < o[c]; d++) {
        var p = {};
        p[u] = c * h, p[f] = d * v, p[s] = h, p[l] = v, p.x += r.x, p.y += r.y, t.push(p);
      }
  }
  function Q2(r, e, t, n) {
    return r * n - t * e;
  }
  function U9(r, e, t, n, a, i, o, s) {
    var l = t - r, u = n - e, f = o - a, h = s - i, c = Q2(f, h, l, u);
    if (Math.abs(c) < 1e-6)
      return null;
    var v = r - a, d = e - i, p = Q2(v, d, f, h) / c;
    return p < 0 || p > 1 ? null : new St(p * l + r, p * u + e);
  }
  function Y9(r, e, t) {
    var n = new St();
    St.sub(n, t, e), n.normalize();
    var a = new St();
    St.sub(a, r, e);
    var i = a.dot(n);
    return i;
  }
  function ks(r, e) {
    var t = r[r.length - 1];
    t && t[0] === e[0] && t[1] === e[1] || r.push(e);
  }
  function $9(r, e, t) {
    for (var n = r.length, a = [], i = 0; i < n; i++) {
      var o = r[i], s = r[(i + 1) % n], l = U9(o[0], o[1], s[0], s[1], e.x, e.y, t.x, t.y);
      l && a.push({
        projPt: Y9(l, e, t),
        pt: l,
        idx: i
      });
    }
    if (a.length < 2)
      return [{ points: r }, { points: r }];
    a.sort(function(g, y) {
      return g.projPt - y.projPt;
    });
    var u = a[0], f = a[a.length - 1];
    if (f.idx < u.idx) {
      var h = u;
      u = f, f = h;
    }
    for (var c = [u.pt.x, u.pt.y], v = [f.pt.x, f.pt.y], d = [c], p = [v], i = u.idx + 1; i <= f.idx; i++)
      ks(d, r[i].slice());
    ks(d, v), ks(d, c);
    for (var i = f.idx + 1; i <= u.idx + n; i++)
      ks(p, r[i % n].slice());
    return ks(p, c), ks(p, v), [{
      points: d
    }, {
      points: p
    }];
  }
  function tP(r) {
    var e = r.points, t = [], n = [];
    $f(e, t, n);
    var a = new xt(t[0], t[1], n[0] - t[0], n[1] - t[1]), i = a.width, o = a.height, s = a.x, l = a.y, u = new St(), f = new St();
    return i > o ? (u.x = f.x = s + i / 2, u.y = l, f.y = l + o) : (u.y = f.y = l + o / 2, u.x = s, f.x = s + i), $9(e, u, f);
  }
  function hv(r, e, t, n) {
    if (t === 1)
      n.push(e);
    else {
      var a = Math.floor(t / 2), i = r(e);
      hv(r, i[0], a, n), hv(r, i[1], t - a, n);
    }
    return n;
  }
  function X9(r, e) {
    for (var t = [], n = 0; n < e; n++)
      t.push(yp(r));
    return t;
  }
  function Z9(r, e) {
    e.setStyle(r.style), e.z = r.z, e.z2 = r.z2, e.zlevel = r.zlevel;
  }
  function q9(r) {
    for (var e = [], t = 0; t < r.length; )
      e.push([r[t++], r[t++]]);
    return e;
  }
  function K9(r, e) {
    var t = [], n = r.shape, a;
    switch (r.type) {
      case "rect":
        W9(n, e, t), a = Rt;
        break;
      case "sector":
        J2(n, e, t), a = Be;
        break;
      case "circle":
        J2({
          r0: 0,
          r: n.r,
          startAngle: 0,
          endAngle: Math.PI * 2,
          cx: n.cx,
          cy: n.cy
        }, e, t), a = Be;
        break;
      default:
        var i = r.getComputedTransform(), o = i ? Math.sqrt(Math.max(i[0] * i[0] + i[1] * i[1], i[2] * i[2] + i[3] * i[3])) : 1, s = Y(H9(r.getUpdatedPathProxy(), o), function(y) {
          return q9(y);
        }), l = s.length;
        if (l === 0)
          hv(tP, {
            points: s[0]
          }, e, t);
        else if (l === e)
          for (var u = 0; u < l; u++)
            t.push({
              points: s[u]
            });
        else {
          var f = 0, h = Y(s, function(y) {
            var m = [], _ = [];
            $f(y, m, _);
            var S = (_[1] - m[1]) * (_[0] - m[0]);
            return f += S, { poly: y, area: S };
          });
          h.sort(function(y, m) {
            return m.area - y.area;
          });
          for (var c = e, u = 0; u < l; u++) {
            var v = h[u];
            if (c <= 0)
              break;
            var d = u === l - 1 ? c : Math.ceil(v.area / f * e);
            d < 0 || (hv(tP, {
              points: v.poly
            }, d, t), c -= d);
          }
        }
        a = ze;
        break;
    }
    if (!a)
      return X9(r, e);
    for (var p = [], u = 0; u < t.length; u++) {
      var g = new a();
      g.setShape(t[u]), Z9(r, g), p.push(g);
    }
    return p;
  }
  function j9(r, e) {
    var t = r.length, n = e.length;
    if (t === n)
      return [r, e];
    for (var a = [], i = [], o = t < n ? r : e, s = Math.min(t, n), l = Math.abs(n - t) / 6, u = (s - 2) / 6, f = Math.ceil(l / u) + 1, h = [o[0], o[1]], c = l, v = 2; v < s; ) {
      var d = o[v - 2], p = o[v - 1], g = o[v++], y = o[v++], m = o[v++], _ = o[v++], S = o[v++], b = o[v++];
      if (c <= 0) {
        h.push(g, y, m, _, S, b);
        continue;
      }
      for (var w = Math.min(c, f - 1) + 1, T = 1; T <= w; T++) {
        var C = T / w;
        _a(d, g, m, S, C, a), _a(p, y, _, b, C, i), d = a[3], p = i[3], h.push(a[1], i[1], a[2], i[2], d, p), g = a[5], y = i[5], m = a[6], _ = i[6];
      }
      c -= w - 1;
    }
    return o === r ? [h, e] : [r, h];
  }
  function eP(r, e) {
    for (var t = r.length, n = r[t - 2], a = r[t - 1], i = [], o = 0; o < e.length; )
      i[o++] = n, i[o++] = a;
    return i;
  }
  function J9(r, e) {
    for (var t, n, a, i = [], o = [], s = 0; s < Math.max(r.length, e.length); s++) {
      var l = r[s], u = e[s], f = void 0, h = void 0;
      l ? u ? (t = j9(l, u), f = t[0], h = t[1], n = f, a = h) : (h = eP(a || l, l), f = l) : (f = eP(n || u, u), h = u), i.push(f), o.push(h);
    }
    return [i, o];
  }
  function rP(r) {
    for (var e = 0, t = 0, n = 0, a = r.length, i = 0, o = a - 2; i < a; o = i, i += 2) {
      var s = r[o], l = r[o + 1], u = r[i], f = r[i + 1], h = s * f - u * l;
      e += h, t += (s + u) * h, n += (l + f) * h;
    }
    return e === 0 ? [r[0] || 0, r[1] || 0] : [t / e / 3, n / e / 3, e];
  }
  function Q9(r, e, t, n) {
    for (var a = (r.length - 2) / 6, i = 1 / 0, o = 0, s = r.length, l = s - 2, u = 0; u < a; u++) {
      for (var f = u * 6, h = 0, c = 0; c < s; c += 2) {
        var v = c === 0 ? f : (f + c - 2) % l + 2, d = r[v] - t[0], p = r[v + 1] - t[1], g = e[c] - n[0], y = e[c + 1] - n[1], m = g - d, _ = y - p;
        h += m * m + _ * _;
      }
      h < i && (i = h, o = u);
    }
    return o;
  }
  function tX(r) {
    for (var e = [], t = r.length, n = 0; n < t; n += 2)
      e[n] = r[t - n - 2], e[n + 1] = r[t - n - 1];
    return e;
  }
  function eX(r, e, t, n) {
    for (var a = [], i, o = 0; o < r.length; o++) {
      var s = r[o], l = e[o], u = rP(s), f = rP(l);
      i == null && (i = u[2] < 0 != f[2] < 0);
      var h = [], c = [], v = 0, d = 1 / 0, p = [], g = s.length;
      i && (s = tX(s));
      for (var y = Q9(s, l, u, f) * 6, m = g - 2, _ = 0; _ < m; _ += 2) {
        var S = (y + _) % m + 2;
        h[_ + 2] = s[S] - u[0], h[_ + 3] = s[S + 1] - u[1];
      }
      if (h[0] = s[y] - u[0], h[1] = s[y + 1] - u[1], t > 0)
        for (var b = n / t, w = -n / 2; w <= n / 2; w += b) {
          for (var T = Math.sin(w), C = Math.cos(w), I = 0, _ = 0; _ < s.length; _ += 2) {
            var L = h[_], P = h[_ + 1], E = l[_] - f[0], R = l[_ + 1] - f[1], k = E * C - R * T, O = E * T + R * C;
            p[_] = k, p[_ + 1] = O;
            var N = k - L, F = O - P;
            I += N * N + F * F;
          }
          if (I < d) {
            d = I, v = w;
            for (var G = 0; G < p.length; G++)
              c[G] = p[G];
          }
        }
      else
        for (var W = 0; W < g; W += 2)
          c[W] = l[W] - f[0], c[W + 1] = l[W + 1] - f[1];
      a.push({
        from: h,
        to: c,
        fromCp: u,
        toCp: f,
        rotation: -v
      });
    }
    return a;
  }
  function cv(r) {
    return r.__isCombineMorphing;
  }
  var nP = "__mOriginal_";
  function vv(r, e, t) {
    var n = nP + e, a = r[n] || r[e];
    r[n] || (r[n] = r[e]);
    var i = t.replace, o = t.after, s = t.before;
    r[e] = function() {
      var l = arguments, u;
      return s && s.apply(this, l), i ? u = i.apply(this, l) : u = a.apply(this, l), o && o.apply(this, l), u;
    };
  }
  function qu(r, e) {
    var t = nP + e;
    r[t] && (r[e] = r[t], r[t] = null);
  }
  function aP(r, e) {
    for (var t = 0; t < r.length; t++)
      for (var n = r[t], a = 0; a < n.length; ) {
        var i = n[a], o = n[a + 1];
        n[a++] = e[0] * i + e[2] * o + e[4], n[a++] = e[1] * i + e[3] * o + e[5];
      }
  }
  function iP(r, e) {
    var t = r.getUpdatedPathProxy(), n = e.getUpdatedPathProxy(), a = J9(r_(t), r_(n)), i = a[0], o = a[1], s = r.getComputedTransform(), l = e.getComputedTransform();
    function u() {
      this.transform = null;
    }
    s && aP(i, s), l && aP(o, l), vv(e, "updateTransform", { replace: u }), e.transform = null;
    var f = eX(i, o, 10, Math.PI), h = [];
    vv(e, "buildPath", { replace: function(c) {
      for (var v = e.__morphT, d = 1 - v, p = [], g = 0; g < f.length; g++) {
        var y = f[g], m = y.from, _ = y.to, S = y.rotation * v, b = y.fromCp, w = y.toCp, T = Math.sin(S), C = Math.cos(S);
        Zs(p, b, w, v);
        for (var I = 0; I < m.length; I += 2) {
          var L = m[I], P = m[I + 1], E = _[I], R = _[I + 1], k = L * d + E * v, O = P * d + R * v;
          h[I] = k * C - O * T + p[0], h[I + 1] = k * T + O * C + p[1];
        }
        var N = h[0], F = h[1];
        c.moveTo(N, F);
        for (var I = 2; I < m.length; ) {
          var E = h[I++], R = h[I++], G = h[I++], W = h[I++], X = h[I++], K = h[I++];
          N === E && F === R && G === X && W === K ? c.lineTo(X, K) : c.bezierCurveTo(E, R, G, W, X, K), N = X, F = K;
        }
      }
    } });
  }
  function a_(r, e, t) {
    if (!r || !e)
      return e;
    var n = t.done, a = t.during;
    iP(r, e), e.__morphT = 0;
    function i() {
      qu(e, "buildPath"), qu(e, "updateTransform"), e.__morphT = -1, e.createPathProxy(), e.dirtyShape();
    }
    return e.animateTo({
      __morphT: 1
    }, ot({
      during: function(o) {
        e.dirtyShape(), a && a(o);
      },
      done: function() {
        i(), n && n();
      }
    }, t)), e;
  }
  function rX(r, e, t, n, a, i) {
    var o = 16;
    r = a === t ? 0 : Math.round(32767 * (r - t) / (a - t)), e = i === n ? 0 : Math.round(32767 * (e - n) / (i - n));
    for (var s = 0, l, u = (1 << o) / 2; u > 0; u /= 2) {
      var f = 0, h = 0;
      (r & u) > 0 && (f = 1), (e & u) > 0 && (h = 1), s += u * u * (3 * f ^ h), h === 0 && (f === 1 && (r = u - 1 - r, e = u - 1 - e), l = r, r = e, e = l);
    }
    return s;
  }
  function dv(r) {
    var e = 1 / 0, t = 1 / 0, n = -1 / 0, a = -1 / 0, i = Y(r, function(s) {
      var l = s.getBoundingRect(), u = s.getComputedTransform(), f = l.x + l.width / 2 + (u ? u[4] : 0), h = l.y + l.height / 2 + (u ? u[5] : 0);
      return e = Math.min(f, e), t = Math.min(h, t), n = Math.max(f, n), a = Math.max(h, a), [f, h];
    }), o = Y(i, function(s, l) {
      return {
        cp: s,
        z: rX(s[0], s[1], e, t, n, a),
        path: r[l]
      };
    });
    return o.sort(function(s, l) {
      return s.z - l.z;
    }).map(function(s) {
      return s.path;
    });
  }
  function oP(r) {
    return K9(r.path, r.count);
  }
  function i_() {
    return {
      fromIndividuals: [],
      toIndividuals: [],
      count: 0
    };
  }
  function nX(r, e, t) {
    var n = [];
    function a(b) {
      for (var w = 0; w < b.length; w++) {
        var T = b[w];
        cv(T) ? a(T.childrenRef()) : T instanceof Dt && n.push(T);
      }
    }
    a(r);
    var i = n.length;
    if (!i)
      return i_();
    var o = t.dividePath || oP, s = o({
      path: e,
      count: i
    });
    if (s.length !== i)
      return console.error("Invalid morphing: unmatched splitted path"), i_();
    n = dv(n), s = dv(s);
    for (var l = t.done, u = t.during, f = t.individualDelay, h = new Xn(), c = 0; c < i; c++) {
      var v = n[c], d = s[c];
      d.parent = e, d.copyTransform(h), f || iP(v, d);
    }
    e.__isCombineMorphing = !0, e.childrenRef = function() {
      return s;
    };
    function p(b) {
      for (var w = 0; w < s.length; w++)
        s[w].addSelfToZr(b);
    }
    vv(e, "addSelfToZr", {
      after: function(b) {
        p(b);
      }
    }), vv(e, "removeSelfFromZr", {
      after: function(b) {
        for (var w = 0; w < s.length; w++)
          s[w].removeSelfFromZr(b);
      }
    });
    function g() {
      e.__isCombineMorphing = !1, e.__morphT = -1, e.childrenRef = null, qu(e, "addSelfToZr"), qu(e, "removeSelfFromZr");
    }
    var y = s.length;
    if (f)
      for (var m = y, _ = function() {
        m--, m === 0 && (g(), l && l());
      }, c = 0; c < y; c++) {
        var S = f ? ot({
          delay: (t.delay || 0) + f(c, y, n[c], s[c]),
          done: _
        }, t) : t;
        a_(n[c], s[c], S);
      }
    else
      e.__morphT = 0, e.animateTo({
        __morphT: 1
      }, ot({
        during: function(b) {
          for (var w = 0; w < y; w++) {
            var T = s[w];
            T.__morphT = e.__morphT, T.dirtyShape();
          }
          u && u(b);
        },
        done: function() {
          g();
          for (var b = 0; b < r.length; b++)
            qu(r[b], "updateTransform");
          l && l();
        }
      }, t));
    return e.__zr && p(e.__zr), {
      fromIndividuals: n,
      toIndividuals: s,
      count: y
    };
  }
  function aX(r, e, t) {
    var n = e.length, a = [], i = t.dividePath || oP;
    function o(v) {
      for (var d = 0; d < v.length; d++) {
        var p = v[d];
        cv(p) ? o(p.childrenRef()) : p instanceof Dt && a.push(p);
      }
    }
    if (cv(r)) {
      o(r.childrenRef());
      var s = a.length;
      if (s < n)
        for (var l = 0, u = s; u < n; u++)
          a.push(yp(a[l++ % s]));
      a.length = n;
    } else {
      a = i({ path: r, count: n });
      for (var f = r.getComputedTransform(), u = 0; u < a.length; u++)
        a[u].setLocalTransform(f);
      if (a.length !== n)
        return console.error("Invalid morphing: unmatched splitted path"), i_();
    }
    a = dv(a), e = dv(e);
    for (var h = t.individualDelay, u = 0; u < n; u++) {
      var c = h ? ot({
        delay: (t.delay || 0) + h(u, n, a[u], e[u])
      }, t) : t;
      a_(a[u], e[u], c);
    }
    return {
      fromIndividuals: a,
      toIndividuals: e,
      count: e.length
    };
  }
  function sP(r) {
    return U(r[0]);
  }
  function lP(r, e) {
    for (var t = [], n = r.length, a = 0; a < n; a++)
      t.push({
        one: r[a],
        many: []
      });
    for (var a = 0; a < e.length; a++) {
      var i = e[a].length, o = void 0;
      for (o = 0; o < i; o++)
        t[o % n].many.push(e[a][o]);
    }
    for (var s = 0, a = n - 1; a >= 0; a--)
      if (!t[a].many.length) {
        var l = t[s].many;
        if (l.length <= 1)
          if (s)
            s = 0;
          else
            return t;
        var i = l.length, u = Math.ceil(i / 2);
        t[a].many = l.slice(u, i), t[s].many = l.slice(0, u), s++;
      }
    return t;
  }
  var iX = {
    clone: function(r) {
      for (var e = [], t = 1 - Math.pow(1 - r.path.style.opacity, 1 / r.count), n = 0; n < r.count; n++) {
        var a = yp(r.path);
        a.setStyle("opacity", t), e.push(a);
      }
      return e;
    },
    // Use the default divider
    split: null
  };
  function o_(r, e, t, n, a, i) {
    if (!r.length || !e.length)
      return;
    var o = Wo("update", n, a);
    if (!(o && o.duration > 0))
      return;
    var s = n.getModel("universalTransition").get("delay"), l = Object.assign({
      // Need to setToFinal so the further calculation based on the style can be correct.
      // Like emphasis color.
      setToFinal: !0
    }, o), u, f;
    sP(r) && (u = r, f = e), sP(e) && (u = e, f = r);
    function h(y, m, _, S, b) {
      var w = y.many, T = y.one;
      if (w.length === 1 && !b) {
        var C = m ? w[0] : T, I = m ? T : w[0];
        if (cv(C))
          h({
            many: [C],
            one: I
          }, !0, _, S, !0);
        else {
          var L = s ? ot({
            delay: s(_, S)
          }, l) : l;
          a_(C, I, L), i(C, I, C, I, L);
        }
      } else
        for (var P = ot({
          dividePath: iX[t],
          individualDelay: s && function(F, G, W, X) {
            return s(F + _, S);
          }
        }, l), E = m ? nX(w, T, P) : aX(T, w, P), R = E.fromIndividuals, k = E.toIndividuals, O = R.length, N = 0; N < O; N++) {
          var L = s ? ot({
            delay: s(N, O)
          }, l) : l;
          i(R[N], k[N], m ? w[N] : y.one, m ? y.one : w[N], L);
        }
    }
    for (var c = u ? u === r : r.length > e.length, v = u ? lP(f, u) : lP(c ? e : r, [c ? r : e]), d = 0, p = 0; p < v.length; p++)
      d += v[p].many.length;
    for (var g = 0, p = 0; p < v.length; p++)
      h(v[p], c, g, d), g += v[p].many.length;
  }
  function po(r) {
    if (!r)
      return [];
    if (U(r)) {
      for (var e = [], t = 0; t < r.length; t++)
        e.push(po(r[t]));
      return e;
    }
    var n = [];
    return r.traverse(function(a) {
      a instanceof Dt && !a.disableMorphing && !a.invisible && !a.ignore && n.push(a);
    }), n;
  }
  var uP = 1e4, oX = Nt();
  function sX(r) {
    for (var e = r.dimensions, t = 0; t < e.length; t++) {
      var n = r.getDimensionInfo(e[t]);
      if (n && n.otherDims.itemGroupId === 0)
        return e[t];
    }
  }
  function fP(r) {
    var e = [];
    return M(r, function(t) {
      var n = t.data;
      if (n.count() > uP) {
        ae("Universal transition is disabled on large data > 10k.");
        return;
      }
      for (var a = n.getIndices(), i = sX(n), o = 0; o < a.length; o++)
        e.push({
          dataGroupId: t.dataGroupId,
          data: n,
          dim: t.dim || i,
          divide: t.divide,
          dataIndex: o
        });
    }), e;
  }
  function s_(r, e, t) {
    r.traverse(function(n) {
      n instanceof Dt && te(n, {
        style: {
          opacity: 0
        }
      }, e, {
        dataIndex: t,
        isFrom: !0
      });
    });
  }
  function l_(r) {
    if (r.parent) {
      var e = r.getComputedTransform();
      r.setLocalTransform(e), r.parent.remove(r);
    }
  }
  function Os(r) {
    r.stopAnimation(), r.isGroup && r.traverse(function(e) {
      e.stopAnimation();
    });
  }
  function lX(r, e, t) {
    var n = Wo("update", t, e);
    n && r.traverse(function(a) {
      if (a instanceof kr) {
        var i = WO(a);
        i && a.animateFrom({
          style: i
        }, n);
      }
    });
  }
  function uX(r, e) {
    var t = r.length;
    if (t !== e.length)
      return !1;
    for (var n = 0; n < t; n++) {
      var a = r[n], i = e[n];
      if (a.data.getId(a.dataIndex) !== i.data.getId(i.dataIndex))
        return !1;
    }
    return !0;
  }
  function hP(r, e, t) {
    var n = fP(r), a = fP(e);
    function i(y, m, _, S, b) {
      (_ || y) && m.animateFrom({
        style: _ && _ !== y ? (
          // dividingMethod like clone may override the style(opacity)
          // So extend it to raw style.
          H(H({}, _.style), y.style)
        ) : y.style
      }, b);
    }
    function o(y) {
      for (var m = 0; m < y.length; m++)
        if (y[m].dim)
          return y[m].dim;
    }
    var s = o(n), l = o(a), u = !1;
    function f(y, m) {
      return function(_) {
        var S = _.data, b = _.dataIndex;
        if (m)
          return S.getId(b);
        var w = _.dataGroupId, T = y ? s || l : l || s, C = T && S.getDimensionInfo(T), I = C && C.ordinalMeta;
        if (C) {
          var L = S.get(C.name, b);
          return I && I.categories[L] || L + "";
        }
        var P = S.getRawDataItem(b);
        return P && P.groupId ? P.groupId + "" : w || S.getId(b);
      };
    }
    var h = uX(n, a), c = {};
    if (!h)
      for (var v = 0; v < a.length; v++) {
        var d = a[v], p = d.data.getItemGraphicEl(d.dataIndex);
        p && (c[p.id] = !0);
      }
    function g(y, m) {
      var _ = n[m], S = a[y], b = S.data.hostModel, w = _.data.getItemGraphicEl(_.dataIndex), T = S.data.getItemGraphicEl(S.dataIndex);
      if (w === T) {
        T && lX(T, S.dataIndex, b);
        return;
      }
      // We can't use the elements that already being morphed
      w && c[w.id] || T && (Os(T), w ? (Os(w), l_(w), u = !0, o_(po(w), po(T), S.divide, b, y, i)) : s_(T, b, y));
    }
    new ea(n, a, f(!0, h), f(!1, h), null, "multiple").update(g).updateManyToOne(function(y, m) {
      var _ = a[y], S = _.data, b = S.hostModel, w = S.getItemGraphicEl(_.dataIndex), T = Ht(Y(m, function(C) {
        return n[C].data.getItemGraphicEl(n[C].dataIndex);
      }), function(C) {
        return C && C !== w && !c[C.id];
      });
      w && (Os(w), T.length ? (M(T, function(C) {
        Os(C), l_(C);
      }), u = !0, o_(po(T), po(w), _.divide, b, y, i)) : s_(w, b, _.dataIndex));
    }).updateOneToMany(function(y, m) {
      var _ = n[m], S = _.data.getItemGraphicEl(_.dataIndex);
      if (!(S && c[S.id])) {
        var b = Ht(Y(y, function(T) {
          return a[T].data.getItemGraphicEl(a[T].dataIndex);
        }), function(T) {
          return T && T !== S;
        }), w = a[y[0]].data.hostModel;
        b.length && (M(b, function(T) {
          return Os(T);
        }), S ? (Os(S), l_(S), u = !0, o_(
          po(S),
          po(b),
          _.divide,
          // Use divide on old.
          w,
          y[0],
          i
        )) : M(b, function(T) {
          return s_(T, w, y[0]);
        }));
      }
    }).updateManyToMany(function(y, m) {
      new ea(m, y, function(_) {
        return n[_].data.getId(n[_].dataIndex);
      }, function(_) {
        return a[_].data.getId(a[_].dataIndex);
      }).update(function(_, S) {
        g(y[_], m[S]);
      }).execute();
    }).execute(), u && M(e, function(y) {
      var m = y.data, _ = m.hostModel, S = _ && t.getViewOfSeriesModel(_), b = Wo("update", _, 0);
      S && _.isAnimationEnabled() && b && b.duration > 0 && S.group.traverse(function(w) {
        w instanceof Dt && !w.animators.length && w.animateFrom({
          style: {
            opacity: 0
          }
        }, b);
      });
    });
  }
  function cP(r) {
    var e = r.getModel("universalTransition").get("seriesKey");
    return e || r.id;
  }
  function vP(r) {
    return U(r) ? r.sort().join(",") : r;
  }
  function qa(r) {
    if (r.hostModel)
      return r.hostModel.getModel("universalTransition").get("divideShape");
  }
  function fX(r, e) {
    var t = nt(), n = nt(), a = nt();
    M(r.oldSeries, function(o, s) {
      var l = r.oldDataGroupIds[s], u = r.oldData[s], f = cP(o), h = vP(f);
      n.set(h, {
        dataGroupId: l,
        data: u
      }), U(f) && M(f, function(c) {
        a.set(c, {
          key: h,
          dataGroupId: l,
          data: u
        });
      });
    });
    function i(o) {
      t.get(o) && ae("Duplicated seriesKey in universalTransition " + o);
    }
    return M(e.updatedSeries, function(o) {
      if (o.isUniversalTransitionEnabled() && o.isAnimationEnabled()) {
        var s = o.get("dataGroupId"), l = o.getData(), u = cP(o), f = vP(u), h = n.get(f);
        if (h)
          i(f), t.set(f, {
            oldSeries: [{
              dataGroupId: h.dataGroupId,
              divide: qa(h.data),
              data: h.data
            }],
            newSeries: [{
              dataGroupId: s,
              divide: qa(l),
              data: l
            }]
          });
        else if (U(u)) {
          i(f);
          var c = [];
          M(u, function(p) {
            var g = n.get(p);
            g.data && c.push({
              dataGroupId: g.dataGroupId,
              divide: qa(g.data),
              data: g.data
            });
          }), c.length && t.set(f, {
            oldSeries: c,
            newSeries: [{
              dataGroupId: s,
              data: l,
              divide: qa(l)
            }]
          });
        } else {
          var v = a.get(u);
          if (v) {
            var d = t.get(v.key);
            d || (d = {
              oldSeries: [{
                dataGroupId: v.dataGroupId,
                data: v.data,
                divide: qa(v.data)
              }],
              newSeries: []
            }, t.set(v.key, d)), d.newSeries.push({
              dataGroupId: s,
              data: l,
              divide: qa(l)
            });
          }
        }
      }
    }), t;
  }
  function dP(r, e) {
    for (var t = 0; t < r.length; t++) {
      var n = e.seriesIndex != null && e.seriesIndex === r[t].seriesIndex || e.seriesId != null && e.seriesId === r[t].id;
      if (n)
        return t;
    }
  }
  function hX(r, e, t, n) {
    var a = [], i = [];
    M(Xt(r.from), function(o) {
      var s = dP(e.oldSeries, o);
      s >= 0 && a.push({
        dataGroupId: e.oldDataGroupIds[s],
        data: e.oldData[s],
        // TODO can specify divideShape in transition.
        divide: qa(e.oldData[s]),
        dim: o.dimension
      });
    }), M(Xt(r.to), function(o) {
      var s = dP(t.updatedSeries, o);
      if (s >= 0) {
        var l = t.updatedSeries[s].getData();
        i.push({
          dataGroupId: e.oldDataGroupIds[s],
          data: l,
          divide: qa(l),
          dim: o.dimension
        });
      }
    }), a.length > 0 && i.length > 0 && hP(a, i, n);
  }
  function cX(r) {
    r.registerUpdateLifecycle("series:beforeupdate", function(e, t, n) {
      M(Xt(n.seriesTransition), function(a) {
        M(Xt(a.to), function(i) {
          for (var o = n.updatedSeries, s = 0; s < o.length; s++)
            (i.seriesIndex != null && i.seriesIndex === o[s].seriesIndex || i.seriesId != null && i.seriesId === o[s].id) && (o[s][Mh] = !0);
        });
      });
    }), r.registerUpdateLifecycle("series:transition", function(e, t, n) {
      var a = oX(t);
      if (a.oldSeries && n.updatedSeries && n.optionChanged) {
        var i = n.seriesTransition;
        if (i)
          M(Xt(i), function(v) {
            hX(v, a, n, t);
          });
        else {
          var o = fX(a, n);
          M(o.keys(), function(v) {
            var d = o.get(v);
            hP(d.oldSeries, d.newSeries, t);
          });
        }
        M(n.updatedSeries, function(v) {
          v[Mh] && (v[Mh] = !1);
        });
      }
      for (var s = e.getSeries(), l = a.oldSeries = [], u = a.oldDataGroupIds = [], f = a.oldData = [], h = 0; h < s.length; h++) {
        var c = s[h].getData();
        c.count() < uP && (l.push(s[h]), u.push(s[h].get("dataGroupId")), f.push(c));
      }
    });
  }
  At([CG]), At([SG]), At([YG, oF, gF, qF, o3, $3, SH, n4, C4, P4, G4, kW, iU, gU, EU, NU, $U, QU, f6, g6, A6, lY]), At(DY), At(QY), At(cD), At(c8), At(EM), At(g8), At(C8), At(c$), At(P$), At(Gu), At(Z$), At(j$), At(s7), At(d7), At(S7), At(A7), At(N7), At(t9), At(T2), At(M2), At(S9), At(U2), At($2), At(C9), At(B9), At(F9), At(cX), At(H5), x.Axis = Ur, x.ChartView = $t, x.ComponentModel = Ct, x.ComponentView = Jt, x.List = Ue, x.Model = Gt, x.PRIORITY = Hb, x.SeriesModel = Zt, x.color = oR, x.connect = KB, x.dataTool = nz, x.dependencies = EB, x.disConnect = nT, x.disconnect = jB, x.dispose = JB, x.env = z, x.extendChartView = I5, x.extendComponentModel = A5, x.extendComponentView = D5, x.extendSeriesModel = M5, x.format = p5, x.getCoordinateSystemDimensions = tz, x.getInstanceByDom = Rg, x.getInstanceById = QB, x.getMap = rz, x.graphic = d5, x.helper = o5, x.init = qB, x.innerDrawElementOnCanvas = mg, x.matrix = BE, x.number = c5, x.parseGeoJSON = ey, x.parseGeoJson = ey, x.registerAction = ln, x.registerCoordinateSystem = oT, x.registerLayout = sT, x.registerLoading = Bg, x.registerLocale = Pp, x.registerMap = uT, x.registerPostInit = aT, x.registerPostUpdate = iT, x.registerPreprocessor = Og, x.registerProcessor = Ng, x.registerTheme = kg, x.registerTransform = fT, x.registerUpdateLifecycle = $h, x.registerVisual = Va, x.setCanvasCreator = ez, x.setPlatformAPI = Tr, x.throttle = Lh, x.time = v5, x.use = At, x.util = g5, x.vector = TE, x.version = PB, x.zrUtil = yE, x.zrender = FR, Object.defineProperty(x, "__esModule", { value: !0 });
});
class iq {
  constructor(D, A, B) {
    this.ctx = D, this.chart = null, this.isNew = A, A ? this.canvasNode = B : this._initStyle(D), this._initEvent();
  }
  getContext(D) {
    if (D === "2d")
      return this.ctx;
  }
  setChart(D) {
    this.chart = D;
  }
  addEventListener() {
  }
  attachEvent() {
  }
  detachEvent() {
  }
  _initCanvas(D, A) {
    D.util.getContext = function() {
      return A;
    }, D.util.$override("measureText", function(B, V) {
      return A.font = V || "12px sans-serif", A.measureText(B);
    });
  }
  _initStyle(D) {
    D.createRadialGradient = () => D.createCircularGradient(arguments);
  }
  _initEvent() {
    this.event = {}, [
      {
        wxName: "touchStart",
        ecName: "mousedown"
      },
      {
        wxName: "touchMove",
        ecName: "mousemove"
      },
      {
        wxName: "touchEnd",
        ecName: "mouseup"
      },
      {
        wxName: "touchEnd",
        ecName: "click"
      }
    ].forEach((A) => {
      this.event[A.wxName] = (B) => {
        const V = B.touches[0];
        this.chart.getZr().handler.dispatch(A.ecName, {
          zrX: A.wxName === "tap" ? V.clientX : V.x,
          zrY: A.wxName === "tap" ? V.clientY : V.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        });
      };
    });
  }
  set width(D) {
    this.canvasNode && (this.canvasNode.width = D);
  }
  set height(D) {
    this.canvasNode && (this.canvasNode.height = D);
  }
  get width() {
    return this.canvasNode ? this.canvasNode.width : 0;
  }
  get height() {
    return this.canvasNode ? this.canvasNode.height : 0;
  }
}
const oq = {
  __name: "index",
  props: {
    uid: {
      type: String,
      default: ""
    }
  },
  setup(x, { expose: D }) {
    const A = x;
    let B;
    OZ(() => {
      process.env.TARO_ENV !== "h5" && (void 0)((vt) => {
        vt && vt.series && (vt.series.length > 0 ? vt.series.forEach((q) => {
          q.progressive = 0;
        }) : typeof vt.series == "object" && (vt.series.progressive = 0));
      });
    });
    const V = (vt) => {
      setTimeout(() => {
        z(vt);
      }, 100);
    };
    function z(vt) {
      const q = d_.createSelectorQuery(), { uid: pt } = A;
      q.select(`.${pt}`).fields({
        node: !0,
        size: !0
      }).exec((ee) => {
        const ne = d_.getSystemInfoSync().pixelRatio, qt = ee[0].node, Tr = ee[0].width, we = ee[0].height, ha = qt.getContext("2d"), Yt = new iq(ha, !0, qt);
        (void 0)(() => Yt), typeof vt == "function" && (B = vt(Yt, Tr, we, ne));
      });
    }
    function $(vt) {
      for (let q = 0; q < vt.touches.length; ++q) {
        const pt = vt.touches[q];
        pt.offsetX = pt.x, pt.offsetY = pt.y;
      }
      return vt;
    }
    function tt(vt) {
      if (B && vt.touches.length > 0) {
        var q = vt.touches[0], pt = B.getZr().handler;
        pt.dispatch("mousedown", {
          zrX: q.x,
          zrY: q.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        }), pt.dispatch("mousemove", {
          zrX: q.x,
          zrY: q.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        }), pt.processGesture($(vt), "start");
      }
    }
    function ut(vt) {
      if (B && vt.touches.length > 0) {
        var q = vt.touches[0], pt = B.getZr().handler;
        pt.dispatch("mousemove", {
          zrX: q.x,
          zrY: q.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        }), pt.processGesture($(vt), "change");
      }
    }
    function Et(vt) {
      if (B) {
        const pt = vt.changedTouches ? vt.changedTouches[0] : {};
        var q = B.getZr().handler;
        q.dispatch("mouseup", {
          zrX: pt.x,
          zrY: pt.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        }), q.dispatch("click", {
          zrX: pt.x,
          zrY: pt.y,
          preventDefault: () => {
          },
          stopImmediatePropagation: () => {
          },
          stopPropagation: () => {
          }
        }), q.processGesture($(vt), "end");
      }
    }
    return D({
      init: V
      //
    }), (vt, q) => (w_(), tE("canvas", {
      type: "2d",
      class: Ev([x.uid, "ec-canvas"]),
      "on:touchStart": tt,
      "on:touchMove": ut,
      "on:touchEnd": Et
    }, null, 34));
  }
};
const sq = ["id"], uq = {
  __name: "index",
  setup(x, { expose: D }) {
    const A = f_(process.env.TARO_ENV === "h5"), B = f_(`canvas-${Date.now()}-${Math.floor(Math.random() * 1e4)}`), V = f_(null);
    let z = null;
    function $() {
      return z || console.error(
        "echart 实例化还未完成，可参考使用说明：https://github.com/beezen/echarts4taro3#基础用法"
      );
    }
    function tt(vt) {
      if (!z)
        return console.error(
          "echart 实例化还未完成，可参考使用说明：https://github.com/beezen/echarts4taro3#基础用法"
        );
      z.setOption(vt);
    }
    function ut(vt) {
      if (!z)
        return console.error(
          "echart 实例化还未完成，可参考使用说明：https://github.com/beezen/echarts4taro3#基础用法"
        );
      z.resize({
        width: vt.width,
        height: vt.height
      });
    }
    function Et(vt, q) {
      return new Promise((pt) => {
        process.env.TARO_ENV === "h5" ? (z = (void 0)(document.querySelector(`#${B.value}`)), z.setOption(vt), pt(z)) : V.value.init((ne, qt, Tr, we) => {
          if (z = (void 0)(ne, null, {
            width: qt,
            height: Tr,
            devicePixelRatio: we
          }), ne.setChart(z), !qt || !Tr) {
            let ha = 0;
            const Yt = () => {
              ha++, d_.createSelectorQuery().select(`.${B.value}`).fields({
                node: !0,
                size: !0
              }).exec((Fn) => {
                const xo = Fn[0].width, af = Fn[0].height;
                (!xo || !af) && ha < 20 ? setTimeout(Yt, 100) : (z.resize({
                  width: xo,
                  height: af
                }), z.setOption(vt));
              });
            };
            Yt();
          } else
            z.setOption(vt);
          return pt(z), z;
        });
      });
    }
    return D({
      getChart: $,
      setOption: tt,
      resize: ut,
      refresh: Et
    }), (vt, q) => bv(A) ? (w_(), tE("canvas", {
      key: 0,
      id: bv(B),
      class: "echart-canvas"
    }, null, 8, sq)) : (w_(), XZ(oq, {
      key: 1,
      ref_key: "canvas",
      ref: V,
      uid: bv(B),
      class: "echart-canvas"
    }, null, 8, ["uid"]));
  }
};
export {
  uq as EChart
};
